import os
from datetime import date
from tabulate import tabulate as tab

import pandas as pd

import matplotlib as mpl
import matplotlib.pyplot as plt
from matplotlib.patches import Polygon
from matplotlib.collections import PatchCollection
from mpl_toolkits.basemap import Basemap

import numpy as np
from datetime import datetime
from datetime import date
from PIL import Image, ImageOps
import jinja2

import openpyxl
from openpyxl.styles import PatternFill
from openpyxl.utils import get_column_letter

from openpyxl.styles.alignment import Alignment
from openpyxl import Workbook

import time

import warnings
from pandas.core.common import SettingWithCopyWarning
warnings.simplefilter(action='ignore', category=UserWarning)

workDirectory = r'C:/Users/prasa/yyyy/zzzz/CSV/'

DataFile17 = 'DataFile1'
DataFile18 = 'DataFile2'
DataFile19 = 'DataFile3'
DataFile21 = 'DataFile4'
DataFile22 = 'DataFile5'
DataFile23 = 'DataFile6'

print('\nRead Excel file...')
timeNowf1 = time.process_time()

inputExcelFile17 = workDirectory+DataFile17+'.csv'
df17_BeforeCNF = pd.read_csv(inputExcelFile17)

inputExcelFile18 = workDirectory+DataFile18+'.csv'
df18_BeforeCNF = pd.read_csv(inputExcelFile18)

inputExcelFile19 = workDirectory+DataFile19+'.csv'
df19_BeforeCNF = pd.read_csv(inputExcelFile19)

inputExcelFile21 = workDirectory+DataFile21+'.csv'
df21_BeforeCNF = pd.read_csv(inputExcelFile21)

inputExcelFile22 = workDirectory+DataFile22+'.csv'
df22_BeforeCNF = pd.read_csv(inputExcelFile22)

inputExcelFile23 = workDirectory+DataFile23+'.csv'
df23_BeforeCNF = pd.read_csv(inputExcelFile23)

print('Excel file read in %s seconds' % round(time.process_time() - timeNowf1, 1))

#data cleaning processes
#dropping CNF entries
df17_BeforeCNF.insert(31, "Credit Note1", "")
df18_BeforeCNF.insert(31, "Credit Note1", "")
df19_BeforeCNF.insert(33, "Credit Note1", "")
df21_BeforeCNF.insert(33, "Credit Note1", "")
df22_BeforeCNF.insert(32, "Credit Note1", "")
df23_BeforeCNF.insert(32, "Credit Note1", "")

df17_BeforeCNF['Credit Note1'] = df17_BeforeCNF['Credit Note']
df18_BeforeCNF['Credit Note1'] = df18_BeforeCNF['Credit Note']
df19_BeforeCNF['Credit Note1'] = df19_BeforeCNF['Credit Note']
df21_BeforeCNF['Credit Note1'] = df21_BeforeCNF['Credit Note']
df22_BeforeCNF['Credit Note1'] = df22_BeforeCNF['Credit Note']
df23_BeforeCNF['Credit Note1'] = df23_BeforeCNF['Credit Note']

df17_BeforeCNF['Credit Note1'] = df17_BeforeCNF['Credit Note1'].fillna(0)
df18_BeforeCNF['Credit Note1'] = df18_BeforeCNF['Credit Note1'].fillna(0)
df19_BeforeCNF['Credit Note1'] = df19_BeforeCNF['Credit Note1'].fillna(0)
df21_BeforeCNF['Credit Note1'] = df21_BeforeCNF['Credit Note1'].fillna(0)
df22_BeforeCNF['Credit Note1'] = df22_BeforeCNF['Credit Note1'].fillna(0)
df23_BeforeCNF['Credit Note1'] = df23_BeforeCNF['Credit Note1'].fillna(0)

#print(tab(df23_BeforeCNF.head(250), headers='keys', tablefmt='psql', showindex=False))

df17 = df17_BeforeCNF[df17_BeforeCNF['Credit Note1'] == 0]
df18 = df18_BeforeCNF[df18_BeforeCNF['Credit Note1'] == 0]
df19 = df19_BeforeCNF[df19_BeforeCNF['Credit Note1'] == 0]
df21 = df21_BeforeCNF[df21_BeforeCNF['Credit Note1'] == 0]
df22 = df22_BeforeCNF[df22_BeforeCNF['Credit Note1'] == 0]
df23 = df23_BeforeCNF[df23_BeforeCNF['Credit Note1'] == 0]

#df22.info()

df23.rename(columns={'Date': 'Month'}, inplace=True)
df23.rename(columns={'Date (MM/DD/YYYY)': 'Date'}, inplace=True)

df17['Date'] = pd.to_datetime(df17['Date'], format='%m/%d/%Y', errors = 'coerce')
df17['Date'] = df17['Date'].dt.strftime("%d/%m/%Y")
df17['Date'] = pd.to_datetime(df17['Date'], format='%d/%m/%Y', errors = 'raise')
#print(tab(df17.head(250), headers='keys', tablefmt='psql', showindex=False))
#df17.info()

df18['Date'] = pd.to_datetime(df18['Date'], format='%m/%d/%Y', errors = 'coerce')
df18['Date'] = df18['Date'].dt.strftime("%d/%m/%Y")
df18['Date'] = pd.to_datetime(df18['Date'], format='%d/%m/%Y', errors = 'raise')
#df18.info()

df19['Date'] = pd.to_datetime(df19['Date'], format='%m/%d/%Y', errors = 'coerce')
df19['Date'] = df19['Date'].dt.strftime("%d/%m/%Y")
df19['Date'] = pd.to_datetime(df19['Date'], format='%d/%m/%Y', errors = 'raise')
#df19.info()

df21['Date'] = pd.to_datetime(df21['Date'], format='%m/%d/%Y', errors = 'coerce')
df21['Date'] = df21['Date'].dt.strftime("%d/%m/%Y")
df21['Date'] = pd.to_datetime(df21['Date'], format='%d/%m/%Y', errors = 'raise')
#df21.info()

df22['Date'] = pd.to_datetime(df22['Date'], format='%m/%d/%Y', errors = 'coerce')
df22['Date'] = df22['Date'].dt.strftime("%d/%m/%Y")
df22['Date'] = pd.to_datetime(df22['Date'], format='%d/%m/%Y', errors = 'raise')
#df22.info()

df23['Date'] = pd.to_datetime(df23['Date'], format='%m/%d/%Y', errors = 'coerce')
df23['Date'] = df23['Date'].dt.strftime("%d/%m/%Y")
df23['Date'] = pd.to_datetime(df23['Date'], format='%d/%m/%Y', errors = 'raise')
#df23.info()

#print(tab(df23.head(300), headers='keys', tablefmt='psql', showindex=False))
#df23.info()
#print(tab(df18.head(50), headers='keys', tablefmt='psql', showindex=False))
#df18.info()
#print(tab(df19.head(50), headers='keys', tablefmt='psql', showindex=False))
#df19.info()

workDirectory1 = r'C:/Users/prasa/yyyy/zzzz/CSV/'

DataFile17Grp = 'Datafile_grp1'
DataFile18Grp = 'Datafile_grp2'
DataFile19Grp = 'Datafile_grp3'
DataFile21Grp = 'Datafile_grp4'
DataFile22Grp = 'Datafile_grp5'
DataFile23Grp = 'Datafile_grp6'

print('\nRead Excel file...')
timeNowf1 = time.process_time()

inputExcelFile17_GRP = workDirectory1+DataFile17Grp+'.csv'
df17_GRP = pd.read_csv(inputExcelFile17_GRP)

inputExcelFile18_GRP = workDirectory1+DataFile18Grp+'.csv'
df18_GRP = pd.read_csv(inputExcelFile18_GRP)

inputExcelFile19_GRP = workDirectory1+DataFile19Grp+'.csv'
df19_GRP = pd.read_csv(inputExcelFile19_GRP)

inputExcelFile21_Live_GRP = workDirectory1+DataFile21Grp+'.csv'
df21_GRP = pd.read_csv(inputExcelFile21_Live_GRP)

inputExcelFile22_GRP = workDirectory1+DataFile22Grp+'.csv'
df22_GRP = pd.read_csv(inputExcelFile22_GRP)

inputExcelFile23_GRP = workDirectory1+DataFile23Grp+'.csv'
df23_GRP = pd.read_csv(inputExcelFile23_GRP)

print('Excel file read in %s seconds' % round(time.process_time() - timeNowf1, 1))
#print(tab(df17_GRP.head(300), headers='keys', tablefmt='psql', showindex=False))

#UNIT PASS NAME, COUNTRY, SPECIALITY, AREA, PROFILE
df17_GRP.rename(columns={'Country': 'Country'}, inplace=True)
df17_GRP.rename(columns={'Email': 'Email'}, inplace=True)
df17_GRP.rename(columns={'Specialty': 'Specialty'}, inplace=True)
df17_GRP.rename(columns={'Amount': 'Amount'}, inplace=True)
df17_GRP.rename(columns={'Due': 'Due'}, inplace=True)
df17_GRP.rename(columns={'No_order': 'No order'}, inplace=True)
df17_GRP.rename(columns={'No_invoice': 'No invoice'}, inplace=True)
df17_GRP.rename(columns={'credit_note': 'Credit Note'}, inplace=True)
df17_GRP.rename(columns={'datee': 'Date'}, inplace=True)
df17_GRP.rename(columns={'passname': 'Pass Name'}, inplace=True)

df18_GRP.rename(columns={'Country': 'Country'}, inplace=True)
df18_GRP.rename(columns={'Email': 'Email'}, inplace=True)
df18_GRP.rename(columns={'Specialty': 'Specialty'}, inplace=True)
df18_GRP.rename(columns={'Amount': 'Amount'}, inplace=True)
df18_GRP.rename(columns={'Due': 'Due'}, inplace=True)
df18_GRP.rename(columns={'No_order': 'No order'}, inplace=True)
df18_GRP.rename(columns={'No_invoice': 'No invoice'}, inplace=True)
df18_GRP.rename(columns={'credit_note': 'Credit Note'}, inplace=True)
df18_GRP.rename(columns={'datee': 'Date'}, inplace=True)
df18_GRP.rename(columns={'passname': 'Pass Name'}, inplace=True)

df19_GRP.rename(columns={'Country': 'Country'}, inplace=True)
df19_GRP.rename(columns={'Email': 'Email'}, inplace=True)
df19_GRP.rename(columns={'Specialty': 'Specialty'}, inplace=True)
df19_GRP.rename(columns={'Amount': 'Amount'}, inplace=True)
df19_GRP.rename(columns={'Due': 'Due'}, inplace=True)
df19_GRP.rename(columns={'No_order': 'No order'}, inplace=True)
df19_GRP.rename(columns={'No_invoice': 'No invoice'}, inplace=True)
df19_GRP.rename(columns={'credit_note': 'Credit Note'}, inplace=True)
df19_GRP.rename(columns={'datee': 'Date'}, inplace=True)
df19_GRP.rename(columns={'passname': 'Pass Name'}, inplace=True)

df21_GRP.rename(columns={'Country': 'Country'}, inplace=True)
df21_GRP.rename(columns={'Email': 'Email'}, inplace=True)
df21_GRP.rename(columns={'Specialty': 'Specialty'}, inplace=True)
df21_GRP.rename(columns={'Amount': 'Amount'}, inplace=True)
df21_GRP.rename(columns={'Due': 'Due'}, inplace=True)
df21_GRP.rename(columns={'No_order': 'No order'}, inplace=True)
df21_GRP.rename(columns={'No_invoice': 'No invoice'}, inplace=True)
df21_GRP.rename(columns={'credit_note': 'Credit Note'}, inplace=True)
df21_GRP.rename(columns={'datee': 'Date'}, inplace=True)
df21_GRP.rename(columns={'passname': 'Pass Name'}, inplace=True)

df22_GRP.rename(columns={'Country': 'Country'}, inplace=True)
df22_GRP.rename(columns={'Email': 'Email'}, inplace=True)
df22_GRP.rename(columns={'Specialty': 'Specialty'}, inplace=True)
df22_GRP.rename(columns={'Amount': 'Amount'}, inplace=True)
df22_GRP.rename(columns={'Due': 'Due'}, inplace=True)
df22_GRP.rename(columns={'No_order': 'No order'}, inplace=True)
df22_GRP.rename(columns={'No_invoice': 'No invoice'}, inplace=True)
df22_GRP.rename(columns={'credit_note': 'Credit Note'}, inplace=True)
df22_GRP.rename(columns={'datee': 'Date'}, inplace=True)
df22_GRP.rename(columns={'passname': 'Pass Name'}, inplace=True)

df23_GRP.rename(columns={'Country': 'Country'}, inplace=True)
df23_GRP.rename(columns={'Email': 'Email'}, inplace=True)
df23_GRP.rename(columns={'Specialty': 'Specialty'}, inplace=True)
df23_GRP.rename(columns={'Amount': 'Amount'}, inplace=True)
df23_GRP.rename(columns={'Due': 'Due'}, inplace=True)
df23_GRP.rename(columns={'No_order': 'No order'}, inplace=True)
df23_GRP.rename(columns={'No_invoice': 'No invoice'}, inplace=True)
df23_GRP.rename(columns={'credit_note': 'Credit Note'}, inplace=True)
df23_GRP.rename(columns={'datee': 'Date'}, inplace=True)
df23_GRP.rename(columns={'passname': 'Pass Name'}, inplace=True)

#Manage CNF - UNIT GROUP
df18_GRP.rename(columns = {'No invoice':'NoInvoice'}, inplace = True)
df18_GRP = df18_GRP[(df18_GRP.NoInvoice != '')]
df18_GRP = df18_GRP[(df18_GRP.NoInvoice != '')]
df18_GRP.rename(columns = {'NoInvoice':'No invoice'}, inplace = True)

df19_GRP.rename(columns = {'No invoice':'NoInvoice'}, inplace = True)
df19_GRP = df19_GRP[(df19_GRP.NoInvoice != '')]
df19_GRP.rename(columns = {'NoInvoice':'No invoice'}, inplace = True)

df22_GRP.rename(columns = {'No invoice':'NoInvoice'}, inplace = True)
df22_GRP = df22_GRP[(df22_GRP.NoInvoice != '')]
df22_GRP.rename(columns = {'NoInvoice':'No invoice'}, inplace = True)

#Mapping country & respected continent
df17_GRP['Area'] = df17_GRP['Country']

df17_GRP['Area'] = df17_GRP['Area'].replace(
    to_replace=['ANGOLA', 'BURKINA FASO', 'BURUNDI', 'BENIN', 'BOTSWANA', 'CONGO (KINSHASA)', 'CENTRAL AFRICAN REPUBLIC', 'CONGO (BRAZZAVILLE)', 'IVORY COAST', 'CAMEROON', 'CAPE VERDE', 'DJIBOUTI', 'ALGERIA', 'EGYPT', 'WESTERN SAHARA', 'ERITREA', 'ETHIOPIA', 'GABON', 'GHANA', 'GAMBIA', 'GUINEA', 'EQUATORIAL GUINEA', 'GUINEA-BISSAU', 'KENYA', 'COMOROS', 'LIBERIA', 'LESOTHO', 'LIBYA', 'MOROCCO', 'MADAGASCAR', 'MALI', 'MAURITANIA', 'MAURITIUS', 'MALAWI', 'MOZAMBIQUE', 'NAMIBIA', 'NIGER', 'NIGERIA', 'REUNION', 'RWANDA', 'SEYCHELLES', 'SUDAN', 'SAINT HELENA', 'SENEGAL', 'SOMALIA', 'SAO TOME AND PRINCIPE', 'SWAZILAND', 'CHAD', 'TOGO', 'TUNISIA', 'TANZANIA', 'UGANDA', 'MAYOTTE', 'SOUTH AFRICA', 'ZAMBIA', 'ZIMBABWE'],
    value='Africa')

df17_GRP['Area'] = df17_GRP['Area'].replace(
    to_replace=[
        'BANGLADESH', 'BRUNEI', 'BHUTAN', 'CHINA', 'CHRISTMAS ISLAND', 'HONG KONG', 'INDONESIA', 'INDIA', 'BRITISH INDIAN OCEAN TERRITORY', 'JAPAN', 'CAMBODIA', 'NORTH KOREA', 'SOUTH KOREA', 'LAOS', 'SRI LANKA', 'MYANMAR', 'MACAO S.A.R., CHINA', 'MALDIVES', 'MALAYSIA', 'NEPAL', 'PHILIPPINES', 'SINGAPORE', 'THAILAND', 'EAST TIMOR', 'TAIWAN', 'VIETNAM'
    ],
    value='Asia')

df17_GRP['Area'] = df17_GRP['Area'].replace(
    to_replace=[
        'ANTIGUA AND BARBUDA', 'ANGUILLA', 'BARBADOS', 'SAINT BARTHELEMY', 'BAHAMAS', 'BELIZE', 'COSTA RICA', 'CUBA',
        'DOMINICA', 'DOMINICAN REPUBLIC', 'GRENADA', 'GUADELOUPE', 'GUATEMALA', 'HONDURAS', 'HAITI', 'JAMAICA',
        'SAINT KITTS AND NEVIS', 'CAYMAN ISLANDS', 'SAINT LUCIA', 'MARTINIQUE', 'MONTSERRAT', 'MEXICO', 'NICARAGUA',
        'PANAMA', 'PUERTO RICO', 'EL SALVADOR', 'SINT MAARTEN', 'SAINT VINCENT AND THE GRENADINES',
        'BRITISH VIRGIN ISLANDS', 'U.S. VIRGIN ISLANDS'
    ],
    value='Central America')
df17_GRP['Area'] = df17_GRP['Area'].replace(
    to_replace=[
        'ARMENIA', 'AZERBAIJAN', 'BELARUS', 'ESTONIA', 'GEORGIA', 'KYRGYZSTAN', 'KAZAKHSTAN', 'LITHUANIA', 'LATVIA', 'MOLDOVA', 'MONGOLIA', 'RUSSIA', 'TAJIKISTAN', 'TURKMENISTAN', 'UKRAINE', 'UZBEKISTAN'
    ],
    value='CIS extended')
df17_GRP['Area'] = df17_GRP['Area'].replace(
    to_replace=[
        'ANDORRA', 'ALBANIA', 'AUSTRIA', 'ALAND ISLANDS', 'BOSNIA AND HERZEGOVINA', 'BELGIUM', 'BULGARIA', 'SWITZERLAND', 'CYPRUS', 'CZECH REPUBLIC', 'GERMANY', 'DENMARK', 'SPAIN', 'FINLAND', 'FAROE ISLANDS', 'FRANCE', 'UNITED KINGDOM', 'GUERNSEY', 'GIBRALTAR', 'GREECE', 'CROATIA', 'HUNGARY', 'IRELAND', 'ISLE OF MAN', 'ICELAND', 'ITALY', 'JERSEY', 'LIECHTENSTEIN', 'LUXEMBOURG', 'MONACO', 'MONTENEGRO', 'MACEDONIA', 'MALTA', 'NETHERLANDS', 'NORWAY', 'POLAND', 'PORTUGAL', 'ROMANIA', 'SERBIA', 'SWEDEN', 'SLOVENIA', 'SVALBARD AND JAN MAYEN', 'SLOVAKIA', 'SIERRA LEONE', 'SAN MARINO', 'VATICAN CITY STATE', 'KOSOVO'
    ],
    value='Europe')
df17_GRP['Area'] = df17_GRP['Area'].replace(
    to_replace=[
        'GREENLAND'
    ],
    value='Greenland')
df17_GRP['Area'] = df17_GRP['Area'].replace(
    to_replace=[
        'UNITED ARAB EMIRATES', 'AFGHANISTAN', 'BAHRAIN', 'ISRAEL', 'IRAQ', 'IRAN', 'JORDAN', 'KUWAIT', 'LEBANON',
        'OMAN', 'PAKISTAN', 'PALESTINIAN TERRITORY', 'QATAR', 'SAUDI ARABIA', 'SYRIA', 'TURKEY', 'YEMEN'
    ],
    value='Middle-East')
df17_GRP['Area'] = df17_GRP['Area'].replace(
    to_replace=[
        'BERMUDA', 'CANADA', 'SAINT PIERRE AND MIQUELON', 'UNITED STATES MINOR OUTLYING ISLANDS', 'UNITED STATES'
    ],
    value='North America')
df17_GRP['Area'] = df17_GRP['Area'].replace(
    to_replace=[
        'AMERICAN SAMOA', 'AUSTRALIA', 'COCOS (KEELING) ISLANDS', 'COOK ISLANDS', 'FIJI', 'MICRONESIA', 'GUAM',
        'KIRIBATI', 'MARSHALL ISLANDS', 'NORTHERN MARIANA ISLANDS', 'NEW CALEDONIA', 'NORFOLK ISLAND', 'NAURU', 'NIUE',
        'NEW ZEALAND', 'FRENCH POLYNESIA', 'PAPUA NEW GUINEA', 'PITCAIRN', 'PALAU', 'SOLOMON ISLANDS', 'TOKELAU',
        'TUVALU', 'VANUATU', 'WALLIS AND FUTUNA', 'SAMOA'
    ],
    value='Oceania')
df17_GRP['Area'] = df17_GRP['Area'].replace(
    to_replace=[
        'NETHERLANDS ANTILLES', 'ARGENTINA', 'ARUBA', 'BOLIVIA', 'BONAIRE, SINT EUSTATIUS AND SABA', 'BRAZIL', 'CHILE', 'COLOMBIA', 'CURACAO', 'ECUADOR', 'FALKLAND ISLANDS', 'FRENCH GUIANA', 'GUYANA', 'PERU', 'PARAGUAY', 'SURINAME', 'TURKS AND CAICOS ISLANDS', 'TONGA', 'TRINIDAD AND TOBAGO', 'URUGUAY', 'VENEZUELA'
    ],
    value='South America')

df18_GRP['Area'] = df18_GRP['Country']

df18_GRP['Area'] = df18_GRP['Area'].replace(
    to_replace=['ANGOLA', 'BURKINA FASO', 'BURUNDI', 'BENIN', 'BOTSWANA', 'CONGO (KINSHASA)', 'CENTRAL AFRICAN REPUBLIC', 'CONGO (BRAZZAVILLE)', 'IVORY COAST', 'CAMEROON', 'CAPE VERDE', 'DJIBOUTI', 'ALGERIA', 'EGYPT', 'WESTERN SAHARA', 'ERITREA', 'ETHIOPIA', 'GABON', 'GHANA', 'GAMBIA', 'GUINEA', 'EQUATORIAL GUINEA', 'GUINEA-BISSAU', 'KENYA', 'COMOROS', 'LIBERIA', 'LESOTHO', 'LIBYA', 'MOROCCO', 'MADAGASCAR', 'MALI', 'MAURITANIA', 'MAURITIUS', 'MALAWI', 'MOZAMBIQUE', 'NAMIBIA', 'NIGER', 'NIGERIA', 'REUNION', 'RWANDA', 'SEYCHELLES', 'SUDAN', 'SAINT HELENA', 'SENEGAL', 'SOMALIA', 'SAO TOME AND PRINCIPE', 'SWAZILAND', 'CHAD', 'TOGO', 'TUNISIA', 'TANZANIA', 'UGANDA', 'MAYOTTE', 'SOUTH AFRICA', 'ZAMBIA', 'ZIMBABWE'],
    value='Africa')

df18_GRP['Area'] = df18_GRP['Area'].replace(
    to_replace=[
        'BANGLADESH', 'BRUNEI', 'BHUTAN', 'CHINA', 'CHRISTMAS ISLAND', 'HONG KONG', 'INDONESIA', 'INDIA', 'BRITISH INDIAN OCEAN TERRITORY', 'JAPAN', 'CAMBODIA', 'NORTH KOREA', 'SOUTH KOREA', 'LAOS', 'SRI LANKA', 'MYANMAR', 'MACAO S.A.R., CHINA', 'MALDIVES', 'MALAYSIA', 'NEPAL', 'PHILIPPINES', 'SINGAPORE', 'THAILAND', 'EAST TIMOR', 'TAIWAN', 'VIETNAM'
    ],
    value='Asia')

df18_GRP['Area'] = df18_GRP['Area'].replace(
    to_replace=[
        'ANTIGUA AND BARBUDA', 'ANGUILLA', 'BARBADOS', 'SAINT BARTHELEMY', 'BAHAMAS', 'BELIZE', 'COSTA RICA', 'CUBA',
        'DOMINICA', 'DOMINICAN REPUBLIC', 'GRENADA', 'GUADELOUPE', 'GUATEMALA', 'HONDURAS', 'HAITI', 'JAMAICA',
        'SAINT KITTS AND NEVIS', 'CAYMAN ISLANDS', 'SAINT LUCIA', 'MARTINIQUE', 'MONTSERRAT', 'MEXICO', 'NICARAGUA',
        'PANAMA', 'PUERTO RICO', 'EL SALVADOR', 'SINT MAARTEN', 'SAINT VINCENT AND THE GRENADINES',
        'BRITISH VIRGIN ISLANDS', 'U.S. VIRGIN ISLANDS'
    ],
    value='Central America')
df18_GRP['Area'] = df18_GRP['Area'].replace(
    to_replace=[
        'ARMENIA', 'AZERBAIJAN', 'BELARUS', 'ESTONIA', 'GEORGIA', 'KYRGYZSTAN', 'KAZAKHSTAN', 'LITHUANIA', 'LATVIA', 'MOLDOVA', 'MONGOLIA', 'RUSSIA', 'TAJIKISTAN', 'TURKMENISTAN', 'UKRAINE', 'UZBEKISTAN'
    ],
    value='CIS extended')
df18_GRP['Area'] = df18_GRP['Area'].replace(
    to_replace=[
        'ANDORRA', 'ALBANIA', 'AUSTRIA', 'ALAND ISLANDS', 'BOSNIA AND HERZEGOVINA', 'BELGIUM', 'BULGARIA', 'SWITZERLAND', 'CYPRUS', 'CZECH REPUBLIC', 'GERMANY', 'DENMARK', 'SPAIN', 'FINLAND', 'FAROE ISLANDS', 'FRANCE', 'UNITED KINGDOM', 'GUERNSEY', 'GIBRALTAR', 'GREECE', 'CROATIA', 'HUNGARY', 'IRELAND', 'ISLE OF MAN', 'ICELAND', 'ITALY', 'JERSEY', 'LIECHTENSTEIN', 'LUXEMBOURG', 'MONACO', 'MONTENEGRO', 'MACEDONIA', 'MALTA', 'NETHERLANDS', 'NORWAY', 'POLAND', 'PORTUGAL', 'ROMANIA', 'SERBIA', 'SWEDEN', 'SLOVENIA', 'SVALBARD AND JAN MAYEN', 'SLOVAKIA', 'SIERRA LEONE', 'SAN MARINO', 'VATICAN CITY STATE', 'KOSOVO'
    ],
    value='Europe')
df18_GRP['Area'] = df18_GRP['Area'].replace(
    to_replace=[
        'GREENLAND'
    ],
    value='Greenland')
df18_GRP['Area'] = df18_GRP['Area'].replace(
    to_replace=[
        'UNITED ARAB EMIRATES', 'AFGHANISTAN', 'BAHRAIN', 'ISRAEL', 'IRAQ', 'IRAN', 'JORDAN', 'KUWAIT', 'LEBANON',
        'OMAN', 'PAKISTAN', 'PALESTINIAN TERRITORY', 'QATAR', 'SAUDI ARABIA', 'SYRIA', 'TURKEY', 'YEMEN'
    ],
    value='Middle-East')
df18_GRP['Area'] = df18_GRP['Area'].replace(
    to_replace=[
        'BERMUDA', 'CANADA', 'SAINT PIERRE AND MIQUELON', 'UNITED STATES MINOR OUTLYING ISLANDS', 'UNITED STATES'
    ],
    value='North America')
df18_GRP['Area'] = df18_GRP['Area'].replace(
    to_replace=[
        'AMERICAN SAMOA', 'AUSTRALIA', 'COCOS (KEELING) ISLANDS', 'COOK ISLANDS', 'FIJI', 'MICRONESIA', 'GUAM',
        'KIRIBATI', 'MARSHALL ISLANDS', 'NORTHERN MARIANA ISLANDS', 'NEW CALEDONIA', 'NORFOLK ISLAND', 'NAURU', 'NIUE',
        'NEW ZEALAND', 'FRENCH POLYNESIA', 'PAPUA NEW GUINEA', 'PITCAIRN', 'PALAU', 'SOLOMON ISLANDS', 'TOKELAU',
        'TUVALU', 'VANUATU', 'WALLIS AND FUTUNA', 'SAMOA'
    ],
    value='Oceania')
df18_GRP['Area'] = df18_GRP['Area'].replace(
    to_replace=[
        'NETHERLANDS ANTILLES', 'ARGENTINA', 'ARUBA', 'BOLIVIA', 'BONAIRE, SINT EUSTATIUS AND SABA', 'BRAZIL', 'CHILE', 'COLOMBIA', 'CURACAO', 'ECUADOR', 'FALKLAND ISLANDS', 'FRENCH GUIANA', 'GUYANA', 'PERU', 'PARAGUAY', 'SURINAME', 'TURKS AND CAICOS ISLANDS', 'TONGA', 'TRINIDAD AND TOBAGO', 'URUGUAY', 'VENEZUELA'
    ],
    value='South America')

#Mapping country & respected continent
df19_GRP['Area'] = df19_GRP['Country']

df19_GRP['Area'] = df19_GRP['Area'].replace(
    to_replace=['ANGOLA', 'BURKINA FASO', 'BURUNDI', 'BENIN', 'BOTSWANA', 'CONGO (KINSHASA)', 'CENTRAL AFRICAN REPUBLIC', 'CONGO (BRAZZAVILLE)', 'IVORY COAST', 'CAMEROON', 'CAPE VERDE', 'DJIBOUTI', 'ALGERIA', 'EGYPT', 'WESTERN SAHARA', 'ERITREA', 'ETHIOPIA', 'GABON', 'GHANA', 'GAMBIA', 'GUINEA', 'EQUATORIAL GUINEA', 'GUINEA-BISSAU', 'KENYA', 'COMOROS', 'LIBERIA', 'LESOTHO', 'LIBYA', 'MOROCCO', 'MADAGASCAR', 'MALI', 'MAURITANIA', 'MAURITIUS', 'MALAWI', 'MOZAMBIQUE', 'NAMIBIA', 'NIGER', 'NIGERIA', 'REUNION', 'RWANDA', 'SEYCHELLES', 'SUDAN', 'SAINT HELENA', 'SENEGAL', 'SOMALIA', 'SAO TOME AND PRINCIPE', 'SWAZILAND', 'CHAD', 'TOGO', 'TUNISIA', 'TANZANIA', 'UGANDA', 'MAYOTTE', 'SOUTH AFRICA', 'ZAMBIA', 'ZIMBABWE'],
    value='Africa')

df19_GRP['Area'] = df19_GRP['Area'].replace(
    to_replace=[
        'BANGLADESH', 'BRUNEI', 'BHUTAN', 'CHINA', 'CHRISTMAS ISLAND', 'HONG KONG', 'INDONESIA', 'INDIA', 'BRITISH INDIAN OCEAN TERRITORY', 'JAPAN', 'CAMBODIA', 'NORTH KOREA', 'SOUTH KOREA', 'LAOS', 'SRI LANKA', 'MYANMAR', 'MACAO S.A.R., CHINA', 'MALDIVES', 'MALAYSIA', 'NEPAL', 'PHILIPPINES', 'SINGAPORE', 'THAILAND', 'EAST TIMOR', 'TAIWAN', 'VIETNAM'
    ],
    value='Asia')

df19_GRP['Area'] = df19_GRP['Area'].replace(
    to_replace=[
        'ANTIGUA AND BARBUDA', 'ANGUILLA', 'BARBADOS', 'SAINT BARTHELEMY', 'BAHAMAS', 'BELIZE', 'COSTA RICA', 'CUBA',
        'DOMINICA', 'DOMINICAN REPUBLIC', 'GRENADA', 'GUADELOUPE', 'GUATEMALA', 'HONDURAS', 'HAITI', 'JAMAICA',
        'SAINT KITTS AND NEVIS', 'CAYMAN ISLANDS', 'SAINT LUCIA', 'MARTINIQUE', 'MONTSERRAT', 'MEXICO', 'NICARAGUA',
        'PANAMA', 'PUERTO RICO', 'EL SALVADOR', 'SINT MAARTEN', 'SAINT VINCENT AND THE GRENADINES',
        'BRITISH VIRGIN ISLANDS', 'U.S. VIRGIN ISLANDS'
    ],
    value='Central America')
df19_GRP['Area'] = df19_GRP['Area'].replace(
    to_replace=[
        'ARMENIA', 'AZERBAIJAN', 'BELARUS', 'ESTONIA', 'GEORGIA', 'KYRGYZSTAN', 'KAZAKHSTAN', 'LITHUANIA', 'LATVIA', 'MOLDOVA', 'MONGOLIA', 'RUSSIA', 'TAJIKISTAN', 'TURKMENISTAN', 'UKRAINE', 'UZBEKISTAN'
    ],
    value='CIS extended')
df19_GRP['Area'] = df19_GRP['Area'].replace(
    to_replace=[
        'ANDORRA', 'ALBANIA', 'AUSTRIA', 'ALAND ISLANDS', 'BOSNIA AND HERZEGOVINA', 'BELGIUM', 'BULGARIA', 'SWITZERLAND', 'CYPRUS', 'CZECH REPUBLIC', 'GERMANY', 'DENMARK', 'SPAIN', 'FINLAND', 'FAROE ISLANDS', 'FRANCE', 'UNITED KINGDOM', 'GUERNSEY', 'GIBRALTAR', 'GREECE', 'CROATIA', 'HUNGARY', 'IRELAND', 'ISLE OF MAN', 'ICELAND', 'ITALY', 'JERSEY', 'LIECHTENSTEIN', 'LUXEMBOURG', 'MONACO', 'MONTENEGRO', 'MACEDONIA', 'MALTA', 'NETHERLANDS', 'NORWAY', 'POLAND', 'PORTUGAL', 'ROMANIA', 'SERBIA', 'SWEDEN', 'SLOVENIA', 'SVALBARD AND JAN MAYEN', 'SLOVAKIA', 'SIERRA LEONE', 'SAN MARINO', 'VATICAN CITY STATE', 'KOSOVO'
    ],
    value='Europe')
df19_GRP['Area'] = df19_GRP['Area'].replace(
    to_replace=[
        'GREENLAND'
    ],
    value='Greenland')
df19_GRP['Area'] = df19_GRP['Area'].replace(
    to_replace=[
        'UNITED ARAB EMIRATES', 'AFGHANISTAN', 'BAHRAIN', 'ISRAEL', 'IRAQ', 'IRAN', 'JORDAN', 'KUWAIT', 'LEBANON',
        'OMAN', 'PAKISTAN', 'PALESTINIAN TERRITORY', 'QATAR', 'SAUDI ARABIA', 'SYRIA', 'TURKEY', 'YEMEN'
    ],
    value='Middle-East')
df19_GRP['Area'] = df19_GRP['Area'].replace(
    to_replace=[
        'BERMUDA', 'CANADA', 'SAINT PIERRE AND MIQUELON', 'UNITED STATES MINOR OUTLYING ISLANDS', 'UNITED STATES'
    ],
    value='North America')
df19_GRP['Area'] = df19_GRP['Area'].replace(
    to_replace=[
        'AMERICAN SAMOA', 'AUSTRALIA', 'COCOS (KEELING) ISLANDS', 'COOK ISLANDS', 'FIJI', 'MICRONESIA', 'GUAM',
        'KIRIBATI', 'MARSHALL ISLANDS', 'NORTHERN MARIANA ISLANDS', 'NEW CALEDONIA', 'NORFOLK ISLAND', 'NAURU', 'NIUE',
        'NEW ZEALAND', 'FRENCH POLYNESIA', 'PAPUA NEW GUINEA', 'PITCAIRN', 'PALAU', 'SOLOMON ISLANDS', 'TOKELAU',
        'TUVALU', 'VANUATU', 'WALLIS AND FUTUNA', 'SAMOA'
    ],
    value='Oceania')
df19_GRP['Area'] = df19_GRP['Area'].replace(
    to_replace=[
        'NETHERLANDS ANTILLES', 'ARGENTINA', 'ARUBA', 'BOLIVIA', 'BONAIRE, SINT EUSTATIUS AND SABA', 'BRAZIL', 'CHILE', 'COLOMBIA', 'CURACAO', 'ECUADOR', 'FALKLAND ISLANDS', 'FRENCH GUIANA', 'GUYANA', 'PERU', 'PARAGUAY', 'SURINAME', 'TURKS AND CAICOS ISLANDS', 'TONGA', 'TRINIDAD AND TOBAGO', 'URUGUAY', 'VENEZUELA'
    ],
    value='South America')

#Mapping country & respected continent
df21_GRP['Area'] = df21_GRP['Country']

df21_GRP['Area'] = df21_GRP['Area'].replace(
    to_replace=['ANGOLA', 'BURKINA FASO', 'BURUNDI', 'BENIN', 'BOTSWANA', 'CONGO (KINSHASA)', 'CENTRAL AFRICAN REPUBLIC', 'CONGO (BRAZZAVILLE)', 'IVORY COAST', 'CAMEROON', 'CAPE VERDE', 'DJIBOUTI', 'ALGERIA', 'EGYPT', 'WESTERN SAHARA', 'ERITREA', 'ETHIOPIA', 'GABON', 'GHANA', 'GAMBIA', 'GUINEA', 'EQUATORIAL GUINEA', 'GUINEA-BISSAU', 'KENYA', 'COMOROS', 'LIBERIA', 'LESOTHO', 'LIBYA', 'MOROCCO', 'MADAGASCAR', 'MALI', 'MAURITANIA', 'MAURITIUS', 'MALAWI', 'MOZAMBIQUE', 'NAMIBIA', 'NIGER', 'NIGERIA', 'REUNION', 'RWANDA', 'SEYCHELLES', 'SUDAN', 'SAINT HELENA', 'SENEGAL', 'SOMALIA', 'SAO TOME AND PRINCIPE', 'SWAZILAND', 'CHAD', 'TOGO', 'TUNISIA', 'TANZANIA', 'UGANDA', 'MAYOTTE', 'SOUTH AFRICA', 'ZAMBIA', 'ZIMBABWE'],
    value='Africa')

df21_GRP['Area'] = df21_GRP['Area'].replace(
    to_replace=[
        'BANGLADESH', 'BRUNEI', 'BHUTAN', 'CHINA', 'CHRISTMAS ISLAND', 'HONG KONG', 'INDONESIA', 'INDIA', 'BRITISH INDIAN OCEAN TERRITORY', 'JAPAN', 'CAMBODIA', 'NORTH KOREA', 'SOUTH KOREA', 'LAOS', 'SRI LANKA', 'MYANMAR', 'MACAO S.A.R., CHINA', 'MALDIVES', 'MALAYSIA', 'NEPAL', 'PHILIPPINES', 'SINGAPORE', 'THAILAND', 'EAST TIMOR', 'TAIWAN', 'VIETNAM'
    ],
    value='Asia')

df21_GRP['Area'] = df21_GRP['Area'].replace(
    to_replace=[
        'ANTIGUA AND BARBUDA', 'ANGUILLA', 'BARBADOS', 'SAINT BARTHELEMY', 'BAHAMAS', 'BELIZE', 'COSTA RICA', 'CUBA',
        'DOMINICA', 'DOMINICAN REPUBLIC', 'GRENADA', 'GUADELOUPE', 'GUATEMALA', 'HONDURAS', 'HAITI', 'JAMAICA',
        'SAINT KITTS AND NEVIS', 'CAYMAN ISLANDS', 'SAINT LUCIA', 'MARTINIQUE', 'MONTSERRAT', 'MEXICO', 'NICARAGUA',
        'PANAMA', 'PUERTO RICO', 'EL SALVADOR', 'SINT MAARTEN', 'SAINT VINCENT AND THE GRENADINES',
        'BRITISH VIRGIN ISLANDS', 'U.S. VIRGIN ISLANDS'
    ],
    value='Central America')
df21_GRP['Area'] = df21_GRP['Area'].replace(
    to_replace=[
        'ARMENIA', 'AZERBAIJAN', 'BELARUS', 'ESTONIA', 'GEORGIA', 'KYRGYZSTAN', 'KAZAKHSTAN', 'LITHUANIA', 'LATVIA', 'MOLDOVA', 'MONGOLIA', 'RUSSIA', 'TAJIKISTAN', 'TURKMENISTAN', 'UKRAINE', 'UZBEKISTAN'
    ],
    value='CIS extended')
df21_GRP['Area'] = df21_GRP['Area'].replace(
    to_replace=[
        'ANDORRA', 'ALBANIA', 'AUSTRIA', 'ALAND ISLANDS', 'BOSNIA AND HERZEGOVINA', 'BELGIUM', 'BULGARIA', 'SWITZERLAND', 'CYPRUS', 'CZECH REPUBLIC', 'GERMANY', 'DENMARK', 'SPAIN', 'FINLAND', 'FAROE ISLANDS', 'FRANCE', 'UNITED KINGDOM', 'GUERNSEY', 'GIBRALTAR', 'GREECE', 'CROATIA', 'HUNGARY', 'IRELAND', 'ISLE OF MAN', 'ICELAND', 'ITALY', 'JERSEY', 'LIECHTENSTEIN', 'LUXEMBOURG', 'MONACO', 'MONTENEGRO', 'MACEDONIA', 'MALTA', 'NETHERLANDS', 'NORWAY', 'POLAND', 'PORTUGAL', 'ROMANIA', 'SERBIA', 'SWEDEN', 'SLOVENIA', 'SVALBARD AND JAN MAYEN', 'SLOVAKIA', 'SIERRA LEONE', 'SAN MARINO', 'VATICAN CITY STATE', 'KOSOVO'
    ],
    value='Europe')
df21_GRP['Area'] = df21_GRP['Area'].replace(
    to_replace=[
        'GREENLAND'
    ],
    value='Greenland')
df21_GRP['Area'] = df21_GRP['Area'].replace(
    to_replace=[
        'UNITED ARAB EMIRATES', 'AFGHANISTAN', 'BAHRAIN', 'ISRAEL', 'IRAQ', 'IRAN', 'JORDAN', 'KUWAIT', 'LEBANON',
        'OMAN', 'PAKISTAN', 'PALESTINIAN TERRITORY', 'QATAR', 'SAUDI ARABIA', 'SYRIA', 'TURKEY', 'YEMEN'
    ],
    value='Middle-East')
df21_GRP['Area'] = df21_GRP['Area'].replace(
    to_replace=[
        'BERMUDA', 'CANADA', 'SAINT PIERRE AND MIQUELON', 'UNITED STATES MINOR OUTLYING ISLANDS', 'UNITED STATES'
    ],
    value='North America')
df21_GRP['Area'] = df21_GRP['Area'].replace(
    to_replace=[
        'AMERICAN SAMOA', 'AUSTRALIA', 'COCOS (KEELING) ISLANDS', 'COOK ISLANDS', 'FIJI', 'MICRONESIA', 'GUAM',
        'KIRIBATI', 'MARSHALL ISLANDS', 'NORTHERN MARIANA ISLANDS', 'NEW CALEDONIA', 'NORFOLK ISLAND', 'NAURU', 'NIUE',
        'NEW ZEALAND', 'FRENCH POLYNESIA', 'PAPUA NEW GUINEA', 'PITCAIRN', 'PALAU', 'SOLOMON ISLANDS', 'TOKELAU',
        'TUVALU', 'VANUATU', 'WALLIS AND FUTUNA', 'SAMOA'
    ],
    value='Oceania')
df21_GRP['Area'] = df21_GRP['Area'].replace(
    to_replace=[
        'NETHERLANDS ANTILLES', 'ARGENTINA', 'ARUBA', 'BOLIVIA', 'BONAIRE, SINT EUSTATIUS AND SABA', 'BRAZIL', 'CHILE', 'COLOMBIA', 'CURACAO', 'ECUADOR', 'FALKLAND ISLANDS', 'FRENCH GUIANA', 'GUYANA', 'PERU', 'PARAGUAY', 'SURINAME', 'TURKS AND CAICOS ISLANDS', 'TONGA', 'TRINIDAD AND TOBAGO', 'URUGUAY', 'VENEZUELA'
    ],
    value='South America')

#Mapping country & respected continent
df22_GRP['Area'] = df22_GRP['Country']

df22_GRP['Area'] = df22_GRP['Area'].replace(
    to_replace=['ANGOLA', 'BURKINA FASO', 'BURUNDI', 'BENIN', 'BOTSWANA', 'CONGO (KINSHASA)', 'CENTRAL AFRICAN REPUBLIC', 'CONGO (BRAZZAVILLE)', 'IVORY COAST', 'CAMEROON', 'CAPE VERDE', 'DJIBOUTI', 'ALGERIA', 'EGYPT', 'WESTERN SAHARA', 'ERITREA', 'ETHIOPIA', 'GABON', 'GHANA', 'GAMBIA', 'GUINEA', 'EQUATORIAL GUINEA', 'GUINEA-BISSAU', 'KENYA', 'COMOROS', 'LIBERIA', 'LESOTHO', 'LIBYA', 'MOROCCO', 'MADAGASCAR', 'MALI', 'MAURITANIA', 'MAURITIUS', 'MALAWI', 'MOZAMBIQUE', 'NAMIBIA', 'NIGER', 'NIGERIA', 'REUNION', 'RWANDA', 'SEYCHELLES', 'SUDAN', 'SAINT HELENA', 'SENEGAL', 'SOMALIA', 'SAO TOME AND PRINCIPE', 'SWAZILAND', 'CHAD', 'TOGO', 'TUNISIA', 'TANZANIA', 'UGANDA', 'MAYOTTE', 'SOUTH AFRICA', 'ZAMBIA', 'ZIMBABWE'],
    value='Africa')

df22_GRP['Area'] = df22_GRP['Area'].replace(
    to_replace=[
        'BANGLADESH', 'BRUNEI', 'BHUTAN', 'CHINA', 'CHRISTMAS ISLAND', 'HONG KONG', 'INDONESIA', 'INDIA', 'BRITISH INDIAN OCEAN TERRITORY', 'JAPAN', 'CAMBODIA', 'NORTH KOREA', 'SOUTH KOREA', 'LAOS', 'SRI LANKA', 'MYANMAR', 'MACAO S.A.R., CHINA', 'MALDIVES', 'MALAYSIA', 'NEPAL', 'PHILIPPINES', 'SINGAPORE', 'THAILAND', 'EAST TIMOR', 'TAIWAN', 'VIETNAM'
    ],
    value='Asia')

df22_GRP['Area'] = df22_GRP['Area'].replace(
    to_replace=[
        'ANTIGUA AND BARBUDA', 'ANGUILLA', 'BARBADOS', 'SAINT BARTHELEMY', 'BAHAMAS', 'BELIZE', 'COSTA RICA', 'CUBA',
        'DOMINICA', 'DOMINICAN REPUBLIC', 'GRENADA', 'GUADELOUPE', 'GUATEMALA', 'HONDURAS', 'HAITI', 'JAMAICA',
        'SAINT KITTS AND NEVIS', 'CAYMAN ISLANDS', 'SAINT LUCIA', 'MARTINIQUE', 'MONTSERRAT', 'MEXICO', 'NICARAGUA',
        'PANAMA', 'PUERTO RICO', 'EL SALVADOR', 'SINT MAARTEN', 'SAINT VINCENT AND THE GRENADINES',
        'BRITISH VIRGIN ISLANDS', 'U.S. VIRGIN ISLANDS'
    ],
    value='Central America')
df22_GRP['Area'] = df22_GRP['Area'].replace(
    to_replace=[
        'ARMENIA', 'AZERBAIJAN', 'BELARUS', 'ESTONIA', 'GEORGIA', 'KYRGYZSTAN', 'KAZAKHSTAN', 'LITHUANIA', 'LATVIA', 'MOLDOVA', 'MONGOLIA', 'RUSSIA', 'TAJIKISTAN', 'TURKMENISTAN', 'UKRAINE', 'UZBEKISTAN'
    ],
    value='CIS extended')
df22_GRP['Area'] = df22_GRP['Area'].replace(
    to_replace=[
        'ANDORRA', 'ALBANIA', 'AUSTRIA', 'ALAND ISLANDS', 'BOSNIA AND HERZEGOVINA', 'BELGIUM', 'BULGARIA', 'SWITZERLAND', 'CYPRUS', 'CZECH REPUBLIC', 'GERMANY', 'DENMARK', 'SPAIN', 'FINLAND', 'FAROE ISLANDS', 'FRANCE', 'UNITED KINGDOM', 'GUERNSEY', 'GIBRALTAR', 'GREECE', 'CROATIA', 'HUNGARY', 'IRELAND', 'ISLE OF MAN', 'ICELAND', 'ITALY', 'JERSEY', 'LIECHTENSTEIN', 'LUXEMBOURG', 'MONACO', 'MONTENEGRO', 'MACEDONIA', 'MALTA', 'NETHERLANDS', 'NORWAY', 'POLAND', 'PORTUGAL', 'ROMANIA', 'SERBIA', 'SWEDEN', 'SLOVENIA', 'SVALBARD AND JAN MAYEN', 'SLOVAKIA', 'SIERRA LEONE', 'SAN MARINO', 'VATICAN CITY STATE', 'KOSOVO'
    ],
    value='Europe')
df22_GRP['Area'] = df22_GRP['Area'].replace(
    to_replace=[
        'GREENLAND'
    ],
    value='Greenland')
df22_GRP['Area'] = df22_GRP['Area'].replace(
    to_replace=[
        'UNITED ARAB EMIRATES', 'AFGHANISTAN', 'BAHRAIN', 'ISRAEL', 'IRAQ', 'IRAN', 'JORDAN', 'KUWAIT', 'LEBANON',
        'OMAN', 'PAKISTAN', 'PALESTINIAN TERRITORY', 'QATAR', 'SAUDI ARABIA', 'SYRIA', 'TURKEY', 'YEMEN'
    ],
    value='Middle-East')
df22_GRP['Area'] = df22_GRP['Area'].replace(
    to_replace=[
        'BERMUDA', 'CANADA', 'SAINT PIERRE AND MIQUELON', 'UNITED STATES MINOR OUTLYING ISLANDS', 'UNITED STATES'
    ],
    value='North America')
df22_GRP['Area'] = df22_GRP['Area'].replace(
    to_replace=[
        'AMERICAN SAMOA', 'AUSTRALIA', 'COCOS (KEELING) ISLANDS', 'COOK ISLANDS', 'FIJI', 'MICRONESIA', 'GUAM',
        'KIRIBATI', 'MARSHALL ISLANDS', 'NORTHERN MARIANA ISLANDS', 'NEW CALEDONIA', 'NORFOLK ISLAND', 'NAURU', 'NIUE',
        'NEW ZEALAND', 'FRENCH POLYNESIA', 'PAPUA NEW GUINEA', 'PITCAIRN', 'PALAU', 'SOLOMON ISLANDS', 'TOKELAU',
        'TUVALU', 'VANUATU', 'WALLIS AND FUTUNA', 'SAMOA'
    ],
    value='Oceania')
df22_GRP['Area'] = df22_GRP['Area'].replace(
    to_replace=[
        'NETHERLANDS ANTILLES', 'ARGENTINA', 'ARUBA', 'BOLIVIA', 'BONAIRE, SINT EUSTATIUS AND SABA', 'BRAZIL', 'CHILE', 'COLOMBIA', 'CURACAO', 'ECUADOR', 'FALKLAND ISLANDS', 'FRENCH GUIANA', 'GUYANA', 'PERU', 'PARAGUAY', 'SURINAME', 'TURKS AND CAICOS ISLANDS', 'TONGA', 'TRINIDAD AND TOBAGO', 'URUGUAY', 'VENEZUELA'
    ],
    value='South America')

df23_GRP['Area'] = df23_GRP['Country']

df23_GRP['Area'] = df23_GRP['Area'].replace(
    to_replace=['ANGOLA', 'BURKINA FASO', 'BURUNDI', 'BENIN', 'BOTSWANA', 'CONGO (KINSHASA)', 'CENTRAL AFRICAN REPUBLIC', 'CONGO (BRAZZAVILLE)', 'IVORY COAST', 'CAMEROON', 'CAPE VERDE', 'DJIBOUTI', 'ALGERIA', 'EGYPT', 'WESTERN SAHARA', 'ERITREA', 'ETHIOPIA', 'GABON', 'GHANA', 'GAMBIA', 'GUINEA', 'EQUATORIAL GUINEA', 'GUINEA-BISSAU', 'KENYA', 'COMOROS', 'LIBERIA', 'LESOTHO', 'LIBYA', 'MOROCCO', 'MADAGASCAR', 'MALI', 'MAURITANIA', 'MAURITIUS', 'MALAWI', 'MOZAMBIQUE', 'NAMIBIA', 'NIGER', 'NIGERIA', 'REUNION', 'RWANDA', 'SEYCHELLES', 'SUDAN', 'SAINT HELENA', 'SENEGAL', 'SOMALIA', 'SAO TOME AND PRINCIPE', 'SWAZILAND', 'CHAD', 'TOGO', 'TUNISIA', 'TANZANIA', 'UGANDA', 'MAYOTTE', 'SOUTH AFRICA', 'ZAMBIA', 'ZIMBABWE'],
    value='Africa')

df23_GRP['Area'] = df23_GRP['Area'].replace(
    to_replace=[
        'BANGLADESH', 'BRUNEI', 'BHUTAN', 'CHINA', 'CHRISTMAS ISLAND', 'HONG KONG', 'INDONESIA', 'INDIA', 'BRITISH INDIAN OCEAN TERRITORY', 'JAPAN', 'CAMBODIA', 'NORTH KOREA', 'SOUTH KOREA', 'LAOS', 'SRI LANKA', 'MYANMAR', 'MACAO S.A.R., CHINA', 'MALDIVES', 'MALAYSIA', 'NEPAL', 'PHILIPPINES', 'SINGAPORE', 'THAILAND', 'EAST TIMOR', 'TAIWAN', 'VIETNAM'
    ],
    value='Asia')

df23_GRP['Area'] = df23_GRP['Area'].replace(
    to_replace=[
        'ANTIGUA AND BARBUDA', 'ANGUILLA', 'BARBADOS', 'SAINT BARTHELEMY', 'BAHAMAS', 'BELIZE', 'COSTA RICA', 'CUBA',
        'DOMINICA', 'DOMINICAN REPUBLIC', 'GRENADA', 'GUADELOUPE', 'GUATEMALA', 'HONDURAS', 'HAITI', 'JAMAICA',
        'SAINT KITTS AND NEVIS', 'CAYMAN ISLANDS', 'SAINT LUCIA', 'MARTINIQUE', 'MONTSERRAT', 'MEXICO', 'NICARAGUA',
        'PANAMA', 'PUERTO RICO', 'EL SALVADOR', 'SINT MAARTEN', 'SAINT VINCENT AND THE GRENADINES',
        'BRITISH VIRGIN ISLANDS', 'U.S. VIRGIN ISLANDS'
    ],
    value='Central America')
df23_GRP['Area'] = df23_GRP['Area'].replace(
    to_replace=[
        'ARMENIA', 'AZERBAIJAN', 'BELARUS', 'ESTONIA', 'GEORGIA', 'KYRGYZSTAN', 'KAZAKHSTAN', 'LITHUANIA', 'LATVIA', 'MOLDOVA', 'MONGOLIA', 'RUSSIA', 'TAJIKISTAN', 'TURKMENISTAN', 'UKRAINE', 'UZBEKISTAN'
    ],
    value='CIS extended')
df23_GRP['Area'] = df23_GRP['Area'].replace(
    to_replace=[
        'ANDORRA', 'ALBANIA', 'AUSTRIA', 'ALAND ISLANDS', 'BOSNIA AND HERZEGOVINA', 'BELGIUM', 'BULGARIA', 'SWITZERLAND', 'CYPRUS', 'CZECH REPUBLIC', 'GERMANY', 'DENMARK', 'SPAIN', 'FINLAND', 'FAROE ISLANDS', 'FRANCE', 'UNITED KINGDOM', 'GUERNSEY', 'GIBRALTAR', 'GREECE', 'CROATIA', 'HUNGARY', 'IRELAND', 'ISLE OF MAN', 'ICELAND', 'ITALY', 'JERSEY', 'LIECHTENSTEIN', 'LUXEMBOURG', 'MONACO', 'MONTENEGRO', 'MACEDONIA', 'MALTA', 'NETHERLANDS', 'NORWAY', 'POLAND', 'PORTUGAL', 'ROMANIA', 'SERBIA', 'SWEDEN', 'SLOVENIA', 'SVALBARD AND JAN MAYEN', 'SLOVAKIA', 'SIERRA LEONE', 'SAN MARINO', 'VATICAN CITY STATE', 'KOSOVO'
    ],
    value='Europe')
df23_GRP['Area'] = df23_GRP['Area'].replace(
    to_replace=[
        'GREENLAND'
    ],
    value='Greenland')
df23_GRP['Area'] = df23_GRP['Area'].replace(
    to_replace=[
        'UNITED ARAB EMIRATES', 'AFGHANISTAN', 'BAHRAIN', 'ISRAEL', 'IRAQ', 'IRAN', 'JORDAN', 'KUWAIT', 'LEBANON',
        'OMAN', 'PAKISTAN', 'PALESTINIAN TERRITORY', 'QATAR', 'SAUDI ARABIA', 'SYRIA', 'TURKEY', 'YEMEN'
    ],
    value='Middle-East')
df23_GRP['Area'] = df23_GRP['Area'].replace(
    to_replace=[
        'BERMUDA', 'CANADA', 'SAINT PIERRE AND MIQUELON', 'UNITED STATES MINOR OUTLYING ISLANDS', 'UNITED STATES'
    ],
    value='North America')
df23_GRP['Area'] = df23_GRP['Area'].replace(
    to_replace=[
        'AMERICAN SAMOA', 'AUSTRALIA', 'COCOS (KEELING) ISLANDS', 'COOK ISLANDS', 'FIJI', 'MICRONESIA', 'GUAM',
        'KIRIBATI', 'MARSHALL ISLANDS', 'NORTHERN MARIANA ISLANDS', 'NEW CALEDONIA', 'NORFOLK ISLAND', 'NAURU', 'NIUE',
        'NEW ZEALAND', 'FRENCH POLYNESIA', 'PAPUA NEW GUINEA', 'PITCAIRN', 'PALAU', 'SOLOMON ISLANDS', 'TOKELAU',
        'TUVALU', 'VANUATU', 'WALLIS AND FUTUNA', 'SAMOA'
    ],
    value='Oceania')
df23_GRP['Area'] = df23_GRP['Area'].replace(
    to_replace=[
        'NETHERLANDS ANTILLES', 'ARGENTINA', 'ARUBA', 'BOLIVIA', 'BONAIRE, SINT EUSTATIUS AND SABA', 'BRAZIL', 'CHILE', 'COLOMBIA', 'CURACAO', 'ECUADOR', 'FALKLAND ISLANDS', 'FRENCH GUIANA', 'GUYANA', 'PERU', 'PARAGUAY', 'SURINAME', 'TURKS AND CAICOS ISLANDS', 'TONGA', 'TRINIDAD AND TOBAGO', 'URUGUAY', 'VENEZUELA'
    ],
    value='South America')


df17_GRP.insert(19, "Profile", "Group")
df18_GRP.insert(19, "Profile", "Group")
df19_GRP.insert(19, "Profile", "Group")
df21_GRP.insert(19, "Profile", "Group")
df22_GRP.insert(19, "Profile", "Group")
df23_GRP.insert(19, "Profile", "Group")

df17_GRP['Date'] = pd.to_datetime(df17_GRP['Date'], format='%Y/%m/%d', errors = 'coerce')
df17_GRP['Date'] = df17_GRP['Date'].dt.strftime("%d/%m/%Y")
df17_GRP['Date'] = pd.to_datetime(df17_GRP['Date'], format='%d/%m/%Y', errors = 'raise')
#print(tab(df17_GRP.head(300), headers='keys', tablefmt='psql', showindex=False))
#df17_GRP.info()

df18_GRP['Date'] = pd.to_datetime(df18_GRP['Date'], format='%Y/%m/%d', errors = 'raise')
df18_GRP['Date'] = df18_GRP['Date'].dt.strftime("%d/%m/%Y")
df18_GRP['Date'] = pd.to_datetime(df18_GRP['Date'], format='%d/%m/%Y', errors = 'raise')
#df18_GRP.info()

df19_GRP['Date'] = pd.to_datetime(df19_GRP['Date'], format='%Y/%m/%d', errors = 'raise')
df19_GRP['Date'] = df19_GRP['Date'].dt.strftime("%d/%m/%Y")
df19_GRP['Date'] = pd.to_datetime(df19_GRP['Date'], format='%d/%m/%Y', errors = 'raise')
#df19_GRP.info()

df21_GRP['Date'] = pd.to_datetime(df21_GRP['Date'], format='%Y/%m/%d', errors = 'raise')
df21_GRP['Date'] = df21_GRP['Date'].dt.strftime("%d/%m/%Y")
df21_GRP['Date'] = pd.to_datetime(df21_GRP['Date'], format='%d/%m/%Y', errors = 'raise')
#df21_GRP.info()

df22_GRP['Date'] = pd.to_datetime(df22_GRP['Date'], format='%Y/%m/%d', errors = 'raise')
df22_GRP['Date'] = df22_GRP['Date'].dt.strftime("%d/%m/%Y")
df22_GRP['Date'] = pd.to_datetime(df22_GRP['Date'], format='%d/%m/%Y', errors = 'raise')
#df22_GRP.info()

df23_GRP['Date'] = pd.to_datetime(df23_GRP['Date'], format='%Y/%m/%d', errors = 'raise')
df23_GRP['Date'] = df23_GRP['Date'].dt.strftime("%d/%m/%Y")
df23_GRP['Date'] = pd.to_datetime(df23_GRP['Date'], format='%d/%m/%Y', errors = 'raise')
#df23_GRP.info()

frames17 = [df17, df17_GRP]
frames18 = [df18, df18_GRP]
frames19 = [df19, df19_GRP]
frames21 = [df21, df21_GRP]
frames22 = [df22, df22_GRP]
frames23 = [df23, df23_GRP]

concatdf17 = pd.concat(frames17)
concatdf18 = pd.concat(frames18)
concatdf19 = pd.concat(frames19)
concatdf21 = pd.concat(frames21)
concatdf22 = pd.concat(frames22)
concatdf23 = pd.concat(frames23)

#concatdf17.info()
#concatdf18.info()
#concatdf19.info()
#concatdf21.info()
#concatdf22.info()
#concatdf23.info()

#unit 1
df17.insert(1, "TotalRegistrations", "f1")
df18.insert(1, "TotalRegistrations", "f1")
df19.insert(1, "TotalRegistrations", "f1")
df21.insert(1, "TotalRegistrations", "f1")
df22.insert(1, "TotalRegistrations", "f1")
df23.insert(1, "TotalRegistrations", "f1")

#acquisition, retention
#df18.info()
#df19.info()
#df21.info()
#df22.info()
#df23.info()

df18.insert(32, "New customer", 1)
df19.insert(32, "New customer", 1)
df21.insert(32, "New customer", 1)
df22.insert(32, "New customer", 1)

#df18.info()
#df19.info()
#df21.info()

df18['New customer'] = df18['New customer'].astype(int)
df19['New customer'] = df19['New customer'].astype(int)
df21['New customer'] = df21['New customer'].astype(int)
df22['New customer'] = df22['New customer'].astype(int)
df23['New customer'] = df23['New customer'].astype(int)

#Retention Emails 2018
df18.loc[df18['Email'] == '', 'New customer'] = 0

#Retention First Names 2019
df19.loc[df19['Email'] == '', 'New customer'] = 0

#Retention Emails 2022
df22.loc[df22['Email'] == '', 'New customer'] = 0

#acquisition, retention
#df18_GRP.info()
#df19_GRP.info()
#df21_GRP.info()
#df22_GRP.info()
#df23_GRP.info()

df18_GRP.insert(19, "New customer", 1)
df19_GRP.insert(19, "New customer", 1)
df22_GRP.insert(19, "New customer", 1)
df21_GRP.insert(19, "New customer", 1)
df23_GRP.insert(19, "New customer", 1)

#df18_GRP.info()
#df19_GRP.info()
#df21_GRP.info()

df18_GRP['New customer'] = df18_GRP['New customer'].astype(int)
df19_GRP['New customer'] = df19_GRP['New customer'].astype(int)
df22_GRP['New customer'] = df22_GRP['New customer'].astype(int)
df21_GRP['New customer'] = df21_GRP['New customer'].astype(int)
df23_GRP['New customer'] = df23_GRP['New customer'].astype(int)

#Retention Emails

#Retention Emails
df18_GRP.loc[df18_GRP['Email'] == '', 'New customer'] = 0

#Retention Emails
df19_GRP.loc[df19_GRP['Email'] == '', 'New customer'] = 0

df22_GRP.loc[df22_GRP['Email'] == '', 'New customer'] = 0

df17_Registrations_count=pd.DataFrame(df17.groupby(['TotalRegistrations'],dropna=False).size(),columns=['Total-2017'])\
.sort_values(['Total-2017'],ascending=False).reset_index()
df18_Registrations_count=pd.DataFrame(df18.groupby(['TotalRegistrations'],dropna=False).size(),columns=['Total-2018'])\
.sort_values(['Total-2018'],ascending=False).reset_index()
df19_Registrations_count=pd.DataFrame(df19.groupby(['TotalRegistrations'],dropna=False).size(),columns=['Total-2019'])\
.sort_values(['Total-2019'],ascending=False).reset_index()
df21_Registrations_count=pd.DataFrame(df21.groupby(['TotalRegistrations'],dropna=False).size(),columns=['Total-2021'])\
.sort_values(['Total-2021'],ascending=False).reset_index()
df22_Registrations_count=pd.DataFrame(df22.groupby(['TotalRegistrations'],dropna=False).size(),columns=['Total-2022'])\
.sort_values(['Total-2022'],ascending=False).reset_index()
df23_Registrations_count=pd.DataFrame(df23.groupby(['TotalRegistrations'],dropna=False).size(),columns=['Total-2023'])\
.sort_values(['Total-2023'],ascending=False).reset_index()

#Revenue calculation
df17['Amount'] = df17['Amount'].fillna(0)
df18['Amount'] = df18['Amount'].fillna(0)
df19['Amount'] = df19['Amount'].fillna(0)
df21['Amount'] = df21['Amount'].fillna(0)
df22['Amount'] = df22['Amount'].fillna(0)
df23['Amount'] = df23['Amount'].fillna(0)

df17['Amount'] = df17['Amount'].astype(int)
df18['Amount'] = df18['Amount'].astype(int)
df19['Amount'] = df19['Amount'].astype(int)
df21['Amount'] = df21['Amount'].astype(int)
df22['Amount'] = df22['Amount'].astype(int)
df23['Amount'] = df23['Amount'].astype(int)

df17_Revenue_calc = pd.DataFrame(df17.groupby('TotalRegistrations')['Amount'].sum().reset_index(name ='Total-2017'))
#print(df17_Revenue_calc.head())
df18_Revenue_calc = pd.DataFrame(df18.groupby('TotalRegistrations')['Amount'].sum().reset_index(name ='Total-2018'))
#print(df18_Revenue_calc.head())
df19_Revenue_calc = pd.DataFrame(df19.groupby('TotalRegistrations')['Amount'].sum().reset_index(name ='Total-2019'))
#print(df19_Revenue_calc.head())
df21_Revenue_calc = pd.DataFrame(df21.groupby('TotalRegistrations')['Amount'].sum().reset_index(name ='Total-2021'))
#print(df21_Revenue_calc.head())
df22_Revenue_calc = pd.DataFrame(df22.groupby('TotalRegistrations')['Amount'].sum().reset_index(name ='Total-2022'))
#print(df22_Revenue_calc.head())
df23_Revenue_calc = pd.DataFrame(df23.groupby('TotalRegistrations')['Amount'].sum().reset_index(name ='Total-2023'))
#print(df22_Revenue_calc.head())

#unit 2
df17_GRP.insert(1, "TotalRegistrationsGroups", "g1")
df18_GRP.insert(1, "TotalRegistrationsGroups", "g1")
df19_GRP.insert(1, "TotalRegistrationsGroups", "g1")
df21_GRP.insert(1, "TotalRegistrationsGroups", "g1")
df22_GRP.insert(1, "TotalRegistrationsGroups", "g1")
df23_GRP.insert(1, "TotalRegistrationsGroups", "g1")

df17GRdel_Registrations_count_GRDel=pd.DataFrame(df17_GRP.groupby(['TotalRegistrationsGroups'],dropna=False).size(),columns=['Total-2017'])\
.sort_values(['Total-2017'],ascending=False).reset_index()
df18GRdel_Registrations_count_GRDel=pd.DataFrame(df18_GRP.groupby(['TotalRegistrationsGroups'],dropna=False).size(),columns=['Total-2018'])\
.sort_values(['Total-2018'],ascending=False).reset_index()
df19GRdel_Registrations_count_GRDel=pd.DataFrame(df19_GRP.groupby(['TotalRegistrationsGroups'],dropna=False).size(),columns=['Total-2019'])\
.sort_values(['Total-2019'],ascending=False).reset_index()
df21GRdel_Registrations_count_GRDel=pd.DataFrame(df21_GRP.groupby(['TotalRegistrationsGroups'],dropna=False).size(),columns=['Total-2021'])\
.sort_values(['Total-2021'],ascending=False).reset_index()
df22GRdel_Registrations_count_GRDel=pd.DataFrame(df22_GRP.groupby(['TotalRegistrationsGroups'],dropna=False).size(),columns=['Total-2022'])\
.sort_values(['Total-2022'],ascending=False).reset_index()
df23GRdel_Registrations_count_GRDel=pd.DataFrame(df23_GRP.groupby(['TotalRegistrationsGroups'],dropna=False).size(),columns=['Total-2023'])\
.sort_values(['Total-2023'],ascending=False).reset_index()

#Revenue calculation
df17_GRP['Amount'] = df17_GRP['Amount'].astype(int)
df18_GRP['Amount'] = df18_GRP['Amount'].astype(int)
df19_GRP['Amount'] = df19_GRP['Amount'].astype(int)
df21_GRP['Amount'] = df21_GRP['Amount'].astype(int)
df22_GRP['Amount'] = df22_GRP['Amount'].astype(int)
df23_GRP['Amount'] = df23_GRP['Amount'].astype(int)

df17GRdel_Revenue_calc = pd.DataFrame(df17_GRP.groupby('TotalRegistrationsGroups')['Amount'].sum().reset_index(name ='Total-2017'))
#print(df17GRdel_Revenue_calc.head())
df18GRdel_Revenue_calc = pd.DataFrame(df18_GRP.groupby('TotalRegistrationsGroups')['Amount'].sum().reset_index(name ='Total-2018'))
#print(df18GRdel_Revenue_calc.head())
df19GRdel_Revenue_calc = pd.DataFrame(df19_GRP.groupby('TotalRegistrationsGroups')['Amount'].sum().reset_index(name ='Total-2019'))
#print(df19GRdel_Revenue_calc.head())
df21GRdel_Revenue_calc = pd.DataFrame(df21_GRP.groupby('TotalRegistrationsGroups')['Amount'].sum().reset_index(name ='Total-2021'))
#print(df21GRdel_Revenue_calc.head())
df22GRdel_Revenue_calc = pd.DataFrame(df22_GRP.groupby('TotalRegistrationsGroups')['Amount'].sum().reset_index(name ='Total-2022'))
#print(df22GRdel_Revenue_calc.head())
df23GRdel_Revenue_calc = pd.DataFrame(df23_GRP.groupby('TotalRegistrationsGroups')['Amount'].sum().reset_index(name ='Total-2023'))
#print(df22GRdel_Revenue_calc.head())

#output files
workdirectory_output = r'C:/Users/prasa/xxxx/yyyy/Report/'

#extra unit
outputExcelFile_ef1 = workdirectory_output+'KPI-Dashboard-210D.xlsx'
outputExcelFile_ef2 = workdirectory_output+'KPI-Dashboard-203D.xlsx'
outputExcelFile_ef3 = workdirectory_output+'KPI-Dashboard-196D.xlsx'
#extra unit

outputExcelFile_f1 = workdirectory_output+'KPI-Dashboard-189D.xlsx'
outputExcelFile_f2 = workdirectory_output+'KPI-Dashboard-182D.xlsx'
outputExcelFile_f3 = workdirectory_output+'KPI-Dashboard-175D.xlsx'
outputExcelFile_f4 = workdirectory_output+'KPI-Dashboard-168D.xlsx'
outputExcelFile_f5 = workdirectory_output+'KPI-Dashboard-161D.xlsx'
outputExcelFile_f6= workdirectory_output+'KPI-Dashboard-154D.xlsx'
outputExcelFile_f7= workdirectory_output+'KPI-Dashboard-147D.xlsx'
outputExcelFile_f8= workdirectory_output+'KPI-Dashboard-140D.xlsx'
outputExcelFile_f9= workdirectory_output+'KPI-Dashboard-133D.xlsx'
outputExcelFile_f10= workdirectory_output+'KPI-Dashboard-126D.xlsx'
outputExcelFile_f11= workdirectory_output+'KPI-Dashboard-119D.xlsx'
outputExcelFile_f12= workdirectory_output+'KPI-Dashboard-112D.xlsx'
outputExcelFile_f13= workdirectory_output+'KPI-Dashboard-105D.xlsx'
outputExcelFile_f14= workdirectory_output+'KPI-Dashboard-98D.xlsx'
outputExcelFile_f15= workdirectory_output+'KPI-Dashboard-91D.xlsx'
outputExcelFile_f16= workdirectory_output+'KPI-Dashboard-84D.xlsx'
outputExcelFile_f17= workdirectory_output+'KPI-Dashboard-77D.xlsx'
outputExcelFile_f18= workdirectory_output+'KPI-Dashboard-70D.xlsx'
outputExcelFile_f19= workdirectory_output+'KPI-Dashboard-63D.xlsx'
outputExcelFile_f20= workdirectory_output+'KPI-Dashboard-56D.xlsx'
outputExcelFile_f21= workdirectory_output+'KPI-Dashboard-49D.xlsx'
outputExcelFile_f22= workdirectory_output+'KPI-Dashboard-42D.xlsx'
outputExcelFile_f23= workdirectory_output+'KPI-Dashboard-35D.xlsx'
outputExcelFile_f24= workdirectory_output+'KPI-Dashboard-28D.xlsx'
outputExcelFile_f25= workdirectory_output+'KPI-Dashboard-21D.xlsx'
outputExcelFile_f26= workdirectory_output+'KPI-Dashboard-14D.xlsx'
outputExcelFile_f27= workdirectory_output+'KPI-Dashboard-7D.xlsx'
outputExcelFile_f28= workdirectory_output+'KPI-Dashboard-0D.xlsx'

# date filter
# df 17
#extra unit
filter_e1_df17= pd.DataFrame(df17[(df17['Date'] <= "2016-11-18")])
filter_e2_df17= pd.DataFrame(df17[(df17['Date'] <= "2016-11-25")])
filter_e3_df17= pd.DataFrame(df17[(df17['Date'] <= "2016-12-02")])
#extra unit

filter_1_df17= pd.DataFrame(df17[(df17['Date'] <= "2016-12-09")])
filter_2_df17= pd.DataFrame(df17[(df17['Date'] <= "2016-12-16")])
filter_3_df17= pd.DataFrame(df17[(df17['Date'] <= "2016-12-23")])
filter_4_df17= pd.DataFrame(df17[(df17['Date'] <= "2016-12-30")])
filter_5_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-01-06")])
filter_6_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-01-13")])
filter_7_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-01-20")])
filter_8_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-01-27")])
filter_9_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-02-03")])
filter_10_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-02-10")])
filter_11_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-02-17")])
filter_12_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-02-24")])
filter_13_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-03-03")])
filter_14_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-03-10")])
filter_15_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-03-17")])
filter_16_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-03-24")])
filter_17_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-03-31")])
filter_18_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-04-07")])
filter_19_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-04-14")])
filter_20_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-04-21")])
filter_21_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-04-28")])
filter_22_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-05-05")])
filter_23_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-05-12")])
filter_24_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-05-19")])
filter_25_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-05-26")])
filter_26_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-06-02")])
filter_27_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-06-09")])
filter_28_df17= pd.DataFrame(df17[(df17['Date'] <= "2017-06-16")])


# df18
#extra unit
filter_e1_df18= pd.DataFrame(df18[(df18['Date'] <= "2017-11-16")])
filter_e2_df18= pd.DataFrame(df18[(df18['Date'] <= "2017-11-23")])
filter_e3_df18= pd.DataFrame(df18[(df18['Date'] <= "2017-11-30")])
#extra unit

filter_1_df18= pd.DataFrame(df18[(df18['Date'] <= "2017-12-07")])
filter_2_df18= pd.DataFrame(df18[(df18['Date'] <= "2017-12-14")])
filter_3_df18= pd.DataFrame(df18[(df18['Date'] <= "2017-12-21")])
filter_4_df18= pd.DataFrame(df18[(df18['Date'] <= "2017-12-28")])
filter_5_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-01-04")])
filter_6_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-01-11")])
filter_7_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-01-18")])
filter_8_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-01-25")])
filter_9_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-02-01")])
filter_10_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-02-08")])
filter_11_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-02-15")])
filter_12_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-02-22")])
filter_13_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-03-01")])
filter_14_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-03-08")])
filter_15_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-03-15")])
filter_16_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-03-22")])
filter_17_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-03-29")])
filter_18_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-04-05")])
filter_19_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-04-12")])
filter_20_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-04-19")])
filter_21_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-04-26")])
filter_22_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-05-03")])
filter_23_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-05-10")])
filter_24_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-05-17")])
filter_25_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-05-24")])
filter_26_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-05-31")])
filter_27_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-06-07")])
filter_28_df18= pd.DataFrame(df18[(df18['Date'] <= "2018-06-14")])

# df19
#extra unit
filter_e1_df19= pd.DataFrame(df19[(df19['Date'] <= "2018-11-09")])
filter_e2_df19= pd.DataFrame(df19[(df19['Date'] <= "2018-11-16")])
filter_e3_df19= pd.DataFrame(df19[(df19['Date'] <= "2018-11-23")])
#extra unit

filter_1_df19= pd.DataFrame(df19[(df19['Date'] <= "2018-11-30")])
filter_2_df19= pd.DataFrame(df19[(df19['Date'] <= "2018-12-07")])
filter_3_df19= pd.DataFrame(df19[(df19['Date'] <= "2018-12-14")])
filter_4_df19= pd.DataFrame(df19[(df19['Date'] <= "2018-12-21")])
filter_5_df19= pd.DataFrame(df19[(df19['Date'] <= "2018-12-28")])
filter_6_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-01-04")])
filter_7_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-01-11")])
filter_8_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-01-18")])
filter_9_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-01-25")])
filter_10_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-02-01")])
filter_11_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-02-08")])
filter_12_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-02-15")])
filter_13_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-02-22")])
filter_14_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-03-01")])
filter_15_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-03-08")])
filter_16_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-03-15")])
filter_17_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-03-22")])
filter_18_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-03-29")])
filter_19_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-04-05")])
filter_20_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-04-12")])
filter_21_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-04-19")])
filter_22_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-04-26")])
filter_23_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-05-03")])
filter_24_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-05-10")])
filter_25_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-05-17")])
filter_26_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-05-24")])
filter_27_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-05-31")])
filter_28_df19= pd.DataFrame(df19[(df19['Date'] <= "2019-06-07")])

#df21 - dummy frame
#extra unit
filter_e1_df21= pd.DataFrame(df21[(df21['Date'] <= "2018-11-09")])
filter_e2_df21= pd.DataFrame(df21[(df21['Date'] <= "2018-11-16")])
filter_e3_df21= pd.DataFrame(df21[(df21['Date'] <= "2018-11-23")])
#extra unit

filter_1_df21= pd.DataFrame(df21[(df21['Date'] <= "2018-11-30")])
filter_2_df21= pd.DataFrame(df21[(df21['Date'] <= "2018-12-07")])
filter_3_df21= pd.DataFrame(df21[(df21['Date'] <= "2018-12-14")])
filter_4_df21= pd.DataFrame(df21[(df21['Date'] <= "2018-12-21")])
filter_5_df21= pd.DataFrame(df21[(df21['Date'] <= "2018-12-28")])
filter_6_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-01-04")])
filter_7_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-01-11")])
filter_8_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-01-18")])
filter_9_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-01-25")])
filter_10_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-02-01")])
filter_11_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-02-08")])
filter_12_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-02-15")])
filter_13_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-02-22")])
filter_14_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-03-01")])
filter_15_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-03-08")])
filter_16_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-03-15")])
filter_17_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-03-22")])
filter_18_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-03-29")])
filter_19_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-04-05")])
filter_20_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-04-12")])
filter_21_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-04-19")])
filter_22_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-04-26")])
filter_23_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-05-03")])
filter_24_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-05-10")])
filter_25_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-05-17")])
filter_26_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-05-24")])
filter_27_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-05-31")])
filter_28_df21= pd.DataFrame(df21[(df21['Date'] <= "2019-06-07")])

# df22
#extra unit
filter_e1_df22= pd.DataFrame(df22[(df22['Date'] <= "2021-11-19")])
filter_e2_df22= pd.DataFrame(df22[(df22['Date'] <= "2021-11-26")])
filter_e3_df22= pd.DataFrame(df22[(df22['Date'] <= "2021-12-03")])
#extra unit

filter_1_df22= pd.DataFrame(df22[(df22['Date'] <= "2021-12-10")])
filter_2_df22= pd.DataFrame(df22[(df22['Date'] <= "2021-12-17")])
filter_3_df22= pd.DataFrame(df22[(df22['Date'] <= "2021-12-24")])
filter_4_df22= pd.DataFrame(df22[(df22['Date'] <= "2021-12-31")])
filter_5_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-01-07")])
filter_6_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-01-14")])
filter_7_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-01-21")])
filter_8_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-01-28")])
filter_9_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-02-04")])
filter_10_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-02-11")])
filter_11_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-02-18")])
filter_12_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-02-25")])
filter_13_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-03-04")])
filter_14_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-03-11")])
filter_15_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-03-18")])
filter_16_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-03-25")])
filter_17_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-04-01")])
filter_18_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-04-08")])
filter_19_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-04-15")])
filter_20_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-04-22")])
filter_21_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-04-29")])
filter_22_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-05-06")])
filter_23_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-05-13")])
filter_24_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-05-20")])
filter_25_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-05-27")])
filter_26_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-06-03")])
filter_27_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-06-10")])
filter_28_df22= pd.DataFrame(df22[(df22['Date'] <= "2022-06-17")])

#filter_28_df22.info()

# df23
#extra unit
filter_e1_df23= pd.DataFrame(df23[(df23['Date'] <= "2022-12-02")])
filter_e2_df23= pd.DataFrame(df23[(df23['Date'] <= "2022-12-09")])
filter_e3_df23= pd.DataFrame(df23[(df23['Date'] <= "2022-12-16")])
#extra unit

filter_1_df23= pd.DataFrame(df23[(df23['Date'] <= "2022-12-23")])
filter_2_df23= pd.DataFrame(df23[(df23['Date'] <= "2022-12-30")])
filter_3_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-01-06")])
filter_4_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-01-13")])
filter_5_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-01-20")])
filter_6_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-01-27")])
filter_7_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-02-03")])
filter_8_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-02-10")])
filter_9_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-02-17")])
filter_10_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-02-24")])
filter_11_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-03-03")])
filter_12_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-03-10")])
filter_13_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-03-17")])
filter_14_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-03-24")])
filter_15_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-03-31")])
filter_16_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-04-07")])
filter_17_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-04-14")])
filter_18_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-04-21")])
filter_19_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-04-28")])
filter_20_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-05-05")])
filter_21_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-05-12")])
filter_22_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-05-19")])
filter_23_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-05-26")])
filter_24_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-06-02")])
filter_25_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-06-09")])
filter_26_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-06-16")])
filter_27_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-06-23")])
filter_28_df23= pd.DataFrame(df23[(df23['Date'] <= "2023-06-30")])

print(tab(df17_GRP.head(10), headers='keys', tablefmt='psql', showindex=False))

# date filter GROUPS
#extra unit
filtr_e1_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2016-11-18")])
filtr_e2_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2016-11-25")])
filtr_e3_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2016-12-02")])
#extra unit

filtr_1_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2016-12-09")])
filtr_2_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2016-12-16")])
filtr_3_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2016-12-23")])
filtr_4_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2016-12-30")])
filtr_5_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-01-06")])
filtr_6_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-01-13")])
filtr_7_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-01-20")])
filtr_8_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-01-27")])
filtr_9_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-02-03")])
filtr_10_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-02-10")])
filtr_11_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-02-17")])
filtr_12_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-02-24")])
filtr_13_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-03-03")])
filtr_14_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-03-10")])
filtr_15_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-03-17")])
filtr_16_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-03-24")])
filtr_17_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-03-31")])
filtr_18_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-04-07")])
filtr_19_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-04-14")])
filtr_20_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-04-21")])
filtr_21_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-04-28")])
filtr_22_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-05-05")])
filtr_23_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-05-12")])
filtr_24_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-05-19")])
filtr_25_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-05-26")])
filtr_26_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-06-02")])
filtr_27_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-06-09")])
filtr_28_df17_GRdel= pd.DataFrame(df17_GRP[(df17_GRP['Date'] <= "2017-06-16")])

#print(tab(filtr_28_df17_GRdel.head(10), headers='keys', tablefmt='psql', showindex=False))

#extra unit
filtr_e1_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2017-11-16")])
filtr_e2_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2017-11-23")])
filtr_e3_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2017-11-30")])
#extra unit

filtr_1_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2017-12-07")])
filtr_2_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2017-12-14")])
filtr_3_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2017-12-21")])
filtr_4_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2017-12-28")])
filtr_5_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-01-04")])
filtr_6_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-01-11")])
filtr_7_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-01-18")])
filtr_8_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-01-25")])
filtr_9_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-02-01")])
filtr_10_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-02-08")])
filtr_11_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-02-15")])
filtr_12_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-02-22")])
filtr_13_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-03-01")])
filtr_14_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-03-08")])
filtr_15_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-03-15")])
filtr_16_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-03-22")])
filtr_17_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-03-29")])
filtr_18_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-04-05")])
filtr_19_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-04-12")])
filtr_20_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-04-19")])
filtr_21_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-04-26")])
filtr_22_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-05-03")])
filtr_23_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-05-10")])
filtr_24_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-05-17")])
filtr_25_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-05-24")])
filtr_26_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-05-31")])
filtr_27_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-06-07")])
filtr_28_df18_GRdel= pd.DataFrame(df18_GRP[(df18_GRP['Date'] <= "2018-06-14")])

#extra unit
filtr_e1_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2018-11-09")])
filtr_e2_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2018-11-16")])
filtr_e3_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2018-11-23")])
#extra unit

filtr_1_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2018-11-30")])
filtr_2_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2018-12-07")])
filtr_3_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2018-12-14")])
filtr_4_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2018-12-21")])
filtr_5_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2018-12-28")])
filtr_6_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-01-04")])
filtr_7_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-01-11")])
filtr_8_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-01-18")])
filtr_9_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-01-25")])
filtr_10_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-02-01")])
filtr_11_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-02-08")])
filtr_12_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-02-15")])
filtr_13_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-02-22")])
filtr_14_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-03-01")])
filtr_15_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-03-08")])
filtr_16_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-03-15")])
filtr_17_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-03-22")])
filtr_18_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-03-29")])
filtr_19_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-04-05")])
filtr_20_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-04-12")])
filtr_21_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-04-19")])
filtr_22_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-04-26")])
filtr_23_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-05-03")])
filtr_24_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-05-10")])
filtr_25_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-05-17")])
filtr_26_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-05-24")])
filtr_27_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-05-31")])
filtr_28_df19_GRdel= pd.DataFrame(df19_GRP[(df19_GRP['Date'] <= "2019-06-07")])

#extra unit
filtr_e1_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2018-11-09")])
filtr_e2_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2018-11-16")])
filtr_e3_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2018-11-23")])
#extra unit

# df21 - - dummy frame
filtr_1_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2018-11-30")])
filtr_2_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2018-12-07")])
filtr_3_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2018-12-14")])
filtr_4_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2018-12-21")])
filtr_5_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2018-12-28")])
filtr_6_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-01-04")])
filtr_7_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-01-11")])
filtr_8_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-01-18")])
filtr_9_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-01-25")])
filtr_10_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-02-01")])
filtr_11_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-02-08")])
filtr_12_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-02-15")])
filtr_13_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-02-22")])
filtr_14_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-03-01")])
filtr_15_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-03-08")])
filtr_16_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-03-15")])
filtr_17_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-03-22")])
filtr_18_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-03-29")])
filtr_19_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-04-05")])
filtr_20_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-04-12")])
filtr_21_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-04-19")])
filtr_22_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-04-26")])
filtr_23_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-05-03")])
filtr_24_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-05-10")])
filtr_25_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-05-17")])
filtr_26_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-05-24")])
filtr_27_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-05-31")])
filtr_28_df21_GRdel= pd.DataFrame(df21_GRP[(df21_GRP['Date'] <= "2019-06-07")])

# df22 - 
#extra unit
filtr_e1_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2021-11-19")])
filtr_e2_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2021-11-26")])
filtr_e3_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2021-12-03")])
#extra unit

filtr_1_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2021-12-10")])
filtr_2_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2021-12-17")])
filtr_3_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2021-12-24")])
filtr_4_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2021-12-31")])
filtr_5_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-01-07")])
filtr_6_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-01-14")])
filtr_7_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-01-21")])
filtr_8_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-01-28")])
filtr_9_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-02-04")])
filtr_10_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-02-11")])
filtr_11_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-02-18")])
filtr_12_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-02-25")])
filtr_13_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-03-04")])
filtr_14_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-03-11")])
filtr_15_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-03-18")])
filtr_16_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-03-25")])
filtr_17_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-04-01")])
filtr_18_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-04-08")])
filtr_19_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-04-15")])
filtr_20_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-04-22")])
filtr_21_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-04-29")])
filtr_22_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-05-06")])
filtr_23_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-05-13")])
filtr_24_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-05-20")])
filtr_25_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-05-27")])
filtr_26_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-06-03")])
filtr_27_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-06-10")])
filtr_28_df22_GRdel= pd.DataFrame(df22_GRP[(df22_GRP['Date'] <= "2022-06-17")])

#filtr_28_df22_GRdel.info()

# df23 - 
#extra unit
filtr_e1_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2022-12-02")])
filtr_e2_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2022-12-09")])
filtr_e3_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2022-12-16")])
#extra unit

filtr_1_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2022-12-23")])
filtr_2_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2022-12-30")])
filtr_3_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-01-06")])
filtr_4_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-01-13")])
filtr_5_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-01-20")])
filtr_6_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-01-27")])
filtr_7_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-02-03")])
filtr_8_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-02-10")])
filtr_9_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-02-17")])
filtr_10_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-02-24")])
filtr_11_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-03-03")])
filtr_12_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-03-10")])
filtr_13_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-03-17")])
filtr_14_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-03-24")])
filtr_15_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-03-31")])
filtr_16_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-04-07")])
filtr_17_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-04-14")])
filtr_18_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-04-21")])
filtr_19_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-04-28")])
filtr_20_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-05-05")])
filtr_21_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-05-12")])
filtr_22_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-05-19")])
filtr_23_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-05-26")])
filtr_24_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-06-02")])
filtr_25_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-06-09")])
filtr_26_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-06-16")])
filtr_27_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-06-23")])
filtr_28_df23_GRdel= pd.DataFrame(df23_GRP[(df23_GRP['Date'] <= "2023-06-30")])

# df17 - concat
#extra unit
filtr_e1_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2016-11-18")])
filtr_e2_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2016-11-25")])
filtr_e3_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2016-12-02")])
#extra unit

# df 17
filtr_1_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2016-12-09")])
filtr_2_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2016-12-16")])
filtr_3_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2016-12-23")])
filtr_4_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2016-12-30")])
filtr_5_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-01-06")])
filtr_6_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-01-13")])
filtr_7_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-01-20")])
filtr_8_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-01-27")])
filtr_9_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-02-03")])
filtr_10_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-02-10")])
filtr_11_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-02-17")])
filtr_12_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-02-24")])
filtr_13_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-03-03")])
filtr_14_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-03-10")])
filtr_15_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-03-17")])
filtr_16_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-03-24")])
filtr_17_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-03-31")])
filtr_18_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-04-07")])
filtr_19_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-04-14")])
filtr_20_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-04-21")])
filtr_21_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-04-28")])
filtr_22_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-05-05")])
filtr_23_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-05-12")])
filtr_24_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-05-19")])
filtr_25_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-05-26")])
filtr_26_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-06-02")])
filtr_27_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-06-09")])
filtr_28_concatdf_17= pd.DataFrame(concatdf17[(concatdf17['Date'] <= "2017-06-16")])

# concatdf18
#extra unit
filtr_e1_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2017-11-16")])
filtr_e2_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2017-11-23")])
filtr_e3_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2017-11-30")])
#extra unit

filtr_1_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2017-12-07")])
filtr_2_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2017-12-14")])
filtr_3_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2017-12-21")])
filtr_4_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2017-12-28")])
filtr_5_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-01-04")])
filtr_6_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-01-11")])
filtr_7_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-01-18")])
filtr_8_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-01-25")])
filtr_9_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-02-01")])
filtr_10_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-02-08")])
filtr_11_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-02-15")])
filtr_12_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-02-22")])
filtr_13_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-03-01")])
filtr_14_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-03-08")])
filtr_15_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-03-15")])
filtr_16_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-03-22")])
filtr_17_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-03-29")])
filtr_18_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-04-05")])
filtr_19_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-04-12")])
filtr_20_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-04-19")])
filtr_21_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-04-26")])
filtr_22_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-05-03")])
filtr_23_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-05-10")])
filtr_24_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-05-17")])
filtr_25_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-05-24")])
filtr_26_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-05-31")])
filtr_27_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-06-07")])
filtr_28_concatdf_18= pd.DataFrame(concatdf18[(concatdf18['Date'] <= "2018-06-14")])

# concatdf19
#extra unit
filtr_e1_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-11-09")])
filtr_e2_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-11-16")])
filtr_e3_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-11-23")])
#extra unit

filtr_1_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-11-30")])
filtr_2_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-12-07")])
filtr_3_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-12-14")])
filtr_4_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-12-21")])
filtr_5_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-12-28")])
filtr_6_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-01-04")])
filtr_7_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-01-11")])
filtr_8_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-01-18")])
filtr_9_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-01-25")])
filtr_10_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-02-01")])
filtr_11_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-02-08")])
filtr_12_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-02-15")])
filtr_13_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-02-22")])
filtr_14_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-03-01")])
filtr_15_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-03-08")])
filtr_16_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-03-15")])
filtr_17_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-03-22")])
filtr_18_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-03-29")])
filtr_19_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-04-05")])
filtr_20_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-04-12")])
filtr_21_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-04-19")])
filtr_22_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-04-26")])
filtr_23_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-05-03")])
filtr_24_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-05-10")])
filtr_25_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-05-17")])
filtr_26_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-05-24")])
filtr_27_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-05-31")])
filtr_28_concatdf_19= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-06-07")])

#df21 - concat - dummy frame
#extra unit
filtr_e1_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-11-09")])
filtr_e2_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-11-16")])
filtr_e3_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-11-23")])
#extra unit

filtr_1_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-11-30")])
filtr_2_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-12-07")])
filtr_3_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-12-14")])
filtr_4_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-12-21")])
filtr_5_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2018-12-28")])
filtr_6_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-01-04")])
filtr_7_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-01-11")])
filtr_8_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-01-18")])
filtr_9_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-01-25")])
filtr_10_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-02-01")])
filtr_11_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-02-08")])
filtr_12_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-02-15")])
filtr_13_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-02-22")])
filtr_14_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-03-01")])
filtr_15_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-03-08")])
filtr_16_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-03-15")])
filtr_17_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-03-22")])
filtr_18_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-03-29")])
filtr_19_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-04-05")])
filtr_20_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-04-12")])
filtr_21_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-04-19")])
filtr_22_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-04-26")])
filtr_23_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-05-03")])
filtr_24_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-05-10")])
filtr_25_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-05-17")])
filtr_26_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-05-24")])
filtr_27_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-05-31")])
filtr_28_concatdf_21= pd.DataFrame(concatdf19[(concatdf19['Date'] <= "2019-06-07")])

# concatdf22
#extra unit
filtr_e1_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2021-11-19")])
filtr_e2_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2021-11-26")])
filtr_e3_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2021-12-03")])
#extra unit

filtr_1_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2021-12-10")])
filtr_2_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2021-12-17")])
filtr_3_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2021-12-24")])
filtr_4_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2021-12-31")])
filtr_5_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-01-07")])
filtr_6_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-01-14")])
filtr_7_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-01-21")])
filtr_8_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-01-28")])
filtr_9_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-02-04")])
filtr_10_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-02-11")])
filtr_11_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-02-18")])
filtr_12_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-02-25")])
filtr_13_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-03-04")])
filtr_14_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-03-11")])
filtr_15_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-03-18")])
filtr_16_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-03-25")])
filtr_17_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-04-01")])
filtr_18_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-04-08")])
filtr_19_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-04-15")])
filtr_20_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-04-22")])
filtr_21_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-04-29")])
filtr_22_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-05-06")])
filtr_23_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-05-13")])
filtr_24_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-05-20")])
filtr_25_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-05-27")])
filtr_26_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-06-03")])
filtr_27_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-06-10")])
filtr_28_concatdf_22= pd.DataFrame(concatdf22[(concatdf22['Date'] <= "2022-06-17")])

# concatdf23
#extra unit
filtr_e1_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2022-12-02")])
filtr_e2_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2022-12-09")])
filtr_e3_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2022-12-16")])
#extra unit

filtr_1_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2022-12-23")])
filtr_2_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2022-12-30")])
filtr_3_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-01-06")])
filtr_4_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-01-13")])
filtr_5_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-01-20")])
filtr_6_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-01-27")])
filtr_7_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-02-03")])
filtr_8_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-02-10")])
filtr_9_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-02-17")])
filtr_10_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-02-24")])
filtr_11_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-03-03")])
filtr_12_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-03-10")])
filtr_13_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-03-17")])
filtr_14_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-03-24")])
filtr_15_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-03-31")])
filtr_16_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-04-07")])
filtr_17_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-04-14")])
filtr_18_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-04-21")])
filtr_19_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-04-28")])
filtr_20_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-05-05")])
filtr_21_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-05-12")])
filtr_22_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-05-19")])
filtr_23_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-05-26")])
filtr_24_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-06-02")])
filtr_25_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-06-09")])
filtr_26_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-06-16")])
filtr_27_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-06-23")])
filtr_28_concatdf_23= pd.DataFrame(concatdf23[(concatdf23['Date'] <= "2023-06-30")])

#df17 - f1
#extra unit
filter_e1_df17.insert(1, "TotalRegistrationsf1", "210Days<")
filter_e2_df17.insert(1, "TotalRegistrationsf1", "203Days<")
filter_e3_df17.insert(1, "TotalRegistrationsf1", "196Days<")
#extra unit

filter_1_df17.insert(1, "TotalRegistrationsf1", "189Days<")
filter_2_df17.insert(1, "TotalRegistrationsf1", "182Days<")
filter_3_df17.insert(1, "TotalRegistrationsf1", "175Days<")
filter_4_df17.insert(1, "TotalRegistrationsf1", "168Days<")
filter_5_df17.insert(1, "TotalRegistrationsf1", "161Days<")
filter_6_df17.insert(1, "TotalRegistrationsf1", "154Days<")
filter_7_df17.insert(1, "TotalRegistrationsf1", "147Days<")
filter_8_df17.insert(1, "TotalRegistrationsf1", "140Days<")
filter_9_df17.insert(1, "TotalRegistrationsf1", "133Days<")
filter_10_df17.insert(1, "TotalRegistrationsf1", "126Days<")
filter_11_df17.insert(1, "TotalRegistrationsf1", "119Days<")
filter_12_df17.insert(1, "TotalRegistrationsf1", "112Days<")
filter_13_df17.insert(1, "TotalRegistrationsf1", "105Days<")
filter_14_df17.insert(1, "TotalRegistrationsf1", "98Days<")
filter_15_df17.insert(1, "TotalRegistrationsf1", "91Days<")
filter_16_df17.insert(1, "TotalRegistrationsf1", "84Days<")
filter_17_df17.insert(1, "TotalRegistrationsf1", "77Days<")
filter_18_df17.insert(1, "TotalRegistrationsf1", "70Days<")
filter_19_df17.insert(1, "TotalRegistrationsf1", "63Days<")
filter_20_df17.insert(1, "TotalRegistrationsf1", "56Days<")
filter_21_df17.insert(1, "TotalRegistrationsf1", "49Days<")
filter_22_df17.insert(1, "TotalRegistrationsf1", "42Days<")
filter_23_df17.insert(1, "TotalRegistrationsf1", "35Days<")
filter_24_df17.insert(1, "TotalRegistrationsf1", "28Days<")
filter_25_df17.insert(1, "TotalRegistrationsf1", "21Days<")
filter_26_df17.insert(1, "TotalRegistrationsf1", "14Days<")
filter_27_df17.insert(1, "TotalRegistrationsf1", "7Days<")
filter_28_df17.insert(1, "TotalRegistrationsf1", "0Days<")

#df18 - f1
#extra unit
filter_e1_df18.insert(1, "TotalRegistrationsf1", "210Days<")
filter_e2_df18.insert(1, "TotalRegistrationsf1", "203Days<")
filter_e3_df18.insert(1, "TotalRegistrationsf1", "196Days<")
#extra unit

filter_1_df18.insert(1, "TotalRegistrationsf1", "189Days<")
filter_2_df18.insert(1, "TotalRegistrationsf1", "182Days<")
filter_3_df18.insert(1, "TotalRegistrationsf1", "175Days<")
filter_4_df18.insert(1, "TotalRegistrationsf1", "168Days<")
filter_5_df18.insert(1, "TotalRegistrationsf1", "161Days<")
filter_6_df18.insert(1, "TotalRegistrationsf1", "154Days<")
filter_7_df18.insert(1, "TotalRegistrationsf1", "147Days<")
filter_8_df18.insert(1, "TotalRegistrationsf1", "140Days<")
filter_9_df18.insert(1, "TotalRegistrationsf1", "133Days<")
filter_10_df18.insert(1, "TotalRegistrationsf1", "126Days<")
filter_11_df18.insert(1, "TotalRegistrationsf1", "119Days<")
filter_12_df18.insert(1, "TotalRegistrationsf1", "112Days<")
filter_13_df18.insert(1, "TotalRegistrationsf1", "105Days<")
filter_14_df18.insert(1, "TotalRegistrationsf1", "98Days<")
filter_15_df18.insert(1, "TotalRegistrationsf1", "91Days<")
filter_16_df18.insert(1, "TotalRegistrationsf1", "84Days<")
filter_17_df18.insert(1, "TotalRegistrationsf1", "77Days<")
filter_18_df18.insert(1, "TotalRegistrationsf1", "70Days<")
filter_19_df18.insert(1, "TotalRegistrationsf1", "63Days<")
filter_20_df18.insert(1, "TotalRegistrationsf1", "56Days<")
filter_21_df18.insert(1, "TotalRegistrationsf1", "49Days<")
filter_22_df18.insert(1, "TotalRegistrationsf1", "42Days<")
filter_23_df18.insert(1, "TotalRegistrationsf1", "35Days<")
filter_24_df18.insert(1, "TotalRegistrationsf1", "28Days<")
filter_25_df18.insert(1, "TotalRegistrationsf1", "21Days<")
filter_26_df18.insert(1, "TotalRegistrationsf1", "14Days<")
filter_27_df18.insert(1, "TotalRegistrationsf1", "7Days<")
filter_28_df18.insert(1, "TotalRegistrationsf1", "0Days<")

#df19 - f1
#extra unit
filter_e1_df19.insert(1, "TotalRegistrationsf1", "210Days<")
filter_e2_df19.insert(1, "TotalRegistrationsf1", "203Days<")
filter_e3_df19.insert(1, "TotalRegistrationsf1", "196Days<")
#extra unit

filter_1_df19.insert(1, "TotalRegistrationsf1", "189Days<")
filter_2_df19.insert(1, "TotalRegistrationsf1", "182Days<")
filter_3_df19.insert(1, "TotalRegistrationsf1", "175Days<")
filter_4_df19.insert(1, "TotalRegistrationsf1", "168Days<")
filter_5_df19.insert(1, "TotalRegistrationsf1", "161Days<")
filter_6_df19.insert(1, "TotalRegistrationsf1", "154Days<")
filter_7_df19.insert(1, "TotalRegistrationsf1", "147Days<")
filter_8_df19.insert(1, "TotalRegistrationsf1", "140Days<")
filter_9_df19.insert(1, "TotalRegistrationsf1", "133Days<")
filter_10_df19.insert(1, "TotalRegistrationsf1", "126Days<")
filter_11_df19.insert(1, "TotalRegistrationsf1", "119Days<")
filter_12_df19.insert(1, "TotalRegistrationsf1", "112Days<")
filter_13_df19.insert(1, "TotalRegistrationsf1", "105Days<")
filter_14_df19.insert(1, "TotalRegistrationsf1", "98Days<")
filter_15_df19.insert(1, "TotalRegistrationsf1", "91Days<")
filter_16_df19.insert(1, "TotalRegistrationsf1", "84Days<")
filter_17_df19.insert(1, "TotalRegistrationsf1", "77Days<")
filter_18_df19.insert(1, "TotalRegistrationsf1", "70Days<")
filter_19_df19.insert(1, "TotalRegistrationsf1", "63Days<")
filter_20_df19.insert(1, "TotalRegistrationsf1", "56Days<")
filter_21_df19.insert(1, "TotalRegistrationsf1", "49Days<")
filter_22_df19.insert(1, "TotalRegistrationsf1", "42Days<")
filter_23_df19.insert(1, "TotalRegistrationsf1", "35Days<")
filter_24_df19.insert(1, "TotalRegistrationsf1", "28Days<")
filter_25_df19.insert(1, "TotalRegistrationsf1", "21Days<")
filter_26_df19.insert(1, "TotalRegistrationsf1", "14Days<")
filter_27_df19.insert(1, "TotalRegistrationsf1", "7Days<")
filter_28_df19.insert(1, "TotalRegistrationsf1", "0Days<")

#df21
#extra unit
filter_e1_df21.insert(1, "TotalRegistrationsf1", "210Days<")
filter_e2_df21.insert(1, "TotalRegistrationsf1", "203Days<")
filter_e3_df21.insert(1, "TotalRegistrationsf1", "196Days<")
#extra unit

filter_1_df21.insert(1, "TotalRegistrationsf1", "189Days<")
filter_2_df21.insert(1, "TotalRegistrationsf1", "182Days<")
filter_3_df21.insert(1, "TotalRegistrationsf1", "175Days<")
filter_4_df21.insert(1, "TotalRegistrationsf1", "168Days<")
filter_5_df21.insert(1, "TotalRegistrationsf1", "161Days<")
filter_6_df21.insert(1, "TotalRegistrationsf1", "154Days<")
filter_7_df21.insert(1, "TotalRegistrationsf1", "147Days<")
filter_8_df21.insert(1, "TotalRegistrationsf1", "140Days<")
filter_9_df21.insert(1, "TotalRegistrationsf1", "133Days<")
filter_10_df21.insert(1, "TotalRegistrationsf1", "126Days<")
filter_11_df21.insert(1, "TotalRegistrationsf1", "119Days<")
filter_12_df21.insert(1, "TotalRegistrationsf1", "112Days<")
filter_13_df21.insert(1, "TotalRegistrationsf1", "105Days<")
filter_14_df21.insert(1, "TotalRegistrationsf1", "98Days<")
filter_15_df21.insert(1, "TotalRegistrationsf1", "91Days<")
filter_16_df21.insert(1, "TotalRegistrationsf1", "84Days<")
filter_17_df21.insert(1, "TotalRegistrationsf1", "77Days<")
filter_18_df21.insert(1, "TotalRegistrationsf1", "70Days<")
filter_19_df21.insert(1, "TotalRegistrationsf1", "63Days<")
filter_20_df21.insert(1, "TotalRegistrationsf1", "56Days<")
filter_21_df21.insert(1, "TotalRegistrationsf1", "49Days<")
filter_22_df21.insert(1, "TotalRegistrationsf1", "42Days<")
filter_23_df21.insert(1, "TotalRegistrationsf1", "35Days<")
filter_24_df21.insert(1, "TotalRegistrationsf1", "28Days<")
filter_25_df21.insert(1, "TotalRegistrationsf1", "21Days<")
filter_26_df21.insert(1, "TotalRegistrationsf1", "14Days<")
filter_27_df21.insert(1, "TotalRegistrationsf1", "7Days<")
filter_28_df21.insert(1, "TotalRegistrationsf1", "0Days<")

#df22 - f1
#extra unit
filter_e1_df22.insert(1, "TotalRegistrationsf1", "210Days<")
filter_e2_df22.insert(1, "TotalRegistrationsf1", "203Days<")
filter_e3_df22.insert(1, "TotalRegistrationsf1", "196Days<")
#extra unit

filter_1_df22.insert(1, "TotalRegistrationsf1", "189Days<")
filter_2_df22.insert(1, "TotalRegistrationsf1", "182Days<")
filter_3_df22.insert(1, "TotalRegistrationsf1", "175Days<")
filter_4_df22.insert(1, "TotalRegistrationsf1", "168Days<")
filter_5_df22.insert(1, "TotalRegistrationsf1", "161Days<")
filter_6_df22.insert(1, "TotalRegistrationsf1", "154Days<")
filter_7_df22.insert(1, "TotalRegistrationsf1", "147Days<")
filter_8_df22.insert(1, "TotalRegistrationsf1", "140Days<")
filter_9_df22.insert(1, "TotalRegistrationsf1", "133Days<")
filter_10_df22.insert(1, "TotalRegistrationsf1", "126Days<")
filter_11_df22.insert(1, "TotalRegistrationsf1", "119Days<")
filter_12_df22.insert(1, "TotalRegistrationsf1", "112Days<")
filter_13_df22.insert(1, "TotalRegistrationsf1", "105Days<")
filter_14_df22.insert(1, "TotalRegistrationsf1", "98Days<")
filter_15_df22.insert(1, "TotalRegistrationsf1", "91Days<")
filter_16_df22.insert(1, "TotalRegistrationsf1", "84Days<")
filter_17_df22.insert(1, "TotalRegistrationsf1", "77Days<")
filter_18_df22.insert(1, "TotalRegistrationsf1", "70Days<")
filter_19_df22.insert(1, "TotalRegistrationsf1", "63Days<")
filter_20_df22.insert(1, "TotalRegistrationsf1", "56Days<")
filter_21_df22.insert(1, "TotalRegistrationsf1", "49Days<")
filter_22_df22.insert(1, "TotalRegistrationsf1", "42Days<")
filter_23_df22.insert(1, "TotalRegistrationsf1", "35Days<")
filter_24_df22.insert(1, "TotalRegistrationsf1", "28Days<")
filter_25_df22.insert(1, "TotalRegistrationsf1", "21Days<")
filter_26_df22.insert(1, "TotalRegistrationsf1", "14Days<")
filter_27_df22.insert(1, "TotalRegistrationsf1", "7Days<")
filter_28_df22.insert(1, "TotalRegistrationsf1", "0Days<")

#print(tab(filter_28_df22.head(10), headers='keys', tablefmt='psql', showindex=False))
#filter_28_df22.info()

#df23 - f1
#extra unit
filter_e1_df23.insert(1, "TotalRegistrationsf1", "210Days<")
filter_e2_df23.insert(1, "TotalRegistrationsf1", "203Days<")
filter_e3_df23.insert(1, "TotalRegistrationsf1", "196Days<")
#extra unit

filter_1_df23.insert(1, "TotalRegistrationsf1", "189Days<")
filter_2_df23.insert(1, "TotalRegistrationsf1", "182Days<")
filter_3_df23.insert(1, "TotalRegistrationsf1", "175Days<")
filter_4_df23.insert(1, "TotalRegistrationsf1", "168Days<")
filter_5_df23.insert(1, "TotalRegistrationsf1", "161Days<")
filter_6_df23.insert(1, "TotalRegistrationsf1", "154Days<")
filter_7_df23.insert(1, "TotalRegistrationsf1", "147Days<")
filter_8_df23.insert(1, "TotalRegistrationsf1", "140Days<")
filter_9_df23.insert(1, "TotalRegistrationsf1", "133Days<")
filter_10_df23.insert(1, "TotalRegistrationsf1", "126Days<")
filter_11_df23.insert(1, "TotalRegistrationsf1", "119Days<")
filter_12_df23.insert(1, "TotalRegistrationsf1", "112Days<")
filter_13_df23.insert(1, "TotalRegistrationsf1", "105Days<")
filter_14_df23.insert(1, "TotalRegistrationsf1", "98Days<")
filter_15_df23.insert(1, "TotalRegistrationsf1", "91Days<")
filter_16_df23.insert(1, "TotalRegistrationsf1", "84Days<")
filter_17_df23.insert(1, "TotalRegistrationsf1", "77Days<")
filter_18_df23.insert(1, "TotalRegistrationsf1", "70Days<")
filter_19_df23.insert(1, "TotalRegistrationsf1", "63Days<")
filter_20_df23.insert(1, "TotalRegistrationsf1", "56Days<")
filter_21_df23.insert(1, "TotalRegistrationsf1", "49Days<")
filter_22_df23.insert(1, "TotalRegistrationsf1", "42Days<")
filter_23_df23.insert(1, "TotalRegistrationsf1", "35Days<")
filter_24_df23.insert(1, "TotalRegistrationsf1", "28Days<")
filter_25_df23.insert(1, "TotalRegistrationsf1", "21Days<")
filter_26_df23.insert(1, "TotalRegistrationsf1", "14Days<")
filter_27_df23.insert(1, "TotalRegistrationsf1", "7Days<")
filter_28_df23.insert(1, "TotalRegistrationsf1", "0Days<")

#df17 -  a1
#extra unit
filter_e1_df17.insert(1, "TotalRegistrationsa1", "210Days<")
filter_e2_df17.insert(1, "TotalRegistrationsa1", "203Days<")
filter_e3_df17.insert(1, "TotalRegistrationsa1", "196Days<")
#extra unit

filter_1_df17.insert(1, "TotalRegistrationsa1", "189Days<")
filter_2_df17.insert(1, "TotalRegistrationsa1", "182Days<")
filter_3_df17.insert(1, "TotalRegistrationsa1", "175Days<")
filter_4_df17.insert(1, "TotalRegistrationsa1", "168Days<")
filter_5_df17.insert(1, "TotalRegistrationsa1", "161Days<")
filter_6_df17.insert(1, "TotalRegistrationsa1", "154Days<")
filter_7_df17.insert(1, "TotalRegistrationsa1", "147Days<")
filter_8_df17.insert(1, "TotalRegistrationsa1", "140Days<")
filter_9_df17.insert(1, "TotalRegistrationsa1", "133Days<")
filter_10_df17.insert(1, "TotalRegistrationsa1", "126Days<")
filter_11_df17.insert(1, "TotalRegistrationsa1", "119Days<")
filter_12_df17.insert(1, "TotalRegistrationsa1", "112Days<")
filter_13_df17.insert(1, "TotalRegistrationsa1", "105Days<")
filter_14_df17.insert(1, "TotalRegistrationsa1", "98Days<")
filter_15_df17.insert(1, "TotalRegistrationsa1", "91Days<")
filter_16_df17.insert(1, "TotalRegistrationsa1", "84Days<")
filter_17_df17.insert(1, "TotalRegistrationsa1", "77Days<")
filter_18_df17.insert(1, "TotalRegistrationsa1", "70Days<")
filter_19_df17.insert(1, "TotalRegistrationsa1", "63Days<")
filter_20_df17.insert(1, "TotalRegistrationsa1", "56Days<")
filter_21_df17.insert(1, "TotalRegistrationsa1", "49Days<")
filter_22_df17.insert(1, "TotalRegistrationsa1", "42Days<")
filter_23_df17.insert(1, "TotalRegistrationsa1", "35Days<")
filter_24_df17.insert(1, "TotalRegistrationsa1", "28Days<")
filter_25_df17.insert(1, "TotalRegistrationsa1", "21Days<")
filter_26_df17.insert(1, "TotalRegistrationsa1", "14Days<")
filter_27_df17.insert(1, "TotalRegistrationsa1", "7Days<")
filter_28_df17.insert(1, "TotalRegistrationsa1", "0Days<")

#df18 - a1
#extra unit
filter_e1_df18.insert(1, "TotalRegistrationsa1", "210Days<")
filter_e2_df18.insert(1, "TotalRegistrationsa1", "203Days<")
filter_e3_df18.insert(1, "TotalRegistrationsa1", "196Days<")
#extra unit

filter_1_df18.insert(1, "TotalRegistrationsa1", "189Days<")
filter_2_df18.insert(1, "TotalRegistrationsa1", "182Days<")
filter_3_df18.insert(1, "TotalRegistrationsa1", "175Days<")
filter_4_df18.insert(1, "TotalRegistrationsa1", "168Days<")
filter_5_df18.insert(1, "TotalRegistrationsa1", "161Days<")
filter_6_df18.insert(1, "TotalRegistrationsa1", "154Days<")
filter_7_df18.insert(1, "TotalRegistrationsa1", "147Days<")
filter_8_df18.insert(1, "TotalRegistrationsa1", "140Days<")
filter_9_df18.insert(1, "TotalRegistrationsa1", "133Days<")
filter_10_df18.insert(1, "TotalRegistrationsa1", "126Days<")
filter_11_df18.insert(1, "TotalRegistrationsa1", "119Days<")
filter_12_df18.insert(1, "TotalRegistrationsa1", "112Days<")
filter_13_df18.insert(1, "TotalRegistrationsa1", "105Days<")
filter_14_df18.insert(1, "TotalRegistrationsa1", "98Days<")
filter_15_df18.insert(1, "TotalRegistrationsa1", "91Days<")
filter_16_df18.insert(1, "TotalRegistrationsa1", "84Days<")
filter_17_df18.insert(1, "TotalRegistrationsa1", "77Days<")
filter_18_df18.insert(1, "TotalRegistrationsa1", "70Days<")
filter_19_df18.insert(1, "TotalRegistrationsa1", "63Days<")
filter_20_df18.insert(1, "TotalRegistrationsa1", "56Days<")
filter_21_df18.insert(1, "TotalRegistrationsa1", "49Days<")
filter_22_df18.insert(1, "TotalRegistrationsa1", "42Days<")
filter_23_df18.insert(1, "TotalRegistrationsa1", "35Days<")
filter_24_df18.insert(1, "TotalRegistrationsa1", "28Days<")
filter_25_df18.insert(1, "TotalRegistrationsa1", "21Days<")
filter_26_df18.insert(1, "TotalRegistrationsa1", "14Days<")
filter_27_df18.insert(1, "TotalRegistrationsa1", "7Days<")
filter_28_df18.insert(1, "TotalRegistrationsa1", "0Days<")

#df19 - a1
#extra unit
filter_e1_df19.insert(1, "TotalRegistrationsa1", "210Days<")
filter_e2_df19.insert(1, "TotalRegistrationsa1", "203Days<")
filter_e3_df19.insert(1, "TotalRegistrationsa1", "196Days<")
#extra unit

filter_1_df19.insert(1, "TotalRegistrationsa1", "189Days<")
filter_2_df19.insert(1, "TotalRegistrationsa1", "182Days<")
filter_3_df19.insert(1, "TotalRegistrationsa1", "175Days<")
filter_4_df19.insert(1, "TotalRegistrationsa1", "168Days<")
filter_5_df19.insert(1, "TotalRegistrationsa1", "161Days<")
filter_6_df19.insert(1, "TotalRegistrationsa1", "154Days<")
filter_7_df19.insert(1, "TotalRegistrationsa1", "147Days<")
filter_8_df19.insert(1, "TotalRegistrationsa1", "140Days<")
filter_9_df19.insert(1, "TotalRegistrationsa1", "133Days<")
filter_10_df19.insert(1, "TotalRegistrationsa1", "126Days<")
filter_11_df19.insert(1, "TotalRegistrationsa1", "119Days<")
filter_12_df19.insert(1, "TotalRegistrationsa1", "112Days<")
filter_13_df19.insert(1, "TotalRegistrationsa1", "105Days<")
filter_14_df19.insert(1, "TotalRegistrationsa1", "98Days<")
filter_15_df19.insert(1, "TotalRegistrationsa1", "91Days<")
filter_16_df19.insert(1, "TotalRegistrationsa1", "84Days<")
filter_17_df19.insert(1, "TotalRegistrationsa1", "77Days<")
filter_18_df19.insert(1, "TotalRegistrationsa1", "70Days<")
filter_19_df19.insert(1, "TotalRegistrationsa1", "63Days<")
filter_20_df19.insert(1, "TotalRegistrationsa1", "56Days<")
filter_21_df19.insert(1, "TotalRegistrationsa1", "49Days<")
filter_22_df19.insert(1, "TotalRegistrationsa1", "42Days<")
filter_23_df19.insert(1, "TotalRegistrationsa1", "35Days<")
filter_24_df19.insert(1, "TotalRegistrationsa1", "28Days<")
filter_25_df19.insert(1, "TotalRegistrationsa1", "21Days<")
filter_26_df19.insert(1, "TotalRegistrationsa1", "14Days<")
filter_27_df19.insert(1, "TotalRegistrationsa1", "7Days<")
filter_28_df19.insert(1, "TotalRegistrationsa1", "0Days<")

#df21
#extra unit
filter_e1_df21.insert(1, "TotalRegistrationsa1", "210Days<")
filter_e2_df21.insert(1, "TotalRegistrationsa1", "203Days<")
filter_e3_df21.insert(1, "TotalRegistrationsa1", "196Days<")
#extra unit

filter_1_df21.insert(1, "TotalRegistrationsa1", "189Days<")
filter_2_df21.insert(1, "TotalRegistrationsa1", "182Days<")
filter_3_df21.insert(1, "TotalRegistrationsa1", "175Days<")
filter_4_df21.insert(1, "TotalRegistrationsa1", "168Days<")
filter_5_df21.insert(1, "TotalRegistrationsa1", "161Days<")
filter_6_df21.insert(1, "TotalRegistrationsa1", "154Days<")
filter_7_df21.insert(1, "TotalRegistrationsa1", "147Days<")
filter_8_df21.insert(1, "TotalRegistrationsa1", "140Days<")
filter_9_df21.insert(1, "TotalRegistrationsa1", "133Days<")
filter_10_df21.insert(1, "TotalRegistrationsa1", "126Days<")
filter_11_df21.insert(1, "TotalRegistrationsa1", "119Days<")
filter_12_df21.insert(1, "TotalRegistrationsa1", "112Days<")
filter_13_df21.insert(1, "TotalRegistrationsa1", "105Days<")
filter_14_df21.insert(1, "TotalRegistrationsa1", "98Days<")
filter_15_df21.insert(1, "TotalRegistrationsa1", "91Days<")
filter_16_df21.insert(1, "TotalRegistrationsa1", "84Days<")
filter_17_df21.insert(1, "TotalRegistrationsa1", "77Days<")
filter_18_df21.insert(1, "TotalRegistrationsa1", "70Days<")
filter_19_df21.insert(1, "TotalRegistrationsa1", "63Days<")
filter_20_df21.insert(1, "TotalRegistrationsa1", "56Days<")
filter_21_df21.insert(1, "TotalRegistrationsa1", "49Days<")
filter_22_df21.insert(1, "TotalRegistrationsa1", "42Days<")
filter_23_df21.insert(1, "TotalRegistrationsa1", "35Days<")
filter_24_df21.insert(1, "TotalRegistrationsa1", "28Days<")
filter_25_df21.insert(1, "TotalRegistrationsa1", "21Days<")
filter_26_df21.insert(1, "TotalRegistrationsa1", "14Days<")
filter_27_df21.insert(1, "TotalRegistrationsa1", "7Days<")
filter_28_df21.insert(1, "TotalRegistrationsa1", "0Days<")

#df22 - a1
#extra unit
filter_e1_df22.insert(1, "TotalRegistrationsa1", "210Days<")
filter_e2_df22.insert(1, "TotalRegistrationsa1", "203Days<")
filter_e3_df22.insert(1, "TotalRegistrationsa1", "196Days<")
#extra unit

filter_1_df22.insert(1, "TotalRegistrationsa1", "189Days<")
filter_2_df22.insert(1, "TotalRegistrationsa1", "182Days<")
filter_3_df22.insert(1, "TotalRegistrationsa1", "175Days<")
filter_4_df22.insert(1, "TotalRegistrationsa1", "168Days<")
filter_5_df22.insert(1, "TotalRegistrationsa1", "161Days<")
filter_6_df22.insert(1, "TotalRegistrationsa1", "154Days<")
filter_7_df22.insert(1, "TotalRegistrationsa1", "147Days<")
filter_8_df22.insert(1, "TotalRegistrationsa1", "140Days<")
filter_9_df22.insert(1, "TotalRegistrationsa1", "133Days<")
filter_10_df22.insert(1, "TotalRegistrationsa1", "126Days<")
filter_11_df22.insert(1, "TotalRegistrationsa1", "119Days<")
filter_12_df22.insert(1, "TotalRegistrationsa1", "112Days<")
filter_13_df22.insert(1, "TotalRegistrationsa1", "105Days<")
filter_14_df22.insert(1, "TotalRegistrationsa1", "98Days<")
filter_15_df22.insert(1, "TotalRegistrationsa1", "91Days<")
filter_16_df22.insert(1, "TotalRegistrationsa1", "84Days<")
filter_17_df22.insert(1, "TotalRegistrationsa1", "77Days<")
filter_18_df22.insert(1, "TotalRegistrationsa1", "70Days<")
filter_19_df22.insert(1, "TotalRegistrationsa1", "63Days<")
filter_20_df22.insert(1, "TotalRegistrationsa1", "56Days<")
filter_21_df22.insert(1, "TotalRegistrationsa1", "49Days<")
filter_22_df22.insert(1, "TotalRegistrationsa1", "42Days<")
filter_23_df22.insert(1, "TotalRegistrationsa1", "35Days<")
filter_24_df22.insert(1, "TotalRegistrationsa1", "28Days<")
filter_25_df22.insert(1, "TotalRegistrationsa1", "21Days<")
filter_26_df22.insert(1, "TotalRegistrationsa1", "14Days<")
filter_27_df22.insert(1, "TotalRegistrationsa1", "7Days<")
filter_28_df22.insert(1, "TotalRegistrationsa1", "0Days<")

#df23 - a1
#extra unit
filter_e1_df23.insert(1, "TotalRegistrationsa1", "210Days<")
filter_e2_df23.insert(1, "TotalRegistrationsa1", "203Days<")
filter_e3_df23.insert(1, "TotalRegistrationsa1", "196Days<")
#extra unit

filter_1_df23.insert(1, "TotalRegistrationsa1", "189Days<")
filter_2_df23.insert(1, "TotalRegistrationsa1", "182Days<")
filter_3_df23.insert(1, "TotalRegistrationsa1", "175Days<")
filter_4_df23.insert(1, "TotalRegistrationsa1", "168Days<")
filter_5_df23.insert(1, "TotalRegistrationsa1", "161Days<")
filter_6_df23.insert(1, "TotalRegistrationsa1", "154Days<")
filter_7_df23.insert(1, "TotalRegistrationsa1", "147Days<")
filter_8_df23.insert(1, "TotalRegistrationsa1", "140Days<")
filter_9_df23.insert(1, "TotalRegistrationsa1", "133Days<")
filter_10_df23.insert(1, "TotalRegistrationsa1", "126Days<")
filter_11_df23.insert(1, "TotalRegistrationsa1", "119Days<")
filter_12_df23.insert(1, "TotalRegistrationsa1", "112Days<")
filter_13_df23.insert(1, "TotalRegistrationsa1", "105Days<")
filter_14_df23.insert(1, "TotalRegistrationsa1", "98Days<")
filter_15_df23.insert(1, "TotalRegistrationsa1", "91Days<")
filter_16_df23.insert(1, "TotalRegistrationsa1", "84Days<")
filter_17_df23.insert(1, "TotalRegistrationsa1", "77Days<")
filter_18_df23.insert(1, "TotalRegistrationsa1", "70Days<")
filter_19_df23.insert(1, "TotalRegistrationsa1", "63Days<")
filter_20_df23.insert(1, "TotalRegistrationsa1", "56Days<")
filter_21_df23.insert(1, "TotalRegistrationsa1", "49Days<")
filter_22_df23.insert(1, "TotalRegistrationsa1", "42Days<")
filter_23_df23.insert(1, "TotalRegistrationsa1", "35Days<")
filter_24_df23.insert(1, "TotalRegistrationsa1", "28Days<")
filter_25_df23.insert(1, "TotalRegistrationsa1", "21Days<")
filter_26_df23.insert(1, "TotalRegistrationsa1", "14Days<")
filter_27_df23.insert(1, "TotalRegistrationsa1", "7Days<")
filter_28_df23.insert(1, "TotalRegistrationsa1", "0Days<")

#DF17 - k1
#extra unit
filter_e1_df17.insert(1, "TotalRegistrationsk1", "210Days<")
filter_e2_df17.insert(1, "TotalRegistrationsk1", "203Days<")
filter_e3_df17.insert(1, "TotalRegistrationsk1", "196Days<")
#extra unit

filter_1_df17.insert(1, "TotalRegistrationsk1", "189Days<")
filter_2_df17.insert(1, "TotalRegistrationsk1", "182Days<")
filter_3_df17.insert(1, "TotalRegistrationsk1", "175Days<")
filter_4_df17.insert(1, "TotalRegistrationsk1", "168Days<")
filter_5_df17.insert(1, "TotalRegistrationsk1", "161Days<")
filter_6_df17.insert(1, "TotalRegistrationsk1", "154Days<")
filter_7_df17.insert(1, "TotalRegistrationsk1", "147Days<")
filter_8_df17.insert(1, "TotalRegistrationsk1", "140Days<")
filter_9_df17.insert(1, "TotalRegistrationsk1", "133Days<")
filter_10_df17.insert(1, "TotalRegistrationsk1", "126Days<")
filter_11_df17.insert(1, "TotalRegistrationsk1", "119Days<")
filter_12_df17.insert(1, "TotalRegistrationsk1", "112Days<")
filter_13_df17.insert(1, "TotalRegistrationsk1", "105Days<")
filter_14_df17.insert(1, "TotalRegistrationsk1", "98Days<")
filter_15_df17.insert(1, "TotalRegistrationsk1", "91Days<")
filter_16_df17.insert(1, "TotalRegistrationsk1", "84Days<")
filter_17_df17.insert(1, "TotalRegistrationsk1", "77Days<")
filter_18_df17.insert(1, "TotalRegistrationsk1", "70Days<")
filter_19_df17.insert(1, "TotalRegistrationsk1", "63Days<")
filter_20_df17.insert(1, "TotalRegistrationsk1", "56Days<")
filter_21_df17.insert(1, "TotalRegistrationsk1", "49Days<")
filter_22_df17.insert(1, "TotalRegistrationsk1", "42Days<")
filter_23_df17.insert(1, "TotalRegistrationsk1", "35Days<")
filter_24_df17.insert(1, "TotalRegistrationsk1", "28Days<")
filter_25_df17.insert(1, "TotalRegistrationsk1", "21Days<")
filter_26_df17.insert(1, "TotalRegistrationsk1", "14Days<")
filter_27_df17.insert(1, "TotalRegistrationsk1", "7Days<")
filter_28_df17.insert(1, "TotalRegistrationsk1", "0Days<")

#DF18 - k1
#extra unit
filter_e1_df18.insert(1, "TotalRegistrationsk1", "210Days<")
filter_e2_df18.insert(1, "TotalRegistrationsk1", "203Days<")
filter_e3_df18.insert(1, "TotalRegistrationsk1", "196Days<")
#extra unit

filter_1_df18.insert(1, "TotalRegistrationsk1", "189Days<")
filter_2_df18.insert(1, "TotalRegistrationsk1", "182Days<")
filter_3_df18.insert(1, "TotalRegistrationsk1", "175Days<")
filter_4_df18.insert(1, "TotalRegistrationsk1", "168Days<")
filter_5_df18.insert(1, "TotalRegistrationsk1", "161Days<")
filter_6_df18.insert(1, "TotalRegistrationsk1", "154Days<")
filter_7_df18.insert(1, "TotalRegistrationsk1", "147Days<")
filter_8_df18.insert(1, "TotalRegistrationsk1", "140Days<")
filter_9_df18.insert(1, "TotalRegistrationsk1", "133Days<")
filter_10_df18.insert(1, "TotalRegistrationsk1", "126Days<")
filter_11_df18.insert(1, "TotalRegistrationsk1", "119Days<")
filter_12_df18.insert(1, "TotalRegistrationsk1", "112Days<")
filter_13_df18.insert(1, "TotalRegistrationsk1", "105Days<")
filter_14_df18.insert(1, "TotalRegistrationsk1", "98Days<")
filter_15_df18.insert(1, "TotalRegistrationsk1", "91Days<")
filter_16_df18.insert(1, "TotalRegistrationsk1", "84Days<")
filter_17_df18.insert(1, "TotalRegistrationsk1", "77Days<")
filter_18_df18.insert(1, "TotalRegistrationsk1", "70Days<")
filter_19_df18.insert(1, "TotalRegistrationsk1", "63Days<")
filter_20_df18.insert(1, "TotalRegistrationsk1", "56Days<")
filter_21_df18.insert(1, "TotalRegistrationsk1", "49Days<")
filter_22_df18.insert(1, "TotalRegistrationsk1", "42Days<")
filter_23_df18.insert(1, "TotalRegistrationsk1", "35Days<")
filter_24_df18.insert(1, "TotalRegistrationsk1", "28Days<")
filter_25_df18.insert(1, "TotalRegistrationsk1", "21Days<")
filter_26_df18.insert(1, "TotalRegistrationsk1", "14Days<")
filter_27_df18.insert(1, "TotalRegistrationsk1", "7Days<")
filter_28_df18.insert(1, "TotalRegistrationsk1", "0Days<")

#DF19 - k1
#extra unit
filter_e1_df19.insert(1, "TotalRegistrationsk1", "210Days<")
filter_e2_df19.insert(1, "TotalRegistrationsk1", "203Days<")
filter_e3_df19.insert(1, "TotalRegistrationsk1", "196Days<")
#extra unit

filter_1_df19.insert(1, "TotalRegistrationsk1", "189Days<")
filter_2_df19.insert(1, "TotalRegistrationsk1", "182Days<")
filter_3_df19.insert(1, "TotalRegistrationsk1", "175Days<")
filter_4_df19.insert(1, "TotalRegistrationsk1", "168Days<")
filter_5_df19.insert(1, "TotalRegistrationsk1", "161Days<")
filter_6_df19.insert(1, "TotalRegistrationsk1", "154Days<")
filter_7_df19.insert(1, "TotalRegistrationsk1", "147Days<")
filter_8_df19.insert(1, "TotalRegistrationsk1", "140Days<")
filter_9_df19.insert(1, "TotalRegistrationsk1", "133Days<")
filter_10_df19.insert(1, "TotalRegistrationsk1", "126Days<")
filter_11_df19.insert(1, "TotalRegistrationsk1", "119Days<")
filter_12_df19.insert(1, "TotalRegistrationsk1", "112Days<")
filter_13_df19.insert(1, "TotalRegistrationsk1", "105Days<")
filter_14_df19.insert(1, "TotalRegistrationsk1", "98Days<")
filter_15_df19.insert(1, "TotalRegistrationsk1", "91Days<")
filter_16_df19.insert(1, "TotalRegistrationsk1", "84Days<")
filter_17_df19.insert(1, "TotalRegistrationsk1", "77Days<")
filter_18_df19.insert(1, "TotalRegistrationsk1", "70Days<")
filter_19_df19.insert(1, "TotalRegistrationsk1", "63Days<")
filter_20_df19.insert(1, "TotalRegistrationsk1", "56Days<")
filter_21_df19.insert(1, "TotalRegistrationsk1", "49Days<")
filter_22_df19.insert(1, "TotalRegistrationsk1", "42Days<")
filter_23_df19.insert(1, "TotalRegistrationsk1", "35Days<")
filter_24_df19.insert(1, "TotalRegistrationsk1", "28Days<")
filter_25_df19.insert(1, "TotalRegistrationsk1", "21Days<")
filter_26_df19.insert(1, "TotalRegistrationsk1", "14Days<")
filter_27_df19.insert(1, "TotalRegistrationsk1", "7Days<")
filter_28_df19.insert(1, "TotalRegistrationsk1", "0Days<")

#df21
#extra unit
filter_e1_df21.insert(1, "TotalRegistrationsk1", "210Days<")
filter_e2_df21.insert(1, "TotalRegistrationsk1", "203Days<")
filter_e3_df21.insert(1, "TotalRegistrationsk1", "196Days<")
#extra unit

filter_1_df21.insert(1, "TotalRegistrationsk1", "189Days<")
filter_2_df21.insert(1, "TotalRegistrationsk1", "182Days<")
filter_3_df21.insert(1, "TotalRegistrationsk1", "175Days<")
filter_4_df21.insert(1, "TotalRegistrationsk1", "168Days<")
filter_5_df21.insert(1, "TotalRegistrationsk1", "161Days<")
filter_6_df21.insert(1, "TotalRegistrationsk1", "154Days<")
filter_7_df21.insert(1, "TotalRegistrationsk1", "147Days<")
filter_8_df21.insert(1, "TotalRegistrationsk1", "140Days<")
filter_9_df21.insert(1, "TotalRegistrationsk1", "133Days<")
filter_10_df21.insert(1, "TotalRegistrationsk1", "126Days<")
filter_11_df21.insert(1, "TotalRegistrationsk1", "119Days<")
filter_12_df21.insert(1, "TotalRegistrationsk1", "112Days<")
filter_13_df21.insert(1, "TotalRegistrationsk1", "105Days<")
filter_14_df21.insert(1, "TotalRegistrationsk1", "98Days<")
filter_15_df21.insert(1, "TotalRegistrationsk1", "91Days<")
filter_16_df21.insert(1, "TotalRegistrationsk1", "84Days<")
filter_17_df21.insert(1, "TotalRegistrationsk1", "77Days<")
filter_18_df21.insert(1, "TotalRegistrationsk1", "70Days<")
filter_19_df21.insert(1, "TotalRegistrationsk1", "63Days<")
filter_20_df21.insert(1, "TotalRegistrationsk1", "56Days<")
filter_21_df21.insert(1, "TotalRegistrationsk1", "49Days<")
filter_22_df21.insert(1, "TotalRegistrationsk1", "42Days<")
filter_23_df21.insert(1, "TotalRegistrationsk1", "35Days<")
filter_24_df21.insert(1, "TotalRegistrationsk1", "28Days<")
filter_25_df21.insert(1, "TotalRegistrationsk1", "21Days<")
filter_26_df21.insert(1, "TotalRegistrationsk1", "14Days<")
filter_27_df21.insert(1, "TotalRegistrationsk1", "7Days<")
filter_28_df21.insert(1, "TotalRegistrationsk1", "0Days<")

#DF22
#extra unit
filter_e1_df22.insert(1, "TotalRegistrationsk1", "210Days<")
filter_e2_df22.insert(1, "TotalRegistrationsk1", "203Days<")
filter_e3_df22.insert(1, "TotalRegistrationsk1", "196Days<")
#extra unit

filter_1_df22.insert(1, "TotalRegistrationsk1", "189Days<")
filter_2_df22.insert(1, "TotalRegistrationsk1", "182Days<")
filter_3_df22.insert(1, "TotalRegistrationsk1", "175Days<")
filter_4_df22.insert(1, "TotalRegistrationsk1", "168Days<")
filter_5_df22.insert(1, "TotalRegistrationsk1", "161Days<")
filter_6_df22.insert(1, "TotalRegistrationsk1", "154Days<")
filter_7_df22.insert(1, "TotalRegistrationsk1", "147Days<")
filter_8_df22.insert(1, "TotalRegistrationsk1", "140Days<")
filter_9_df22.insert(1, "TotalRegistrationsk1", "133Days<")
filter_10_df22.insert(1, "TotalRegistrationsk1", "126Days<")
filter_11_df22.insert(1, "TotalRegistrationsk1", "119Days<")
filter_12_df22.insert(1, "TotalRegistrationsk1", "112Days<")
filter_13_df22.insert(1, "TotalRegistrationsk1", "105Days<")
filter_14_df22.insert(1, "TotalRegistrationsk1", "98Days<")
filter_15_df22.insert(1, "TotalRegistrationsk1", "91Days<")
filter_16_df22.insert(1, "TotalRegistrationsk1", "84Days<")
filter_17_df22.insert(1, "TotalRegistrationsk1", "77Days<")
filter_18_df22.insert(1, "TotalRegistrationsk1", "70Days<")
filter_19_df22.insert(1, "TotalRegistrationsk1", "63Days<")
filter_20_df22.insert(1, "TotalRegistrationsk1", "56Days<")
filter_21_df22.insert(1, "TotalRegistrationsk1", "49Days<")
filter_22_df22.insert(1, "TotalRegistrationsk1", "42Days<")
filter_23_df22.insert(1, "TotalRegistrationsk1", "35Days<")
filter_24_df22.insert(1, "TotalRegistrationsk1", "28Days<")
filter_25_df22.insert(1, "TotalRegistrationsk1", "21Days<")
filter_26_df22.insert(1, "TotalRegistrationsk1", "14Days<")
filter_27_df22.insert(1, "TotalRegistrationsk1", "7Days<")
filter_28_df22.insert(1, "TotalRegistrationsk1", "0Days<")

#DF23
#extra unit
filter_e1_df23.insert(1, "TotalRegistrationsk1", "210Days<")
filter_e2_df23.insert(1, "TotalRegistrationsk1", "203Days<")
filter_e3_df23.insert(1, "TotalRegistrationsk1", "196Days<")
#extra unit

filter_1_df23.insert(1, "TotalRegistrationsk1", "189Days<")
filter_2_df23.insert(1, "TotalRegistrationsk1", "182Days<")
filter_3_df23.insert(1, "TotalRegistrationsk1", "175Days<")
filter_4_df23.insert(1, "TotalRegistrationsk1", "168Days<")
filter_5_df23.insert(1, "TotalRegistrationsk1", "161Days<")
filter_6_df23.insert(1, "TotalRegistrationsk1", "154Days<")
filter_7_df23.insert(1, "TotalRegistrationsk1", "147Days<")
filter_8_df23.insert(1, "TotalRegistrationsk1", "140Days<")
filter_9_df23.insert(1, "TotalRegistrationsk1", "133Days<")
filter_10_df23.insert(1, "TotalRegistrationsk1", "126Days<")
filter_11_df23.insert(1, "TotalRegistrationsk1", "119Days<")
filter_12_df23.insert(1, "TotalRegistrationsk1", "112Days<")
filter_13_df23.insert(1, "TotalRegistrationsk1", "105Days<")
filter_14_df23.insert(1, "TotalRegistrationsk1", "98Days<")
filter_15_df23.insert(1, "TotalRegistrationsk1", "91Days<")
filter_16_df23.insert(1, "TotalRegistrationsk1", "84Days<")
filter_17_df23.insert(1, "TotalRegistrationsk1", "77Days<")
filter_18_df23.insert(1, "TotalRegistrationsk1", "70Days<")
filter_19_df23.insert(1, "TotalRegistrationsk1", "63Days<")
filter_20_df23.insert(1, "TotalRegistrationsk1", "56Days<")
filter_21_df23.insert(1, "TotalRegistrationsk1", "49Days<")
filter_22_df23.insert(1, "TotalRegistrationsk1", "42Days<")
filter_23_df23.insert(1, "TotalRegistrationsk1", "35Days<")
filter_24_df23.insert(1, "TotalRegistrationsk1", "28Days<")
filter_25_df23.insert(1, "TotalRegistrationsk1", "21Days<")
filter_26_df23.insert(1, "TotalRegistrationsk1", "14Days<")
filter_27_df23.insert(1, "TotalRegistrationsk1", "7Days<")
filter_28_df23.insert(1, "TotalRegistrationsk1", "0Days<")

#unit 2
#DF17 - g1
#extra unit
filtr_e1_df17_GRdel.insert(1, "TotalRegistrationsg1", "210Days<")
filtr_e2_df17_GRdel.insert(1, "TotalRegistrationsg1", "203Days<")
filtr_e3_df17_GRdel.insert(1, "TotalRegistrationsg1", "196Days<")
#extra unit

filtr_1_df17_GRdel.insert(1, "TotalRegistrationsg1", "189Days<")
filtr_2_df17_GRdel.insert(1, "TotalRegistrationsg1", "182Days<")
filtr_3_df17_GRdel.insert(1, "TotalRegistrationsg1", "175Days<")
filtr_4_df17_GRdel.insert(1, "TotalRegistrationsg1", "168Days<")
filtr_5_df17_GRdel.insert(1, "TotalRegistrationsg1", "161Days<")
filtr_6_df17_GRdel.insert(1, "TotalRegistrationsg1", "154Days<")
filtr_7_df17_GRdel.insert(1, "TotalRegistrationsg1", "147Days<")
filtr_8_df17_GRdel.insert(1, "TotalRegistrationsg1", "140Days<")
filtr_9_df17_GRdel.insert(1, "TotalRegistrationsg1", "133Days<")
filtr_10_df17_GRdel.insert(1, "TotalRegistrationsg1", "126Days<")
filtr_11_df17_GRdel.insert(1, "TotalRegistrationsg1", "119Days<")
filtr_12_df17_GRdel.insert(1, "TotalRegistrationsg1", "112Days<")
filtr_13_df17_GRdel.insert(1, "TotalRegistrationsg1", "105Days<")
filtr_14_df17_GRdel.insert(1, "TotalRegistrationsg1", "98Days<")
filtr_15_df17_GRdel.insert(1, "TotalRegistrationsg1", "91Days<")
filtr_16_df17_GRdel.insert(1, "TotalRegistrationsg1", "84Days<")
filtr_17_df17_GRdel.insert(1, "TotalRegistrationsg1", "77Days<")
filtr_18_df17_GRdel.insert(1, "TotalRegistrationsg1", "70Days<")
filtr_19_df17_GRdel.insert(1, "TotalRegistrationsg1", "63Days<")
filtr_20_df17_GRdel.insert(1, "TotalRegistrationsg1", "56Days<")
filtr_21_df17_GRdel.insert(1, "TotalRegistrationsg1", "49Days<")
filtr_22_df17_GRdel.insert(1, "TotalRegistrationsg1", "42Days<")
filtr_23_df17_GRdel.insert(1, "TotalRegistrationsg1", "35Days<")
filtr_24_df17_GRdel.insert(1, "TotalRegistrationsg1", "28Days<")
filtr_25_df17_GRdel.insert(1, "TotalRegistrationsg1", "21Days<")
filtr_26_df17_GRdel.insert(1, "TotalRegistrationsg1", "14Days<")
filtr_27_df17_GRdel.insert(1, "TotalRegistrationsg1", "7Days<")
filtr_28_df17_GRdel.insert(1, "TotalRegistrationsg1", "0Days<")

#DF18 - GROUPS - g1
#extra unit
filtr_e1_df18_GRdel.insert(1, "TotalRegistrationsg1", "210Days<")
filtr_e2_df18_GRdel.insert(1, "TotalRegistrationsg1", "203Days<")
filtr_e3_df18_GRdel.insert(1, "TotalRegistrationsg1", "196Days<")
#extra unit

filtr_1_df18_GRdel.insert(1, "TotalRegistrationsg1", "189Days<")
filtr_2_df18_GRdel.insert(1, "TotalRegistrationsg1", "182Days<")
filtr_3_df18_GRdel.insert(1, "TotalRegistrationsg1", "175Days<")
filtr_4_df18_GRdel.insert(1, "TotalRegistrationsg1", "168Days<")
filtr_5_df18_GRdel.insert(1, "TotalRegistrationsg1", "161Days<")
filtr_6_df18_GRdel.insert(1, "TotalRegistrationsg1", "154Days<")
filtr_7_df18_GRdel.insert(1, "TotalRegistrationsg1", "147Days<")
filtr_8_df18_GRdel.insert(1, "TotalRegistrationsg1", "140Days<")
filtr_9_df18_GRdel.insert(1, "TotalRegistrationsg1", "133Days<")
filtr_10_df18_GRdel.insert(1, "TotalRegistrationsg1", "126Days<")
filtr_11_df18_GRdel.insert(1, "TotalRegistrationsg1", "119Days<")
filtr_12_df18_GRdel.insert(1, "TotalRegistrationsg1", "112Days<")
filtr_13_df18_GRdel.insert(1, "TotalRegistrationsg1", "105Days<")
filtr_14_df18_GRdel.insert(1, "TotalRegistrationsg1", "98Days<")
filtr_15_df18_GRdel.insert(1, "TotalRegistrationsg1", "91Days<")
filtr_16_df18_GRdel.insert(1, "TotalRegistrationsg1", "84Days<")
filtr_17_df18_GRdel.insert(1, "TotalRegistrationsg1", "77Days<")
filtr_18_df18_GRdel.insert(1, "TotalRegistrationsg1", "70Days<")
filtr_19_df18_GRdel.insert(1, "TotalRegistrationsg1", "63Days<")
filtr_20_df18_GRdel.insert(1, "TotalRegistrationsg1", "56Days<")
filtr_21_df18_GRdel.insert(1, "TotalRegistrationsg1", "49Days<")
filtr_22_df18_GRdel.insert(1, "TotalRegistrationsg1", "42Days<")
filtr_23_df18_GRdel.insert(1, "TotalRegistrationsg1", "35Days<")
filtr_24_df18_GRdel.insert(1, "TotalRegistrationsg1", "28Days<")
filtr_25_df18_GRdel.insert(1, "TotalRegistrationsg1", "21Days<")
filtr_26_df18_GRdel.insert(1, "TotalRegistrationsg1", "14Days<")
filtr_27_df18_GRdel.insert(1, "TotalRegistrationsg1", "7Days<")
filtr_28_df18_GRdel.insert(1, "TotalRegistrationsg1", "0Days<")

#DF19 - g1
#extra unit
filtr_e1_df19_GRdel.insert(1, "TotalRegistrationsg1", "210Days<")
filtr_e2_df19_GRdel.insert(1, "TotalRegistrationsg1", "203Days<")
filtr_e3_df19_GRdel.insert(1, "TotalRegistrationsg1", "196Days<")
#extra unit

filtr_1_df19_GRdel.insert(1, "TotalRegistrationsg1", "189Days<")
filtr_2_df19_GRdel.insert(1, "TotalRegistrationsg1", "182Days<")
filtr_3_df19_GRdel.insert(1, "TotalRegistrationsg1", "175Days<")
filtr_4_df19_GRdel.insert(1, "TotalRegistrationsg1", "168Days<")
filtr_5_df19_GRdel.insert(1, "TotalRegistrationsg1", "161Days<")
filtr_6_df19_GRdel.insert(1, "TotalRegistrationsg1", "154Days<")
filtr_7_df19_GRdel.insert(1, "TotalRegistrationsg1", "147Days<")
filtr_8_df19_GRdel.insert(1, "TotalRegistrationsg1", "140Days<")
filtr_9_df19_GRdel.insert(1, "TotalRegistrationsg1", "133Days<")
filtr_10_df19_GRdel.insert(1, "TotalRegistrationsg1", "126Days<")
filtr_11_df19_GRdel.insert(1, "TotalRegistrationsg1", "119Days<")
filtr_12_df19_GRdel.insert(1, "TotalRegistrationsg1", "112Days<")
filtr_13_df19_GRdel.insert(1, "TotalRegistrationsg1", "105Days<")
filtr_14_df19_GRdel.insert(1, "TotalRegistrationsg1", "98Days<")
filtr_15_df19_GRdel.insert(1, "TotalRegistrationsg1", "91Days<")
filtr_16_df19_GRdel.insert(1, "TotalRegistrationsg1", "84Days<")
filtr_17_df19_GRdel.insert(1, "TotalRegistrationsg1", "77Days<")
filtr_18_df19_GRdel.insert(1, "TotalRegistrationsg1", "70Days<")
filtr_19_df19_GRdel.insert(1, "TotalRegistrationsg1", "63Days<")
filtr_20_df19_GRdel.insert(1, "TotalRegistrationsg1", "56Days<")
filtr_21_df19_GRdel.insert(1, "TotalRegistrationsg1", "49Days<")
filtr_22_df19_GRdel.insert(1, "TotalRegistrationsg1", "42Days<")
filtr_23_df19_GRdel.insert(1, "TotalRegistrationsg1", "35Days<")
filtr_24_df19_GRdel.insert(1, "TotalRegistrationsg1", "28Days<")
filtr_25_df19_GRdel.insert(1, "TotalRegistrationsg1", "21Days<")
filtr_26_df19_GRdel.insert(1, "TotalRegistrationsg1", "14Days<")
filtr_27_df19_GRdel.insert(1, "TotalRegistrationsg1", "7Days<")
filtr_28_df19_GRdel.insert(1, "TotalRegistrationsg1", "0Days<")

#df21
#extra unit
filtr_e1_df21_GRdel.insert(1, "TotalRegistrationsg1", "210Days<")
filtr_e2_df21_GRdel.insert(1, "TotalRegistrationsg1", "203Days<")
filtr_e3_df21_GRdel.insert(1, "TotalRegistrationsg1", "196Days<")
#extra unit

filtr_1_df21_GRdel.insert(1, "TotalRegistrationsg1", "189Days<")
filtr_2_df21_GRdel.insert(1, "TotalRegistrationsg1", "182Days<")
filtr_3_df21_GRdel.insert(1, "TotalRegistrationsg1", "175Days<")
filtr_4_df21_GRdel.insert(1, "TotalRegistrationsg1", "168Days<")
filtr_5_df21_GRdel.insert(1, "TotalRegistrationsg1", "161Days<")
filtr_6_df21_GRdel.insert(1, "TotalRegistrationsg1", "154Days<")
filtr_7_df21_GRdel.insert(1, "TotalRegistrationsg1", "147Days<")
filtr_8_df21_GRdel.insert(1, "TotalRegistrationsg1", "140Days<")
filtr_9_df21_GRdel.insert(1, "TotalRegistrationsg1", "133Days<")
filtr_10_df21_GRdel.insert(1, "TotalRegistrationsg1", "126Days<")
filtr_11_df21_GRdel.insert(1, "TotalRegistrationsg1", "119Days<")
filtr_12_df21_GRdel.insert(1, "TotalRegistrationsg1", "112Days<")
filtr_13_df21_GRdel.insert(1, "TotalRegistrationsg1", "105Days<")
filtr_14_df21_GRdel.insert(1, "TotalRegistrationsg1", "98Days<")
filtr_15_df21_GRdel.insert(1, "TotalRegistrationsg1", "91Days<")
filtr_16_df21_GRdel.insert(1, "TotalRegistrationsg1", "84Days<")
filtr_17_df21_GRdel.insert(1, "TotalRegistrationsg1", "77Days<")
filtr_18_df21_GRdel.insert(1, "TotalRegistrationsg1", "70Days<")
filtr_19_df21_GRdel.insert(1, "TotalRegistrationsg1", "63Days<")
filtr_20_df21_GRdel.insert(1, "TotalRegistrationsg1", "56Days<")
filtr_21_df21_GRdel.insert(1, "TotalRegistrationsg1", "49Days<")
filtr_22_df21_GRdel.insert(1, "TotalRegistrationsg1", "42Days<")
filtr_23_df21_GRdel.insert(1, "TotalRegistrationsg1", "35Days<")
filtr_24_df21_GRdel.insert(1, "TotalRegistrationsg1", "28Days<")
filtr_25_df21_GRdel.insert(1, "TotalRegistrationsg1", "21Days<")
filtr_26_df21_GRdel.insert(1, "TotalRegistrationsg1", "14Days<")
filtr_27_df21_GRdel.insert(1, "TotalRegistrationsg1", "7Days<")
filtr_28_df21_GRdel.insert(1, "TotalRegistrationsg1", "0Days<")

#DF22 - g1
#extra unit
filtr_e1_df22_GRdel.insert(1, "TotalRegistrationsg1", "210Days<")
filtr_e2_df22_GRdel.insert(1, "TotalRegistrationsg1", "203Days<")
filtr_e3_df22_GRdel.insert(1, "TotalRegistrationsg1", "196Days<")
#extra unit

filtr_1_df22_GRdel.insert(1, "TotalRegistrationsg1", "189Days<")
filtr_2_df22_GRdel.insert(1, "TotalRegistrationsg1", "182Days<")
filtr_3_df22_GRdel.insert(1, "TotalRegistrationsg1", "175Days<")
filtr_4_df22_GRdel.insert(1, "TotalRegistrationsg1", "168Days<")
filtr_5_df22_GRdel.insert(1, "TotalRegistrationsg1", "161Days<")
filtr_6_df22_GRdel.insert(1, "TotalRegistrationsg1", "154Days<")
filtr_7_df22_GRdel.insert(1, "TotalRegistrationsg1", "147Days<")
filtr_8_df22_GRdel.insert(1, "TotalRegistrationsg1", "140Days<")
filtr_9_df22_GRdel.insert(1, "TotalRegistrationsg1", "133Days<")
filtr_10_df22_GRdel.insert(1, "TotalRegistrationsg1", "126Days<")
filtr_11_df22_GRdel.insert(1, "TotalRegistrationsg1", "119Days<")
filtr_12_df22_GRdel.insert(1, "TotalRegistrationsg1", "112Days<")
filtr_13_df22_GRdel.insert(1, "TotalRegistrationsg1", "105Days<")
filtr_14_df22_GRdel.insert(1, "TotalRegistrationsg1", "98Days<")
filtr_15_df22_GRdel.insert(1, "TotalRegistrationsg1", "91Days<")
filtr_16_df22_GRdel.insert(1, "TotalRegistrationsg1", "84Days<")
filtr_17_df22_GRdel.insert(1, "TotalRegistrationsg1", "77Days<")
filtr_18_df22_GRdel.insert(1, "TotalRegistrationsg1", "70Days<")
filtr_19_df22_GRdel.insert(1, "TotalRegistrationsg1", "63Days<")
filtr_20_df22_GRdel.insert(1, "TotalRegistrationsg1", "56Days<")
filtr_21_df22_GRdel.insert(1, "TotalRegistrationsg1", "49Days<")
filtr_22_df22_GRdel.insert(1, "TotalRegistrationsg1", "42Days<")
filtr_23_df22_GRdel.insert(1, "TotalRegistrationsg1", "35Days<")
filtr_24_df22_GRdel.insert(1, "TotalRegistrationsg1", "28Days<")
filtr_25_df22_GRdel.insert(1, "TotalRegistrationsg1", "21Days<")
filtr_26_df22_GRdel.insert(1, "TotalRegistrationsg1", "14Days<")
filtr_27_df22_GRdel.insert(1, "TotalRegistrationsg1", "7Days<")
filtr_28_df22_GRdel.insert(1, "TotalRegistrationsg1", "0Days<")

#DF23 - g1
#extra unit
filtr_e1_df23_GRdel.insert(1, "TotalRegistrationsg1", "210Days<")
filtr_e2_df23_GRdel.insert(1, "TotalRegistrationsg1", "203Days<")
filtr_e3_df23_GRdel.insert(1, "TotalRegistrationsg1", "196Days<")
#extra unit

filtr_1_df23_GRdel.insert(1, "TotalRegistrationsg1", "189Days<")
filtr_2_df23_GRdel.insert(1, "TotalRegistrationsg1", "182Days<")
filtr_3_df23_GRdel.insert(1, "TotalRegistrationsg1", "175Days<")
filtr_4_df23_GRdel.insert(1, "TotalRegistrationsg1", "168Days<")
filtr_5_df23_GRdel.insert(1, "TotalRegistrationsg1", "161Days<")
filtr_6_df23_GRdel.insert(1, "TotalRegistrationsg1", "154Days<")
filtr_7_df23_GRdel.insert(1, "TotalRegistrationsg1", "147Days<")
filtr_8_df23_GRdel.insert(1, "TotalRegistrationsg1", "140Days<")
filtr_9_df23_GRdel.insert(1, "TotalRegistrationsg1", "133Days<")
filtr_10_df23_GRdel.insert(1, "TotalRegistrationsg1", "126Days<")
filtr_11_df23_GRdel.insert(1, "TotalRegistrationsg1", "119Days<")
filtr_12_df23_GRdel.insert(1, "TotalRegistrationsg1", "112Days<")
filtr_13_df23_GRdel.insert(1, "TotalRegistrationsg1", "105Days<")
filtr_14_df23_GRdel.insert(1, "TotalRegistrationsg1", "98Days<")
filtr_15_df23_GRdel.insert(1, "TotalRegistrationsg1", "91Days<")
filtr_16_df23_GRdel.insert(1, "TotalRegistrationsg1", "84Days<")
filtr_17_df23_GRdel.insert(1, "TotalRegistrationsg1", "77Days<")
filtr_18_df23_GRdel.insert(1, "TotalRegistrationsg1", "70Days<")
filtr_19_df23_GRdel.insert(1, "TotalRegistrationsg1", "63Days<")
filtr_20_df23_GRdel.insert(1, "TotalRegistrationsg1", "56Days<")
filtr_21_df23_GRdel.insert(1, "TotalRegistrationsg1", "49Days<")
filtr_22_df23_GRdel.insert(1, "TotalRegistrationsg1", "42Days<")
filtr_23_df23_GRdel.insert(1, "TotalRegistrationsg1", "35Days<")
filtr_24_df23_GRdel.insert(1, "TotalRegistrationsg1", "28Days<")
filtr_25_df23_GRdel.insert(1, "TotalRegistrationsg1", "21Days<")
filtr_26_df23_GRdel.insert(1, "TotalRegistrationsg1", "14Days<")
filtr_27_df23_GRdel.insert(1, "TotalRegistrationsg1", "7Days<")
filtr_28_df23_GRdel.insert(1, "TotalRegistrationsg1", "0Days<")

#DF17 - GROUPS
#DF17 - b1
#extra unit
filtr_e1_df17_GRdel.insert(1, "TotalRegistrationsb1", "210Days<")
filtr_e2_df17_GRdel.insert(1, "TotalRegistrationsb1", "203Days<")
filtr_e3_df17_GRdel.insert(1, "TotalRegistrationsb1", "196Days<")
#extra unit

filtr_1_df17_GRdel.insert(1, "TotalRegistrationsb1", "189Days<")
filtr_2_df17_GRdel.insert(1, "TotalRegistrationsb1", "182Days<")
filtr_3_df17_GRdel.insert(1, "TotalRegistrationsb1", "175Days<")
filtr_4_df17_GRdel.insert(1, "TotalRegistrationsb1", "168Days<")
filtr_5_df17_GRdel.insert(1, "TotalRegistrationsb1", "161Days<")
filtr_6_df17_GRdel.insert(1, "TotalRegistrationsb1", "154Days<")
filtr_7_df17_GRdel.insert(1, "TotalRegistrationsb1", "147Days<")
filtr_8_df17_GRdel.insert(1, "TotalRegistrationsb1", "140Days<")
filtr_9_df17_GRdel.insert(1, "TotalRegistrationsb1", "133Days<")
filtr_10_df17_GRdel.insert(1, "TotalRegistrationsb1", "126Days<")
filtr_11_df17_GRdel.insert(1, "TotalRegistrationsb1", "119Days<")
filtr_12_df17_GRdel.insert(1, "TotalRegistrationsb1", "112Days<")
filtr_13_df17_GRdel.insert(1, "TotalRegistrationsb1", "105Days<")
filtr_14_df17_GRdel.insert(1, "TotalRegistrationsb1", "98Days<")
filtr_15_df17_GRdel.insert(1, "TotalRegistrationsb1", "91Days<")
filtr_16_df17_GRdel.insert(1, "TotalRegistrationsb1", "84Days<")
filtr_17_df17_GRdel.insert(1, "TotalRegistrationsb1", "77Days<")
filtr_18_df17_GRdel.insert(1, "TotalRegistrationsb1", "70Days<")
filtr_19_df17_GRdel.insert(1, "TotalRegistrationsb1", "63Days<")
filtr_20_df17_GRdel.insert(1, "TotalRegistrationsb1", "56Days<")
filtr_21_df17_GRdel.insert(1, "TotalRegistrationsb1", "49Days<")
filtr_22_df17_GRdel.insert(1, "TotalRegistrationsb1", "42Days<")
filtr_23_df17_GRdel.insert(1, "TotalRegistrationsb1", "35Days<")
filtr_24_df17_GRdel.insert(1, "TotalRegistrationsb1", "28Days<")
filtr_25_df17_GRdel.insert(1, "TotalRegistrationsb1", "21Days<")
filtr_26_df17_GRdel.insert(1, "TotalRegistrationsb1", "14Days<")
filtr_27_df17_GRdel.insert(1, "TotalRegistrationsb1", "7Days<")
filtr_28_df17_GRdel.insert(1, "TotalRegistrationsb1", "0Days<")

#DF18 - GROUPS - b1
#extra unit
filtr_e1_df18_GRdel.insert(1, "TotalRegistrationsb1", "210Days<")
filtr_e2_df18_GRdel.insert(1, "TotalRegistrationsb1", "203Days<")
filtr_e3_df18_GRdel.insert(1, "TotalRegistrationsb1", "196Days<")
#extra unit

filtr_1_df18_GRdel.insert(1, "TotalRegistrationsb1", "189Days<")
filtr_2_df18_GRdel.insert(1, "TotalRegistrationsb1", "182Days<")
filtr_3_df18_GRdel.insert(1, "TotalRegistrationsb1", "175Days<")
filtr_4_df18_GRdel.insert(1, "TotalRegistrationsb1", "168Days<")
filtr_5_df18_GRdel.insert(1, "TotalRegistrationsb1", "161Days<")
filtr_6_df18_GRdel.insert(1, "TotalRegistrationsb1", "154Days<")
filtr_7_df18_GRdel.insert(1, "TotalRegistrationsb1", "147Days<")
filtr_8_df18_GRdel.insert(1, "TotalRegistrationsb1", "140Days<")
filtr_9_df18_GRdel.insert(1, "TotalRegistrationsb1", "133Days<")
filtr_10_df18_GRdel.insert(1, "TotalRegistrationsb1", "126Days<")
filtr_11_df18_GRdel.insert(1, "TotalRegistrationsb1", "119Days<")
filtr_12_df18_GRdel.insert(1, "TotalRegistrationsb1", "112Days<")
filtr_13_df18_GRdel.insert(1, "TotalRegistrationsb1", "105Days<")
filtr_14_df18_GRdel.insert(1, "TotalRegistrationsb1", "98Days<")
filtr_15_df18_GRdel.insert(1, "TotalRegistrationsb1", "91Days<")
filtr_16_df18_GRdel.insert(1, "TotalRegistrationsb1", "84Days<")
filtr_17_df18_GRdel.insert(1, "TotalRegistrationsb1", "77Days<")
filtr_18_df18_GRdel.insert(1, "TotalRegistrationsb1", "70Days<")
filtr_19_df18_GRdel.insert(1, "TotalRegistrationsb1", "63Days<")
filtr_20_df18_GRdel.insert(1, "TotalRegistrationsb1", "56Days<")
filtr_21_df18_GRdel.insert(1, "TotalRegistrationsb1", "49Days<")
filtr_22_df18_GRdel.insert(1, "TotalRegistrationsb1", "42Days<")
filtr_23_df18_GRdel.insert(1, "TotalRegistrationsb1", "35Days<")
filtr_24_df18_GRdel.insert(1, "TotalRegistrationsb1", "28Days<")
filtr_25_df18_GRdel.insert(1, "TotalRegistrationsb1", "21Days<")
filtr_26_df18_GRdel.insert(1, "TotalRegistrationsb1", "14Days<")
filtr_27_df18_GRdel.insert(1, "TotalRegistrationsb1", "7Days<")
filtr_28_df18_GRdel.insert(1, "TotalRegistrationsb1", "0Days<")

#DF19 - b1
#extra unit
filtr_e1_df19_GRdel.insert(1, "TotalRegistrationsb1", "210Days<")
filtr_e2_df19_GRdel.insert(1, "TotalRegistrationsb1", "203Days<")
filtr_e3_df19_GRdel.insert(1, "TotalRegistrationsb1", "196Days<")
#extra unit

filtr_1_df19_GRdel.insert(1, "TotalRegistrationsb1", "189Days<")
filtr_2_df19_GRdel.insert(1, "TotalRegistrationsb1", "182Days<")
filtr_3_df19_GRdel.insert(1, "TotalRegistrationsb1", "175Days<")
filtr_4_df19_GRdel.insert(1, "TotalRegistrationsb1", "168Days<")
filtr_5_df19_GRdel.insert(1, "TotalRegistrationsb1", "161Days<")
filtr_6_df19_GRdel.insert(1, "TotalRegistrationsb1", "154Days<")
filtr_7_df19_GRdel.insert(1, "TotalRegistrationsb1", "147Days<")
filtr_8_df19_GRdel.insert(1, "TotalRegistrationsb1", "140Days<")
filtr_9_df19_GRdel.insert(1, "TotalRegistrationsb1", "133Days<")
filtr_10_df19_GRdel.insert(1, "TotalRegistrationsb1", "126Days<")
filtr_11_df19_GRdel.insert(1, "TotalRegistrationsb1", "119Days<")
filtr_12_df19_GRdel.insert(1, "TotalRegistrationsb1", "112Days<")
filtr_13_df19_GRdel.insert(1, "TotalRegistrationsb1", "105Days<")
filtr_14_df19_GRdel.insert(1, "TotalRegistrationsb1", "98Days<")
filtr_15_df19_GRdel.insert(1, "TotalRegistrationsb1", "91Days<")
filtr_16_df19_GRdel.insert(1, "TotalRegistrationsb1", "84Days<")
filtr_17_df19_GRdel.insert(1, "TotalRegistrationsb1", "77Days<")
filtr_18_df19_GRdel.insert(1, "TotalRegistrationsb1", "70Days<")
filtr_19_df19_GRdel.insert(1, "TotalRegistrationsb1", "63Days<")
filtr_20_df19_GRdel.insert(1, "TotalRegistrationsb1", "56Days<")
filtr_21_df19_GRdel.insert(1, "TotalRegistrationsb1", "49Days<")
filtr_22_df19_GRdel.insert(1, "TotalRegistrationsb1", "42Days<")
filtr_23_df19_GRdel.insert(1, "TotalRegistrationsb1", "35Days<")
filtr_24_df19_GRdel.insert(1, "TotalRegistrationsb1", "28Days<")
filtr_25_df19_GRdel.insert(1, "TotalRegistrationsb1", "21Days<")
filtr_26_df19_GRdel.insert(1, "TotalRegistrationsb1", "14Days<")
filtr_27_df19_GRdel.insert(1, "TotalRegistrationsb1", "7Days<")
filtr_28_df19_GRdel.insert(1, "TotalRegistrationsb1", "0Days<")

#df21
#extra unit
filtr_e1_df21_GRdel.insert(1, "TotalRegistrationsb1", "210Days<")
filtr_e2_df21_GRdel.insert(1, "TotalRegistrationsb1", "203Days<")
filtr_e3_df21_GRdel.insert(1, "TotalRegistrationsb1", "196Days<")
#extra unit

filtr_1_df21_GRdel.insert(1, "TotalRegistrationsb1", "189Days<")
filtr_2_df21_GRdel.insert(1, "TotalRegistrationsb1", "182Days<")
filtr_3_df21_GRdel.insert(1, "TotalRegistrationsb1", "175Days<")
filtr_4_df21_GRdel.insert(1, "TotalRegistrationsb1", "168Days<")
filtr_5_df21_GRdel.insert(1, "TotalRegistrationsb1", "161Days<")
filtr_6_df21_GRdel.insert(1, "TotalRegistrationsb1", "154Days<")
filtr_7_df21_GRdel.insert(1, "TotalRegistrationsb1", "147Days<")
filtr_8_df21_GRdel.insert(1, "TotalRegistrationsb1", "140Days<")
filtr_9_df21_GRdel.insert(1, "TotalRegistrationsb1", "133Days<")
filtr_10_df21_GRdel.insert(1, "TotalRegistrationsb1", "126Days<")
filtr_11_df21_GRdel.insert(1, "TotalRegistrationsb1", "119Days<")
filtr_12_df21_GRdel.insert(1, "TotalRegistrationsb1", "112Days<")
filtr_13_df21_GRdel.insert(1, "TotalRegistrationsb1", "105Days<")
filtr_14_df21_GRdel.insert(1, "TotalRegistrationsb1", "98Days<")
filtr_15_df21_GRdel.insert(1, "TotalRegistrationsb1", "91Days<")
filtr_16_df21_GRdel.insert(1, "TotalRegistrationsb1", "84Days<")
filtr_17_df21_GRdel.insert(1, "TotalRegistrationsb1", "77Days<")
filtr_18_df21_GRdel.insert(1, "TotalRegistrationsb1", "70Days<")
filtr_19_df21_GRdel.insert(1, "TotalRegistrationsb1", "63Days<")
filtr_20_df21_GRdel.insert(1, "TotalRegistrationsb1", "56Days<")
filtr_21_df21_GRdel.insert(1, "TotalRegistrationsb1", "49Days<")
filtr_22_df21_GRdel.insert(1, "TotalRegistrationsb1", "42Days<")
filtr_23_df21_GRdel.insert(1, "TotalRegistrationsb1", "35Days<")
filtr_24_df21_GRdel.insert(1, "TotalRegistrationsb1", "28Days<")
filtr_25_df21_GRdel.insert(1, "TotalRegistrationsb1", "21Days<")
filtr_26_df21_GRdel.insert(1, "TotalRegistrationsb1", "14Days<")
filtr_27_df21_GRdel.insert(1, "TotalRegistrationsb1", "7Days<")
filtr_28_df21_GRdel.insert(1, "TotalRegistrationsb1", "0Days<")

#DF22 - b1
#extra unit
filtr_e1_df22_GRdel.insert(1, "TotalRegistrationsb1", "210Days<")
filtr_e2_df22_GRdel.insert(1, "TotalRegistrationsb1", "203Days<")
filtr_e3_df22_GRdel.insert(1, "TotalRegistrationsb1", "196Days<")
#extra unit

filtr_1_df22_GRdel.insert(1, "TotalRegistrationsb1", "189Days<")
filtr_2_df22_GRdel.insert(1, "TotalRegistrationsb1", "182Days<")
filtr_3_df22_GRdel.insert(1, "TotalRegistrationsb1", "175Days<")
filtr_4_df22_GRdel.insert(1, "TotalRegistrationsb1", "168Days<")
filtr_5_df22_GRdel.insert(1, "TotalRegistrationsb1", "161Days<")
filtr_6_df22_GRdel.insert(1, "TotalRegistrationsb1", "154Days<")
filtr_7_df22_GRdel.insert(1, "TotalRegistrationsb1", "147Days<")
filtr_8_df22_GRdel.insert(1, "TotalRegistrationsb1", "140Days<")
filtr_9_df22_GRdel.insert(1, "TotalRegistrationsb1", "133Days<")
filtr_10_df22_GRdel.insert(1, "TotalRegistrationsb1", "126Days<")
filtr_11_df22_GRdel.insert(1, "TotalRegistrationsb1", "119Days<")
filtr_12_df22_GRdel.insert(1, "TotalRegistrationsb1", "112Days<")
filtr_13_df22_GRdel.insert(1, "TotalRegistrationsb1", "105Days<")
filtr_14_df22_GRdel.insert(1, "TotalRegistrationsb1", "98Days<")
filtr_15_df22_GRdel.insert(1, "TotalRegistrationsb1", "91Days<")
filtr_16_df22_GRdel.insert(1, "TotalRegistrationsb1", "84Days<")
filtr_17_df22_GRdel.insert(1, "TotalRegistrationsb1", "77Days<")
filtr_18_df22_GRdel.insert(1, "TotalRegistrationsb1", "70Days<")
filtr_19_df22_GRdel.insert(1, "TotalRegistrationsb1", "63Days<")
filtr_20_df22_GRdel.insert(1, "TotalRegistrationsb1", "56Days<")
filtr_21_df22_GRdel.insert(1, "TotalRegistrationsb1", "49Days<")
filtr_22_df22_GRdel.insert(1, "TotalRegistrationsb1", "42Days<")
filtr_23_df22_GRdel.insert(1, "TotalRegistrationsb1", "35Days<")
filtr_24_df22_GRdel.insert(1, "TotalRegistrationsb1", "28Days<")
filtr_25_df22_GRdel.insert(1, "TotalRegistrationsb1", "21Days<")
filtr_26_df22_GRdel.insert(1, "TotalRegistrationsb1", "14Days<")
filtr_27_df22_GRdel.insert(1, "TotalRegistrationsb1", "7Days<")
filtr_28_df22_GRdel.insert(1, "TotalRegistrationsb1", "0Days<")

#DF23 - b1
#extra unit
filtr_e1_df23_GRdel.insert(1, "TotalRegistrationsb1", "210Days<")
filtr_e2_df23_GRdel.insert(1, "TotalRegistrationsb1", "203Days<")
filtr_e3_df23_GRdel.insert(1, "TotalRegistrationsb1", "196Days<")
#extra unit

filtr_1_df23_GRdel.insert(1, "TotalRegistrationsb1", "189Days<")
filtr_2_df23_GRdel.insert(1, "TotalRegistrationsb1", "182Days<")
filtr_3_df23_GRdel.insert(1, "TotalRegistrationsb1", "175Days<")
filtr_4_df23_GRdel.insert(1, "TotalRegistrationsb1", "168Days<")
filtr_5_df23_GRdel.insert(1, "TotalRegistrationsb1", "161Days<")
filtr_6_df23_GRdel.insert(1, "TotalRegistrationsb1", "154Days<")
filtr_7_df23_GRdel.insert(1, "TotalRegistrationsb1", "147Days<")
filtr_8_df23_GRdel.insert(1, "TotalRegistrationsb1", "140Days<")
filtr_9_df23_GRdel.insert(1, "TotalRegistrationsb1", "133Days<")
filtr_10_df23_GRdel.insert(1, "TotalRegistrationsb1", "126Days<")
filtr_11_df23_GRdel.insert(1, "TotalRegistrationsb1", "119Days<")
filtr_12_df23_GRdel.insert(1, "TotalRegistrationsb1", "112Days<")
filtr_13_df23_GRdel.insert(1, "TotalRegistrationsb1", "105Days<")
filtr_14_df23_GRdel.insert(1, "TotalRegistrationsb1", "98Days<")
filtr_15_df23_GRdel.insert(1, "TotalRegistrationsb1", "91Days<")
filtr_16_df23_GRdel.insert(1, "TotalRegistrationsb1", "84Days<")
filtr_17_df23_GRdel.insert(1, "TotalRegistrationsb1", "77Days<")
filtr_18_df23_GRdel.insert(1, "TotalRegistrationsb1", "70Days<")
filtr_19_df23_GRdel.insert(1, "TotalRegistrationsb1", "63Days<")
filtr_20_df23_GRdel.insert(1, "TotalRegistrationsb1", "56Days<")
filtr_21_df23_GRdel.insert(1, "TotalRegistrationsb1", "49Days<")
filtr_22_df23_GRdel.insert(1, "TotalRegistrationsb1", "42Days<")
filtr_23_df23_GRdel.insert(1, "TotalRegistrationsb1", "35Days<")
filtr_24_df23_GRdel.insert(1, "TotalRegistrationsb1", "28Days<")
filtr_25_df23_GRdel.insert(1, "TotalRegistrationsb1", "21Days<")
filtr_26_df23_GRdel.insert(1, "TotalRegistrationsb1", "14Days<")
filtr_27_df23_GRdel.insert(1, "TotalRegistrationsb1", "7Days<")
filtr_28_df23_GRdel.insert(1, "TotalRegistrationsb1", "0Days<")

#DF17 - l1
#extra unit
filtr_e1_df17_GRdel.insert(1, "TotalRegistrationsl1", "210Days<")
filtr_e2_df17_GRdel.insert(1, "TotalRegistrationsl1", "203Days<")
filtr_e3_df17_GRdel.insert(1, "TotalRegistrationsl1", "196Days<")
#extra unit

filtr_1_df17_GRdel.insert(1, "TotalRegistrationsl1", "189Days<")
filtr_2_df17_GRdel.insert(1, "TotalRegistrationsl1", "182Days<")
filtr_3_df17_GRdel.insert(1, "TotalRegistrationsl1", "175Days<")
filtr_4_df17_GRdel.insert(1, "TotalRegistrationsl1", "168Days<")
filtr_5_df17_GRdel.insert(1, "TotalRegistrationsl1", "161Days<")
filtr_6_df17_GRdel.insert(1, "TotalRegistrationsl1", "154Days<")
filtr_7_df17_GRdel.insert(1, "TotalRegistrationsl1", "147Days<")
filtr_8_df17_GRdel.insert(1, "TotalRegistrationsl1", "140Days<")
filtr_9_df17_GRdel.insert(1, "TotalRegistrationsl1", "133Days<")
filtr_10_df17_GRdel.insert(1, "TotalRegistrationsl1", "126Days<")
filtr_11_df17_GRdel.insert(1, "TotalRegistrationsl1", "119Days<")
filtr_12_df17_GRdel.insert(1, "TotalRegistrationsl1", "112Days<")
filtr_13_df17_GRdel.insert(1, "TotalRegistrationsl1", "105Days<")
filtr_14_df17_GRdel.insert(1, "TotalRegistrationsl1", "98Days<")
filtr_15_df17_GRdel.insert(1, "TotalRegistrationsl1", "91Days<")
filtr_16_df17_GRdel.insert(1, "TotalRegistrationsl1", "84Days<")
filtr_17_df17_GRdel.insert(1, "TotalRegistrationsl1", "77Days<")
filtr_18_df17_GRdel.insert(1, "TotalRegistrationsl1", "70Days<")
filtr_19_df17_GRdel.insert(1, "TotalRegistrationsl1", "63Days<")
filtr_20_df17_GRdel.insert(1, "TotalRegistrationsl1", "56Days<")
filtr_21_df17_GRdel.insert(1, "TotalRegistrationsl1", "49Days<")
filtr_22_df17_GRdel.insert(1, "TotalRegistrationsl1", "42Days<")
filtr_23_df17_GRdel.insert(1, "TotalRegistrationsl1", "35Days<")
filtr_24_df17_GRdel.insert(1, "TotalRegistrationsl1", "28Days<")
filtr_25_df17_GRdel.insert(1, "TotalRegistrationsl1", "21Days<")
filtr_26_df17_GRdel.insert(1, "TotalRegistrationsl1", "14Days<")
filtr_27_df17_GRdel.insert(1, "TotalRegistrationsl1", "7Days<")
filtr_28_df17_GRdel.insert(1, "TotalRegistrationsl1", "0Days<")

#DF18 - GROUPS - l1
#extra unit
filtr_e1_df18_GRdel.insert(1, "TotalRegistrationsl1", "210Days<")
filtr_e2_df18_GRdel.insert(1, "TotalRegistrationsl1", "203Days<")
filtr_e3_df18_GRdel.insert(1, "TotalRegistrationsl1", "196Days<")
#extra unit

filtr_1_df18_GRdel.insert(1, "TotalRegistrationsl1", "189Days<")
filtr_2_df18_GRdel.insert(1, "TotalRegistrationsl1", "182Days<")
filtr_3_df18_GRdel.insert(1, "TotalRegistrationsl1", "175Days<")
filtr_4_df18_GRdel.insert(1, "TotalRegistrationsl1", "168Days<")
filtr_5_df18_GRdel.insert(1, "TotalRegistrationsl1", "161Days<")
filtr_6_df18_GRdel.insert(1, "TotalRegistrationsl1", "154Days<")
filtr_7_df18_GRdel.insert(1, "TotalRegistrationsl1", "147Days<")
filtr_8_df18_GRdel.insert(1, "TotalRegistrationsl1", "140Days<")
filtr_9_df18_GRdel.insert(1, "TotalRegistrationsl1", "133Days<")
filtr_10_df18_GRdel.insert(1, "TotalRegistrationsl1", "126Days<")
filtr_11_df18_GRdel.insert(1, "TotalRegistrationsl1", "119Days<")
filtr_12_df18_GRdel.insert(1, "TotalRegistrationsl1", "112Days<")
filtr_13_df18_GRdel.insert(1, "TotalRegistrationsl1", "105Days<")
filtr_14_df18_GRdel.insert(1, "TotalRegistrationsl1", "98Days<")
filtr_15_df18_GRdel.insert(1, "TotalRegistrationsl1", "91Days<")
filtr_16_df18_GRdel.insert(1, "TotalRegistrationsl1", "84Days<")
filtr_17_df18_GRdel.insert(1, "TotalRegistrationsl1", "77Days<")
filtr_18_df18_GRdel.insert(1, "TotalRegistrationsl1", "70Days<")
filtr_19_df18_GRdel.insert(1, "TotalRegistrationsl1", "63Days<")
filtr_20_df18_GRdel.insert(1, "TotalRegistrationsl1", "56Days<")
filtr_21_df18_GRdel.insert(1, "TotalRegistrationsl1", "49Days<")
filtr_22_df18_GRdel.insert(1, "TotalRegistrationsl1", "42Days<")
filtr_23_df18_GRdel.insert(1, "TotalRegistrationsl1", "35Days<")
filtr_24_df18_GRdel.insert(1, "TotalRegistrationsl1", "28Days<")
filtr_25_df18_GRdel.insert(1, "TotalRegistrationsl1", "21Days<")
filtr_26_df18_GRdel.insert(1, "TotalRegistrationsl1", "14Days<")
filtr_27_df18_GRdel.insert(1, "TotalRegistrationsl1", "7Days<")
filtr_28_df18_GRdel.insert(1, "TotalRegistrationsl1", "0Days<")

#DF19 - l1
#extra unit
filtr_e1_df19_GRdel.insert(1, "TotalRegistrationsl1", "210Days<")
filtr_e2_df19_GRdel.insert(1, "TotalRegistrationsl1", "203Days<")
filtr_e3_df19_GRdel.insert(1, "TotalRegistrationsl1", "196Days<")
#extra unit

filtr_1_df19_GRdel.insert(1, "TotalRegistrationsl1", "189Days<")
filtr_2_df19_GRdel.insert(1, "TotalRegistrationsl1", "182Days<")
filtr_3_df19_GRdel.insert(1, "TotalRegistrationsl1", "175Days<")
filtr_4_df19_GRdel.insert(1, "TotalRegistrationsl1", "168Days<")
filtr_5_df19_GRdel.insert(1, "TotalRegistrationsl1", "161Days<")
filtr_6_df19_GRdel.insert(1, "TotalRegistrationsl1", "154Days<")
filtr_7_df19_GRdel.insert(1, "TotalRegistrationsl1", "147Days<")
filtr_8_df19_GRdel.insert(1, "TotalRegistrationsl1", "140Days<")
filtr_9_df19_GRdel.insert(1, "TotalRegistrationsl1", "133Days<")
filtr_10_df19_GRdel.insert(1, "TotalRegistrationsl1", "126Days<")
filtr_11_df19_GRdel.insert(1, "TotalRegistrationsl1", "119Days<")
filtr_12_df19_GRdel.insert(1, "TotalRegistrationsl1", "112Days<")
filtr_13_df19_GRdel.insert(1, "TotalRegistrationsl1", "105Days<")
filtr_14_df19_GRdel.insert(1, "TotalRegistrationsl1", "98Days<")
filtr_15_df19_GRdel.insert(1, "TotalRegistrationsl1", "91Days<")
filtr_16_df19_GRdel.insert(1, "TotalRegistrationsl1", "84Days<")
filtr_17_df19_GRdel.insert(1, "TotalRegistrationsl1", "77Days<")
filtr_18_df19_GRdel.insert(1, "TotalRegistrationsl1", "70Days<")
filtr_19_df19_GRdel.insert(1, "TotalRegistrationsl1", "63Days<")
filtr_20_df19_GRdel.insert(1, "TotalRegistrationsl1", "56Days<")
filtr_21_df19_GRdel.insert(1, "TotalRegistrationsl1", "49Days<")
filtr_22_df19_GRdel.insert(1, "TotalRegistrationsl1", "42Days<")
filtr_23_df19_GRdel.insert(1, "TotalRegistrationsl1", "35Days<")
filtr_24_df19_GRdel.insert(1, "TotalRegistrationsl1", "28Days<")
filtr_25_df19_GRdel.insert(1, "TotalRegistrationsl1", "21Days<")
filtr_26_df19_GRdel.insert(1, "TotalRegistrationsl1", "14Days<")
filtr_27_df19_GRdel.insert(1, "TotalRegistrationsl1", "7Days<")
filtr_28_df19_GRdel.insert(1, "TotalRegistrationsl1", "0Days<")

#df21
#extra unit
filtr_e1_df21_GRdel.insert(1, "TotalRegistrationsl1", "210Days<")
filtr_e2_df21_GRdel.insert(1, "TotalRegistrationsl1", "203Days<")
filtr_e3_df21_GRdel.insert(1, "TotalRegistrationsl1", "196Days<")
#extra unit

filtr_1_df21_GRdel.insert(1, "TotalRegistrationsl1", "189Days<")
filtr_2_df21_GRdel.insert(1, "TotalRegistrationsl1", "182Days<")
filtr_3_df21_GRdel.insert(1, "TotalRegistrationsl1", "175Days<")
filtr_4_df21_GRdel.insert(1, "TotalRegistrationsl1", "168Days<")
filtr_5_df21_GRdel.insert(1, "TotalRegistrationsl1", "161Days<")
filtr_6_df21_GRdel.insert(1, "TotalRegistrationsl1", "154Days<")
filtr_7_df21_GRdel.insert(1, "TotalRegistrationsl1", "147Days<")
filtr_8_df21_GRdel.insert(1, "TotalRegistrationsl1", "140Days<")
filtr_9_df21_GRdel.insert(1, "TotalRegistrationsl1", "133Days<")
filtr_10_df21_GRdel.insert(1, "TotalRegistrationsl1", "126Days<")
filtr_11_df21_GRdel.insert(1, "TotalRegistrationsl1", "119Days<")
filtr_12_df21_GRdel.insert(1, "TotalRegistrationsl1", "112Days<")
filtr_13_df21_GRdel.insert(1, "TotalRegistrationsl1", "105Days<")
filtr_14_df21_GRdel.insert(1, "TotalRegistrationsl1", "98Days<")
filtr_15_df21_GRdel.insert(1, "TotalRegistrationsl1", "91Days<")
filtr_16_df21_GRdel.insert(1, "TotalRegistrationsl1", "84Days<")
filtr_17_df21_GRdel.insert(1, "TotalRegistrationsl1", "77Days<")
filtr_18_df21_GRdel.insert(1, "TotalRegistrationsl1", "70Days<")
filtr_19_df21_GRdel.insert(1, "TotalRegistrationsl1", "63Days<")
filtr_20_df21_GRdel.insert(1, "TotalRegistrationsl1", "56Days<")
filtr_21_df21_GRdel.insert(1, "TotalRegistrationsl1", "49Days<")
filtr_22_df21_GRdel.insert(1, "TotalRegistrationsl1", "42Days<")
filtr_23_df21_GRdel.insert(1, "TotalRegistrationsl1", "35Days<")
filtr_24_df21_GRdel.insert(1, "TotalRegistrationsl1", "28Days<")
filtr_25_df21_GRdel.insert(1, "TotalRegistrationsl1", "21Days<")
filtr_26_df21_GRdel.insert(1, "TotalRegistrationsl1", "14Days<")
filtr_27_df21_GRdel.insert(1, "TotalRegistrationsl1", "7Days<")
filtr_28_df21_GRdel.insert(1, "TotalRegistrationsl1", "0Days<")

#DF22
#extra unit
filtr_e1_df22_GRdel.insert(1, "TotalRegistrationsl1", "210Days<")
filtr_e2_df22_GRdel.insert(1, "TotalRegistrationsl1", "203Days<")
filtr_e3_df22_GRdel.insert(1, "TotalRegistrationsl1", "196Days<")
#extra unit

filtr_1_df22_GRdel.insert(1, "TotalRegistrationsl1", "189Days<")
filtr_2_df22_GRdel.insert(1, "TotalRegistrationsl1", "182Days<")
filtr_3_df22_GRdel.insert(1, "TotalRegistrationsl1", "175Days<")
filtr_4_df22_GRdel.insert(1, "TotalRegistrationsl1", "168Days<")
filtr_5_df22_GRdel.insert(1, "TotalRegistrationsl1", "161Days<")
filtr_6_df22_GRdel.insert(1, "TotalRegistrationsl1", "154Days<")
filtr_7_df22_GRdel.insert(1, "TotalRegistrationsl1", "147Days<")
filtr_8_df22_GRdel.insert(1, "TotalRegistrationsl1", "140Days<")
filtr_9_df22_GRdel.insert(1, "TotalRegistrationsl1", "133Days<")
filtr_10_df22_GRdel.insert(1, "TotalRegistrationsl1", "126Days<")
filtr_11_df22_GRdel.insert(1, "TotalRegistrationsl1", "119Days<")
filtr_12_df22_GRdel.insert(1, "TotalRegistrationsl1", "112Days<")
filtr_13_df22_GRdel.insert(1, "TotalRegistrationsl1", "105Days<")
filtr_14_df22_GRdel.insert(1, "TotalRegistrationsl1", "98Days<")
filtr_15_df22_GRdel.insert(1, "TotalRegistrationsl1", "91Days<")
filtr_16_df22_GRdel.insert(1, "TotalRegistrationsl1", "84Days<")
filtr_17_df22_GRdel.insert(1, "TotalRegistrationsl1", "77Days<")
filtr_18_df22_GRdel.insert(1, "TotalRegistrationsl1", "70Days<")
filtr_19_df22_GRdel.insert(1, "TotalRegistrationsl1", "63Days<")
filtr_20_df22_GRdel.insert(1, "TotalRegistrationsl1", "56Days<")
filtr_21_df22_GRdel.insert(1, "TotalRegistrationsl1", "49Days<")
filtr_22_df22_GRdel.insert(1, "TotalRegistrationsl1", "42Days<")
filtr_23_df22_GRdel.insert(1, "TotalRegistrationsl1", "35Days<")
filtr_24_df22_GRdel.insert(1, "TotalRegistrationsl1", "28Days<")
filtr_25_df22_GRdel.insert(1, "TotalRegistrationsl1", "21Days<")
filtr_26_df22_GRdel.insert(1, "TotalRegistrationsl1", "14Days<")
filtr_27_df22_GRdel.insert(1, "TotalRegistrationsl1", "7Days<")
filtr_28_df22_GRdel.insert(1, "TotalRegistrationsl1", "0Days<")

#DF23
#extra unit
filtr_e1_df23_GRdel.insert(1, "TotalRegistrationsl1", "210Days<")
filtr_e2_df23_GRdel.insert(1, "TotalRegistrationsl1", "203Days<")
filtr_e3_df23_GRdel.insert(1, "TotalRegistrationsl1", "196Days<")
#extra unit

filtr_1_df23_GRdel.insert(1, "TotalRegistrationsl1", "189Days<")
filtr_2_df23_GRdel.insert(1, "TotalRegistrationsl1", "182Days<")
filtr_3_df23_GRdel.insert(1, "TotalRegistrationsl1", "175Days<")
filtr_4_df23_GRdel.insert(1, "TotalRegistrationsl1", "168Days<")
filtr_5_df23_GRdel.insert(1, "TotalRegistrationsl1", "161Days<")
filtr_6_df23_GRdel.insert(1, "TotalRegistrationsl1", "154Days<")
filtr_7_df23_GRdel.insert(1, "TotalRegistrationsl1", "147Days<")
filtr_8_df23_GRdel.insert(1, "TotalRegistrationsl1", "140Days<")
filtr_9_df23_GRdel.insert(1, "TotalRegistrationsl1", "133Days<")
filtr_10_df23_GRdel.insert(1, "TotalRegistrationsl1", "126Days<")
filtr_11_df23_GRdel.insert(1, "TotalRegistrationsl1", "119Days<")
filtr_12_df23_GRdel.insert(1, "TotalRegistrationsl1", "112Days<")
filtr_13_df23_GRdel.insert(1, "TotalRegistrationsl1", "105Days<")
filtr_14_df23_GRdel.insert(1, "TotalRegistrationsl1", "98Days<")
filtr_15_df23_GRdel.insert(1, "TotalRegistrationsl1", "91Days<")
filtr_16_df23_GRdel.insert(1, "TotalRegistrationsl1", "84Days<")
filtr_17_df23_GRdel.insert(1, "TotalRegistrationsl1", "77Days<")
filtr_18_df23_GRdel.insert(1, "TotalRegistrationsl1", "70Days<")
filtr_19_df23_GRdel.insert(1, "TotalRegistrationsl1", "63Days<")
filtr_20_df23_GRdel.insert(1, "TotalRegistrationsl1", "56Days<")
filtr_21_df23_GRdel.insert(1, "TotalRegistrationsl1", "49Days<")
filtr_22_df23_GRdel.insert(1, "TotalRegistrationsl1", "42Days<")
filtr_23_df23_GRdel.insert(1, "TotalRegistrationsl1", "35Days<")
filtr_24_df23_GRdel.insert(1, "TotalRegistrationsl1", "28Days<")
filtr_25_df23_GRdel.insert(1, "TotalRegistrationsl1", "21Days<")
filtr_26_df23_GRdel.insert(1, "TotalRegistrationsl1", "14Days<")
filtr_27_df23_GRdel.insert(1, "TotalRegistrationsl1", "7Days<")
filtr_28_df23_GRdel.insert(1, "TotalRegistrationsl1", "0Days<")

#filter_1_df17.info()
#print(tab(filtr_28_df23_GRdel.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 1 - EXTRA UNIT
#unit 1
#Total Number of Registrations
dfd17_ef1_Registrations_count = pd.DataFrame(filter_e1_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef1_Registrations_count = dfd17_ef1_Registrations_count.fillna('Unknown')
dfd17_ef1_Registrations_count['Percent-2017'] = (dfd17_ef1_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_ef1_Registrations_count['Percent-2017'] = dfd17_ef1_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_ef1_Registrations_count['7DEvolution-2017'] = dfd17_ef1_Registrations_count['Total-2017'] - dfd17_ef1_Registrations_count['Total-2017']
#print(tab(dfd17_ef1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef1_Registrations_count = pd.DataFrame(filter_e1_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef1_Registrations_count = dfd18_ef1_Registrations_count.fillna('Unknown')
dfd18_ef1_Registrations_count['Percent-2018'] = (dfd18_ef1_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_ef1_Registrations_count['Percent-2018'] = dfd18_ef1_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_ef1_Registrations_count['7DEvolution-2018'] = dfd18_ef1_Registrations_count['Total-2018'] - dfd18_ef1_Registrations_count['Total-2018']
#print(tab(dfd18_ef1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef1_Registrations_count = pd.DataFrame(filter_e1_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef1_Registrations_count = dfd19_ef1_Registrations_count.fillna('Unknown')
dfd19_ef1_Registrations_count['Percent-2019'] = (dfd19_ef1_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_ef1_Registrations_count['Percent-2019'] = dfd19_ef1_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_ef1_Registrations_count['7DEvolution-2019'] = dfd19_ef1_Registrations_count['Total-2019'] - dfd19_ef1_Registrations_count['Total-2019']
#print(tab(dfd19_ef1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef1_Registrations_count = pd.DataFrame(filter_e1_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef1_Registrations_count = dfd21_ef1_Registrations_count.fillna('Unknown')
dfd21_ef1_Registrations_count['Percent-2021'] = (dfd21_ef1_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_ef1_Registrations_count['Percent-2021'] = dfd21_ef1_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_ef1_Registrations_count['7DEvolution-2021'] = dfd21_ef1_Registrations_count['Total-2021'] - dfd21_ef1_Registrations_count['Total-2021']
#print(tab(dfd21_ef1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef1_Registrations_count = pd.DataFrame(filter_e1_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef1_Registrations_count = dfd22_ef1_Registrations_count.fillna('Unknown')
dfd22_ef1_Registrations_count['Percent-2022'] = (dfd22_ef1_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_ef1_Registrations_count['Percent-2022'] = dfd22_ef1_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_ef1_Registrations_count['7DEvolution-2022'] = dfd22_ef1_Registrations_count['Total-2022'] - dfd22_ef1_Registrations_count['Total-2022']
print(tab(dfd22_ef1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_Registrations_count = pd.DataFrame(filter_e1_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef1_Registrations_count = dfd23_ef1_Registrations_count.fillna('Unknown')
dfd23_ef1_Registrations_count['Percent-2023'] = (dfd23_ef1_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_ef1_Registrations_count['Percent-2023'] = dfd23_ef1_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_ef1_Registrations_count['7DEvolution-2023'] = dfd23_ef1_Registrations_count['Total-2023'] - dfd23_ef1_Registrations_count['Total-2023']
#print(tab(dfd23_ef1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_ef1_RegistrationsEvolution_count = pd.DataFrame(filter_e1_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_ef1_RegistrationsEvolution_count = dfd23_ef1_RegistrationsEvolution_count.fillna('Unknown')
dfd23_ef1_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_ef1_Registrations_count['Total-2023'] - dfd19_ef1_Registrations_count['Total-2019'])/ dfd19_ef1_Registrations_count['Total-2019'].sum()) * 100
dfd23_ef1_RegistrationsEvolution_count['Evolution-2023'] = dfd23_ef1_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_ef1_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_ef1 = pd.DataFrame(pd.merge(dfd17_ef1_Registrations_count, dfd18_ef1_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_ef1 = pd.DataFrame(pd.merge(dfd19_ef1_Registrations_count, dfd21_ef1_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_ef1 = pd.DataFrame(pd.merge(dfd22_ef1_Registrations_count, dfd23_ef1_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_ef1 = pd.DataFrame(pd.merge(df_Registrations_count_1_ef1, df_Registrations_count_2_ef1, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_ef1 = pd.DataFrame(pd.merge(df_Registrations_count_m1_ef1, df_Registrations_count_3_ef1, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_ef1 = pd.DataFrame(pd.merge(df_Registrations_count_m2_ef1, dfd23_ef1_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_ef1 = filter_e1_df18[filter_e1_df18['New customer'] == 1]
df_NewCustomer_df19_ef1 = filter_e1_df19[filter_e1_df19['New customer'] == 1]
df_NewCustomer_df21_ef1 = filter_e1_df21[filter_e1_df21['New customer'] == 1]
df_NewCustomer_df22_ef1 = filter_e1_df22[filter_e1_df22['New customer'] == 1]
df_NewCustomer_df23_ef1 = filter_e1_df23[filter_e1_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ea1_ACQRET_count = pd.DataFrame(filter_e1_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_ef1_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_ef1.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_ef1_ACQRET_count['Percent-2018'] = (dfd18_ef1_ACQRET_count['ACQ-2018'] / dfd18_ef1_Registrations_count['Total-2018'].sum()) * 100
dfd18_ef1_ACQRET_count['Percent-2018'] = dfd18_ef1_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_ef1_ACQRET_count['RET-2018'] = dfd18_ea1_ACQRET_count['Total-2018'] - dfd18_ef1_ACQRET_count['ACQ-2018']
dfd18_ef1_ACQRET_count['Percnt-2018'] = (dfd18_ef1_ACQRET_count['RET-2018'] / dfd18_ea1_ACQRET_count['Total-2018'].sum()) * 100
dfd18_ef1_ACQRET_count['Percnt-2018'] = dfd18_ef1_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_ef1_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ea1_ACQRET_count = pd.DataFrame(filter_e1_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_ef1_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_ef1.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_ef1_ACQRET_count['Percent-2019'] = (dfd19_ef1_ACQRET_count['ACQ-2019'] / dfd19_ef1_Registrations_count['Total-2019'].sum()) * 100
dfd19_ef1_ACQRET_count['Percent-2019'] = dfd19_ef1_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_ef1_ACQRET_count['RET-2019'] = dfd19_ea1_ACQRET_count['Total-2019'] - dfd19_ef1_ACQRET_count['ACQ-2019']
dfd19_ef1_ACQRET_count['Percnt-2019'] = (dfd19_ef1_ACQRET_count['RET-2019'] / dfd19_ea1_ACQRET_count['Total-2019'].sum()) * 100
dfd19_ef1_ACQRET_count['Percnt-2019'] = dfd19_ef1_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_ef1_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ea1_ACQRET_count = pd.DataFrame(filter_e1_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_ef1_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_ef1.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_ef1_ACQRET_count['Percent-2021'] = (dfd21_ef1_ACQRET_count['ACQ-2021'] / dfd21_ef1_Registrations_count['Total-2021'].sum()) * 100
dfd21_ef1_ACQRET_count['Percent-2021'] = dfd21_ef1_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_ef1_ACQRET_count['RET-2021'] = dfd21_ea1_ACQRET_count['Total-2021'] - dfd21_ef1_ACQRET_count['ACQ-2021']
dfd21_ef1_ACQRET_count['Percnt-2021'] = (dfd21_ef1_ACQRET_count['RET-2021'] / dfd21_ea1_ACQRET_count['Total-2021'].sum()) * 100
dfd21_ef1_ACQRET_count['Percnt-2021'] = dfd21_ef1_ACQRET_count['Percnt-2021']
#print(tab(dfd21_ef1_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ea1_ACQRET_count = pd.DataFrame(filter_e1_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef1_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_ef1.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_ef1_ACQRET_count['Percent-2022'] = (dfd22_ef1_ACQRET_count['ACQ-2022'] / dfd22_ef1_Registrations_count['Total-2022'].sum()) * 100
dfd22_ef1_ACQRET_count['Percent-2022'] = dfd22_ef1_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_ef1_ACQRET_count['RET-2022'] = dfd22_ea1_ACQRET_count['Total-2022'] - dfd22_ef1_ACQRET_count['ACQ-2022']
dfd22_ef1_ACQRET_count['Percnt-2022'] = (dfd22_ef1_ACQRET_count['RET-2022'] / dfd22_ea1_ACQRET_count['Total-2022'].sum()) * 100
dfd22_ef1_ACQRET_count['Percnt-2022'] = dfd22_ef1_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_ef1_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ea1_ACQRET_count = pd.DataFrame(filter_e1_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef1_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_ef1.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_ef1_ACQRET_count['Percent-2023'] = (dfd23_ef1_ACQRET_count['ACQ-2023'] / dfd23_ef1_Registrations_count['Total-2023'].sum()) * 100
dfd23_ef1_ACQRET_count['Percent-2023'] = dfd23_ef1_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_ef1_ACQRET_count['RET-2023'] = dfd23_ea1_ACQRET_count['Total-2023'] - dfd23_ef1_ACQRET_count['ACQ-2023']
dfd23_ef1_ACQRET_count['Percnt-2023'] = (dfd23_ef1_ACQRET_count['RET-2023'] / dfd23_ea1_ACQRET_count['Total-2023'].sum()) * 100
dfd23_ef1_ACQRET_count['Percnt-2023'] = dfd23_ef1_ACQRET_count['Percnt-2023']
#print(tab(dfd23_ef1_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_ef1 = pd.DataFrame(pd.merge(dfd18_ea1_ACQRET_count, dfd18_ef1_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_ef1 = pd.DataFrame(pd.merge(dfd19_ea1_ACQRET_count, dfd19_ef1_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_ef1 = pd.DataFrame(pd.merge(dfd21_ea1_ACQRET_count, dfd21_ef1_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_ef1 = pd.DataFrame(pd.merge(dfd22_ea1_ACQRET_count, dfd22_ef1_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_5_ef1 = pd.DataFrame(pd.merge(dfd23_ea1_ACQRET_count, dfd23_ef1_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_5_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_ef1 = pd.DataFrame(pd.merge(df_ACQRET_count_1_ef1, df_ACQRET_count_2_ef1, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_ef1 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_ef1, df_ACQRET_count_3_ef1, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_ef1 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_ef1, df_ACQRET_count_4_ef1, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_ef1 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_ef1, df_ACQRET_count_5_ef1, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_ef1 = df_ACQRET_count_M4_ef1[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_ef1_Revenue_calc = pd.DataFrame(filter_e1_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_ef1_Revenue_calc['Percent-2017'] = (dfd17_ef1_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_ef1_Revenue_calc['Percent-2017'] = dfd17_ef1_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_ef1_Revenue_calc['7DEvolution-2017'] = dfd17_ef1_Revenue_calc['Total-2017']
#print(tab(dfd17_ef1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef1_Revenue_calc = pd.DataFrame(filter_e1_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_ef1_Revenue_calc['Percent-2018'] = (dfd18_ef1_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_ef1_Revenue_calc['Percent-2018'] = dfd18_ef1_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_ef1_Revenue_calc['7DEvolution-2018'] = dfd18_ef1_Revenue_calc['Total-2018']
#print(tab(dfd18_ef1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef1_Revenue_calc = pd.DataFrame(filter_e1_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_ef1_Revenue_calc['Percent-2019'] = (dfd19_ef1_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_ef1_Revenue_calc['Percent-2019'] = dfd19_ef1_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_ef1_Revenue_calc['7DEvolution-2019'] = dfd19_ef1_Revenue_calc['Total-2019']
#print(tab(dfd19_ef1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef1_Revenue_calc = pd.DataFrame(filter_e1_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_ef1_Revenue_calc['Percent-2021'] = (dfd21_ef1_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_ef1_Revenue_calc['Percent-2021'] = dfd21_ef1_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_ef1_Revenue_calc['7DEvolution-2021'] = dfd21_ef1_Revenue_calc['Total-2021']
#print(tab(dfd21_ef1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef1_Revenue_calc = pd.DataFrame(filter_e1_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_ef1_Revenue_calc['Percent-2022'] = (dfd22_ef1_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_ef1_Revenue_calc['Percent-2022'] = dfd22_ef1_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_ef1_Revenue_calc['7DEvolution-2022'] = dfd22_ef1_Revenue_calc['Total-2022']
#print(tab(dfd22_ef1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_Revenue_calc = pd.DataFrame(filter_e1_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_ef1_Revenue_calc['Percent-2023'] = (dfd23_ef1_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_ef1_Revenue_calc['Percent-2023'] = dfd23_ef1_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_ef1_Revenue_calc['7DEvolution-2023'] = dfd23_ef1_Revenue_calc['Total-2023']
#print(tab(dfd23_ef1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_ef1_RevenueEvolution_calc = pd.DataFrame(filter_e1_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_ef1_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_ef1_Revenue_calc['Total-2023'] - dfd19_ef1_Revenue_calc['Total-2019'])/ dfd19_ef1_Revenue_calc['Total-2019'].sum()) * 100
dfd23_ef1_RevenueEvolution_calc['Evolution-2023'] = dfd23_ef1_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_ef1_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_ef1 = pd.DataFrame(pd.merge(dfd17_ef1_Revenue_calc, dfd18_ef1_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_ef1 = pd.DataFrame(pd.merge(dfd19_ef1_Revenue_calc, dfd21_ef1_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_ef1 = pd.DataFrame(pd.merge(dfd22_ef1_Revenue_calc, dfd23_ef1_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_ef1_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_ef1, df_Revenue_calc_2_ef1, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_ef1Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_ef1_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_ef1_Evolution, df_Revenue_calc_3_ef1, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_ef1Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_ef1 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_ef1_Evolution, dfd23_ef1_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_ef1_Registrations_GRDel = pd.DataFrame(filtr_e1_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef1_Registrations_GRDel = dfd17_ef1_Registrations_GRDel.fillna('Unknown')
dfd17_ef1_Registrations_GRDel['Percent-2017'] = (dfd17_ef1_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_ef1_Registrations_GRDel['Percent-2017'] = dfd17_ef1_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_ef1_Registrations_GRDel['7DEvolution-2017'] = dfd17_ef1_Registrations_GRDel['Total-2017'] - dfd17_ef1_Registrations_GRDel['Total-2017']
#print(tab(dfd17_ef1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef1_Registrations_GRDel = pd.DataFrame(filtr_e1_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef1_Registrations_GRDel = dfd18_ef1_Registrations_GRDel.fillna('Unknown')
dfd18_ef1_Registrations_GRDel['Percent-2018'] = (dfd18_ef1_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_ef1_Registrations_GRDel['Percent-2018'] = dfd18_ef1_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_ef1_Registrations_GRDel['7DEvolution-2018'] = dfd18_ef1_Registrations_GRDel['Total-2018'] - dfd18_ef1_Registrations_GRDel['Total-2018']
#print(tab(dfd18_ef1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef1_Registrations_GRDel = pd.DataFrame(filtr_e1_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef1_Registrations_GRDel = dfd19_ef1_Registrations_GRDel.fillna('Unknown')
dfd19_ef1_Registrations_GRDel['Percent-2019'] = (dfd19_ef1_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_ef1_Registrations_GRDel['Percent-2019'] = dfd19_ef1_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_ef1_Registrations_GRDel['7DEvolution-2019'] = dfd19_ef1_Registrations_GRDel['Total-2019'] - dfd19_ef1_Registrations_GRDel['Total-2019']
#print(tab(dfd19_ef1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef1_Registrations_GRDel = pd.DataFrame(filtr_e1_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef1_Registrations_GRDel = dfd21_ef1_Registrations_GRDel.fillna('Unknown')
dfd21_ef1_Registrations_GRDel['Percent-2021'] = (dfd21_ef1_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_ef1_Registrations_GRDel['Percent-2021'] = dfd21_ef1_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_ef1_Registrations_GRDel['7DEvolution-2021'] = dfd21_ef1_Registrations_GRDel['Total-2021'] - dfd21_ef1_Registrations_GRDel['Total-2021']
#print(tab(dfd21_ef1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef1_Registrations_GRDel = pd.DataFrame(filtr_e1_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef1_Registrations_GRDel = dfd22_ef1_Registrations_GRDel.fillna('Unknown')
dfd22_ef1_Registrations_GRDel['Percent-2022'] = (dfd22_ef1_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_ef1_Registrations_GRDel['Percent-2022'] = dfd22_ef1_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_ef1_Registrations_GRDel['7DEvolution-2022'] = dfd22_ef1_Registrations_GRDel['Total-2022'] - dfd22_ef1_Registrations_GRDel['Total-2022']
#print(tab(dfd22_ef1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_Registrations_GRDel = pd.DataFrame(filtr_e1_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef1_Registrations_GRDel = dfd23_ef1_Registrations_GRDel.fillna('Unknown')
dfd23_ef1_Registrations_GRDel['Percent-2023'] = (dfd23_ef1_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_ef1_Registrations_GRDel['Percent-2023'] = dfd23_ef1_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_ef1_Registrations_GRDel['7DEvolution-2023'] = dfd23_ef1_Registrations_GRDel['Total-2023'] - dfd23_ef1_Registrations_GRDel['Total-2023']
#print(tab(dfd23_ef1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_ef1_Registrations_Evol_GRDel = pd.DataFrame(filtr_e1_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_ef1_Registrations_Evol_GRDel = dfd23_ef1_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_ef1_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_ef1_Registrations_GRDel['Total-2023'] - dfd19_ef1_Registrations_GRDel['Total-2019'])/ dfd19_ef1_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_ef1_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_ef1 = pd.concat([dfd17_ef1_Registrations_GRDel, dfd18_ef1_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_ef1 = pd.DataFrame(pd.merge(dfd17_ef1_Registrations_GRDel, dfd18_ef1_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_ef1 = pd.DataFrame(pd.merge(dfd19_ef1_Registrations_GRDel, dfd21_ef1_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_ef1 = pd.DataFrame(pd.merge(dfd22_ef1_Registrations_GRDel, dfd23_ef1_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_ef1 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_ef1, df_Registrations_GRDel_2_ef1, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_5_ef1 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_ef1, df_Registrations_GRDel_3_ef1, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_ef1 = pd.DataFrame(pd.merge(df_Registrations_GRDel_5_ef1, dfd23_ef1_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_ef1 = df_Registrations_GRDel_ef1[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]
#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_ef1 = filtr_e1_df18_GRdel[filtr_e1_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_ef1 = filtr_e1_df19_GRdel[filtr_e1_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_ef1 = filtr_e1_df21_GRdel[filtr_e1_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_ef1 = filtr_e1_df22_GRdel[filtr_e1_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_ef1 = filtr_e1_df23_GRdel[filtr_e1_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ea1_AC_RT_GRDel = pd.DataFrame(filtr_e1_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_ef1_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_ef1.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_ef1_AC_RT_GRDel['Percent-2018'] = (dfd18_ef1_AC_RT_GRDel['ACQ-2018'] / dfd18_ef1_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_ef1_AC_RT_GRDel['Percent-2018'] = dfd18_ef1_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_ef1_AC_RT_GRDel['RET-2018'] = dfd18_ea1_AC_RT_GRDel['Total-2018'] - dfd18_ef1_AC_RT_GRDel['ACQ-2018']
dfd18_ef1_AC_RT_GRDel['Percnt-2018'] = (dfd18_ef1_AC_RT_GRDel['RET-2018'] / dfd18_ea1_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_ef1_AC_RT_GRDel['Percnt-2018'] = dfd18_ef1_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_ef1_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ea1_AC_RT_GRDel = pd.DataFrame(filtr_e1_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_ef1_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_ef1.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_ef1_AC_RT_GRDel['Percent-2019'] = (dfd19_ef1_AC_RT_GRDel['ACQ-2019'] / dfd19_ef1_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_ef1_AC_RT_GRDel['Percent-2019'] = dfd19_ef1_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_ef1_AC_RT_GRDel['RET-2019'] = dfd19_ea1_AC_RT_GRDel['Total-2019'] - dfd19_ef1_AC_RT_GRDel['ACQ-2019']
dfd19_ef1_AC_RT_GRDel['Percnt-2019'] = (dfd19_ef1_AC_RT_GRDel['RET-2019'] / dfd19_ea1_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_ef1_AC_RT_GRDel['Percnt-2019'] = dfd19_ef1_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_ef1_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ea1_AC_RT_GRDel = pd.DataFrame(filtr_e1_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_ef1_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_ef1.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_ef1_AC_RT_GRDel['Percent-2021'] = (dfd21_ef1_AC_RT_GRDel['ACQ-2021'] / dfd21_ef1_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_ef1_AC_RT_GRDel['Percent-2021'] = dfd21_ef1_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_ef1_AC_RT_GRDel['RET-2021'] = dfd21_ea1_AC_RT_GRDel['Total-2021'] - dfd21_ef1_AC_RT_GRDel['ACQ-2021']
dfd21_ef1_AC_RT_GRDel['Percnt-2021'] = (dfd21_ef1_AC_RT_GRDel['RET-2021'] / dfd21_ea1_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_ef1_AC_RT_GRDel['Percnt-2021'] = dfd21_ef1_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_ef1_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ea1_AC_RT_GRDel = pd.DataFrame(filtr_e1_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_ef1_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_ef1.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_ef1_AC_RT_GRDel['Percent-2022'] = (dfd22_ef1_AC_RT_GRDel['ACQ-2022'] / dfd22_ef1_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_ef1_AC_RT_GRDel['Percent-2022'] = dfd22_ef1_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_ef1_AC_RT_GRDel['RET-2022'] = dfd22_ea1_AC_RT_GRDel['Total-2022'] - dfd22_ef1_AC_RT_GRDel['ACQ-2022']
dfd22_ef1_AC_RT_GRDel['Percnt-2022'] = (dfd22_ef1_AC_RT_GRDel['RET-2022'] / dfd22_ea1_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_ef1_AC_RT_GRDel['Percnt-2022'] = dfd22_ef1_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_ef1_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ea1_AC_RT_GRDel = pd.DataFrame(filtr_e1_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_ef1_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_ef1.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_ef1_AC_RT_GRDel['Percent-2023'] = (dfd23_ef1_AC_RT_GRDel['ACQ-2023'] / dfd23_ef1_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_ef1_AC_RT_GRDel['Percent-2023'] = dfd23_ef1_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_ef1_AC_RT_GRDel['RET-2023'] = dfd23_ea1_AC_RT_GRDel['Total-2023'] - dfd23_ef1_AC_RT_GRDel['ACQ-2023']
dfd23_ef1_AC_RT_GRDel['Percnt-2023'] = (dfd23_ef1_AC_RT_GRDel['RET-2023'] / dfd23_ea1_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_ef1_AC_RT_GRDel['Percnt-2023'] = dfd23_ef1_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_ef1_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_ef1 = pd.DataFrame(pd.merge_ordered(dfd18_ea1_AC_RT_GRDel, dfd18_ef1_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_ef1 = pd.DataFrame(pd.merge_ordered(dfd19_ea1_AC_RT_GRDel, dfd19_ef1_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_ef1 = pd.DataFrame(pd.merge_ordered(dfd21_ea1_AC_RT_GRDel, dfd21_ef1_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_ef1 = pd.DataFrame(pd.merge_ordered(dfd22_ea1_AC_RT_GRDel, dfd22_ef1_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_5_ef1 = pd.DataFrame(pd.merge_ordered(dfd23_ea1_AC_RT_GRDel, dfd23_ef1_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_ef1 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_ef1, df_AC_ET_GRDel_2_ef1, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_ef1 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_ef1, df_AC_ET_GRDel_3_ef1, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_ef1 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_ef1, df_AC_ET_GRDel_4_ef1, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_ef1 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_ef1, df_AC_ET_GRDel_5_ef1, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_ef1 = df_AC_RT_GRDel_M4_ef1[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_e1_df17_GRdel = filtr_e1_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_ef1_Revenu_GRDel = pd.DataFrame(filtr_e1_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_ef1_Revenu_GRDel['Percent-2017'] = (dfd17_ef1_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_ef1_Revenu_GRDel['Percent-2017'] = dfd17_ef1_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_ef1_Revenu_GRDel['7DEvolution-2017'] = dfd17_ef1_Revenu_GRDel['Total-2017']
#print(tab(dfd17_ef1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e1_df18_GRdel = filtr_e1_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_ef1_Revenu_GRDel = pd.DataFrame(filtr_e1_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_ef1_Revenu_GRDel['Percent-2018'] = (dfd18_ef1_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_ef1_Revenu_GRDel['Percent-2018'] = dfd18_ef1_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_ef1_Revenu_GRDel['7DEvolution-2018'] = dfd18_ef1_Revenu_GRDel['Total-2018']
#print(tab(dfd18_ef1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e1_df19_GRdel = filtr_e1_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_ef1_Revenu_GRDel = pd.DataFrame(filtr_e1_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_ef1_Revenu_GRDel['Percent-2019'] = (dfd19_ef1_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_ef1_Revenu_GRDel['Percent-2019'] = dfd19_ef1_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_ef1_Revenu_GRDel['7DEvolution-2019'] = dfd19_ef1_Revenu_GRDel['Total-2019']
#print(tab(dfd19_ef1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e1_df21_GRdel = filtr_e1_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_ef1_Revenu_GRDel = pd.DataFrame(filtr_e1_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_ef1_Revenu_GRDel['Percent-2021'] = (dfd21_ef1_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_ef1_Revenu_GRDel['Percent-2021'] = dfd21_ef1_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_ef1_Revenu_GRDel['7DEvolution-2021'] = dfd21_ef1_Revenu_GRDel['Total-2021']
#print(tab(dfd21_ef1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e1_df22_GRdel = filtr_e1_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_ef1_Revenu_GRDel = pd.DataFrame(filtr_e1_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_ef1_Revenu_GRDel['Percent-2022'] = (dfd22_ef1_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_ef1_Revenu_GRDel['Percent-2022'] = dfd22_ef1_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_ef1_Revenu_GRDel['7DEvolution-2022'] = dfd22_ef1_Revenu_GRDel['Total-2022']
#print(tab(dfd22_ef1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e1_df23_GRdel = filtr_e1_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_ef1_Revenu_GRDel = pd.DataFrame(filtr_e1_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_ef1_Revenu_GRDel['Percent-2023'] = (dfd23_ef1_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_ef1_Revenu_GRDel['Percent-2023'] = dfd23_ef1_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_ef1_Revenu_GRDel['7DEvolution-2023'] = dfd23_ef1_Revenu_GRDel['Total-2023']
#print(tab(dfd23_ef1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_ef1_Revenu_Evlt_GRDel = pd.DataFrame(filtr_e1_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_ef1_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_ef1_Revenu_GRDel['Total-2023'] - dfd19_ef1_Revenu_GRDel['Total-2019'])/ dfd19_ef1_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_ef1_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_ef1_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_ef1_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_ef1 = pd.DataFrame(pd.merge(dfd17_ef1_Revenu_GRDel, dfd18_ef1_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_ef1 = pd.DataFrame(pd.merge(dfd19_ef1_Revenu_GRDel, dfd21_ef1_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_ef1 = pd.DataFrame(pd.merge(dfd22_ef1_Revenu_GRDel, dfd23_ef1_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_ef1 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_ef1, df_Revenu_GRDel_2_ef1, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_5_ef1 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_ef1, df_Revenu_GRDel_3_ef1, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_ef1 = pd.DataFrame(pd.merge(df_Revenu_GRDel_5_ef1, dfd23_ef1_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_ef1 = df_Revenu_GRDel_ef1[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

#UNIT 3
#COUNT PROFILE
dfd17_ef1_Profile_count = pd.DataFrame(filtr_e1_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef1_Profile_count = dfd17_ef1_Profile_count.fillna('Unknown')
dfd17_ef1_Profile_count['Percent-2017'] = (dfd17_ef1_Profile_count['Total-2017'] / dfd17_ef1_Profile_count['Total-2017'].sum()) * 100
dfd17_ef1_Profile_count['Percent-2017'] = dfd17_ef1_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef1_Profile_count = pd.DataFrame(filtr_e1_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef1_Profile_count = dfd18_ef1_Profile_count.fillna('Unknown')
dfd18_ef1_Profile_count['Percent-2018'] = (dfd18_ef1_Profile_count['Total-2018'] / dfd18_ef1_Profile_count['Total-2018'].sum()) * 100
dfd18_ef1_Profile_count['Percent-2018'] = dfd18_ef1_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef1_Profile_count = pd.DataFrame(filtr_e1_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef1_Profile_count = dfd19_ef1_Profile_count.fillna('Unknown')
dfd19_ef1_Profile_count['Percent-2019'] = (dfd19_ef1_Profile_count['Total-2019'] / dfd19_ef1_Profile_count['Total-2019'].sum()) * 100
dfd19_ef1_Profile_count['Percent-2019'] = dfd19_ef1_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef1_Profile_count = pd.DataFrame(filtr_e1_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef1_Profile_count = dfd21_ef1_Profile_count.fillna('Unknown')
dfd21_ef1_Profile_count['Percent-2021'] = (dfd21_ef1_Profile_count['Total-2021'] / dfd21_ef1_Profile_count['Total-2021'].sum()) * 100
dfd21_ef1_Profile_count['Percent-2021'] = dfd21_ef1_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef1_Profile_count = pd.DataFrame(filtr_e1_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef1_Profile_count = dfd22_ef1_Profile_count.fillna('Unknown')
dfd22_ef1_Profile_count['Percent-2022'] = (dfd22_ef1_Profile_count['Total-2022'] / dfd22_ef1_Profile_count['Total-2022'].sum()) * 100
dfd22_ef1_Profile_count['Percent-2022'] = dfd22_ef1_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_Profile_count = pd.DataFrame(filtr_e1_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef1_Profile_count = dfd23_ef1_Profile_count.fillna('Unknown')
dfd23_ef1_Profile_count['Percent-2023'] = (dfd23_ef1_Profile_count['Total-2023'] / dfd23_ef1_Profile_count['Total-2023'].sum()) * 100
dfd23_ef1_Profile_count['Percent-2023'] = dfd23_ef1_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_ef1 = pd.DataFrame(pd.merge(dfd17_ef1_Profile_count, dfd18_ef1_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_ef1 = pd.DataFrame(pd.merge(dfd19_ef1_Profile_count, dfd21_ef1_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_ef1 = pd.DataFrame(pd.merge(dfd22_ef1_Profile_count, dfd23_ef1_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_ef1 = pd.DataFrame(pd.merge(df_Profile_Count_1_ef1, df_Profile_Count_2_ef1, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_ef1 = pd.DataFrame(pd.merge(df_Profile_Count_m1_ef1, df_Profile_Count_3_ef1, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_ef1 = df_Profile_Count_m2_ef1.append(df_Profile_Count_m2_ef1.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_ef1['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_ef1_Pass_count = pd.DataFrame(filtr_e1_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef1_Pass_count = dfd17_ef1_Pass_count.fillna('Unknown')
dfd17_ef1_Pass_count['Percent-2017'] = (dfd17_ef1_Pass_count['Total-2017'] / dfd17_ef1_Pass_count['Total-2017'].sum()) * 100
dfd17_ef1_Pass_count['Percent-2017'] = dfd17_ef1_Pass_count['Percent-2017'].round(decimals=0)

dfd18_ef1_Pass_count = pd.DataFrame(filtr_e1_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef1_Pass_count = dfd18_ef1_Pass_count.fillna('Unknown')
dfd18_ef1_Pass_count['Percent-2018'] = (dfd18_ef1_Pass_count['Total-2018'] / dfd18_ef1_Pass_count['Total-2018'].sum()) * 100
dfd18_ef1_Pass_count['Percent-2018'] = dfd18_ef1_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef1_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef1_Pass_count = pd.DataFrame(filtr_e1_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef1_Pass_count = dfd19_ef1_Pass_count.fillna('Unknown')
dfd19_ef1_Pass_count['Percent-2019'] = (dfd19_ef1_Pass_count['Total-2019'] / dfd19_ef1_Pass_count['Total-2019'].sum()) * 100
dfd19_ef1_Pass_count['Percent-2019'] = dfd19_ef1_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef1_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef1_Pass_count = pd.DataFrame(filtr_e1_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef1_Pass_count = dfd21_ef1_Pass_count.fillna('Unknown')
dfd21_ef1_Pass_count['Percent-2021'] = (dfd21_ef1_Pass_count['Total-2021'] / dfd21_ef1_Pass_count['Total-2021'].sum()) * 100
dfd21_ef1_Pass_count['Percent-2021'] = dfd21_ef1_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef1_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef1_Pass_count = pd.DataFrame(filtr_e1_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef1_Pass_count = dfd22_ef1_Pass_count.fillna('Unknown')
dfd22_ef1_Pass_count['Percent-2022'] = (dfd22_ef1_Pass_count['Total-2022'] / dfd22_ef1_Pass_count['Total-2022'].sum()) * 100
dfd22_ef1_Pass_count['Percent-2022'] = dfd22_ef1_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef1_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_Pass_count = pd.DataFrame(filtr_e1_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef1_Pass_count = dfd23_ef1_Pass_count.fillna('Unknown')
dfd23_ef1_Pass_count['Percent-2023'] = (dfd23_ef1_Pass_count['Total-2023'] / dfd23_ef1_Pass_count['Total-2023'].sum()) * 100
dfd23_ef1_Pass_count['Percent-2023'] = dfd23_ef1_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef1_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_ef1 = pd.DataFrame(pd.merge(dfd17_ef1_Pass_count, dfd18_ef1_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_ef1 = pd.DataFrame(pd.merge(dfd19_ef1_Pass_count, dfd21_ef1_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_ef1 = pd.DataFrame(pd.merge(dfd22_ef1_Pass_count, dfd23_ef1_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_ef1 = pd.DataFrame(pd.merge(df_Pass_Count_1_ef1, df_Pass_Count_2_ef1, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_ef1 = pd.DataFrame(pd.merge(df_Pass_Count_m1_ef1, df_Pass_Count_3_ef1, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_ef1 = df_Pass_Count_m2_ef1.append(df_Pass_Count_m2_ef1.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_ef1['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_ef1_Attendees_Country_count = pd.DataFrame(filtr_e1_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef1_Attendees_Country_count = dfd17_ef1_Attendees_Country_count.fillna('Unknown')
dfd17_ef1_Attendees_Country_count['Percent-2017'] = (dfd17_ef1_Attendees_Country_count['Total-2017'] / dfd17_ef1_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_ef1_Attendees_Country_count['Percent-2017'] = dfd17_ef1_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef1_Attendees_Country_count = pd.DataFrame(filtr_e1_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef1_Attendees_Country_count = dfd18_ef1_Attendees_Country_count.fillna('Unknown')
dfd18_ef1_Attendees_Country_count['Percent-2018'] = (dfd18_ef1_Attendees_Country_count['Total-2018'] / dfd18_ef1_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_ef1_Attendees_Country_count['Percent-2018'] = dfd18_ef1_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef1_Attendees_Country_count = pd.DataFrame(filtr_e1_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef1_Attendees_Country_count = dfd19_ef1_Attendees_Country_count.fillna('Unknown')
dfd19_ef1_Attendees_Country_count['Percent-2019'] = (dfd19_ef1_Attendees_Country_count['Total-2019'] / dfd19_ef1_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_ef1_Attendees_Country_count['Percent-2019'] = dfd19_ef1_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef1_Attendees_Country_count = pd.DataFrame(filtr_e1_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef1_Attendees_Country_count = dfd21_ef1_Attendees_Country_count.fillna('Unknown')
dfd21_ef1_Attendees_Country_count['Percent-2021'] = (dfd21_ef1_Attendees_Country_count['Total-2021'] / dfd21_ef1_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_ef1_Attendees_Country_count['Percent-2021'] = dfd21_ef1_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef1_Attendees_Country_count = pd.DataFrame(filtr_e1_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef1_Attendees_Country_count = dfd22_ef1_Attendees_Country_count.fillna('Unknown')
dfd22_ef1_Attendees_Country_count['Percent-2022'] = (dfd22_ef1_Attendees_Country_count['Total-2022'] / dfd22_ef1_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_ef1_Attendees_Country_count['Percent-2022'] = dfd22_ef1_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_Attendees_Country_count = pd.DataFrame(filtr_e1_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef1_Attendees_Country_count = dfd23_ef1_Attendees_Country_count.fillna('Unknown')
dfd23_ef1_Attendees_Country_count['Percent-2023'] = (dfd23_ef1_Attendees_Country_count['Total-2023'] / dfd23_ef1_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_ef1_Attendees_Country_count['Percent-2023'] = dfd23_ef1_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_ef1 = pd.DataFrame(pd.merge(dfd17_ef1_Attendees_Country_count, dfd18_ef1_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_ef1 = pd.DataFrame(pd.merge(dfd19_ef1_Attendees_Country_count, dfd21_ef1_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_ef1 = pd.DataFrame(pd.merge(dfd22_ef1_Attendees_Country_count, dfd23_ef1_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_ef1 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_ef1, dfAttendees_Country_Count_2_ef1, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_ef1.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_ef1 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_ef1, dfAttendees_Country_Count_3_ef1, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_ef1 = dfAttendees_Country_Count_m2_ef1.append(dfAttendees_Country_Count_m2_ef1.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_ef1['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_ef1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e1_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef1_ATTENDEES_AREAS_count = dfd17_ef1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_ef1_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_ef1_ATTENDEES_AREAS_count['Total-2017'] / dfd17_ef1_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_ef1_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_ef1_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e1_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef1_ATTENDEES_AREAS_count = dfd18_ef1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_ef1_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_ef1_ATTENDEES_AREAS_count['Total-2018'] / dfd18_ef1_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_ef1_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_ef1_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e1_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef1_ATTENDEES_AREAS_count = dfd19_ef1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_ef1_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_ef1_ATTENDEES_AREAS_count['Total-2019'] / dfd19_ef1_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_ef1_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_ef1_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e1_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef1_ATTENDEES_AREAS_count = dfd21_ef1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_ef1_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_ef1_ATTENDEES_AREAS_count['Total-2021'] / dfd21_ef1_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_ef1_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_ef1_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e1_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef1_ATTENDEES_AREAS_count = dfd22_ef1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_ef1_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_ef1_ATTENDEES_AREAS_count['Total-2022'] / dfd22_ef1_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_ef1_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_ef1_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e1_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef1_ATTENDEES_AREAS_count = dfd23_ef1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_ef1_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_ef1_ATTENDEES_AREAS_count['Total-2023'] / dfd23_ef1_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_ef1_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_ef1_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_ef1 = pd.DataFrame(pd.merge(dfd17_ef1_ATTENDEES_AREAS_count, dfd18_ef1_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_ef1 = pd.DataFrame(pd.merge(dfd19_ef1_ATTENDEES_AREAS_count, dfd21_ef1_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_ef1 = pd.DataFrame(pd.merge(dfd22_ef1_ATTENDEES_AREAS_count, dfd23_ef1_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_ef1.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_ef1 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_ef1, df_ATTENDEES_AREAS_count_2_ef1, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_ef1 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_ef1, df_ATTENDEES_AREAS_count_3_ef1, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_ef1 = df_ATTENDEES_AREAS_count_m2_ef1.append(df_ATTENDEES_AREAS_count_m2_ef1.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_ef1['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_ef1_Attendees_Specialty_count = pd.DataFrame(filtr_e1_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef1_Attendees_Specialty_count = dfd17_ef1_Attendees_Specialty_count.fillna('Unknown')
dfd17_ef1_Attendees_Specialty_count['Percent-2017'] = (dfd17_ef1_Attendees_Specialty_count['Total-2017'] / dfd17_ef1_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_ef1_Attendees_Specialty_count['Percent-2017'] = dfd17_ef1_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef1_Attendees_Specialty_count = pd.DataFrame(filtr_e1_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef1_Attendees_Specialty_count = dfd18_ef1_Attendees_Specialty_count.fillna('Unknown')
dfd18_ef1_Attendees_Specialty_count['Percent-2018'] = (dfd18_ef1_Attendees_Specialty_count['Total-2018'] / dfd18_ef1_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_ef1_Attendees_Specialty_count['Percent-2018'] = dfd18_ef1_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef1_Attendees_Specialty_count = pd.DataFrame(filtr_e1_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef1_Attendees_Specialty_count = dfd19_ef1_Attendees_Specialty_count.fillna('Unknown')
dfd19_ef1_Attendees_Specialty_count['Percent-2019'] = (dfd19_ef1_Attendees_Specialty_count['Total-2019'] / dfd19_ef1_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_ef1_Attendees_Specialty_count['Percent-2019'] = dfd19_ef1_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef1_Attendees_Specialty_count = pd.DataFrame(filtr_e1_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef1_Attendees_Specialty_count = dfd21_ef1_Attendees_Specialty_count.fillna('Unknown')
dfd21_ef1_Attendees_Specialty_count['Percent-2021'] = (dfd21_ef1_Attendees_Specialty_count['Total-2021'] / dfd21_ef1_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_ef1_Attendees_Specialty_count['Percent-2021'] = dfd21_ef1_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef1_Attendees_Specialty_count = pd.DataFrame(filtr_e1_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef1_Attendees_Specialty_count = dfd22_ef1_Attendees_Specialty_count.fillna('Unknown')
dfd22_ef1_Attendees_Specialty_count['Percent-2022'] = (dfd22_ef1_Attendees_Specialty_count['Total-2022'] / dfd22_ef1_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_ef1_Attendees_Specialty_count['Percent-2022'] = dfd22_ef1_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef1_Attendees_Specialty_count = pd.DataFrame(filtr_e1_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef1_Attendees_Specialty_count = dfd23_ef1_Attendees_Specialty_count.fillna('Unknown')
dfd23_ef1_Attendees_Specialty_count['Percent-2023'] = (dfd23_ef1_Attendees_Specialty_count['Total-2023'] / dfd23_ef1_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_ef1_Attendees_Specialty_count['Percent-2023'] = dfd23_ef1_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_ef1 = pd.DataFrame(pd.merge(dfd17_ef1_Attendees_Specialty_count, dfd18_ef1_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_ef1 = pd.DataFrame(pd.merge(dfd19_ef1_Attendees_Specialty_count, dfd21_ef1_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_ef1 = pd.DataFrame(pd.merge(dfd22_ef1_Attendees_Specialty_count, dfd23_ef1_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_ef1 = pd.DataFrame(pd.merge(df_Specialty_count_1_ef1, df_Specialty_count_2_ef1, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_ef1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_ef1 = pd.DataFrame(pd.merge(df_Specialty_count_m1_ef1, df_Specialty_count_3_ef1, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_ef1 = df_Specialty_count_m2_ef1.append(df_Specialty_count_m2_ef1.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_ef1['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
df_Registrations_Merge_ef1['Total-2017'] = pd.to_numeric(df_Registrations_Merge_ef1['Total-2017'],errors='coerce')
df_Registrations_Merge_ef1 = df_Registrations_Merge_ef1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef1['Total-2017'] = df_Registrations_Merge_ef1['Total-2017'].astype(int)
df_Registrations_Merge_ef1['Percent-2017'] = df_Registrations_Merge_ef1['Percent-2017'].astype(float)
df_Registrations_Merge_ef1['7DEvolution-2017'] = df_Registrations_Merge_ef1['7DEvolution-2017'].astype(int)

df_Registrations_Merge_ef1['Total-2018'] = pd.to_numeric(df_Registrations_Merge_ef1['Total-2018'],errors='coerce')
df_Registrations_Merge_ef1 = df_Registrations_Merge_ef1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef1['Total-2018'] = df_Registrations_Merge_ef1['Total-2018'].astype(int)
df_Registrations_Merge_ef1['Percent-2018'] = df_Registrations_Merge_ef1['Percent-2018'].astype(float)
df_Registrations_Merge_ef1['7DEvolution-2018'] = df_Registrations_Merge_ef1['7DEvolution-2018'].astype(int)

df_Registrations_Merge_ef1['Total-2019'] = pd.to_numeric(df_Registrations_Merge_ef1['Total-2019'],errors='coerce')
df_Registrations_Merge_ef1 = df_Registrations_Merge_ef1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef1['Total-2019'] = df_Registrations_Merge_ef1['Total-2019'].astype(int)
df_Registrations_Merge_ef1['Percent-2019'] = df_Registrations_Merge_ef1['Percent-2019'].astype(float)
df_Registrations_Merge_ef1['7DEvolution-2019'] = df_Registrations_Merge_ef1['7DEvolution-2019'].astype(int)

df_Registrations_Merge_ef1['Total-2021'] = pd.to_numeric(df_Registrations_Merge_ef1['Total-2021'],errors='coerce')
df_Registrations_Merge_ef1 = df_Registrations_Merge_ef1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef1['Total-2021'] = df_Registrations_Merge_ef1['Total-2021'].astype(int)
df_Registrations_Merge_ef1['Percent-2021'] = df_Registrations_Merge_ef1['Percent-2021'].astype(float)
df_Registrations_Merge_ef1['7DEvolution-2021'] = df_Registrations_Merge_ef1['7DEvolution-2021'].astype(int)

df_Registrations_Merge_ef1['Total-2022'] = pd.to_numeric(df_Registrations_Merge_ef1['Total-2022'],errors='coerce')
df_Registrations_Merge_ef1 = df_Registrations_Merge_ef1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef1['Total-2022'] = df_Registrations_Merge_ef1['Total-2022'].astype(int)
df_Registrations_Merge_ef1['Percent-2022'] = df_Registrations_Merge_ef1['Percent-2022'].astype(float)
df_Registrations_Merge_ef1['7DEvolution-2022'] = df_Registrations_Merge_ef1['7DEvolution-2022'].astype(int)

df_Registrations_Merge_ef1['Total-2023'] = pd.to_numeric(df_Registrations_Merge_ef1['Total-2023'],errors='coerce')
df_Registrations_Merge_ef1 = df_Registrations_Merge_ef1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef1['Total-2023'] = df_Registrations_Merge_ef1['Total-2023'].astype(int)
df_Registrations_Merge_ef1['Percent-2023'] = df_Registrations_Merge_ef1['Percent-2023'].astype(float)
df_Registrations_Merge_ef1['7DEvolution-2023'] = df_Registrations_Merge_ef1['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
df_ACQRET_count_M4_ef1['Total-2018'] = pd.to_numeric(df_ACQRET_count_M4_ef1['Total-2018'],errors='coerce')
df_ACQRET_count_M4_ef1 = df_ACQRET_count_M4_ef1.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef1['Total-2018'] = df_ACQRET_count_M4_ef1['Total-2018'].astype(int)
df_ACQRET_count_M4_ef1['ACQ-2018'] = df_ACQRET_count_M4_ef1['ACQ-2018'].astype(int)
df_ACQRET_count_M4_ef1['Percent-2018'] = df_ACQRET_count_M4_ef1['Percent-2018'].astype(float)
df_ACQRET_count_M4_ef1['RET-2018'] = df_ACQRET_count_M4_ef1['RET-2018'].astype(int)
df_ACQRET_count_M4_ef1['Percnt-2018'] = df_ACQRET_count_M4_ef1['Percnt-2018'].astype(float)

df_ACQRET_count_M4_ef1['Total-2019'] = pd.to_numeric(df_ACQRET_count_M4_ef1['Total-2019'],errors='coerce')
df_ACQRET_count_M4_ef1 = df_ACQRET_count_M4_ef1.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef1['Total-2019'] = df_ACQRET_count_M4_ef1['Total-2019'].astype(int)
df_ACQRET_count_M4_ef1['ACQ-2019'] = df_ACQRET_count_M4_ef1['ACQ-2019'].astype(int)
df_ACQRET_count_M4_ef1['Percent-2019'] = df_ACQRET_count_M4_ef1['Percent-2019'].astype(float)
df_ACQRET_count_M4_ef1['RET-2019'] = df_ACQRET_count_M4_ef1['RET-2019'].astype(int)
df_ACQRET_count_M4_ef1['Percnt-2019'] = df_ACQRET_count_M4_ef1['Percnt-2019'].astype(float)

df_ACQRET_count_M4_ef1['Total-2021'] = pd.to_numeric(df_ACQRET_count_M4_ef1['Total-2021'],errors='coerce')
df_ACQRET_count_M4_ef1 = df_ACQRET_count_M4_ef1.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef1['Total-2021'] = df_ACQRET_count_M4_ef1['Total-2021'].astype(int)
df_ACQRET_count_M4_ef1['ACQ-2021'] = df_ACQRET_count_M4_ef1['ACQ-2021'].astype(int)
df_ACQRET_count_M4_ef1['Percent-2021'] = df_ACQRET_count_M4_ef1['Percent-2021'].astype(float)
df_ACQRET_count_M4_ef1['RET-2021'] = df_ACQRET_count_M4_ef1['RET-2021'].astype(int)
df_ACQRET_count_M4_ef1['Percnt-2021'] = df_ACQRET_count_M4_ef1['Percnt-2021'].astype(float)

df_ACQRET_count_M4_ef1['Total-2022'] = pd.to_numeric(df_ACQRET_count_M4_ef1['Total-2022'],errors='coerce')
df_ACQRET_count_M4_ef1 = df_ACQRET_count_M4_ef1.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef1['Total-2022'] = df_ACQRET_count_M4_ef1['Total-2022'].astype(int)
df_ACQRET_count_M4_ef1['ACQ-2022'] = df_ACQRET_count_M4_ef1['ACQ-2022'].astype(int)
df_ACQRET_count_M4_ef1['Percent-2022'] = df_ACQRET_count_M4_ef1['Percent-2022'].astype(float)
df_ACQRET_count_M4_ef1['RET-2022'] = df_ACQRET_count_M4_ef1['RET-2022'].astype(int)
df_ACQRET_count_M4_ef1['Percnt-2022'] = df_ACQRET_count_M4_ef1['Percnt-2022'].astype(float)

df_ACQRET_count_M4_ef1['Total-2023'] = pd.to_numeric(df_ACQRET_count_M4_ef1['Total-2023'],errors='coerce')
df_ACQRET_count_M4_ef1 = df_ACQRET_count_M4_ef1.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef1['Total-2023'] = df_ACQRET_count_M4_ef1['Total-2023'].astype(int)
df_ACQRET_count_M4_ef1['ACQ-2023'] = df_ACQRET_count_M4_ef1['ACQ-2023'].astype(int)
df_ACQRET_count_M4_ef1['Percent-2023'] = df_ACQRET_count_M4_ef1['Percent-2023'].astype(float)
df_ACQRET_count_M4_ef1['RET-2023'] = df_ACQRET_count_M4_ef1['RET-2023'].astype(int)
df_ACQRET_count_M4_ef1['Percnt-2023'] = df_ACQRET_count_M4_ef1['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
df_Revenue_calc_ef1['Total-2017'] = pd.to_numeric(df_Revenue_calc_ef1['Total-2017'],errors='coerce')
df_Revenue_calc_ef1 = df_Revenue_calc_ef1.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef1['Total-2017'] = df_Revenue_calc_ef1['Total-2017'].astype(int)
df_Revenue_calc_ef1['Percent-2017'] = df_Revenue_calc_ef1['Percent-2017'].astype(float)
df_Revenue_calc_ef1['7DEvolution-2017'] = df_Revenue_calc_ef1['7DEvolution-2017'].astype(int)

df_Revenue_calc_ef1['Total-2018'] = pd.to_numeric(df_Revenue_calc_ef1['Total-2018'],errors='coerce')
df_Revenue_calc_ef1 = df_Revenue_calc_ef1.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef1['Total-2018'] = df_Revenue_calc_ef1['Total-2018'].astype(int)
df_Revenue_calc_ef1['Percent-2018'] = df_Revenue_calc_ef1['Percent-2018'].astype(float)
df_Revenue_calc_ef1['7DEvolution-2018'] = df_Revenue_calc_ef1['7DEvolution-2018'].astype(int)

df_Revenue_calc_ef1['Total-2019'] = pd.to_numeric(df_Revenue_calc_ef1['Total-2019'],errors='coerce')
df_Revenue_calc_ef1 = df_Revenue_calc_ef1.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef1['Total-2019'] = df_Revenue_calc_ef1['Total-2019'].astype(int)
df_Revenue_calc_ef1['Percent-2019'] = df_Revenue_calc_ef1['Percent-2019'].astype(float)
df_Revenue_calc_ef1['7DEvolution-2019'] = df_Revenue_calc_ef1['7DEvolution-2019'].astype(int)

df_Revenue_calc_ef1['Total-2022'] = pd.to_numeric(df_Revenue_calc_ef1['Total-2022'],errors='coerce')
df_Revenue_calc_ef1 = df_Revenue_calc_ef1.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef1['Total-2022'] = df_Revenue_calc_ef1['Total-2022'].astype(int)
df_Revenue_calc_ef1['Percent-2022'] = df_Revenue_calc_ef1['Percent-2022'].astype(float)
df_Revenue_calc_ef1['7DEvolution-2022'] = df_Revenue_calc_ef1['7DEvolution-2022'].astype(int)

df_Revenue_calc_ef1['Total-2023'] = pd.to_numeric(df_Revenue_calc_ef1['Total-2023'],errors='coerce')
df_Revenue_calc_ef1 = df_Revenue_calc_ef1.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef1['Total-2023'] = df_Revenue_calc_ef1['Total-2023'].astype(int)
df_Revenue_calc_ef1['Percent-2023'] = df_Revenue_calc_ef1['Percent-2023'].astype(float)
df_Revenue_calc_ef1['7DEvolution-2023'] = df_Revenue_calc_ef1['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
df_Registrations_GRDel_ef1['Total-2017'] = pd.to_numeric(df_Registrations_GRDel_ef1['Total-2017'],errors='coerce')
df_Registrations_GRDel_ef1 = df_Registrations_GRDel_ef1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef1['Total-2017'] = df_Registrations_GRDel_ef1['Total-2017'].astype(int)
df_Registrations_GRDel_ef1['Percent-2017'] = df_Registrations_GRDel_ef1['Percent-2017'].astype(float)
df_Registrations_GRDel_ef1['7DEvolution-2017'] = df_Registrations_GRDel_ef1['7DEvolution-2017'].astype(int)

df_Registrations_GRDel_ef1['Total-2018'] = pd.to_numeric(df_Registrations_GRDel_ef1['Total-2018'],errors='coerce')
df_Registrations_GRDel_ef1 = df_Registrations_GRDel_ef1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef1['Total-2018'] = df_Registrations_GRDel_ef1['Total-2018'].astype(int)
df_Registrations_GRDel_ef1['Percent-2018'] = df_Registrations_GRDel_ef1['Percent-2018'].astype(float)
df_Registrations_GRDel_ef1['7DEvolution-2018'] = df_Registrations_GRDel_ef1['7DEvolution-2018'].astype(int)

df_Registrations_GRDel_ef1['Total-2019'] = pd.to_numeric(df_Registrations_GRDel_ef1['Total-2019'],errors='coerce')
df_Registrations_GRDel_ef1 = df_Registrations_GRDel_ef1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef1['Total-2019'] = df_Registrations_GRDel_ef1['Total-2019'].astype(int)
df_Registrations_GRDel_ef1['Percent-2019'] = df_Registrations_GRDel_ef1['Percent-2019'].astype(float)
df_Registrations_GRDel_ef1['7DEvolution-2019'] = df_Registrations_GRDel_ef1['7DEvolution-2019'].astype(int)

df_Registrations_GRDel_ef1['Total-2021'] = pd.to_numeric(df_Registrations_GRDel_ef1['Total-2021'],errors='coerce')
df_Registrations_GRDel_ef1 = df_Registrations_GRDel_ef1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef1['Total-2021'] = df_Registrations_GRDel_ef1['Total-2021'].astype(int)
df_Registrations_GRDel_ef1['Percent-2021'] = df_Registrations_GRDel_ef1['Percent-2021'].astype(float)
df_Registrations_GRDel_ef1['7DEvolution-2021'] = df_Registrations_GRDel_ef1['7DEvolution-2021'].astype(int)

df_Registrations_GRDel_ef1['Total-2022'] = pd.to_numeric(df_Registrations_GRDel_ef1['Total-2022'],errors='coerce')
df_Registrations_GRDel_ef1 = df_Registrations_GRDel_ef1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef1['Total-2022'] = df_Registrations_GRDel_ef1['Total-2022'].astype(int)
df_Registrations_GRDel_ef1['Percent-2022'] = df_Registrations_GRDel_ef1['Percent-2022'].astype(float)
df_Registrations_GRDel_ef1['7DEvolution-2022'] = df_Registrations_GRDel_ef1['7DEvolution-2022'].astype(int)

df_Registrations_GRDel_ef1['Total-2023'] = pd.to_numeric(df_Registrations_GRDel_ef1['Total-2023'],errors='coerce')
df_Registrations_GRDel_ef1 = df_Registrations_GRDel_ef1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef1['Total-2023'] = df_Registrations_GRDel_ef1['Total-2023'].astype(int)
df_Registrations_GRDel_ef1['Percent-2023'] = df_Registrations_GRDel_ef1['Percent-2023'].astype(float)
df_Registrations_GRDel_ef1['7DEvolution-2023'] = df_Registrations_GRDel_ef1['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
df_AC_RT_GRDel_M4_ef1['Total-2018'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef1['Total-2018'],errors='coerce')
df_AC_RT_GRDel_M4_ef1 = df_AC_RT_GRDel_M4_ef1.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef1['Total-2018'] = df_AC_RT_GRDel_M4_ef1['Total-2018'].astype(int)
df_AC_RT_GRDel_M4_ef1['ACQ-2018'] = df_AC_RT_GRDel_M4_ef1['ACQ-2018'].astype(int)
df_AC_RT_GRDel_M4_ef1['Percent-2018'] = df_AC_RT_GRDel_M4_ef1['Percent-2018'].astype(float)
df_AC_RT_GRDel_M4_ef1['RET-2018'] = df_AC_RT_GRDel_M4_ef1['RET-2018'].astype(int)
df_AC_RT_GRDel_M4_ef1['Percnt-2018'] = df_AC_RT_GRDel_M4_ef1['Percnt-2018'].astype(float)

df_AC_RT_GRDel_M4_ef1['Total-2019'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef1['Total-2019'],errors='coerce')
df_AC_RT_GRDel_M4_ef1 = df_AC_RT_GRDel_M4_ef1.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef1['Total-2019'] = df_AC_RT_GRDel_M4_ef1['Total-2019'].astype(int)
df_AC_RT_GRDel_M4_ef1['ACQ-2019'] = df_AC_RT_GRDel_M4_ef1['ACQ-2019'].astype(int)
df_AC_RT_GRDel_M4_ef1['Percent-2019'] = df_AC_RT_GRDel_M4_ef1['Percent-2019'].astype(float)
df_AC_RT_GRDel_M4_ef1['RET-2019'] = df_AC_RT_GRDel_M4_ef1['RET-2019'].astype(int)
df_AC_RT_GRDel_M4_ef1['Percnt-2019'] = df_AC_RT_GRDel_M4_ef1['Percnt-2019'].astype(float)

df_AC_RT_GRDel_M4_ef1['Total-2021'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef1['Total-2021'],errors='coerce')
df_AC_RT_GRDel_M4_ef1 = df_AC_RT_GRDel_M4_ef1.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef1['Total-2021'] = df_AC_RT_GRDel_M4_ef1['Total-2021'].astype(int)
df_AC_RT_GRDel_M4_ef1['ACQ-2021'] = df_AC_RT_GRDel_M4_ef1['ACQ-2021'].astype(int)
df_AC_RT_GRDel_M4_ef1['Percent-2021'] = df_AC_RT_GRDel_M4_ef1['Percent-2021'].astype(float)
df_AC_RT_GRDel_M4_ef1['RET-2021'] = df_AC_RT_GRDel_M4_ef1['RET-2021'].astype(int)
df_AC_RT_GRDel_M4_ef1['Percnt-2021'] = df_AC_RT_GRDel_M4_ef1['Percnt-2021'].astype(float)

df_AC_RT_GRDel_M4_ef1['Total-2022'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef1['Total-2022'],errors='coerce')
df_AC_RT_GRDel_M4_ef1 = df_AC_RT_GRDel_M4_ef1.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef1['Total-2022'] = df_AC_RT_GRDel_M4_ef1['Total-2022'].astype(int)
df_AC_RT_GRDel_M4_ef1['ACQ-2022'] = df_AC_RT_GRDel_M4_ef1['ACQ-2022'].astype(int)
df_AC_RT_GRDel_M4_ef1['Percent-2022'] = df_AC_RT_GRDel_M4_ef1['Percent-2022'].astype(float)
df_AC_RT_GRDel_M4_ef1['RET-2022'] = df_AC_RT_GRDel_M4_ef1['RET-2022'].astype(int)
df_AC_RT_GRDel_M4_ef1['Percnt-2022'] = df_AC_RT_GRDel_M4_ef1['Percnt-2022'].astype(float)

df_AC_RT_GRDel_M4_ef1['Total-2023'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef1['Total-2023'],errors='coerce')
df_AC_RT_GRDel_M4_ef1 = df_AC_RT_GRDel_M4_ef1.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef1['Total-2023'] = df_AC_RT_GRDel_M4_ef1['Total-2023'].astype(int)
df_AC_RT_GRDel_M4_ef1['ACQ-2023'] = df_AC_RT_GRDel_M4_ef1['ACQ-2023'].astype(int)
df_AC_RT_GRDel_M4_ef1['Percent-2023'] = df_AC_RT_GRDel_M4_ef1['Percent-2023'].astype(float)
df_AC_RT_GRDel_M4_ef1['RET-2023'] = df_AC_RT_GRDel_M4_ef1['RET-2023'].astype(int)
df_AC_RT_GRDel_M4_ef1['Percnt-2023'] = df_AC_RT_GRDel_M4_ef1['Percnt-2023'].astype(float)

#dff1 - GROUPS
df_Revenu_GRDel_ef1['Total-2017'] = pd.to_numeric(df_Revenu_GRDel_ef1['Total-2017'],errors='coerce')
df_Revenu_GRDel_ef1 = df_Revenu_GRDel_ef1.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef1['Total-2017'] = df_Revenu_GRDel_ef1['Total-2017'].astype(int)
df_Revenu_GRDel_ef1['Percent-2017'] = df_Revenu_GRDel_ef1['Percent-2017'].astype(float)
df_Revenu_GRDel_ef1['7DEvolution-2017'] = df_Revenu_GRDel_ef1['7DEvolution-2017'].astype(int)

df_Revenu_GRDel_ef1['Total-2018'] = pd.to_numeric(df_Revenu_GRDel_ef1['Total-2018'],errors='coerce')
df_Revenu_GRDel_ef1 = df_Revenu_GRDel_ef1.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef1['Total-2018'] = df_Revenu_GRDel_ef1['Total-2018'].astype(int)
df_Revenu_GRDel_ef1['Percent-2018'] = df_Revenu_GRDel_ef1['Percent-2018'].astype(float)
df_Revenu_GRDel_ef1['7DEvolution-2018'] = df_Revenu_GRDel_ef1['7DEvolution-2018'].astype(int)

df_Revenu_GRDel_ef1['Total-2019'] = pd.to_numeric(df_Revenu_GRDel_ef1['Total-2019'],errors='coerce')
df_Revenu_GRDel_ef1 = df_Revenu_GRDel_ef1.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef1['Total-2019'] = df_Revenu_GRDel_ef1['Total-2019'].astype(int)
df_Revenu_GRDel_ef1['Percent-2019'] = df_Revenu_GRDel_ef1['Percent-2019'].astype(float)
df_Revenu_GRDel_ef1['7DEvolution-2019'] = df_Revenu_GRDel_ef1['7DEvolution-2019'].astype(int)

df_Revenu_GRDel_ef1['Total-2022'] = pd.to_numeric(df_Revenu_GRDel_ef1['Total-2022'],errors='coerce')
df_Revenu_GRDel_ef1 = df_Revenu_GRDel_ef1.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef1['Total-2022'] = df_Revenu_GRDel_ef1['Total-2022'].astype(int)
df_Revenu_GRDel_ef1['Percent-2022'] = df_Revenu_GRDel_ef1['Percent-2022'].astype(float)
df_Revenu_GRDel_ef1['7DEvolution-2022'] = df_Revenu_GRDel_ef1['7DEvolution-2022'].astype(int)

df_Revenu_GRDel_ef1['Total-2023'] = pd.to_numeric(df_Revenu_GRDel_ef1['Total-2023'],errors='coerce')
df_Revenu_GRDel_ef1 = df_Revenu_GRDel_ef1.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef1['Total-2023'] = df_Revenu_GRDel_ef1['Total-2023'].astype(int)
df_Revenu_GRDel_ef1['Percent-2023'] = df_Revenu_GRDel_ef1['Percent-2023'].astype(float)
df_Revenu_GRDel_ef1['7DEvolution-2023'] = df_Revenu_GRDel_ef1['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_ef1['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_ef1['Total-2017'],errors='coerce')
df_Profile_Count_m2_ef1 = df_Profile_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef1['Total-2017'] = df_Profile_Count_m2_ef1['Total-2017'].astype(int)
df_Profile_Count_m2_ef1['Percent-2017'] = df_Profile_Count_m2_ef1['Percent-2017'].astype(float)

df_Profile_Count_m2_ef1['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_ef1['Total-2018'],errors='coerce')
df_Profile_Count_m2_ef1 = df_Profile_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef1['Total-2018'] = df_Profile_Count_m2_ef1['Total-2018'].astype(int)
df_Profile_Count_m2_ef1['Percent-2018'] = df_Profile_Count_m2_ef1['Percent-2018'].astype(float)

df_Profile_Count_m2_ef1['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_ef1['Total-2019'],errors='coerce')
df_Profile_Count_m2_ef1 = df_Profile_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef1['Total-2019'] = df_Profile_Count_m2_ef1['Total-2019'].astype(int)
df_Profile_Count_m2_ef1['Percent-2019'] = df_Profile_Count_m2_ef1['Percent-2019'].astype(float)

df_Profile_Count_m2_ef1['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_ef1['Total-2021'],errors='coerce')
df_Profile_Count_m2_ef1 = df_Profile_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef1['Total-2021'] = df_Profile_Count_m2_ef1['Total-2021'].astype(int)
df_Profile_Count_m2_ef1['Percent-2021'] = df_Profile_Count_m2_ef1['Percent-2021'].astype(float)

df_Profile_Count_m2_ef1['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_ef1['Total-2022'],errors='coerce')
df_Profile_Count_m2_ef1 = df_Profile_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef1['Total-2022'] = df_Profile_Count_m2_ef1['Total-2022'].astype(int)
df_Profile_Count_m2_ef1['Percent-2022'] = df_Profile_Count_m2_ef1['Percent-2022'].astype(float)

df_Profile_Count_m2_ef1['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_ef1['Total-2023'],errors='coerce')
df_Profile_Count_m2_ef1 = df_Profile_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef1['Total-2023'] = df_Profile_Count_m2_ef1['Total-2023'].astype(int)
df_Profile_Count_m2_ef1['Percent-2023'] = df_Profile_Count_m2_ef1['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_ef1['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_ef1['Total-2017'],errors='coerce')
df_Pass_Count_m2_ef1 = df_Pass_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef1['Total-2017'] = df_Pass_Count_m2_ef1['Total-2017'].astype(int)
df_Pass_Count_m2_ef1['Percent-2017'] = df_Pass_Count_m2_ef1['Percent-2017'].astype(float)

df_Pass_Count_m2_ef1['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_ef1['Total-2018'],errors='coerce')
df_Pass_Count_m2_ef1 = df_Pass_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef1['Total-2018'] = df_Pass_Count_m2_ef1['Total-2018'].astype(int)
df_Pass_Count_m2_ef1['Percent-2018'] = df_Pass_Count_m2_ef1['Percent-2018'].astype(float)

df_Pass_Count_m2_ef1['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_ef1['Total-2019'],errors='coerce')
df_Pass_Count_m2_ef1 = df_Pass_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef1['Total-2019'] = df_Pass_Count_m2_ef1['Total-2019'].astype(int)
df_Pass_Count_m2_ef1['Percent-2019'] = df_Pass_Count_m2_ef1['Percent-2019'].astype(float)

df_Pass_Count_m2_ef1['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_ef1['Total-2021'],errors='coerce')
df_Pass_Count_m2_ef1 = df_Pass_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef1['Total-2021'] = df_Pass_Count_m2_ef1['Total-2021'].astype(int)
df_Pass_Count_m2_ef1['Percent-2021'] = df_Pass_Count_m2_ef1['Percent-2021'].astype(float)

df_Pass_Count_m2_ef1['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_ef1['Total-2022'],errors='coerce')
df_Pass_Count_m2_ef1 = df_Pass_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef1['Total-2022'] = df_Pass_Count_m2_ef1['Total-2022'].astype(int)
df_Pass_Count_m2_ef1['Percent-2022'] = df_Pass_Count_m2_ef1['Percent-2022'].astype(float)

df_Pass_Count_m2_ef1['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_ef1['Total-2023'],errors='coerce')
df_Pass_Count_m2_ef1 = df_Pass_Count_m2_ef1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef1['Total-2023'] = df_Pass_Count_m2_ef1['Total-2023'].astype(int)
df_Pass_Count_m2_ef1['Percent-2023'] = df_Pass_Count_m2_ef1['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_ef1['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef1['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_ef1 = dfAttendees_Country_Count_m2_ef1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef1['Total-2017'] = dfAttendees_Country_Count_m2_ef1['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_ef1['Percent-2017'] = dfAttendees_Country_Count_m2_ef1['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_ef1['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef1['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_ef1 = dfAttendees_Country_Count_m2_ef1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef1['Total-2018'] = dfAttendees_Country_Count_m2_ef1['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_ef1['Percent-2018'] = dfAttendees_Country_Count_m2_ef1['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_ef1['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef1['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_ef1 = dfAttendees_Country_Count_m2_ef1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef1['Total-2019'] = dfAttendees_Country_Count_m2_ef1['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_ef1['Percent-2019'] = dfAttendees_Country_Count_m2_ef1['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_ef1['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef1['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_ef1 = dfAttendees_Country_Count_m2_ef1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef1['Total-2021'] = dfAttendees_Country_Count_m2_ef1['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_ef1['Percent-2021'] = dfAttendees_Country_Count_m2_ef1['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_ef1['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef1['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_ef1 = dfAttendees_Country_Count_m2_ef1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef1['Total-2022'] = dfAttendees_Country_Count_m2_ef1['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_ef1['Percent-2022'] = dfAttendees_Country_Count_m2_ef1['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_ef1['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef1['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_ef1 = dfAttendees_Country_Count_m2_ef1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef1['Total-2023'] = dfAttendees_Country_Count_m2_ef1['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_ef1['Percent-2023'] = dfAttendees_Country_Count_m2_ef1['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_ef1['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef1['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef1 = df_ATTENDEES_AREAS_count_m2_ef1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef1['Total-2017'] = df_ATTENDEES_AREAS_count_m2_ef1['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef1['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_ef1['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef1['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef1['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef1 = df_ATTENDEES_AREAS_count_m2_ef1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef1['Total-2018'] = df_ATTENDEES_AREAS_count_m2_ef1['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef1['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_ef1['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef1['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef1['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef1 = df_ATTENDEES_AREAS_count_m2_ef1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef1['Total-2019'] = df_ATTENDEES_AREAS_count_m2_ef1['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef1['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_ef1['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef1['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef1['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef1 = df_ATTENDEES_AREAS_count_m2_ef1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef1['Total-2021'] = df_ATTENDEES_AREAS_count_m2_ef1['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef1['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_ef1['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef1['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef1['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef1 = df_ATTENDEES_AREAS_count_m2_ef1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef1['Total-2022'] = df_ATTENDEES_AREAS_count_m2_ef1['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef1['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_ef1['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef1['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef1['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef1 = df_ATTENDEES_AREAS_count_m2_ef1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef1['Total-2023'] = df_ATTENDEES_AREAS_count_m2_ef1['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef1['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_ef1['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_ef1['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_ef1['Total-2017'],errors='coerce')
df_Specialty_count_m2_ef1 = df_Specialty_count_m2_ef1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef1['Total-2017'] = df_Specialty_count_m2_ef1['Total-2017'].astype(int)
df_Specialty_count_m2_ef1['Percent-2017'] = df_Specialty_count_m2_ef1['Percent-2017'].astype(float)

df_Specialty_count_m2_ef1['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_ef1['Total-2018'],errors='coerce')
df_Specialty_count_m2_ef1 = df_Specialty_count_m2_ef1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef1['Total-2018'] = df_Specialty_count_m2_ef1['Total-2018'].astype(int)
df_Specialty_count_m2_ef1['Percent-2018'] = df_Specialty_count_m2_ef1['Percent-2018'].astype(float)

df_Specialty_count_m2_ef1['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_ef1['Total-2019'],errors='coerce')
df_Specialty_count_m2_ef1 = df_Specialty_count_m2_ef1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef1['Total-2019'] = df_Specialty_count_m2_ef1['Total-2019'].astype(int)
df_Specialty_count_m2_ef1['Percent-2019'] = df_Specialty_count_m2_ef1['Percent-2019'].astype(float)

df_Specialty_count_m2_ef1['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_ef1['Total-2021'],errors='coerce')
df_Specialty_count_m2_ef1 = df_Specialty_count_m2_ef1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef1['Total-2021'] = df_Specialty_count_m2_ef1['Total-2021'].astype(int)
df_Specialty_count_m2_ef1['Percent-2021'] = df_Specialty_count_m2_ef1['Percent-2021'].astype(float)

df_Specialty_count_m2_ef1['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_ef1['Total-2022'],errors='coerce')
df_Specialty_count_m2_ef1 = df_Specialty_count_m2_ef1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef1['Total-2022'] = df_Specialty_count_m2_ef1['Total-2022'].astype(int)
df_Specialty_count_m2_ef1['Percent-2022'] = df_Specialty_count_m2_ef1['Percent-2022'].astype(float)

df_Specialty_count_m2_ef1['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_ef1['Total-2023'],errors='coerce')
df_Specialty_count_m2_ef1 = df_Specialty_count_m2_ef1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef1['Total-2023'] = df_Specialty_count_m2_ef1['Total-2023'].astype(int)
df_Specialty_count_m2_ef1['Percent-2023'] = df_Specialty_count_m2_ef1['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_ef1.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_ef1.dtypes)
#print(df_Specialty_count_m2_ef1.dtypes)

#print(dfAttendees_Country_Count_m2_ef1.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_ef1.dtypes)
#print(df_Specialty_count_m2_ef1.dtypes)

# EXCEL FILE
writer_ef1 = pd.ExcelWriter(outputExcelFile_ef1, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
df_Registrations_Merge_ef1.to_excel\
    (writer_ef1, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
df_ACQRET_count_M4_ef1.to_excel\
    (writer_ef1, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
df_Revenue_calc_ef1.to_excel\
    (writer_ef1, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
df_Registrations_GRDel_ef1.to_excel\
    (writer_ef1, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
df_AC_RT_GRDel_M4_ef1.to_excel\
    (writer_ef1, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
df_Revenu_GRDel_ef1.to_excel\
    (writer_ef1, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_ef1.to_excel\
    (writer_ef1, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_ef1.to_excel\
    (writer_ef1, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_ef1.to_excel\
    (writer_ef1, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_ef1.to_excel\
    (writer_ef1, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_ef1.to_excel\
    (writer_ef1, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writer_ef1.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_ef1)

workbook.save(outputExcelFile_ef1)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 210 days**********************************************')
print('************************************End of 210 days**********************************************')
print('************************************End of 210 days**********************************************')
print('************************************End of 210 days**********************************************')
print('************************************End of 210 days**********************************************')
print('************************************End of 210 days**********************************************')
print('************************************End of 210 days**********************************************')
print('************************************End of 210 days**********************************************')
print('************************************End of 210 days**********************************************')

#unit 1 - EXTRA UNIT
#Total Number of Registrations
dfd17_ef2_Registrations_count = pd.DataFrame(filter_e2_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef2_Registrations_count = dfd17_ef2_Registrations_count.fillna('Unknown')
dfd17_ef2_Registrations_count['Percent-2017'] = (dfd17_ef2_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_ef2_Registrations_count['Percent-2017'] = dfd17_ef2_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_ef2_Registrations_count['7DEvolution-2017'] = dfd17_ef2_Registrations_count['Total-2017'] - dfd17_ef1_Registrations_count['Total-2017']
#print(tab(dfd17_ef2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef2_Registrations_count = pd.DataFrame(filter_e2_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef2_Registrations_count = dfd18_ef2_Registrations_count.fillna('Unknown')
dfd18_ef2_Registrations_count['Percent-2018'] = (dfd18_ef2_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_ef2_Registrations_count['Percent-2018'] = dfd18_ef2_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_ef2_Registrations_count['7DEvolution-2018'] = dfd18_ef2_Registrations_count['Total-2018'] - dfd18_ef1_Registrations_count['Total-2018']
#print(tab(dfd18_ef2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef2_Registrations_count = pd.DataFrame(filter_e2_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef2_Registrations_count = dfd19_ef2_Registrations_count.fillna('Unknown')
dfd19_ef2_Registrations_count['Percent-2019'] = (dfd19_ef2_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_ef2_Registrations_count['Percent-2019'] = dfd19_ef2_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_ef2_Registrations_count['7DEvolution-2019'] = dfd19_ef2_Registrations_count['Total-2019'] - dfd19_ef1_Registrations_count['Total-2019']
#print(tab(dfd19_ef2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef2_Registrations_count = pd.DataFrame(filter_e2_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef2_Registrations_count = dfd21_ef2_Registrations_count.fillna('Unknown')
dfd21_ef2_Registrations_count['Percent-2021'] = (dfd21_ef2_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_ef2_Registrations_count['Percent-2021'] = dfd21_ef2_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_ef2_Registrations_count['7DEvolution-2021'] = dfd21_ef2_Registrations_count['Total-2021'] - dfd21_ef1_Registrations_count['Total-2021']
#print(tab(dfd21_ef2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef2_Registrations_count = pd.DataFrame(filter_e2_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef2_Registrations_count = dfd22_ef2_Registrations_count.fillna('Unknown')
dfd22_ef2_Registrations_count['Percent-2022'] = (dfd22_ef2_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_ef2_Registrations_count['Percent-2022'] = dfd22_ef2_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_ef2_Registrations_count['7DEvolution-2022'] = dfd22_ef2_Registrations_count['Total-2022'] - dfd22_ef1_Registrations_count['Total-2022']
print(tab(dfd22_ef2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_Registrations_count = pd.DataFrame(filter_e2_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef2_Registrations_count = dfd23_ef2_Registrations_count.fillna('Unknown')
dfd23_ef2_Registrations_count['Percent-2023'] = (dfd23_ef2_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_ef2_Registrations_count['Percent-2023'] = dfd23_ef2_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_ef2_Registrations_count['7DEvolution-2023'] = dfd23_ef2_Registrations_count['Total-2023'] - dfd23_ef1_Registrations_count['Total-2023']
#print(tab(dfd23_ef2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_ef2_RegistrationsEvolution_count = pd.DataFrame(filter_e2_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_ef2_RegistrationsEvolution_count = dfd23_ef2_RegistrationsEvolution_count.fillna('Unknown')
dfd23_ef2_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_ef2_Registrations_count['Total-2023']- dfd19_ef2_Registrations_count['Total-2019'])/ dfd19_ef2_Registrations_count['Total-2019'].sum()) * 100
dfd23_ef2_RegistrationsEvolution_count['Evolution-2023'] = dfd23_ef2_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_ef2_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_ef2 = pd.DataFrame(pd.merge(dfd17_ef2_Registrations_count, dfd18_ef2_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_ef2 = pd.DataFrame(pd.merge(dfd19_ef2_Registrations_count, dfd21_ef2_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_ef2 = pd.DataFrame(pd.merge(dfd22_ef2_Registrations_count, dfd23_ef2_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_ef2 = pd.DataFrame(pd.merge(df_Registrations_count_1_ef2, df_Registrations_count_2_ef2, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_ef2 = pd.DataFrame(pd.merge(df_Registrations_count_m1_ef2, df_Registrations_count_3_ef2, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_ef2 = pd.DataFrame(pd.merge(df_Registrations_count_m2_ef2, dfd23_ef2_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_ef2 = filter_e2_df18[filter_e2_df18['New customer'] == 1]
df_NewCustomer_df19_ef2 = filter_e2_df19[filter_e2_df19['New customer'] == 1]
df_NewCustomer_df21_ef2 = filter_e2_df21[filter_e2_df21['New customer'] == 1]
df_NewCustomer_df22_ef2 = filter_e2_df22[filter_e2_df22['New customer'] == 1]
df_NewCustomer_df23_ef2 = filter_e2_df23[filter_e2_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ea2_ACQRET_count = pd.DataFrame(filter_e2_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_ef2_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_ef2.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_ef2_ACQRET_count['Percent-2018'] = (dfd18_ef2_ACQRET_count['ACQ-2018'] / dfd18_ef2_Registrations_count['Total-2018'].sum()) * 100
dfd18_ef2_ACQRET_count['Percent-2018'] = dfd18_ef2_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_ef2_ACQRET_count['RET-2018'] = dfd18_ea2_ACQRET_count['Total-2018'] - dfd18_ef2_ACQRET_count['ACQ-2018']
dfd18_ef2_ACQRET_count['Percnt-2018'] = (dfd18_ef2_ACQRET_count['RET-2018'] / dfd18_ea2_ACQRET_count['Total-2018'].sum()) * 100
dfd18_ef2_ACQRET_count['Percnt-2018'] = dfd18_ef2_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_ef2_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ea2_ACQRET_count = pd.DataFrame(filter_e2_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_ef2_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_ef2.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_ef2_ACQRET_count['Percent-2019'] = (dfd19_ef2_ACQRET_count['ACQ-2019'] / dfd19_ef2_Registrations_count['Total-2019'].sum()) * 100
dfd19_ef2_ACQRET_count['Percent-2019'] = dfd19_ef2_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_ef2_ACQRET_count['RET-2019'] = dfd19_ea2_ACQRET_count['Total-2019'] - dfd19_ef2_ACQRET_count['ACQ-2019']
dfd19_ef2_ACQRET_count['Percnt-2019'] = (dfd19_ef2_ACQRET_count['RET-2019'] / dfd19_ea2_ACQRET_count['Total-2019'].sum()) * 100
dfd19_ef2_ACQRET_count['Percnt-2019'] = dfd19_ef2_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_ef2_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ea2_ACQRET_count = pd.DataFrame(filter_e2_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_ef2_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_ef2.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_ef2_ACQRET_count['Percent-2021'] = (dfd21_ef2_ACQRET_count['ACQ-2021'] / dfd21_ef2_Registrations_count['Total-2021'].sum()) * 100
dfd21_ef2_ACQRET_count['Percent-2021'] = dfd21_ef2_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_ef2_ACQRET_count['RET-2021'] = dfd21_ea2_ACQRET_count['Total-2021'] - dfd21_ef2_ACQRET_count['ACQ-2021']
dfd21_ef2_ACQRET_count['Percnt-2021'] = (dfd21_ef2_ACQRET_count['RET-2021'] / dfd21_ea2_ACQRET_count['Total-2021'].sum()) * 100
dfd21_ef2_ACQRET_count['Percnt-2021'] = dfd21_ef2_ACQRET_count['Percnt-2021']
#print(tab(dfd21_ef2_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ea2_ACQRET_count = pd.DataFrame(filter_e2_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef2_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_ef2.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_ef2_ACQRET_count['Percent-2022'] = (dfd22_ef2_ACQRET_count['ACQ-2022'] / dfd22_ef2_Registrations_count['Total-2022'].sum()) * 100
dfd22_ef2_ACQRET_count['Percent-2022'] = dfd22_ef2_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_ef2_ACQRET_count['RET-2022'] = dfd22_ea2_ACQRET_count['Total-2022'] - dfd22_ef2_ACQRET_count['ACQ-2022']
dfd22_ef2_ACQRET_count['Percnt-2022'] = (dfd22_ef2_ACQRET_count['RET-2022'] / dfd22_ea2_ACQRET_count['Total-2022'].sum()) * 100
dfd22_ef2_ACQRET_count['Percnt-2022'] = dfd22_ef2_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_ef2_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ea2_ACQRET_count = pd.DataFrame(filter_e2_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef2_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_ef2.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_ef2_ACQRET_count['Percent-2023'] = (dfd23_ef2_ACQRET_count['ACQ-2023'] / dfd23_ef2_Registrations_count['Total-2023'].sum()) * 100
dfd23_ef2_ACQRET_count['Percent-2023'] = dfd23_ef2_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_ef2_ACQRET_count['RET-2023'] = dfd23_ea2_ACQRET_count['Total-2023'] - dfd23_ef2_ACQRET_count['ACQ-2023']
dfd23_ef2_ACQRET_count['Percnt-2023'] = (dfd23_ef2_ACQRET_count['RET-2023'] / dfd23_ea2_ACQRET_count['Total-2023'].sum()) * 100
dfd23_ef2_ACQRET_count['Percnt-2023'] = dfd23_ef2_ACQRET_count['Percnt-2023']
#print(tab(dfd23_ef2_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_ef2 = pd.DataFrame(pd.merge(dfd18_ea2_ACQRET_count, dfd18_ef2_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_ef2 = pd.DataFrame(pd.merge(dfd19_ea2_ACQRET_count, dfd19_ef2_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_ef2 = pd.DataFrame(pd.merge(dfd21_ea2_ACQRET_count, dfd21_ef2_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_ef2 = pd.DataFrame(pd.merge(dfd22_ea2_ACQRET_count, dfd22_ef2_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_5_ef2 = pd.DataFrame(pd.merge(dfd23_ea2_ACQRET_count, dfd23_ef2_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_5_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_ef2 = pd.DataFrame(pd.merge(df_ACQRET_count_1_ef2, df_ACQRET_count_2_ef2, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_ef2 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_ef2, df_ACQRET_count_3_ef2, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_ef2 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_ef2, df_ACQRET_count_4_ef2, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_ef2 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_ef2, df_ACQRET_count_5_ef2, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_ef2 = df_ACQRET_count_M4_ef2[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_ef2_Revenue_calc = pd.DataFrame(filter_e2_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_ef2_Revenue_calc['Percent-2017'] = (dfd17_ef2_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_ef2_Revenue_calc['Percent-2017'] = dfd17_ef2_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_ef2_Revenue_calc['7DEvolution-2017'] = dfd17_ef2_Revenue_calc['Total-2017'] - dfd17_ef1_Revenue_calc['Total-2017']
#print(tab(dfd17_ef2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef2_Revenue_calc = pd.DataFrame(filter_e2_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_ef2_Revenue_calc['Percent-2018'] = (dfd18_ef2_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_ef2_Revenue_calc['Percent-2018'] = dfd18_ef2_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_ef2_Revenue_calc['7DEvolution-2018'] = dfd18_ef2_Revenue_calc['Total-2018'] - dfd18_ef1_Revenue_calc['Total-2018']
#print(tab(dfd18_ef2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef2_Revenue_calc = pd.DataFrame(filter_e2_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_ef2_Revenue_calc['Percent-2019'] = (dfd19_ef2_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_ef2_Revenue_calc['Percent-2019'] = dfd19_ef2_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_ef2_Revenue_calc['7DEvolution-2019'] = dfd19_ef2_Revenue_calc['Total-2019'] - dfd19_ef1_Revenue_calc['Total-2019']
#print(tab(dfd19_ef2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef2_Revenue_calc = pd.DataFrame(filter_e2_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_ef2_Revenue_calc['Percent-2021'] = (dfd21_ef2_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_ef2_Revenue_calc['Percent-2021'] = dfd21_ef2_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_ef2_Revenue_calc['7DEvolution-2021'] = dfd21_ef2_Revenue_calc['Total-2021'] - dfd21_ef1_Revenue_calc['Total-2021']
#print(tab(dfd21_ef2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef2_Revenue_calc = pd.DataFrame(filter_e2_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_ef2_Revenue_calc['Percent-2022'] = (dfd22_ef2_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_ef2_Revenue_calc['Percent-2022'] = dfd22_ef2_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_ef2_Revenue_calc['7DEvolution-2022'] = dfd22_ef2_Revenue_calc['Total-2022'] - dfd22_ef1_Revenue_calc['Total-2022']
#print(tab(dfd22_ef2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_Revenue_calc = pd.DataFrame(filter_e2_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_ef2_Revenue_calc['Percent-2023'] = (dfd23_ef2_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_ef2_Revenue_calc['Percent-2023'] = dfd23_ef2_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_ef2_Revenue_calc['7DEvolution-2023'] = dfd23_ef2_Revenue_calc['Total-2023'] - dfd23_ef1_Revenue_calc['Total-2023']
#print(tab(dfd23_ef2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_ef2_RevenueEvolution_calc = pd.DataFrame(filter_e2_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_ef2_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_ef2_Revenue_calc['Total-2023'] - dfd19_ef2_Revenue_calc['Total-2019'])/ dfd19_ef2_Revenue_calc['Total-2019'].sum()) * 100
dfd23_ef2_RevenueEvolution_calc['Evolution-2023'] = dfd23_ef2_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_ef2_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_ef2 = pd.DataFrame(pd.merge(dfd17_ef2_Revenue_calc, dfd18_ef2_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_ef2 = pd.DataFrame(pd.merge(dfd19_ef2_Revenue_calc, dfd21_ef2_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_ef2 = pd.DataFrame(pd.merge(dfd22_ef2_Revenue_calc, dfd23_ef2_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_ef2_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_ef2, df_Revenue_calc_2_ef2, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_ef2Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_ef2_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_ef2_Evolution, df_Revenue_calc_3_ef2, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_ef2Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_ef2 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_ef2_Evolution, dfd23_ef2_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_ef2_Registrations_GRDel = pd.DataFrame(filtr_e2_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef2_Registrations_GRDel = dfd17_ef2_Registrations_GRDel.fillna('Unknown')
dfd17_ef2_Registrations_GRDel['Percent-2017'] = (dfd17_ef2_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_ef2_Registrations_GRDel['Percent-2017'] = dfd17_ef2_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_ef2_Registrations_GRDel['7DEvolution-2017'] = dfd17_ef2_Registrations_GRDel['Total-2017'] - dfd17_ef1_Registrations_GRDel['Total-2017']
#print(tab(dfd17_ef2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef2_Registrations_GRDel = pd.DataFrame(filtr_e2_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef2_Registrations_GRDel = dfd18_ef2_Registrations_GRDel.fillna('Unknown')
dfd18_ef2_Registrations_GRDel['Percent-2018'] = (dfd18_ef2_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_ef2_Registrations_GRDel['Percent-2018'] = dfd18_ef2_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_ef2_Registrations_GRDel['7DEvolution-2018'] = dfd18_ef2_Registrations_GRDel['Total-2018'] - dfd18_ef1_Registrations_GRDel['Total-2018']
#print(tab(dfd18_ef2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef2_Registrations_GRDel = pd.DataFrame(filtr_e2_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef2_Registrations_GRDel = dfd19_ef2_Registrations_GRDel.fillna('Unknown')
dfd19_ef2_Registrations_GRDel['Percent-2019'] = (dfd19_ef2_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_ef2_Registrations_GRDel['Percent-2019'] = dfd19_ef2_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_ef2_Registrations_GRDel['7DEvolution-2019'] = dfd19_ef2_Registrations_GRDel['Total-2019'] - dfd19_ef1_Registrations_GRDel['Total-2019']
#print(tab(dfd19_ef2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef2_Registrations_GRDel = pd.DataFrame(filtr_e2_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef2_Registrations_GRDel = dfd21_ef2_Registrations_GRDel.fillna('Unknown')
dfd21_ef2_Registrations_GRDel['Percent-2021'] = (dfd21_ef2_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_ef2_Registrations_GRDel['Percent-2021'] = dfd21_ef2_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_ef2_Registrations_GRDel['7DEvolution-2021'] = dfd21_ef2_Registrations_GRDel['Total-2021'] - dfd21_ef1_Registrations_GRDel['Total-2021']
#print(tab(dfd21_ef2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef2_Registrations_GRDel = pd.DataFrame(filtr_e2_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef2_Registrations_GRDel = dfd22_ef2_Registrations_GRDel.fillna('Unknown')
dfd22_ef2_Registrations_GRDel['Percent-2022'] = (dfd22_ef2_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_ef2_Registrations_GRDel['Percent-2022'] = dfd22_ef2_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_ef2_Registrations_GRDel['7DEvolution-2022'] = dfd22_ef2_Registrations_GRDel['Total-2022'] - dfd22_ef1_Registrations_GRDel['Total-2022']
#print(tab(dfd22_ef2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_Registrations_GRDel = pd.DataFrame(filtr_e2_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef2_Registrations_GRDel = dfd23_ef2_Registrations_GRDel.fillna('Unknown')
dfd23_ef2_Registrations_GRDel['Percent-2023'] = (dfd23_ef2_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_ef2_Registrations_GRDel['Percent-2023'] = dfd23_ef2_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_ef2_Registrations_GRDel['7DEvolution-2023'] = dfd23_ef2_Registrations_GRDel['Total-2023'] - dfd23_ef1_Registrations_GRDel['Total-2023']
#print(tab(dfd23_ef2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_ef2_Registrations_Evol_GRDel = pd.DataFrame(filtr_e2_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_ef2_Registrations_Evol_GRDel = dfd23_ef2_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_ef2_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_ef2_Registrations_GRDel['Total-2023'] - dfd19_ef2_Registrations_GRDel['Total-2019'])/ dfd19_ef2_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_ef2_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_ef2 = pd.concat([dfd17_ef2_Registrations_GRDel, dfd18_ef2_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_ef2 = pd.DataFrame(pd.merge(dfd17_ef2_Registrations_GRDel, dfd18_ef2_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_ef2 = pd.DataFrame(pd.merge(dfd19_ef2_Registrations_GRDel, dfd21_ef2_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_ef2 = pd.DataFrame(pd.merge(dfd22_ef2_Registrations_GRDel, dfd23_ef2_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_ef2 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_ef2, df_Registrations_GRDel_2_ef2, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_5_ef2 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_ef2, df_Registrations_GRDel_3_ef2, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_ef2 = pd.DataFrame(pd.merge(df_Registrations_GRDel_5_ef2, dfd23_ef2_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_ef2 = df_Registrations_GRDel_ef2[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]
#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_ef2 = filtr_e2_df18_GRdel[filtr_e2_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_ef2 = filtr_e2_df19_GRdel[filtr_e2_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_ef2 = filtr_e2_df21_GRdel[filtr_e2_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_ef2 = filtr_e2_df22_GRdel[filtr_e2_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_ef2 = filtr_e2_df23_GRdel[filtr_e2_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ea2_AC_RT_GRDel = pd.DataFrame(filtr_e2_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_ef2_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_ef2.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_ef2_AC_RT_GRDel['Percent-2018'] = (dfd18_ef2_AC_RT_GRDel['ACQ-2018'] / dfd18_ef2_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_ef2_AC_RT_GRDel['Percent-2018'] = dfd18_ef2_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_ef2_AC_RT_GRDel['RET-2018'] = dfd18_ea2_AC_RT_GRDel['Total-2018'] - dfd18_ef2_AC_RT_GRDel['ACQ-2018']
dfd18_ef2_AC_RT_GRDel['Percnt-2018'] = (dfd18_ef2_AC_RT_GRDel['RET-2018'] / dfd18_ea2_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_ef2_AC_RT_GRDel['Percnt-2018'] = dfd18_ef2_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_ef2_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ea2_AC_RT_GRDel = pd.DataFrame(filtr_e2_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_ef2_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_ef2.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_ef2_AC_RT_GRDel['Percent-2019'] = (dfd19_ef2_AC_RT_GRDel['ACQ-2019'] / dfd19_ef2_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_ef2_AC_RT_GRDel['Percent-2019'] = dfd19_ef2_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_ef2_AC_RT_GRDel['RET-2019'] = dfd19_ea2_AC_RT_GRDel['Total-2019'] - dfd19_ef2_AC_RT_GRDel['ACQ-2019']
dfd19_ef2_AC_RT_GRDel['Percnt-2019'] = (dfd19_ef2_AC_RT_GRDel['RET-2019'] / dfd19_ea2_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_ef2_AC_RT_GRDel['Percnt-2019'] = dfd19_ef2_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_ef2_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ea2_AC_RT_GRDel = pd.DataFrame(filtr_e2_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_ef2_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_ef2.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_ef2_AC_RT_GRDel['Percent-2021'] = (dfd21_ef2_AC_RT_GRDel['ACQ-2021'] / dfd21_ef2_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_ef2_AC_RT_GRDel['Percent-2021'] = dfd21_ef2_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_ef2_AC_RT_GRDel['RET-2021'] = dfd21_ea2_AC_RT_GRDel['Total-2021'] - dfd21_ef2_AC_RT_GRDel['ACQ-2021']
dfd21_ef2_AC_RT_GRDel['Percnt-2021'] = (dfd21_ef2_AC_RT_GRDel['RET-2021'] / dfd21_ea2_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_ef2_AC_RT_GRDel['Percnt-2021'] = dfd21_ef2_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_ef2_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ea2_AC_RT_GRDel = pd.DataFrame(filtr_e2_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_ef2_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_ef2.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_ef2_AC_RT_GRDel['Percent-2022'] = (dfd22_ef2_AC_RT_GRDel['ACQ-2022'] / dfd22_ef2_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_ef2_AC_RT_GRDel['Percent-2022'] = dfd22_ef2_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_ef2_AC_RT_GRDel['RET-2022'] = dfd22_ea2_AC_RT_GRDel['Total-2022'] - dfd22_ef2_AC_RT_GRDel['ACQ-2022']
dfd22_ef2_AC_RT_GRDel['Percnt-2022'] = (dfd22_ef2_AC_RT_GRDel['RET-2022'] / dfd22_ea2_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_ef2_AC_RT_GRDel['Percnt-2022'] = dfd22_ef2_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_ef2_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ea2_AC_RT_GRDel = pd.DataFrame(filtr_e2_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_ef2_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_ef2.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_ef2_AC_RT_GRDel['Percent-2023'] = (dfd23_ef2_AC_RT_GRDel['ACQ-2023'] / dfd23_ef2_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_ef2_AC_RT_GRDel['Percent-2023'] = dfd23_ef2_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_ef2_AC_RT_GRDel['RET-2023'] = dfd23_ea2_AC_RT_GRDel['Total-2023'] - dfd23_ef2_AC_RT_GRDel['ACQ-2023']
dfd23_ef2_AC_RT_GRDel['Percnt-2023'] = (dfd23_ef2_AC_RT_GRDel['RET-2023'] / dfd23_ea2_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_ef2_AC_RT_GRDel['Percnt-2023'] = dfd23_ef2_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_ef2_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_ef2 = pd.DataFrame(pd.merge_ordered(dfd18_ea2_AC_RT_GRDel, dfd18_ef2_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_ef2 = pd.DataFrame(pd.merge_ordered(dfd19_ea2_AC_RT_GRDel, dfd19_ef2_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_ef2 = pd.DataFrame(pd.merge_ordered(dfd21_ea2_AC_RT_GRDel, dfd21_ef2_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_ef2 = pd.DataFrame(pd.merge_ordered(dfd22_ea2_AC_RT_GRDel, dfd22_ef2_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_5_ef2 = pd.DataFrame(pd.merge_ordered(dfd23_ea2_AC_RT_GRDel, dfd23_ef2_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_ef2 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_ef2, df_AC_ET_GRDel_2_ef2, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_ef2 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_ef2, df_AC_ET_GRDel_3_ef2, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_ef2 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_ef2, df_AC_ET_GRDel_4_ef2, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_ef2 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_ef2, df_AC_ET_GRDel_5_ef2, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_ef2 = df_AC_RT_GRDel_M4_ef2[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_e2_df17_GRdel = filtr_e2_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_ef2_Revenu_GRDel = pd.DataFrame(filtr_e2_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_ef2_Revenu_GRDel['Percent-2017'] = (dfd17_ef2_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_ef2_Revenu_GRDel['Percent-2017'] = dfd17_ef2_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_ef2_Revenu_GRDel['7DEvolution-2017'] = dfd17_ef2_Revenu_GRDel['Total-2017'] - dfd17_ef1_Revenu_GRDel['Total-2017']
#print(tab(dfd17_ef2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e2_df18_GRdel = filtr_e2_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_ef2_Revenu_GRDel = pd.DataFrame(filtr_e2_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_ef2_Revenu_GRDel['Percent-2018'] = (dfd18_ef2_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_ef2_Revenu_GRDel['Percent-2018'] = dfd18_ef2_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_ef2_Revenu_GRDel['7DEvolution-2018'] = dfd18_ef2_Revenu_GRDel['Total-2018'] - dfd18_ef1_Revenu_GRDel['Total-2018']
#print(tab(dfd18_ef2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e2_df19_GRdel = filtr_e2_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_ef2_Revenu_GRDel = pd.DataFrame(filtr_e2_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_ef2_Revenu_GRDel['Percent-2019'] = (dfd19_ef2_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_ef2_Revenu_GRDel['Percent-2019'] = dfd19_ef2_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_ef2_Revenu_GRDel['7DEvolution-2019'] = dfd19_ef2_Revenu_GRDel['Total-2019'] - dfd19_ef1_Revenu_GRDel['Total-2019']
#print(tab(dfd19_ef2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e2_df21_GRdel = filtr_e2_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_ef2_Revenu_GRDel = pd.DataFrame(filtr_e2_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_ef2_Revenu_GRDel['Percent-2021'] = (dfd21_ef2_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_ef2_Revenu_GRDel['Percent-2021'] = dfd21_ef2_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_ef2_Revenu_GRDel['7DEvolution-2021'] = dfd21_ef2_Revenu_GRDel['Total-2021'] - dfd21_ef1_Revenu_GRDel['Total-2021']
#print(tab(dfd21_ef2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e2_df22_GRdel = filtr_e2_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_ef2_Revenu_GRDel = pd.DataFrame(filtr_e2_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_ef2_Revenu_GRDel['Percent-2022'] = (dfd22_ef2_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_ef2_Revenu_GRDel['Percent-2022'] = dfd22_ef2_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_ef2_Revenu_GRDel['7DEvolution-2022'] = dfd22_ef2_Revenu_GRDel['Total-2022'] - dfd22_ef1_Revenu_GRDel['Total-2022']
#print(tab(dfd22_ef2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e2_df23_GRdel = filtr_e2_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_ef2_Revenu_GRDel = pd.DataFrame(filtr_e2_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_ef2_Revenu_GRDel['Percent-2023'] = (dfd23_ef2_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_ef2_Revenu_GRDel['Percent-2023'] = dfd23_ef2_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_ef2_Revenu_GRDel['7DEvolution-2023'] = dfd23_ef2_Revenu_GRDel['Total-2023'] - dfd23_ef1_Revenu_GRDel['Total-2023']
#print(tab(dfd23_ef2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_ef2_Revenu_Evlt_GRDel = pd.DataFrame(filtr_e2_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_ef2_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_ef2_Revenu_GRDel['Total-2023'] - dfd22_ef2_Revenu_GRDel['Total-2022'])/ dfd22_ef2_Revenu_GRDel['Total-2022'].sum()) * 100
dfd23_ef2_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_ef2_Revenu_Evlt_GRDel['Evolution-2023']
#print(tab(dfd23_ef2_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_ef2 = pd.DataFrame(pd.merge(dfd17_ef2_Revenu_GRDel, dfd18_ef2_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_ef2 = pd.DataFrame(pd.merge(dfd19_ef2_Revenu_GRDel, dfd21_ef2_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_ef2 = pd.DataFrame(pd.merge(dfd22_ef2_Revenu_GRDel, dfd23_ef2_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_ef2 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_ef2, df_Revenu_GRDel_2_ef2, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_5_ef2 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_ef2, df_Revenu_GRDel_3_ef2, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_ef2 = pd.DataFrame(pd.merge(df_Revenu_GRDel_5_ef2, dfd23_ef2_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_ef2 = df_Revenu_GRDel_ef2[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

#UNIT 3
#COUNT PROFILE
dfd17_ef2_Profile_count = pd.DataFrame(filtr_e2_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef2_Profile_count = dfd17_ef2_Profile_count.fillna('Unknown')
dfd17_ef2_Profile_count['Percent-2017'] = (dfd17_ef2_Profile_count['Total-2017'] / dfd17_ef2_Profile_count['Total-2017'].sum()) * 100
dfd17_ef2_Profile_count['Percent-2017'] = dfd17_ef2_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef2_Profile_count = pd.DataFrame(filtr_e2_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef2_Profile_count = dfd18_ef2_Profile_count.fillna('Unknown')
dfd18_ef2_Profile_count['Percent-2018'] = (dfd18_ef2_Profile_count['Total-2018'] / dfd18_ef2_Profile_count['Total-2018'].sum()) * 100
dfd18_ef2_Profile_count['Percent-2018'] = dfd18_ef2_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef2_Profile_count = pd.DataFrame(filtr_e2_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef2_Profile_count = dfd19_ef2_Profile_count.fillna('Unknown')
dfd19_ef2_Profile_count['Percent-2019'] = (dfd19_ef2_Profile_count['Total-2019'] / dfd19_ef2_Profile_count['Total-2019'].sum()) * 100
dfd19_ef2_Profile_count['Percent-2019'] = dfd19_ef2_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef2_Profile_count = pd.DataFrame(filtr_e2_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef2_Profile_count = dfd21_ef2_Profile_count.fillna('Unknown')
dfd21_ef2_Profile_count['Percent-2021'] = (dfd21_ef2_Profile_count['Total-2021'] / dfd21_ef2_Profile_count['Total-2021'].sum()) * 100
dfd21_ef2_Profile_count['Percent-2021'] = dfd21_ef2_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef2_Profile_count = pd.DataFrame(filtr_e2_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef2_Profile_count = dfd22_ef2_Profile_count.fillna('Unknown')
dfd22_ef2_Profile_count['Percent-2022'] = (dfd22_ef2_Profile_count['Total-2022'] / dfd22_ef2_Profile_count['Total-2022'].sum()) * 100
dfd22_ef2_Profile_count['Percent-2022'] = dfd22_ef2_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_Profile_count = pd.DataFrame(filtr_e2_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef2_Profile_count = dfd23_ef2_Profile_count.fillna('Unknown')
dfd23_ef2_Profile_count['Percent-2023'] = (dfd23_ef2_Profile_count['Total-2023'] / dfd23_ef2_Profile_count['Total-2023'].sum()) * 100
dfd23_ef2_Profile_count['Percent-2023'] = dfd23_ef2_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_ef2 = pd.DataFrame(pd.merge(dfd17_ef2_Profile_count, dfd18_ef2_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_ef2 = pd.DataFrame(pd.merge(dfd19_ef2_Profile_count, dfd21_ef2_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_ef2 = pd.DataFrame(pd.merge(dfd22_ef2_Profile_count, dfd23_ef2_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_ef2 = pd.DataFrame(pd.merge(df_Profile_Count_1_ef2, df_Profile_Count_2_ef2, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_ef2 = pd.DataFrame(pd.merge(df_Profile_Count_m1_ef2, df_Profile_Count_3_ef2, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_ef2 = df_Profile_Count_m2_ef2.append(df_Profile_Count_m2_ef2.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_ef2['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_ef2_Pass_count = pd.DataFrame(filtr_e2_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef2_Pass_count = dfd17_ef2_Pass_count.fillna('Unknown')
dfd17_ef2_Pass_count['Percent-2017'] = (dfd17_ef2_Pass_count['Total-2017'] / dfd17_ef2_Pass_count['Total-2017'].sum()) * 100
dfd17_ef2_Pass_count['Percent-2017'] = dfd17_ef2_Pass_count['Percent-2017'].round(decimals=0)

dfd18_ef2_Pass_count = pd.DataFrame(filtr_e2_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef2_Pass_count = dfd18_ef2_Pass_count.fillna('Unknown')
dfd18_ef2_Pass_count['Percent-2018'] = (dfd18_ef2_Pass_count['Total-2018'] / dfd18_ef2_Pass_count['Total-2018'].sum()) * 100
dfd18_ef2_Pass_count['Percent-2018'] = dfd18_ef2_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef2_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef2_Pass_count = pd.DataFrame(filtr_e2_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef2_Pass_count = dfd19_ef2_Pass_count.fillna('Unknown')
dfd19_ef2_Pass_count['Percent-2019'] = (dfd19_ef2_Pass_count['Total-2019'] / dfd19_ef2_Pass_count['Total-2019'].sum()) * 100
dfd19_ef2_Pass_count['Percent-2019'] = dfd19_ef2_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef2_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef2_Pass_count = pd.DataFrame(filtr_e2_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef2_Pass_count = dfd21_ef2_Pass_count.fillna('Unknown')
dfd21_ef2_Pass_count['Percent-2021'] = (dfd21_ef2_Pass_count['Total-2021'] / dfd21_ef2_Pass_count['Total-2021'].sum()) * 100
dfd21_ef2_Pass_count['Percent-2021'] = dfd21_ef2_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef2_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef2_Pass_count = pd.DataFrame(filtr_e2_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef2_Pass_count = dfd22_ef2_Pass_count.fillna('Unknown')
dfd22_ef2_Pass_count['Percent-2022'] = (dfd22_ef2_Pass_count['Total-2022'] / dfd22_ef2_Pass_count['Total-2022'].sum()) * 100
dfd22_ef2_Pass_count['Percent-2022'] = dfd22_ef2_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef2_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_Pass_count = pd.DataFrame(filtr_e2_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef2_Pass_count = dfd23_ef2_Pass_count.fillna('Unknown')
dfd23_ef2_Pass_count['Percent-2023'] = (dfd23_ef2_Pass_count['Total-2023'] / dfd23_ef2_Pass_count['Total-2023'].sum()) * 100
dfd23_ef2_Pass_count['Percent-2023'] = dfd23_ef2_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef2_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_ef2 = pd.DataFrame(pd.merge(dfd17_ef2_Pass_count, dfd18_ef2_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_ef2 = pd.DataFrame(pd.merge(dfd19_ef2_Pass_count, dfd21_ef2_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_ef2 = pd.DataFrame(pd.merge(dfd22_ef2_Pass_count, dfd23_ef2_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_ef2 = pd.DataFrame(pd.merge(df_Pass_Count_1_ef2, df_Pass_Count_2_ef2, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_ef2 = pd.DataFrame(pd.merge(df_Pass_Count_m1_ef2, df_Pass_Count_3_ef2, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_ef2 = df_Pass_Count_m2_ef2.append(df_Pass_Count_m2_ef2.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_ef2['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_ef2_Attendees_Country_count = pd.DataFrame(filtr_e2_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef2_Attendees_Country_count = dfd17_ef2_Attendees_Country_count.fillna('Unknown')
dfd17_ef2_Attendees_Country_count['Percent-2017'] = (dfd17_ef2_Attendees_Country_count['Total-2017'] / dfd17_ef2_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_ef2_Attendees_Country_count['Percent-2017'] = dfd17_ef2_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef2_Attendees_Country_count = pd.DataFrame(filtr_e2_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef2_Attendees_Country_count = dfd18_ef2_Attendees_Country_count.fillna('Unknown')
dfd18_ef2_Attendees_Country_count['Percent-2018'] = (dfd18_ef2_Attendees_Country_count['Total-2018'] / dfd18_ef2_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_ef2_Attendees_Country_count['Percent-2018'] = dfd18_ef2_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef2_Attendees_Country_count = pd.DataFrame(filtr_e2_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef2_Attendees_Country_count = dfd19_ef2_Attendees_Country_count.fillna('Unknown')
dfd19_ef2_Attendees_Country_count['Percent-2019'] = (dfd19_ef2_Attendees_Country_count['Total-2019'] / dfd19_ef2_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_ef2_Attendees_Country_count['Percent-2019'] = dfd19_ef2_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef2_Attendees_Country_count = pd.DataFrame(filtr_e2_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef2_Attendees_Country_count = dfd21_ef2_Attendees_Country_count.fillna('Unknown')
dfd21_ef2_Attendees_Country_count['Percent-2021'] = (dfd21_ef2_Attendees_Country_count['Total-2021'] / dfd21_ef2_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_ef2_Attendees_Country_count['Percent-2021'] = dfd21_ef2_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef2_Attendees_Country_count = pd.DataFrame(filtr_e2_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef2_Attendees_Country_count = dfd22_ef2_Attendees_Country_count.fillna('Unknown')
dfd22_ef2_Attendees_Country_count['Percent-2022'] = (dfd22_ef2_Attendees_Country_count['Total-2022'] / dfd22_ef2_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_ef2_Attendees_Country_count['Percent-2022'] = dfd22_ef2_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_Attendees_Country_count = pd.DataFrame(filtr_e2_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef2_Attendees_Country_count = dfd23_ef2_Attendees_Country_count.fillna('Unknown')
dfd23_ef2_Attendees_Country_count['Percent-2023'] = (dfd23_ef2_Attendees_Country_count['Total-2023'] / dfd23_ef2_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_ef2_Attendees_Country_count['Percent-2023'] = dfd23_ef2_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_ef2 = pd.DataFrame(pd.merge(dfd17_ef2_Attendees_Country_count, dfd18_ef2_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_ef2 = pd.DataFrame(pd.merge(dfd19_ef2_Attendees_Country_count, dfd21_ef2_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_ef2 = pd.DataFrame(pd.merge(dfd22_ef2_Attendees_Country_count, dfd23_ef2_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_ef2 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_ef2, dfAttendees_Country_Count_2_ef2, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_ef2.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_ef2 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_ef2, dfAttendees_Country_Count_3_ef2, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_ef2 = dfAttendees_Country_Count_m2_ef2.append(dfAttendees_Country_Count_m2_ef2.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_ef2['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_ef2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e2_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef2_ATTENDEES_AREAS_count = dfd17_ef2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_ef2_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_ef2_ATTENDEES_AREAS_count['Total-2017'] / dfd17_ef2_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_ef2_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_ef2_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e2_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef2_ATTENDEES_AREAS_count = dfd18_ef2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_ef2_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_ef2_ATTENDEES_AREAS_count['Total-2018'] / dfd18_ef2_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_ef2_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_ef2_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e2_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef2_ATTENDEES_AREAS_count = dfd19_ef2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_ef2_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_ef2_ATTENDEES_AREAS_count['Total-2019'] / dfd19_ef2_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_ef2_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_ef2_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e2_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef2_ATTENDEES_AREAS_count = dfd21_ef2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_ef2_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_ef2_ATTENDEES_AREAS_count['Total-2021'] / dfd21_ef2_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_ef2_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_ef2_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e2_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef2_ATTENDEES_AREAS_count = dfd22_ef2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_ef2_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_ef2_ATTENDEES_AREAS_count['Total-2022'] / dfd22_ef2_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_ef2_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_ef2_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e2_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef2_ATTENDEES_AREAS_count = dfd23_ef2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_ef2_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_ef2_ATTENDEES_AREAS_count['Total-2023'] / dfd23_ef2_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_ef2_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_ef2_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_ef2 = pd.DataFrame(pd.merge(dfd17_ef2_ATTENDEES_AREAS_count, dfd18_ef2_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_ef2 = pd.DataFrame(pd.merge(dfd19_ef2_ATTENDEES_AREAS_count, dfd21_ef2_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_ef2 = pd.DataFrame(pd.merge(dfd22_ef2_ATTENDEES_AREAS_count, dfd23_ef2_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_ef2.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_ef2 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_ef2, df_ATTENDEES_AREAS_count_2_ef2, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_ef2 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_ef2, df_ATTENDEES_AREAS_count_3_ef2, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_ef2 = df_ATTENDEES_AREAS_count_m2_ef2.append(df_ATTENDEES_AREAS_count_m2_ef2.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_ef2['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_ef2_Attendees_Specialty_count = pd.DataFrame(filtr_e2_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef2_Attendees_Specialty_count = dfd17_ef2_Attendees_Specialty_count.fillna('Unknown')
dfd17_ef2_Attendees_Specialty_count['Percent-2017'] = (dfd17_ef2_Attendees_Specialty_count['Total-2017'] / dfd17_ef2_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_ef2_Attendees_Specialty_count['Percent-2017'] = dfd17_ef2_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef2_Attendees_Specialty_count = pd.DataFrame(filtr_e2_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef2_Attendees_Specialty_count = dfd18_ef2_Attendees_Specialty_count.fillna('Unknown')
dfd18_ef2_Attendees_Specialty_count['Percent-2018'] = (dfd18_ef2_Attendees_Specialty_count['Total-2018'] / dfd18_ef2_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_ef2_Attendees_Specialty_count['Percent-2018'] = dfd18_ef2_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef2_Attendees_Specialty_count = pd.DataFrame(filtr_e2_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef2_Attendees_Specialty_count = dfd19_ef2_Attendees_Specialty_count.fillna('Unknown')
dfd19_ef2_Attendees_Specialty_count['Percent-2019'] = (dfd19_ef2_Attendees_Specialty_count['Total-2019'] / dfd19_ef2_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_ef2_Attendees_Specialty_count['Percent-2019'] = dfd19_ef2_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef2_Attendees_Specialty_count = pd.DataFrame(filtr_e2_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef2_Attendees_Specialty_count = dfd21_ef2_Attendees_Specialty_count.fillna('Unknown')
dfd21_ef2_Attendees_Specialty_count['Percent-2021'] = (dfd21_ef2_Attendees_Specialty_count['Total-2021'] / dfd21_ef2_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_ef2_Attendees_Specialty_count['Percent-2021'] = dfd21_ef2_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef2_Attendees_Specialty_count = pd.DataFrame(filtr_e2_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef2_Attendees_Specialty_count = dfd22_ef2_Attendees_Specialty_count.fillna('Unknown')
dfd22_ef2_Attendees_Specialty_count['Percent-2022'] = (dfd22_ef2_Attendees_Specialty_count['Total-2022'] / dfd22_ef2_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_ef2_Attendees_Specialty_count['Percent-2022'] = dfd22_ef2_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef2_Attendees_Specialty_count = pd.DataFrame(filtr_e2_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef2_Attendees_Specialty_count = dfd23_ef2_Attendees_Specialty_count.fillna('Unknown')
dfd23_ef2_Attendees_Specialty_count['Percent-2023'] = (dfd23_ef2_Attendees_Specialty_count['Total-2023'] / dfd23_ef2_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_ef2_Attendees_Specialty_count['Percent-2023'] = dfd23_ef2_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_ef2 = pd.DataFrame(pd.merge(dfd17_ef2_Attendees_Specialty_count, dfd18_ef2_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_ef2 = pd.DataFrame(pd.merge(dfd19_ef2_Attendees_Specialty_count, dfd21_ef2_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_ef2 = pd.DataFrame(pd.merge(dfd22_ef2_Attendees_Specialty_count, dfd23_ef2_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_ef2 = pd.DataFrame(pd.merge(df_Specialty_count_1_ef2, df_Specialty_count_2_ef2, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_ef2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_ef2 = pd.DataFrame(pd.merge(df_Specialty_count_m1_ef2, df_Specialty_count_3_ef2, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_ef2 = df_Specialty_count_m2_ef2.append(df_Specialty_count_m2_ef2.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_ef2['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
df_Registrations_Merge_ef2['Total-2017'] = pd.to_numeric(df_Registrations_Merge_ef2['Total-2017'],errors='coerce')
df_Registrations_Merge_ef2 = df_Registrations_Merge_ef2.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef2['Total-2017'] = df_Registrations_Merge_ef2['Total-2017'].astype(int)
df_Registrations_Merge_ef2['Percent-2017'] = df_Registrations_Merge_ef2['Percent-2017'].astype(float)
df_Registrations_Merge_ef2['7DEvolution-2017'] = df_Registrations_Merge_ef2['7DEvolution-2017'].astype(int)

df_Registrations_Merge_ef2['Total-2018'] = pd.to_numeric(df_Registrations_Merge_ef2['Total-2018'],errors='coerce')
df_Registrations_Merge_ef2 = df_Registrations_Merge_ef2.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef2['Total-2018'] = df_Registrations_Merge_ef2['Total-2018'].astype(int)
df_Registrations_Merge_ef2['Percent-2018'] = df_Registrations_Merge_ef2['Percent-2018'].astype(float)
df_Registrations_Merge_ef2['7DEvolution-2018'] = df_Registrations_Merge_ef2['7DEvolution-2018'].astype(int)

df_Registrations_Merge_ef2['Total-2019'] = pd.to_numeric(df_Registrations_Merge_ef2['Total-2019'],errors='coerce')
df_Registrations_Merge_ef2 = df_Registrations_Merge_ef2.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef2['Total-2019'] = df_Registrations_Merge_ef2['Total-2019'].astype(int)
df_Registrations_Merge_ef2['Percent-2019'] = df_Registrations_Merge_ef2['Percent-2019'].astype(float)
df_Registrations_Merge_ef2['7DEvolution-2019'] = df_Registrations_Merge_ef2['7DEvolution-2019'].astype(int)

df_Registrations_Merge_ef2['Total-2021'] = pd.to_numeric(df_Registrations_Merge_ef2['Total-2021'],errors='coerce')
df_Registrations_Merge_ef2 = df_Registrations_Merge_ef2.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef2['Total-2021'] = df_Registrations_Merge_ef2['Total-2021'].astype(int)
df_Registrations_Merge_ef2['Percent-2021'] = df_Registrations_Merge_ef2['Percent-2021'].astype(float)
df_Registrations_Merge_ef2['7DEvolution-2021'] = df_Registrations_Merge_ef2['7DEvolution-2021'].astype(int)

df_Registrations_Merge_ef2['Total-2022'] = pd.to_numeric(df_Registrations_Merge_ef2['Total-2022'],errors='coerce')
df_Registrations_Merge_ef2 = df_Registrations_Merge_ef2.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef2['Total-2022'] = df_Registrations_Merge_ef2['Total-2022'].astype(int)
df_Registrations_Merge_ef2['Percent-2022'] = df_Registrations_Merge_ef2['Percent-2022'].astype(float)
df_Registrations_Merge_ef2['7DEvolution-2022'] = df_Registrations_Merge_ef2['7DEvolution-2022'].astype(int)

df_Registrations_Merge_ef2['Total-2023'] = pd.to_numeric(df_Registrations_Merge_ef2['Total-2023'],errors='coerce')
df_Registrations_Merge_ef2 = df_Registrations_Merge_ef2.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef2['Total-2023'] = df_Registrations_Merge_ef2['Total-2023'].astype(int)
df_Registrations_Merge_ef2['Percent-2023'] = df_Registrations_Merge_ef2['Percent-2023'].astype(float)
df_Registrations_Merge_ef2['7DEvolution-2023'] = df_Registrations_Merge_ef2['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
df_ACQRET_count_M4_ef2['Total-2018'] = pd.to_numeric(df_ACQRET_count_M4_ef2['Total-2018'],errors='coerce')
df_ACQRET_count_M4_ef2 = df_ACQRET_count_M4_ef2.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef2['Total-2018'] = df_ACQRET_count_M4_ef2['Total-2018'].astype(int)
df_ACQRET_count_M4_ef2['ACQ-2018'] = df_ACQRET_count_M4_ef2['ACQ-2018'].astype(int)
df_ACQRET_count_M4_ef2['Percent-2018'] = df_ACQRET_count_M4_ef2['Percent-2018'].astype(float)
df_ACQRET_count_M4_ef2['RET-2018'] = df_ACQRET_count_M4_ef2['RET-2018'].astype(int)
df_ACQRET_count_M4_ef2['Percnt-2018'] = df_ACQRET_count_M4_ef2['Percnt-2018'].astype(float)

df_ACQRET_count_M4_ef2['Total-2019'] = pd.to_numeric(df_ACQRET_count_M4_ef2['Total-2019'],errors='coerce')
df_ACQRET_count_M4_ef2 = df_ACQRET_count_M4_ef2.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef2['Total-2019'] = df_ACQRET_count_M4_ef2['Total-2019'].astype(int)
df_ACQRET_count_M4_ef2['ACQ-2019'] = df_ACQRET_count_M4_ef2['ACQ-2019'].astype(int)
df_ACQRET_count_M4_ef2['Percent-2019'] = df_ACQRET_count_M4_ef2['Percent-2019'].astype(float)
df_ACQRET_count_M4_ef2['RET-2019'] = df_ACQRET_count_M4_ef2['RET-2019'].astype(int)
df_ACQRET_count_M4_ef2['Percnt-2019'] = df_ACQRET_count_M4_ef2['Percnt-2019'].astype(float)

df_ACQRET_count_M4_ef2['Total-2021'] = pd.to_numeric(df_ACQRET_count_M4_ef2['Total-2021'],errors='coerce')
df_ACQRET_count_M4_ef2 = df_ACQRET_count_M4_ef2.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef2['Total-2021'] = df_ACQRET_count_M4_ef2['Total-2021'].astype(int)
df_ACQRET_count_M4_ef2['ACQ-2021'] = df_ACQRET_count_M4_ef2['ACQ-2021'].astype(int)
df_ACQRET_count_M4_ef2['Percent-2021'] = df_ACQRET_count_M4_ef2['Percent-2021'].astype(float)
df_ACQRET_count_M4_ef2['RET-2021'] = df_ACQRET_count_M4_ef2['RET-2021'].astype(int)
df_ACQRET_count_M4_ef2['Percnt-2021'] = df_ACQRET_count_M4_ef2['Percnt-2021'].astype(float)

df_ACQRET_count_M4_ef2['Total-2022'] = pd.to_numeric(df_ACQRET_count_M4_ef2['Total-2022'],errors='coerce')
df_ACQRET_count_M4_ef2 = df_ACQRET_count_M4_ef2.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef2['Total-2022'] = df_ACQRET_count_M4_ef2['Total-2022'].astype(int)
df_ACQRET_count_M4_ef2['ACQ-2022'] = df_ACQRET_count_M4_ef2['ACQ-2022'].astype(int)
df_ACQRET_count_M4_ef2['Percent-2022'] = df_ACQRET_count_M4_ef2['Percent-2022'].astype(float)
df_ACQRET_count_M4_ef2['RET-2022'] = df_ACQRET_count_M4_ef2['RET-2022'].astype(int)
df_ACQRET_count_M4_ef2['Percnt-2022'] = df_ACQRET_count_M4_ef2['Percnt-2022'].astype(float)

df_ACQRET_count_M4_ef2['Total-2023'] = pd.to_numeric(df_ACQRET_count_M4_ef2['Total-2023'],errors='coerce')
df_ACQRET_count_M4_ef2 = df_ACQRET_count_M4_ef2.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef2['Total-2023'] = df_ACQRET_count_M4_ef2['Total-2023'].astype(int)
df_ACQRET_count_M4_ef2['ACQ-2023'] = df_ACQRET_count_M4_ef2['ACQ-2023'].astype(int)
df_ACQRET_count_M4_ef2['Percent-2023'] = df_ACQRET_count_M4_ef2['Percent-2023'].astype(float)
df_ACQRET_count_M4_ef2['RET-2023'] = df_ACQRET_count_M4_ef2['RET-2023'].astype(int)
df_ACQRET_count_M4_ef2['Percnt-2023'] = df_ACQRET_count_M4_ef2['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
df_Revenue_calc_ef2['Total-2017'] = pd.to_numeric(df_Revenue_calc_ef2['Total-2017'],errors='coerce')
df_Revenue_calc_ef2 = df_Revenue_calc_ef2.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef2['Total-2017'] = df_Revenue_calc_ef2['Total-2017'].astype(int)
df_Revenue_calc_ef2['Percent-2017'] = df_Revenue_calc_ef2['Percent-2017'].astype(float)
df_Revenue_calc_ef2['7DEvolution-2017'] = df_Revenue_calc_ef2['7DEvolution-2017'].astype(int)

df_Revenue_calc_ef2['Total-2018'] = pd.to_numeric(df_Revenue_calc_ef2['Total-2018'],errors='coerce')
df_Revenue_calc_ef2 = df_Revenue_calc_ef2.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef2['Total-2018'] = df_Revenue_calc_ef2['Total-2018'].astype(int)
df_Revenue_calc_ef2['Percent-2018'] = df_Revenue_calc_ef2['Percent-2018'].astype(float)
df_Revenue_calc_ef2['7DEvolution-2018'] = df_Revenue_calc_ef2['7DEvolution-2018'].astype(int)

df_Revenue_calc_ef2['Total-2019'] = pd.to_numeric(df_Revenue_calc_ef2['Total-2019'],errors='coerce')
df_Revenue_calc_ef2 = df_Revenue_calc_ef2.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef2['Total-2019'] = df_Revenue_calc_ef2['Total-2019'].astype(int)
df_Revenue_calc_ef2['Percent-2019'] = df_Revenue_calc_ef2['Percent-2019'].astype(float)
df_Revenue_calc_ef2['7DEvolution-2019'] = df_Revenue_calc_ef2['7DEvolution-2019'].astype(int)

df_Revenue_calc_ef2['Total-2022'] = pd.to_numeric(df_Revenue_calc_ef2['Total-2022'],errors='coerce')
df_Revenue_calc_ef2 = df_Revenue_calc_ef2.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef2['Total-2022'] = df_Revenue_calc_ef2['Total-2022'].astype(int)
df_Revenue_calc_ef2['Percent-2022'] = df_Revenue_calc_ef2['Percent-2022'].astype(float)
df_Revenue_calc_ef2['7DEvolution-2022'] = df_Revenue_calc_ef2['7DEvolution-2022'].astype(int)

df_Revenue_calc_ef2['Total-2023'] = pd.to_numeric(df_Revenue_calc_ef2['Total-2023'],errors='coerce')
df_Revenue_calc_ef2 = df_Revenue_calc_ef2.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef2['Total-2023'] = df_Revenue_calc_ef2['Total-2023'].astype(int)
df_Revenue_calc_ef2['Percent-2023'] = df_Revenue_calc_ef2['Percent-2023'].astype(float)
df_Revenue_calc_ef2['7DEvolution-2023'] = df_Revenue_calc_ef2['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
df_Registrations_GRDel_ef2['Total-2017'] = pd.to_numeric(df_Registrations_GRDel_ef2['Total-2017'],errors='coerce')
df_Registrations_GRDel_ef2 = df_Registrations_GRDel_ef2.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef2['Total-2017'] = df_Registrations_GRDel_ef2['Total-2017'].astype(int)
df_Registrations_GRDel_ef2['Percent-2017'] = df_Registrations_GRDel_ef2['Percent-2017'].astype(float)
df_Registrations_GRDel_ef2['7DEvolution-2017'] = df_Registrations_GRDel_ef2['7DEvolution-2017'].astype(int)

df_Registrations_GRDel_ef2['Total-2018'] = pd.to_numeric(df_Registrations_GRDel_ef2['Total-2018'],errors='coerce')
df_Registrations_GRDel_ef2 = df_Registrations_GRDel_ef2.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef2['Total-2018'] = df_Registrations_GRDel_ef2['Total-2018'].astype(int)
df_Registrations_GRDel_ef2['Percent-2018'] = df_Registrations_GRDel_ef2['Percent-2018'].astype(float)
df_Registrations_GRDel_ef2['7DEvolution-2018'] = df_Registrations_GRDel_ef2['7DEvolution-2018'].astype(int)

df_Registrations_GRDel_ef2['Total-2019'] = pd.to_numeric(df_Registrations_GRDel_ef2['Total-2019'],errors='coerce')
df_Registrations_GRDel_ef2 = df_Registrations_GRDel_ef2.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef2['Total-2019'] = df_Registrations_GRDel_ef2['Total-2019'].astype(int)
df_Registrations_GRDel_ef2['Percent-2019'] = df_Registrations_GRDel_ef2['Percent-2019'].astype(float)
df_Registrations_GRDel_ef2['7DEvolution-2019'] = df_Registrations_GRDel_ef2['7DEvolution-2019'].astype(int)

df_Registrations_GRDel_ef2['Total-2021'] = pd.to_numeric(df_Registrations_GRDel_ef2['Total-2021'],errors='coerce')
df_Registrations_GRDel_ef2 = df_Registrations_GRDel_ef2.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef2['Total-2021'] = df_Registrations_GRDel_ef2['Total-2021'].astype(int)
df_Registrations_GRDel_ef2['Percent-2021'] = df_Registrations_GRDel_ef2['Percent-2021'].astype(float)
df_Registrations_GRDel_ef2['7DEvolution-2021'] = df_Registrations_GRDel_ef2['7DEvolution-2021'].astype(int)

df_Registrations_GRDel_ef2['Total-2022'] = pd.to_numeric(df_Registrations_GRDel_ef2['Total-2022'],errors='coerce')
df_Registrations_GRDel_ef2 = df_Registrations_GRDel_ef2.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef2['Total-2022'] = df_Registrations_GRDel_ef2['Total-2022'].astype(int)
df_Registrations_GRDel_ef2['Percent-2022'] = df_Registrations_GRDel_ef2['Percent-2022'].astype(float)
df_Registrations_GRDel_ef2['7DEvolution-2022'] = df_Registrations_GRDel_ef2['7DEvolution-2022'].astype(int)

df_Registrations_GRDel_ef2['Total-2023'] = pd.to_numeric(df_Registrations_GRDel_ef2['Total-2023'],errors='coerce')
df_Registrations_GRDel_ef2 = df_Registrations_GRDel_ef2.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef2['Total-2023'] = df_Registrations_GRDel_ef2['Total-2023'].astype(int)
df_Registrations_GRDel_ef2['Percent-2023'] = df_Registrations_GRDel_ef2['Percent-2023'].astype(float)
df_Registrations_GRDel_ef2['7DEvolution-2023'] = df_Registrations_GRDel_ef2['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
df_AC_RT_GRDel_M4_ef2['Total-2018'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef2['Total-2018'],errors='coerce')
df_AC_RT_GRDel_M4_ef2 = df_AC_RT_GRDel_M4_ef2.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef2['Total-2018'] = df_AC_RT_GRDel_M4_ef2['Total-2018'].astype(int)
df_AC_RT_GRDel_M4_ef2['ACQ-2018'] = df_AC_RT_GRDel_M4_ef2['ACQ-2018'].astype(int)
df_AC_RT_GRDel_M4_ef2['Percent-2018'] = df_AC_RT_GRDel_M4_ef2['Percent-2018'].astype(float)
df_AC_RT_GRDel_M4_ef2['RET-2018'] = df_AC_RT_GRDel_M4_ef2['RET-2018'].astype(int)
df_AC_RT_GRDel_M4_ef2['Percnt-2018'] = df_AC_RT_GRDel_M4_ef2['Percnt-2018'].astype(float)

df_AC_RT_GRDel_M4_ef2['Total-2019'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef2['Total-2019'],errors='coerce')
df_AC_RT_GRDel_M4_ef2 = df_AC_RT_GRDel_M4_ef2.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef2['Total-2019'] = df_AC_RT_GRDel_M4_ef2['Total-2019'].astype(int)
df_AC_RT_GRDel_M4_ef2['ACQ-2019'] = df_AC_RT_GRDel_M4_ef2['ACQ-2019'].astype(int)
df_AC_RT_GRDel_M4_ef2['Percent-2019'] = df_AC_RT_GRDel_M4_ef2['Percent-2019'].astype(float)
df_AC_RT_GRDel_M4_ef2['RET-2019'] = df_AC_RT_GRDel_M4_ef2['RET-2019'].astype(int)
df_AC_RT_GRDel_M4_ef2['Percnt-2019'] = df_AC_RT_GRDel_M4_ef2['Percnt-2019'].astype(float)

df_AC_RT_GRDel_M4_ef2['Total-2021'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef2['Total-2021'],errors='coerce')
df_AC_RT_GRDel_M4_ef2 = df_AC_RT_GRDel_M4_ef2.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef2['Total-2021'] = df_AC_RT_GRDel_M4_ef2['Total-2021'].astype(int)
df_AC_RT_GRDel_M4_ef2['ACQ-2021'] = df_AC_RT_GRDel_M4_ef2['ACQ-2021'].astype(int)
df_AC_RT_GRDel_M4_ef2['Percent-2021'] = df_AC_RT_GRDel_M4_ef2['Percent-2021'].astype(float)
df_AC_RT_GRDel_M4_ef2['RET-2021'] = df_AC_RT_GRDel_M4_ef2['RET-2021'].astype(int)
df_AC_RT_GRDel_M4_ef2['Percnt-2021'] = df_AC_RT_GRDel_M4_ef2['Percnt-2021'].astype(float)

df_AC_RT_GRDel_M4_ef2['Total-2022'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef2['Total-2022'],errors='coerce')
df_AC_RT_GRDel_M4_ef2 = df_AC_RT_GRDel_M4_ef2.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef2['Total-2022'] = df_AC_RT_GRDel_M4_ef2['Total-2022'].astype(int)
df_AC_RT_GRDel_M4_ef2['ACQ-2022'] = df_AC_RT_GRDel_M4_ef2['ACQ-2022'].astype(int)
df_AC_RT_GRDel_M4_ef2['Percent-2022'] = df_AC_RT_GRDel_M4_ef2['Percent-2022'].astype(float)
df_AC_RT_GRDel_M4_ef2['RET-2022'] = df_AC_RT_GRDel_M4_ef2['RET-2022'].astype(int)
df_AC_RT_GRDel_M4_ef2['Percnt-2022'] = df_AC_RT_GRDel_M4_ef2['Percnt-2022'].astype(float)

df_AC_RT_GRDel_M4_ef2['Total-2023'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef2['Total-2023'],errors='coerce')
df_AC_RT_GRDel_M4_ef2 = df_AC_RT_GRDel_M4_ef2.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef2['Total-2023'] = df_AC_RT_GRDel_M4_ef2['Total-2023'].astype(int)
df_AC_RT_GRDel_M4_ef2['ACQ-2023'] = df_AC_RT_GRDel_M4_ef2['ACQ-2023'].astype(int)
df_AC_RT_GRDel_M4_ef2['Percent-2023'] = df_AC_RT_GRDel_M4_ef2['Percent-2023'].astype(float)
df_AC_RT_GRDel_M4_ef2['RET-2023'] = df_AC_RT_GRDel_M4_ef2['RET-2023'].astype(int)
df_AC_RT_GRDel_M4_ef2['Percnt-2023'] = df_AC_RT_GRDel_M4_ef2['Percnt-2023'].astype(float)

#dff1 - GROUPS
df_Revenu_GRDel_ef2['Total-2017'] = pd.to_numeric(df_Revenu_GRDel_ef2['Total-2017'],errors='coerce')
df_Revenu_GRDel_ef2 = df_Revenu_GRDel_ef2.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef2['Total-2017'] = df_Revenu_GRDel_ef2['Total-2017'].astype(int)
df_Revenu_GRDel_ef2['Percent-2017'] = df_Revenu_GRDel_ef2['Percent-2017'].astype(float)
df_Revenu_GRDel_ef2['7DEvolution-2017'] = df_Revenu_GRDel_ef2['7DEvolution-2017'].astype(int)

df_Revenu_GRDel_ef2['Total-2018'] = pd.to_numeric(df_Revenu_GRDel_ef2['Total-2018'],errors='coerce')
df_Revenu_GRDel_ef2 = df_Revenu_GRDel_ef2.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef2['Total-2018'] = df_Revenu_GRDel_ef2['Total-2018'].astype(int)
df_Revenu_GRDel_ef2['Percent-2018'] = df_Revenu_GRDel_ef2['Percent-2018'].astype(float)
df_Revenu_GRDel_ef2['7DEvolution-2018'] = df_Revenu_GRDel_ef2['7DEvolution-2018'].astype(int)

df_Revenu_GRDel_ef2['Total-2019'] = pd.to_numeric(df_Revenu_GRDel_ef2['Total-2019'],errors='coerce')
df_Revenu_GRDel_ef2 = df_Revenu_GRDel_ef2.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef2['Total-2019'] = df_Revenu_GRDel_ef2['Total-2019'].astype(int)
df_Revenu_GRDel_ef2['Percent-2019'] = df_Revenu_GRDel_ef2['Percent-2019'].astype(float)
df_Revenu_GRDel_ef2['7DEvolution-2019'] = df_Revenu_GRDel_ef2['7DEvolution-2019'].astype(int)

df_Revenu_GRDel_ef2['Total-2022'] = pd.to_numeric(df_Revenu_GRDel_ef2['Total-2022'],errors='coerce')
df_Revenu_GRDel_ef2 = df_Revenu_GRDel_ef2.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef2['Total-2022'] = df_Revenu_GRDel_ef2['Total-2022'].astype(int)
df_Revenu_GRDel_ef2['Percent-2022'] = df_Revenu_GRDel_ef2['Percent-2022'].astype(float)
df_Revenu_GRDel_ef2['7DEvolution-2022'] = df_Revenu_GRDel_ef2['7DEvolution-2022'].astype(int)

df_Revenu_GRDel_ef2['Total-2023'] = pd.to_numeric(df_Revenu_GRDel_ef2['Total-2023'],errors='coerce')
df_Revenu_GRDel_ef2 = df_Revenu_GRDel_ef2.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef2['Total-2023'] = df_Revenu_GRDel_ef2['Total-2023'].astype(int)
df_Revenu_GRDel_ef2['Percent-2023'] = df_Revenu_GRDel_ef2['Percent-2023'].astype(float)
df_Revenu_GRDel_ef2['7DEvolution-2023'] = df_Revenu_GRDel_ef2['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_ef2['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_ef2['Total-2017'],errors='coerce')
df_Profile_Count_m2_ef2 = df_Profile_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef2['Total-2017'] = df_Profile_Count_m2_ef2['Total-2017'].astype(int)
df_Profile_Count_m2_ef2['Percent-2017'] = df_Profile_Count_m2_ef2['Percent-2017'].astype(float)

df_Profile_Count_m2_ef2['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_ef2['Total-2018'],errors='coerce')
df_Profile_Count_m2_ef2 = df_Profile_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef2['Total-2018'] = df_Profile_Count_m2_ef2['Total-2018'].astype(int)
df_Profile_Count_m2_ef2['Percent-2018'] = df_Profile_Count_m2_ef2['Percent-2018'].astype(float)

df_Profile_Count_m2_ef2['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_ef2['Total-2019'],errors='coerce')
df_Profile_Count_m2_ef2 = df_Profile_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef2['Total-2019'] = df_Profile_Count_m2_ef2['Total-2019'].astype(int)
df_Profile_Count_m2_ef2['Percent-2019'] = df_Profile_Count_m2_ef2['Percent-2019'].astype(float)

df_Profile_Count_m2_ef2['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_ef2['Total-2021'],errors='coerce')
df_Profile_Count_m2_ef2 = df_Profile_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef2['Total-2021'] = df_Profile_Count_m2_ef2['Total-2021'].astype(int)
df_Profile_Count_m2_ef2['Percent-2021'] = df_Profile_Count_m2_ef2['Percent-2021'].astype(float)

df_Profile_Count_m2_ef2['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_ef2['Total-2022'],errors='coerce')
df_Profile_Count_m2_ef2 = df_Profile_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef2['Total-2022'] = df_Profile_Count_m2_ef2['Total-2022'].astype(int)
df_Profile_Count_m2_ef2['Percent-2022'] = df_Profile_Count_m2_ef2['Percent-2022'].astype(float)

df_Profile_Count_m2_ef2['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_ef2['Total-2023'],errors='coerce')
df_Profile_Count_m2_ef2 = df_Profile_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef2['Total-2023'] = df_Profile_Count_m2_ef2['Total-2023'].astype(int)
df_Profile_Count_m2_ef2['Percent-2023'] = df_Profile_Count_m2_ef2['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_ef2['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_ef2['Total-2017'],errors='coerce')
df_Pass_Count_m2_ef2 = df_Pass_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef2['Total-2017'] = df_Pass_Count_m2_ef2['Total-2017'].astype(int)
df_Pass_Count_m2_ef2['Percent-2017'] = df_Pass_Count_m2_ef2['Percent-2017'].astype(float)

df_Pass_Count_m2_ef2['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_ef2['Total-2018'],errors='coerce')
df_Pass_Count_m2_ef2 = df_Pass_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef2['Total-2018'] = df_Pass_Count_m2_ef2['Total-2018'].astype(int)
df_Pass_Count_m2_ef2['Percent-2018'] = df_Pass_Count_m2_ef2['Percent-2018'].astype(float)

df_Pass_Count_m2_ef2['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_ef2['Total-2019'],errors='coerce')
df_Pass_Count_m2_ef2 = df_Pass_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef2['Total-2019'] = df_Pass_Count_m2_ef2['Total-2019'].astype(int)
df_Pass_Count_m2_ef2['Percent-2019'] = df_Pass_Count_m2_ef2['Percent-2019'].astype(float)

df_Pass_Count_m2_ef2['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_ef2['Total-2021'],errors='coerce')
df_Pass_Count_m2_ef2 = df_Pass_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef2['Total-2021'] = df_Pass_Count_m2_ef2['Total-2021'].astype(int)
df_Pass_Count_m2_ef2['Percent-2021'] = df_Pass_Count_m2_ef2['Percent-2021'].astype(float)

df_Pass_Count_m2_ef2['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_ef2['Total-2022'],errors='coerce')
df_Pass_Count_m2_ef2 = df_Pass_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef2['Total-2022'] = df_Pass_Count_m2_ef2['Total-2022'].astype(int)
df_Pass_Count_m2_ef2['Percent-2022'] = df_Pass_Count_m2_ef2['Percent-2022'].astype(float)

df_Pass_Count_m2_ef2['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_ef2['Total-2023'],errors='coerce')
df_Pass_Count_m2_ef2 = df_Pass_Count_m2_ef2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef2['Total-2023'] = df_Pass_Count_m2_ef2['Total-2023'].astype(int)
df_Pass_Count_m2_ef2['Percent-2023'] = df_Pass_Count_m2_ef2['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_ef2['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef2['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_ef2 = dfAttendees_Country_Count_m2_ef2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef2['Total-2017'] = dfAttendees_Country_Count_m2_ef2['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_ef2['Percent-2017'] = dfAttendees_Country_Count_m2_ef2['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_ef2['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef2['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_ef2 = dfAttendees_Country_Count_m2_ef2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef2['Total-2018'] = dfAttendees_Country_Count_m2_ef2['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_ef2['Percent-2018'] = dfAttendees_Country_Count_m2_ef2['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_ef2['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef2['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_ef2 = dfAttendees_Country_Count_m2_ef2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef2['Total-2019'] = dfAttendees_Country_Count_m2_ef2['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_ef2['Percent-2019'] = dfAttendees_Country_Count_m2_ef2['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_ef2['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef2['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_ef2 = dfAttendees_Country_Count_m2_ef2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef2['Total-2021'] = dfAttendees_Country_Count_m2_ef2['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_ef2['Percent-2021'] = dfAttendees_Country_Count_m2_ef2['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_ef2['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef2['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_ef2 = dfAttendees_Country_Count_m2_ef2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef2['Total-2022'] = dfAttendees_Country_Count_m2_ef2['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_ef2['Percent-2022'] = dfAttendees_Country_Count_m2_ef2['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_ef2['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef2['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_ef2 = dfAttendees_Country_Count_m2_ef2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef2['Total-2023'] = dfAttendees_Country_Count_m2_ef2['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_ef2['Percent-2023'] = dfAttendees_Country_Count_m2_ef2['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_ef2['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef2['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef2 = df_ATTENDEES_AREAS_count_m2_ef2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef2['Total-2017'] = df_ATTENDEES_AREAS_count_m2_ef2['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef2['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_ef2['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef2['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef2['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef2 = df_ATTENDEES_AREAS_count_m2_ef2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef2['Total-2018'] = df_ATTENDEES_AREAS_count_m2_ef2['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef2['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_ef2['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef2['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef2['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef2 = df_ATTENDEES_AREAS_count_m2_ef2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef2['Total-2019'] = df_ATTENDEES_AREAS_count_m2_ef2['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef2['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_ef2['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef2['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef2['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef2 = df_ATTENDEES_AREAS_count_m2_ef2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef2['Total-2021'] = df_ATTENDEES_AREAS_count_m2_ef2['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef2['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_ef2['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef2['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef2['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef2 = df_ATTENDEES_AREAS_count_m2_ef2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef2['Total-2022'] = df_ATTENDEES_AREAS_count_m2_ef2['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef2['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_ef2['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef2['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef2['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef2 = df_ATTENDEES_AREAS_count_m2_ef2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef2['Total-2023'] = df_ATTENDEES_AREAS_count_m2_ef2['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef2['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_ef2['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_ef2['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_ef2['Total-2017'],errors='coerce')
df_Specialty_count_m2_ef2 = df_Specialty_count_m2_ef2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef2['Total-2017'] = df_Specialty_count_m2_ef2['Total-2017'].astype(int)
df_Specialty_count_m2_ef2['Percent-2017'] = df_Specialty_count_m2_ef2['Percent-2017'].astype(float)

df_Specialty_count_m2_ef2['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_ef2['Total-2018'],errors='coerce')
df_Specialty_count_m2_ef2 = df_Specialty_count_m2_ef2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef2['Total-2018'] = df_Specialty_count_m2_ef2['Total-2018'].astype(int)
df_Specialty_count_m2_ef2['Percent-2018'] = df_Specialty_count_m2_ef2['Percent-2018'].astype(float)

df_Specialty_count_m2_ef2['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_ef2['Total-2019'],errors='coerce')
df_Specialty_count_m2_ef2 = df_Specialty_count_m2_ef2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef2['Total-2019'] = df_Specialty_count_m2_ef2['Total-2019'].astype(int)
df_Specialty_count_m2_ef2['Percent-2019'] = df_Specialty_count_m2_ef2['Percent-2019'].astype(float)

df_Specialty_count_m2_ef2['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_ef2['Total-2021'],errors='coerce')
df_Specialty_count_m2_ef2 = df_Specialty_count_m2_ef2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef2['Total-2021'] = df_Specialty_count_m2_ef2['Total-2021'].astype(int)
df_Specialty_count_m2_ef2['Percent-2021'] = df_Specialty_count_m2_ef2['Percent-2021'].astype(float)

df_Specialty_count_m2_ef2['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_ef2['Total-2022'],errors='coerce')
df_Specialty_count_m2_ef2 = df_Specialty_count_m2_ef2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef2['Total-2022'] = df_Specialty_count_m2_ef2['Total-2022'].astype(int)
df_Specialty_count_m2_ef2['Percent-2022'] = df_Specialty_count_m2_ef2['Percent-2022'].astype(float)

df_Specialty_count_m2_ef2['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_ef2['Total-2023'],errors='coerce')
df_Specialty_count_m2_ef2 = df_Specialty_count_m2_ef2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef2['Total-2023'] = df_Specialty_count_m2_ef2['Total-2023'].astype(int)
df_Specialty_count_m2_ef2['Percent-2023'] = df_Specialty_count_m2_ef2['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_ef2.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_ef2.dtypes)
#print(df_Specialty_count_m2_ef2.dtypes)

#print(dfAttendees_Country_Count_m2_ef2.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_ef2.dtypes)
#print(df_Specialty_count_m2_ef2.dtypes)

# EXCEL FILE
writer_ef2 = pd.ExcelWriter(outputExcelFile_ef2, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
df_Registrations_Merge_ef2.to_excel\
    (writer_ef2, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
df_ACQRET_count_M4_ef2.to_excel\
    (writer_ef2, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
df_Revenue_calc_ef2.to_excel\
    (writer_ef2, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
df_Registrations_GRDel_ef2.to_excel\
    (writer_ef2, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
df_AC_RT_GRDel_M4_ef2.to_excel\
    (writer_ef2, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
df_Revenu_GRDel_ef2.to_excel\
    (writer_ef2, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_ef2.to_excel\
    (writer_ef2, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_ef2.to_excel\
    (writer_ef2, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_ef2.to_excel\
    (writer_ef2, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_ef2.to_excel\
    (writer_ef2, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_ef2.to_excel\
    (writer_ef2, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writer_ef2.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_ef2)

workbook.save(outputExcelFile_ef2)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')

#unit 1 - EXTRA UNIT
#Total Number of Registrations
dfd17_ef3_Registrations_count = pd.DataFrame(filter_e3_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef3_Registrations_count = dfd17_ef3_Registrations_count.fillna('Unknown')
dfd17_ef3_Registrations_count['Percent-2017'] = (dfd17_ef3_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_ef3_Registrations_count['Percent-2017'] = dfd17_ef3_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_ef3_Registrations_count['7DEvolution-2017'] = dfd17_ef3_Registrations_count['Total-2017'] - dfd17_ef2_Registrations_count['Total-2017']
#print(tab(dfd17_ef3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef3_Registrations_count = pd.DataFrame(filter_e3_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef3_Registrations_count = dfd18_ef3_Registrations_count.fillna('Unknown')
dfd18_ef3_Registrations_count['Percent-2018'] = (dfd18_ef3_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_ef3_Registrations_count['Percent-2018'] = dfd18_ef3_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_ef3_Registrations_count['7DEvolution-2018'] = dfd18_ef3_Registrations_count['Total-2018'] - dfd18_ef2_Registrations_count['Total-2018']
#print(tab(dfd18_ef3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef3_Registrations_count = pd.DataFrame(filter_e3_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef3_Registrations_count = dfd19_ef3_Registrations_count.fillna('Unknown')
dfd19_ef3_Registrations_count['Percent-2019'] = (dfd19_ef3_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_ef3_Registrations_count['Percent-2019'] = dfd19_ef3_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_ef3_Registrations_count['7DEvolution-2019'] = dfd19_ef3_Registrations_count['Total-2019'] - dfd19_ef2_Registrations_count['Total-2019']
#print(tab(dfd19_ef3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef3_Registrations_count = pd.DataFrame(filter_e3_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef3_Registrations_count = dfd21_ef3_Registrations_count.fillna('Unknown')
dfd21_ef3_Registrations_count['Percent-2021'] = (dfd21_ef3_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_ef3_Registrations_count['Percent-2021'] = dfd21_ef3_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_ef3_Registrations_count['7DEvolution-2021'] = dfd21_ef3_Registrations_count['Total-2021'] - dfd21_ef2_Registrations_count['Total-2021']
#print(tab(dfd21_ef3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef3_Registrations_count = pd.DataFrame(filter_e3_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef3_Registrations_count = dfd22_ef3_Registrations_count.fillna('Unknown')
dfd22_ef3_Registrations_count['Percent-2022'] = (dfd22_ef3_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_ef3_Registrations_count['Percent-2022'] = dfd22_ef3_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_ef3_Registrations_count['7DEvolution-2022'] = dfd22_ef3_Registrations_count['Total-2022'] - dfd22_ef2_Registrations_count['Total-2022']
print(tab(dfd22_ef3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_Registrations_count = pd.DataFrame(filter_e3_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef3_Registrations_count = dfd23_ef3_Registrations_count.fillna('Unknown')
dfd23_ef3_Registrations_count['Percent-2023'] = (dfd23_ef3_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_ef3_Registrations_count['Percent-2023'] = dfd23_ef3_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_ef3_Registrations_count['7DEvolution-2023'] = dfd23_ef3_Registrations_count['Total-2023'] - dfd23_ef2_Registrations_count['Total-2023']
#print(tab(dfd23_ef3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_ef3_RegistrationsEvolution_count = pd.DataFrame(filter_e3_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_ef3_RegistrationsEvolution_count = dfd23_ef3_RegistrationsEvolution_count.fillna('Unknown')
dfd23_ef3_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_ef3_Registrations_count['Total-2023']- dfd19_ef3_Registrations_count['Total-2019'])/ dfd19_ef3_Registrations_count['Total-2019'].sum()) * 100
dfd23_ef3_RegistrationsEvolution_count['Evolution-2023'] = dfd23_ef3_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_ef3_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_ef3 = pd.DataFrame(pd.merge(dfd17_ef3_Registrations_count, dfd18_ef3_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_ef3 = pd.DataFrame(pd.merge(dfd19_ef3_Registrations_count, dfd21_ef3_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_ef3 = pd.DataFrame(pd.merge(dfd22_ef3_Registrations_count, dfd23_ef3_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_ef3 = pd.DataFrame(pd.merge(df_Registrations_count_1_ef3, df_Registrations_count_2_ef3, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_ef3 = pd.DataFrame(pd.merge(df_Registrations_count_m1_ef3, df_Registrations_count_3_ef3, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_ef3 = pd.DataFrame(pd.merge(df_Registrations_count_m2_ef3, dfd23_ef3_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_ef3 = filter_e3_df18[filter_e3_df18['New customer'] == 1]
df_NewCustomer_df19_ef3 = filter_e3_df19[filter_e3_df19['New customer'] == 1]
df_NewCustomer_df21_ef3 = filter_e3_df21[filter_e3_df21['New customer'] == 1]
df_NewCustomer_df22_ef3 = filter_e3_df22[filter_e3_df22['New customer'] == 1]
df_NewCustomer_df23_ef3 = filter_e3_df23[filter_e3_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ea3__ACQRET_count = pd.DataFrame(filter_e3_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_ef3_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_ef3.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_ef3_ACQRET_count['Percent-2018'] = (dfd18_ef3_ACQRET_count['ACQ-2018'] / dfd18_ef3_Registrations_count['Total-2018'].sum()) * 100
dfd18_ef3_ACQRET_count['Percent-2018'] = dfd18_ef3_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_ef3_ACQRET_count['RET-2018'] = dfd18_ea3__ACQRET_count['Total-2018'] - dfd18_ef3_ACQRET_count['ACQ-2018']
dfd18_ef3_ACQRET_count['Percnt-2018'] = (dfd18_ef3_ACQRET_count['RET-2018'] / dfd18_ea3__ACQRET_count['Total-2018'].sum()) * 100
dfd18_ef3_ACQRET_count['Percnt-2018'] = dfd18_ef3_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_ef3_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ea3__ACQRET_count = pd.DataFrame(filter_e3_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_ef3_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_ef3.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_ef3_ACQRET_count['Percent-2019'] = (dfd19_ef3_ACQRET_count['ACQ-2019'] / dfd19_ef3_Registrations_count['Total-2019'].sum()) * 100
dfd19_ef3_ACQRET_count['Percent-2019'] = dfd19_ef3_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_ef3_ACQRET_count['RET-2019'] = dfd19_ea3__ACQRET_count['Total-2019'] - dfd19_ef3_ACQRET_count['ACQ-2019']
dfd19_ef3_ACQRET_count['Percnt-2019'] = (dfd19_ef3_ACQRET_count['RET-2019'] / dfd19_ea3__ACQRET_count['Total-2019'].sum()) * 100
dfd19_ef3_ACQRET_count['Percnt-2019'] = dfd19_ef3_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_ef3_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ea3__ACQRET_count = pd.DataFrame(filter_e3_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_ef3_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_ef3.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_ef3_ACQRET_count['Percent-2021'] = (dfd21_ef3_ACQRET_count['ACQ-2021'] / dfd21_ef3_Registrations_count['Total-2021'].sum()) * 100
dfd21_ef3_ACQRET_count['Percent-2021'] = dfd21_ef3_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_ef3_ACQRET_count['RET-2021'] = dfd21_ea3__ACQRET_count['Total-2021'] - dfd21_ef3_ACQRET_count['ACQ-2021']
dfd21_ef3_ACQRET_count['Percnt-2021'] = (dfd21_ef3_ACQRET_count['RET-2021'] / dfd21_ea3__ACQRET_count['Total-2021'].sum()) * 100
dfd21_ef3_ACQRET_count['Percnt-2021'] = dfd21_ef3_ACQRET_count['Percnt-2021']
#print(tab(dfd21_ef3_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ea3__ACQRET_count = pd.DataFrame(filter_e3_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef3_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_ef3.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_ef3_ACQRET_count['Percent-2022'] = (dfd22_ef3_ACQRET_count['ACQ-2022'] / dfd22_ef3_Registrations_count['Total-2022'].sum()) * 100
dfd22_ef3_ACQRET_count['Percent-2022'] = dfd22_ef3_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_ef3_ACQRET_count['RET-2022'] = dfd22_ea3__ACQRET_count['Total-2022'] - dfd22_ef3_ACQRET_count['ACQ-2022']
dfd22_ef3_ACQRET_count['Percnt-2022'] = (dfd22_ef3_ACQRET_count['RET-2022'] / dfd22_ea3__ACQRET_count['Total-2022'].sum()) * 100
dfd22_ef3_ACQRET_count['Percnt-2022'] = dfd22_ef3_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_ef3_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ea3__ACQRET_count = pd.DataFrame(filter_e3_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef3_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_ef3.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_ef3_ACQRET_count['Percent-2023'] = (dfd23_ef3_ACQRET_count['ACQ-2023'] / dfd23_ef3_Registrations_count['Total-2023'].sum()) * 100
dfd23_ef3_ACQRET_count['Percent-2023'] = dfd23_ef3_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_ef3_ACQRET_count['RET-2023'] = dfd23_ea3__ACQRET_count['Total-2023'] - dfd23_ef3_ACQRET_count['ACQ-2023']
dfd23_ef3_ACQRET_count['Percnt-2023'] = (dfd23_ef3_ACQRET_count['RET-2023'] / dfd23_ea3__ACQRET_count['Total-2023'].sum()) * 100
dfd23_ef3_ACQRET_count['Percnt-2023'] = dfd23_ef3_ACQRET_count['Percnt-2023']
#print(tab(dfd23_ef3_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_ef3 = pd.DataFrame(pd.merge(dfd18_ea3__ACQRET_count, dfd18_ef3_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_ef3 = pd.DataFrame(pd.merge(dfd19_ea3__ACQRET_count, dfd19_ef3_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_ef3 = pd.DataFrame(pd.merge(dfd21_ea3__ACQRET_count, dfd21_ef3_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_ef3 = pd.DataFrame(pd.merge(dfd22_ea3__ACQRET_count, dfd22_ef3_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_5_ef3 = pd.DataFrame(pd.merge(dfd23_ea3__ACQRET_count, dfd23_ef3_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_5_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_ef3 = pd.DataFrame(pd.merge(df_ACQRET_count_1_ef3, df_ACQRET_count_2_ef3, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_ef3 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_ef3, df_ACQRET_count_3_ef3, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_ef3 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_ef3, df_ACQRET_count_4_ef3, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_ef3 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_ef3, df_ACQRET_count_5_ef3, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_ef3 = df_ACQRET_count_M4_ef3[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_ef3_Revenue_calc = pd.DataFrame(filter_e3_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_ef3_Revenue_calc['Percent-2017'] = (dfd17_ef3_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_ef3_Revenue_calc['Percent-2017'] = dfd17_ef3_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_ef3_Revenue_calc['7DEvolution-2017'] = dfd17_ef3_Revenue_calc['Total-2017'] - dfd17_ef2_Revenue_calc['Total-2017']
#print(tab(dfd17_ef3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef3_Revenue_calc = pd.DataFrame(filter_e3_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_ef3_Revenue_calc['Percent-2018'] = (dfd18_ef3_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_ef3_Revenue_calc['Percent-2018'] = dfd18_ef3_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_ef3_Revenue_calc['7DEvolution-2018'] = dfd18_ef3_Revenue_calc['Total-2018'] - dfd18_ef2_Revenue_calc['Total-2018']
#print(tab(dfd18_ef3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef3_Revenue_calc = pd.DataFrame(filter_e3_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_ef3_Revenue_calc['Percent-2019'] = (dfd19_ef3_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_ef3_Revenue_calc['Percent-2019'] = dfd19_ef3_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_ef3_Revenue_calc['7DEvolution-2019'] = dfd19_ef3_Revenue_calc['Total-2019'] - dfd19_ef2_Revenue_calc['Total-2019']
#print(tab(dfd19_ef3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef3_Revenue_calc = pd.DataFrame(filter_e3_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_ef3_Revenue_calc['Percent-2021'] = (dfd21_ef3_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_ef3_Revenue_calc['Percent-2021'] = dfd21_ef3_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_ef3_Revenue_calc['7DEvolution-2021'] = dfd21_ef3_Revenue_calc['Total-2021'] - dfd21_ef2_Revenue_calc['Total-2021']
#print(tab(dfd21_ef3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef3_Revenue_calc = pd.DataFrame(filter_e3_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_ef3_Revenue_calc['Percent-2022'] = (dfd22_ef3_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_ef3_Revenue_calc['Percent-2022'] = dfd22_ef3_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_ef3_Revenue_calc['7DEvolution-2022'] = dfd22_ef3_Revenue_calc['Total-2022'] - dfd22_ef2_Revenue_calc['Total-2022']
#print(tab(dfd22_ef3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_Revenue_calc = pd.DataFrame(filter_e3_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_ef3_Revenue_calc['Percent-2023'] = (dfd23_ef3_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_ef3_Revenue_calc['Percent-2023'] = dfd23_ef3_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_ef3_Revenue_calc['7DEvolution-2023'] = dfd23_ef3_Revenue_calc['Total-2023'] - dfd23_ef2_Revenue_calc['Total-2023']
#print(tab(dfd23_ef3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_ef3_RevenueEvolution_calc = pd.DataFrame(filter_e3_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_ef3_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_ef3_Revenue_calc['Total-2023'] - dfd19_ef3_Revenue_calc['Total-2019'])/ dfd19_ef3_Revenue_calc['Total-2019'].sum()) * 100
dfd23_ef3_RevenueEvolution_calc['Evolution-2023'] = dfd23_ef3_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_ef3_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_ef3 = pd.DataFrame(pd.merge(dfd17_ef3_Revenue_calc, dfd18_ef3_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_ef3 = pd.DataFrame(pd.merge(dfd19_ef3_Revenue_calc, dfd21_ef3_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_ef3 = pd.DataFrame(pd.merge(dfd22_ef3_Revenue_calc, dfd23_ef3_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_ef3_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_ef3, df_Revenue_calc_2_ef3, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_ef3Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_ef3_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_ef3_Evolution, df_Revenue_calc_3_ef3, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_ef3Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_ef3 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_ef3_Evolution, dfd23_ef3_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_ef3_Registrations_GRDel = pd.DataFrame(filtr_e3_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef3_Registrations_GRDel = dfd17_ef3_Registrations_GRDel.fillna('Unknown')
dfd17_ef3_Registrations_GRDel['Percent-2017'] = (dfd17_ef3_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_ef3_Registrations_GRDel['Percent-2017'] = dfd17_ef3_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_ef3_Registrations_GRDel['7DEvolution-2017'] = dfd17_ef3_Registrations_GRDel['Total-2017'] - dfd17_ef2_Registrations_GRDel['Total-2017']
#print(tab(dfd17_ef3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef3_Registrations_GRDel = pd.DataFrame(filtr_e3_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef3_Registrations_GRDel = dfd18_ef3_Registrations_GRDel.fillna('Unknown')
dfd18_ef3_Registrations_GRDel['Percent-2018'] = (dfd18_ef3_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_ef3_Registrations_GRDel['Percent-2018'] = dfd18_ef3_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_ef3_Registrations_GRDel['7DEvolution-2018'] = dfd18_ef3_Registrations_GRDel['Total-2018'] - dfd18_ef2_Registrations_GRDel['Total-2018']
#print(tab(dfd18_ef3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef3_Registrations_GRDel = pd.DataFrame(filtr_e3_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef3_Registrations_GRDel = dfd19_ef3_Registrations_GRDel.fillna('Unknown')
dfd19_ef3_Registrations_GRDel['Percent-2019'] = (dfd19_ef3_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_ef3_Registrations_GRDel['Percent-2019'] = dfd19_ef3_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_ef3_Registrations_GRDel['7DEvolution-2019'] = dfd19_ef3_Registrations_GRDel['Total-2019'] - dfd19_ef2_Registrations_GRDel['Total-2019']
#print(tab(dfd19_ef3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef3_Registrations_GRDel = pd.DataFrame(filtr_e3_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef3_Registrations_GRDel = dfd21_ef3_Registrations_GRDel.fillna('Unknown')
dfd21_ef3_Registrations_GRDel['Percent-2021'] = (dfd21_ef3_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_ef3_Registrations_GRDel['Percent-2021'] = dfd21_ef3_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_ef3_Registrations_GRDel['7DEvolution-2021'] = dfd21_ef3_Registrations_GRDel['Total-2021'] - dfd21_ef2_Registrations_GRDel['Total-2021']
#print(tab(dfd21_ef3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef3_Registrations_GRDel = pd.DataFrame(filtr_e3_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef3_Registrations_GRDel = dfd22_ef3_Registrations_GRDel.fillna('Unknown')
dfd22_ef3_Registrations_GRDel['Percent-2022'] = (dfd22_ef3_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_ef3_Registrations_GRDel['Percent-2022'] = dfd22_ef3_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_ef3_Registrations_GRDel['7DEvolution-2022'] = dfd22_ef3_Registrations_GRDel['Total-2022'] - dfd22_ef2_Registrations_GRDel['Total-2022']
#print(tab(dfd22_ef3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_Registrations_GRDel = pd.DataFrame(filtr_e3_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef3_Registrations_GRDel = dfd23_ef3_Registrations_GRDel.fillna('Unknown')
dfd23_ef3_Registrations_GRDel['Percent-2023'] = (dfd23_ef3_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_ef3_Registrations_GRDel['Percent-2023'] = dfd23_ef3_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_ef3_Registrations_GRDel['7DEvolution-2023'] = dfd23_ef3_Registrations_GRDel['Total-2023'] - dfd23_ef2_Registrations_GRDel['Total-2023']
#print(tab(dfd23_ef3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_ef3_Registrations_Evol_GRDel = pd.DataFrame(filtr_e3_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_ef3_Registrations_Evol_GRDel = dfd23_ef3_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_ef3_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_ef3_Registrations_GRDel['Total-2023'] - dfd19_ef3_Registrations_GRDel['Total-2019'])/ dfd19_ef3_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_ef3_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_ef3 = pd.concat([dfd17_ef3_Registrations_GRDel, dfd18_ef3_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_ef3 = pd.DataFrame(pd.merge(dfd17_ef3_Registrations_GRDel, dfd18_ef3_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_ef3 = pd.DataFrame(pd.merge(dfd19_ef3_Registrations_GRDel, dfd21_ef3_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_ef3 = pd.DataFrame(pd.merge(dfd22_ef3_Registrations_GRDel, dfd23_ef3_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_ef3 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_ef3, df_Registrations_GRDel_2_ef3, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_5_ef3 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_ef3, df_Registrations_GRDel_3_ef3, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_ef3 = pd.DataFrame(pd.merge(df_Registrations_GRDel_5_ef3, dfd23_ef3_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_ef3 = df_Registrations_GRDel_ef3[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]
#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_ef3 = filtr_e3_df18_GRdel[filtr_e3_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_ef3 = filtr_e3_df19_GRdel[filtr_e3_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_ef3 = filtr_e3_df21_GRdel[filtr_e3_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_ef3 = filtr_e3_df22_GRdel[filtr_e3_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_ef3 = filtr_e3_df23_GRdel[filtr_e3_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ea3__AC_RT_GRDel = pd.DataFrame(filtr_e3_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_ef3_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_ef3.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_ef3_AC_RT_GRDel['Percent-2018'] = (dfd18_ef3_AC_RT_GRDel['ACQ-2018'] / dfd18_ef3_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_ef3_AC_RT_GRDel['Percent-2018'] = dfd18_ef3_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_ef3_AC_RT_GRDel['RET-2018'] = dfd18_ea3__AC_RT_GRDel['Total-2018'] - dfd18_ef3_AC_RT_GRDel['ACQ-2018']
dfd18_ef3_AC_RT_GRDel['Percnt-2018'] = (dfd18_ef3_AC_RT_GRDel['RET-2018'] / dfd18_ea3__AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_ef3_AC_RT_GRDel['Percnt-2018'] = dfd18_ef3_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_ef3_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ea3__AC_RT_GRDel = pd.DataFrame(filtr_e3_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_ef3_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_ef3.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_ef3_AC_RT_GRDel['Percent-2019'] = (dfd19_ef3_AC_RT_GRDel['ACQ-2019'] / dfd19_ef3_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_ef3_AC_RT_GRDel['Percent-2019'] = dfd19_ef3_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_ef3_AC_RT_GRDel['RET-2019'] = dfd19_ea3__AC_RT_GRDel['Total-2019'] - dfd19_ef3_AC_RT_GRDel['ACQ-2019']
dfd19_ef3_AC_RT_GRDel['Percnt-2019'] = (dfd19_ef3_AC_RT_GRDel['RET-2019'] / dfd19_ea3__AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_ef3_AC_RT_GRDel['Percnt-2019'] = dfd19_ef3_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_ef3_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ea3__AC_RT_GRDel = pd.DataFrame(filtr_e3_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_ef3_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_ef3.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_ef3_AC_RT_GRDel['Percent-2021'] = (dfd21_ef3_AC_RT_GRDel['ACQ-2021'] / dfd21_ef3_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_ef3_AC_RT_GRDel['Percent-2021'] = dfd21_ef3_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_ef3_AC_RT_GRDel['RET-2021'] = dfd21_ea3__AC_RT_GRDel['Total-2021'] - dfd21_ef3_AC_RT_GRDel['ACQ-2021']
dfd21_ef3_AC_RT_GRDel['Percnt-2021'] = (dfd21_ef3_AC_RT_GRDel['RET-2021'] / dfd21_ea3__AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_ef3_AC_RT_GRDel['Percnt-2021'] = dfd21_ef3_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_ef3_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ea3__AC_RT_GRDel = pd.DataFrame(filtr_e3_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_ef3_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_ef3.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_ef3_AC_RT_GRDel['Percent-2022'] = (dfd22_ef3_AC_RT_GRDel['ACQ-2022'] / dfd22_ef3_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_ef3_AC_RT_GRDel['Percent-2022'] = dfd22_ef3_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_ef3_AC_RT_GRDel['RET-2022'] = dfd22_ea3__AC_RT_GRDel['Total-2022'] - dfd22_ef3_AC_RT_GRDel['ACQ-2022']
dfd22_ef3_AC_RT_GRDel['Percnt-2022'] = (dfd22_ef3_AC_RT_GRDel['RET-2022'] / dfd22_ea3__AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_ef3_AC_RT_GRDel['Percnt-2022'] = dfd22_ef3_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_ef3_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ea3__AC_RT_GRDel = pd.DataFrame(filtr_e3_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_ef3_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_ef3.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_ef3_AC_RT_GRDel['Percent-2023'] = (dfd23_ef3_AC_RT_GRDel['ACQ-2023'] / dfd23_ef3_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_ef3_AC_RT_GRDel['Percent-2023'] = dfd23_ef3_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_ef3_AC_RT_GRDel['RET-2023'] = dfd23_ea3__AC_RT_GRDel['Total-2023'] - dfd23_ef3_AC_RT_GRDel['ACQ-2023']
dfd23_ef3_AC_RT_GRDel['Percnt-2023'] = (dfd23_ef3_AC_RT_GRDel['RET-2023'] / dfd23_ea3__AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_ef3_AC_RT_GRDel['Percnt-2023'] = dfd23_ef3_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_ef3_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_ef3 = pd.DataFrame(pd.merge_ordered(dfd18_ea3__AC_RT_GRDel, dfd18_ef3_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_ef3 = pd.DataFrame(pd.merge_ordered(dfd19_ea3__AC_RT_GRDel, dfd19_ef3_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_ef3 = pd.DataFrame(pd.merge_ordered(dfd21_ea3__AC_RT_GRDel, dfd21_ef3_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_ef3 = pd.DataFrame(pd.merge_ordered(dfd22_ea3__AC_RT_GRDel, dfd22_ef3_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_5_ef3 = pd.DataFrame(pd.merge_ordered(dfd23_ea3__AC_RT_GRDel, dfd23_ef3_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_ef3 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_ef3, df_AC_ET_GRDel_2_ef3, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_ef3 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_ef3, df_AC_ET_GRDel_3_ef3, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_ef3 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_ef3, df_AC_ET_GRDel_4_ef3, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_ef3 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_ef3, df_AC_ET_GRDel_5_ef3, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_ef3 = df_AC_RT_GRDel_M4_ef3[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_e3_df17_GRdel = filtr_e3_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_ef3_Revenu_GRDel = pd.DataFrame(filtr_e3_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_ef3_Revenu_GRDel['Percent-2017'] = (dfd17_ef3_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_ef3_Revenu_GRDel['Percent-2017'] = dfd17_ef3_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_ef3_Revenu_GRDel['7DEvolution-2017'] = dfd17_ef3_Revenu_GRDel['Total-2017'] - dfd17_ef2_Revenu_GRDel['Total-2017']
#print(tab(dfd17_ef3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e3_df18_GRdel = filtr_e3_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_ef3_Revenu_GRDel = pd.DataFrame(filtr_e3_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_ef3_Revenu_GRDel['Percent-2018'] = (dfd18_ef3_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_ef3_Revenu_GRDel['Percent-2018'] = dfd18_ef3_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_ef3_Revenu_GRDel['7DEvolution-2018'] = dfd18_ef3_Revenu_GRDel['Total-2018'] - dfd18_ef2_Revenu_GRDel['Total-2018']
#print(tab(dfd18_ef3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e3_df19_GRdel = filtr_e3_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_ef3_Revenu_GRDel = pd.DataFrame(filtr_e3_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_ef3_Revenu_GRDel['Percent-2019'] = (dfd19_ef3_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_ef3_Revenu_GRDel['Percent-2019'] = dfd19_ef3_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_ef3_Revenu_GRDel['7DEvolution-2019'] = dfd19_ef3_Revenu_GRDel['Total-2019'] - dfd19_ef2_Revenu_GRDel['Total-2019']
#print(tab(dfd19_ef3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e3_df21_GRdel = filtr_e3_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_ef3_Revenu_GRDel = pd.DataFrame(filtr_e3_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_ef3_Revenu_GRDel['Percent-2021'] = (dfd21_ef3_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_ef3_Revenu_GRDel['Percent-2021'] = dfd21_ef3_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_ef3_Revenu_GRDel['7DEvolution-2021'] = dfd21_ef3_Revenu_GRDel['Total-2021'] - dfd21_ef2_Revenu_GRDel['Total-2021']
#print(tab(dfd21_ef3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e3_df22_GRdel = filtr_e3_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_ef3_Revenu_GRDel = pd.DataFrame(filtr_e3_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_ef3_Revenu_GRDel['Percent-2022'] = (dfd22_ef3_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_ef3_Revenu_GRDel['Percent-2022'] = dfd22_ef3_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_ef3_Revenu_GRDel['7DEvolution-2022'] = dfd22_ef3_Revenu_GRDel['Total-2022'] - dfd22_ef2_Revenu_GRDel['Total-2022']
#print(tab(dfd22_ef3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_e3_df23_GRdel = filtr_e3_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_ef3_Revenu_GRDel = pd.DataFrame(filtr_e3_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_ef3_Revenu_GRDel['Percent-2023'] = (dfd23_ef3_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_ef3_Revenu_GRDel['Percent-2023'] = dfd23_ef3_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_ef3_Revenu_GRDel['7DEvolution-2023'] = dfd23_ef3_Revenu_GRDel['Total-2023'] - dfd23_ef2_Revenu_GRDel['Total-2023']
#print(tab(dfd23_ef3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_ef3_Revenu_Evlt_GRDel = pd.DataFrame(filtr_e3_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_ef3_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_ef3_Revenu_GRDel['Total-2023'] - dfd19_ef3_Revenu_GRDel['Total-2019'])/ dfd19_ef3_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_ef3_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_ef3_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_ef3_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_ef3 = pd.DataFrame(pd.merge(dfd17_ef3_Revenu_GRDel, dfd18_ef3_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_ef3 = pd.DataFrame(pd.merge(dfd19_ef3_Revenu_GRDel, dfd21_ef3_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_ef3 = pd.DataFrame(pd.merge(dfd22_ef3_Revenu_GRDel, dfd23_ef3_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_ef3 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_ef3, df_Revenu_GRDel_2_ef3, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_5_ef3 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_ef3, df_Revenu_GRDel_3_ef3, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_ef3 = pd.DataFrame(pd.merge(df_Revenu_GRDel_5_ef3, dfd23_ef3_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_ef3 = df_Revenu_GRDel_ef3[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

#UNIT 3
#COUNT PROFILE
dfd17_ef3_Profile_count = pd.DataFrame(filtr_e3_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef3_Profile_count = dfd17_ef3_Profile_count.fillna('Unknown')
dfd17_ef3_Profile_count['Percent-2017'] = (dfd17_ef3_Profile_count['Total-2017'] / dfd17_ef3_Profile_count['Total-2017'].sum()) * 100
dfd17_ef3_Profile_count['Percent-2017'] = dfd17_ef3_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef3_Profile_count = pd.DataFrame(filtr_e3_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef3_Profile_count = dfd18_ef3_Profile_count.fillna('Unknown')
dfd18_ef3_Profile_count['Percent-2018'] = (dfd18_ef3_Profile_count['Total-2018'] / dfd18_ef3_Profile_count['Total-2018'].sum()) * 100
dfd18_ef3_Profile_count['Percent-2018'] = dfd18_ef3_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef3_Profile_count = pd.DataFrame(filtr_e3_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef3_Profile_count = dfd19_ef3_Profile_count.fillna('Unknown')
dfd19_ef3_Profile_count['Percent-2019'] = (dfd19_ef3_Profile_count['Total-2019'] / dfd19_ef3_Profile_count['Total-2019'].sum()) * 100
dfd19_ef3_Profile_count['Percent-2019'] = dfd19_ef3_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef3_Profile_count = pd.DataFrame(filtr_e3_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef3_Profile_count = dfd21_ef3_Profile_count.fillna('Unknown')
dfd21_ef3_Profile_count['Percent-2021'] = (dfd21_ef3_Profile_count['Total-2021'] / dfd21_ef3_Profile_count['Total-2021'].sum()) * 100
dfd21_ef3_Profile_count['Percent-2021'] = dfd21_ef3_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef3_Profile_count = pd.DataFrame(filtr_e3_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef3_Profile_count = dfd22_ef3_Profile_count.fillna('Unknown')
dfd22_ef3_Profile_count['Percent-2022'] = (dfd22_ef3_Profile_count['Total-2022'] / dfd22_ef3_Profile_count['Total-2022'].sum()) * 100
dfd22_ef3_Profile_count['Percent-2022'] = dfd22_ef3_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_Profile_count = pd.DataFrame(filtr_e3_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef3_Profile_count = dfd23_ef3_Profile_count.fillna('Unknown')
dfd23_ef3_Profile_count['Percent-2023'] = (dfd23_ef3_Profile_count['Total-2023'] / dfd23_ef3_Profile_count['Total-2023'].sum()) * 100
dfd23_ef3_Profile_count['Percent-2023'] = dfd23_ef3_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_ef3 = pd.DataFrame(pd.merge(dfd17_ef3_Profile_count, dfd18_ef3_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_ef3 = pd.DataFrame(pd.merge(dfd19_ef3_Profile_count, dfd21_ef3_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_ef3 = pd.DataFrame(pd.merge(dfd22_ef3_Profile_count, dfd23_ef3_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_ef3 = pd.DataFrame(pd.merge(df_Profile_Count_1_ef3, df_Profile_Count_2_ef3, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_ef3 = pd.DataFrame(pd.merge(df_Profile_Count_m1_ef3, df_Profile_Count_3_ef3, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_ef3 = df_Profile_Count_m2_ef3.append(df_Profile_Count_m2_ef3.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_ef3['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_ef3_Pass_count = pd.DataFrame(filtr_e3_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef3_Pass_count = dfd17_ef3_Pass_count.fillna('Unknown')
dfd17_ef3_Pass_count['Percent-2017'] = (dfd17_ef3_Pass_count['Total-2017'] / dfd17_ef3_Pass_count['Total-2017'].sum()) * 100
dfd17_ef3_Pass_count['Percent-2017'] = dfd17_ef3_Pass_count['Percent-2017'].round(decimals=0)

dfd18_ef3_Pass_count = pd.DataFrame(filtr_e3_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef3_Pass_count = dfd18_ef3_Pass_count.fillna('Unknown')
dfd18_ef3_Pass_count['Percent-2018'] = (dfd18_ef3_Pass_count['Total-2018'] / dfd18_ef3_Pass_count['Total-2018'].sum()) * 100
dfd18_ef3_Pass_count['Percent-2018'] = dfd18_ef3_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef3_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef3_Pass_count = pd.DataFrame(filtr_e3_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef3_Pass_count = dfd19_ef3_Pass_count.fillna('Unknown')
dfd19_ef3_Pass_count['Percent-2019'] = (dfd19_ef3_Pass_count['Total-2019'] / dfd19_ef3_Pass_count['Total-2019'].sum()) * 100
dfd19_ef3_Pass_count['Percent-2019'] = dfd19_ef3_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef3_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef3_Pass_count = pd.DataFrame(filtr_e3_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef3_Pass_count = dfd21_ef3_Pass_count.fillna('Unknown')
dfd21_ef3_Pass_count['Percent-2021'] = (dfd21_ef3_Pass_count['Total-2021'] / dfd21_ef3_Pass_count['Total-2021'].sum()) * 100
dfd21_ef3_Pass_count['Percent-2021'] = dfd21_ef3_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef3_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef3_Pass_count = pd.DataFrame(filtr_e3_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef3_Pass_count = dfd22_ef3_Pass_count.fillna('Unknown')
dfd22_ef3_Pass_count['Percent-2022'] = (dfd22_ef3_Pass_count['Total-2022'] / dfd22_ef3_Pass_count['Total-2022'].sum()) * 100
dfd22_ef3_Pass_count['Percent-2022'] = dfd22_ef3_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef3_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_Pass_count = pd.DataFrame(filtr_e3_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef3_Pass_count = dfd23_ef3_Pass_count.fillna('Unknown')
dfd23_ef3_Pass_count['Percent-2023'] = (dfd23_ef3_Pass_count['Total-2023'] / dfd23_ef3_Pass_count['Total-2023'].sum()) * 100
dfd23_ef3_Pass_count['Percent-2023'] = dfd23_ef3_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef3_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_ef3 = pd.DataFrame(pd.merge(dfd17_ef3_Pass_count, dfd18_ef3_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_ef3 = pd.DataFrame(pd.merge(dfd19_ef3_Pass_count, dfd21_ef3_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_ef3 = pd.DataFrame(pd.merge(dfd22_ef3_Pass_count, dfd23_ef3_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_ef3 = pd.DataFrame(pd.merge(df_Pass_Count_1_ef3, df_Pass_Count_2_ef3, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_ef3 = pd.DataFrame(pd.merge(df_Pass_Count_m1_ef3, df_Pass_Count_3_ef3, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_ef3 = df_Pass_Count_m2_ef3.append(df_Pass_Count_m2_ef3.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_ef3['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_ef3_Attendees_Country_count = pd.DataFrame(filtr_e3_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef3_Attendees_Country_count = dfd17_ef3_Attendees_Country_count.fillna('Unknown')
dfd17_ef3_Attendees_Country_count['Percent-2017'] = (dfd17_ef3_Attendees_Country_count['Total-2017'] / dfd17_ef3_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_ef3_Attendees_Country_count['Percent-2017'] = dfd17_ef3_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef3_Attendees_Country_count = pd.DataFrame(filtr_e3_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef3_Attendees_Country_count = dfd18_ef3_Attendees_Country_count.fillna('Unknown')
dfd18_ef3_Attendees_Country_count['Percent-2018'] = (dfd18_ef3_Attendees_Country_count['Total-2018'] / dfd18_ef3_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_ef3_Attendees_Country_count['Percent-2018'] = dfd18_ef3_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef3_Attendees_Country_count = pd.DataFrame(filtr_e3_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef3_Attendees_Country_count = dfd19_ef3_Attendees_Country_count.fillna('Unknown')
dfd19_ef3_Attendees_Country_count['Percent-2019'] = (dfd19_ef3_Attendees_Country_count['Total-2019'] / dfd19_ef3_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_ef3_Attendees_Country_count['Percent-2019'] = dfd19_ef3_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef3_Attendees_Country_count = pd.DataFrame(filtr_e3_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef3_Attendees_Country_count = dfd21_ef3_Attendees_Country_count.fillna('Unknown')
dfd21_ef3_Attendees_Country_count['Percent-2021'] = (dfd21_ef3_Attendees_Country_count['Total-2021'] / dfd21_ef3_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_ef3_Attendees_Country_count['Percent-2021'] = dfd21_ef3_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef3_Attendees_Country_count = pd.DataFrame(filtr_e3_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef3_Attendees_Country_count = dfd22_ef3_Attendees_Country_count.fillna('Unknown')
dfd22_ef3_Attendees_Country_count['Percent-2022'] = (dfd22_ef3_Attendees_Country_count['Total-2022'] / dfd22_ef3_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_ef3_Attendees_Country_count['Percent-2022'] = dfd22_ef3_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_Attendees_Country_count = pd.DataFrame(filtr_e3_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef3_Attendees_Country_count = dfd23_ef3_Attendees_Country_count.fillna('Unknown')
dfd23_ef3_Attendees_Country_count['Percent-2023'] = (dfd23_ef3_Attendees_Country_count['Total-2023'] / dfd23_ef3_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_ef3_Attendees_Country_count['Percent-2023'] = dfd23_ef3_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_ef3 = pd.DataFrame(pd.merge(dfd17_ef3_Attendees_Country_count, dfd18_ef3_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_ef3 = pd.DataFrame(pd.merge(dfd19_ef3_Attendees_Country_count, dfd21_ef3_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_ef3 = pd.DataFrame(pd.merge(dfd22_ef3_Attendees_Country_count, dfd23_ef3_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_ef3 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_ef3, dfAttendees_Country_Count_2_ef3, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_ef3.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_ef3 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_ef3, dfAttendees_Country_Count_3_ef3, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_ef3 = dfAttendees_Country_Count_m2_ef3.append(dfAttendees_Country_Count_m2_ef3.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_ef3['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_ef3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e3_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef3_ATTENDEES_AREAS_count = dfd17_ef3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_ef3_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_ef3_ATTENDEES_AREAS_count['Total-2017'] / dfd17_ef3_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_ef3_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_ef3_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e3_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef3_ATTENDEES_AREAS_count = dfd18_ef3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_ef3_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_ef3_ATTENDEES_AREAS_count['Total-2018'] / dfd18_ef3_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_ef3_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_ef3_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e3_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef3_ATTENDEES_AREAS_count = dfd19_ef3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_ef3_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_ef3_ATTENDEES_AREAS_count['Total-2019'] / dfd19_ef3_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_ef3_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_ef3_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e3_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef3_ATTENDEES_AREAS_count = dfd21_ef3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_ef3_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_ef3_ATTENDEES_AREAS_count['Total-2021'] / dfd21_ef3_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_ef3_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_ef3_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e3_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef3_ATTENDEES_AREAS_count = dfd22_ef3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_ef3_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_ef3_ATTENDEES_AREAS_count['Total-2022'] / dfd22_ef3_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_ef3_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_ef3_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_e3_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef3_ATTENDEES_AREAS_count = dfd23_ef3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_ef3_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_ef3_ATTENDEES_AREAS_count['Total-2023'] / dfd23_ef3_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_ef3_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_ef3_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_ef3 = pd.DataFrame(pd.merge(dfd17_ef3_ATTENDEES_AREAS_count, dfd18_ef3_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_ef3 = pd.DataFrame(pd.merge(dfd19_ef3_ATTENDEES_AREAS_count, dfd21_ef3_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_ef3 = pd.DataFrame(pd.merge(dfd22_ef3_ATTENDEES_AREAS_count, dfd23_ef3_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_ef3.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_ef3 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_ef3, df_ATTENDEES_AREAS_count_2_ef3, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_ef3 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_ef3, df_ATTENDEES_AREAS_count_3_ef3, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_ef3 = df_ATTENDEES_AREAS_count_m2_ef3.append(df_ATTENDEES_AREAS_count_m2_ef3.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_ef3['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_ef3_Attendees_Specialty_count = pd.DataFrame(filtr_e3_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_ef3_Attendees_Specialty_count = dfd17_ef3_Attendees_Specialty_count.fillna('Unknown')
dfd17_ef3_Attendees_Specialty_count['Percent-2017'] = (dfd17_ef3_Attendees_Specialty_count['Total-2017'] / dfd17_ef3_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_ef3_Attendees_Specialty_count['Percent-2017'] = dfd17_ef3_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_ef3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_ef3_Attendees_Specialty_count = pd.DataFrame(filtr_e3_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_ef3_Attendees_Specialty_count = dfd18_ef3_Attendees_Specialty_count.fillna('Unknown')
dfd18_ef3_Attendees_Specialty_count['Percent-2018'] = (dfd18_ef3_Attendees_Specialty_count['Total-2018'] / dfd18_ef3_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_ef3_Attendees_Specialty_count['Percent-2018'] = dfd18_ef3_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_ef3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_ef3_Attendees_Specialty_count = pd.DataFrame(filtr_e3_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_ef3_Attendees_Specialty_count = dfd19_ef3_Attendees_Specialty_count.fillna('Unknown')
dfd19_ef3_Attendees_Specialty_count['Percent-2019'] = (dfd19_ef3_Attendees_Specialty_count['Total-2019'] / dfd19_ef3_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_ef3_Attendees_Specialty_count['Percent-2019'] = dfd19_ef3_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_ef3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_ef3_Attendees_Specialty_count = pd.DataFrame(filtr_e3_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_ef3_Attendees_Specialty_count = dfd21_ef3_Attendees_Specialty_count.fillna('Unknown')
dfd21_ef3_Attendees_Specialty_count['Percent-2021'] = (dfd21_ef3_Attendees_Specialty_count['Total-2021'] / dfd21_ef3_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_ef3_Attendees_Specialty_count['Percent-2021'] = dfd21_ef3_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_ef3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_ef3_Attendees_Specialty_count = pd.DataFrame(filtr_e3_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_ef3_Attendees_Specialty_count = dfd22_ef3_Attendees_Specialty_count.fillna('Unknown')
dfd22_ef3_Attendees_Specialty_count['Percent-2022'] = (dfd22_ef3_Attendees_Specialty_count['Total-2022'] / dfd22_ef3_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_ef3_Attendees_Specialty_count['Percent-2022'] = dfd22_ef3_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_ef3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_ef3_Attendees_Specialty_count = pd.DataFrame(filtr_e3_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_ef3_Attendees_Specialty_count = dfd23_ef3_Attendees_Specialty_count.fillna('Unknown')
dfd23_ef3_Attendees_Specialty_count['Percent-2023'] = (dfd23_ef3_Attendees_Specialty_count['Total-2023'] / dfd23_ef3_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_ef3_Attendees_Specialty_count['Percent-2023'] = dfd23_ef3_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_ef3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_ef3 = pd.DataFrame(pd.merge(dfd17_ef3_Attendees_Specialty_count, dfd18_ef3_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_ef3 = pd.DataFrame(pd.merge(dfd19_ef3_Attendees_Specialty_count, dfd21_ef3_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_ef3 = pd.DataFrame(pd.merge(dfd22_ef3_Attendees_Specialty_count, dfd23_ef3_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_ef3 = pd.DataFrame(pd.merge(df_Specialty_count_1_ef3, df_Specialty_count_2_ef3, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_ef3 = pd.DataFrame(pd.merge(df_Specialty_count_m1_ef3, df_Specialty_count_3_ef3, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_ef3 = df_Specialty_count_m2_ef3.append(df_Specialty_count_m2_ef3.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_ef3['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
df_Registrations_Merge_ef3['Total-2017'] = pd.to_numeric(df_Registrations_Merge_ef3['Total-2017'],errors='coerce')
df_Registrations_Merge_ef3 = df_Registrations_Merge_ef3.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef3['Total-2017'] = df_Registrations_Merge_ef3['Total-2017'].astype(int)
df_Registrations_Merge_ef3['Percent-2017'] = df_Registrations_Merge_ef3['Percent-2017'].astype(float)
df_Registrations_Merge_ef3['7DEvolution-2017'] = df_Registrations_Merge_ef3['7DEvolution-2017'].astype(int)

df_Registrations_Merge_ef3['Total-2018'] = pd.to_numeric(df_Registrations_Merge_ef3['Total-2018'],errors='coerce')
df_Registrations_Merge_ef3 = df_Registrations_Merge_ef3.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef3['Total-2018'] = df_Registrations_Merge_ef3['Total-2018'].astype(int)
df_Registrations_Merge_ef3['Percent-2018'] = df_Registrations_Merge_ef3['Percent-2018'].astype(float)
df_Registrations_Merge_ef3['7DEvolution-2018'] = df_Registrations_Merge_ef3['7DEvolution-2018'].astype(int)

df_Registrations_Merge_ef3['Total-2019'] = pd.to_numeric(df_Registrations_Merge_ef3['Total-2019'],errors='coerce')
df_Registrations_Merge_ef3 = df_Registrations_Merge_ef3.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef3['Total-2019'] = df_Registrations_Merge_ef3['Total-2019'].astype(int)
df_Registrations_Merge_ef3['Percent-2019'] = df_Registrations_Merge_ef3['Percent-2019'].astype(float)
df_Registrations_Merge_ef3['7DEvolution-2019'] = df_Registrations_Merge_ef3['7DEvolution-2019'].astype(int)

df_Registrations_Merge_ef3['Total-2021'] = pd.to_numeric(df_Registrations_Merge_ef3['Total-2021'],errors='coerce')
df_Registrations_Merge_ef3 = df_Registrations_Merge_ef3.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef3['Total-2021'] = df_Registrations_Merge_ef3['Total-2021'].astype(int)
df_Registrations_Merge_ef3['Percent-2021'] = df_Registrations_Merge_ef3['Percent-2021'].astype(float)
df_Registrations_Merge_ef3['7DEvolution-2021'] = df_Registrations_Merge_ef3['7DEvolution-2021'].astype(int)

df_Registrations_Merge_ef3['Total-2022'] = pd.to_numeric(df_Registrations_Merge_ef3['Total-2022'],errors='coerce')
df_Registrations_Merge_ef3 = df_Registrations_Merge_ef3.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef3['Total-2022'] = df_Registrations_Merge_ef3['Total-2022'].astype(int)
df_Registrations_Merge_ef3['Percent-2022'] = df_Registrations_Merge_ef3['Percent-2022'].astype(float)
df_Registrations_Merge_ef3['7DEvolution-2022'] = df_Registrations_Merge_ef3['7DEvolution-2022'].astype(int)

df_Registrations_Merge_ef3['Total-2023'] = pd.to_numeric(df_Registrations_Merge_ef3['Total-2023'],errors='coerce')
df_Registrations_Merge_ef3 = df_Registrations_Merge_ef3.replace(np.nan, 0, regex=True)
df_Registrations_Merge_ef3['Total-2023'] = df_Registrations_Merge_ef3['Total-2023'].astype(int)
df_Registrations_Merge_ef3['Percent-2023'] = df_Registrations_Merge_ef3['Percent-2023'].astype(float)
df_Registrations_Merge_ef3['7DEvolution-2023'] = df_Registrations_Merge_ef3['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
df_ACQRET_count_M4_ef3['Total-2018'] = pd.to_numeric(df_ACQRET_count_M4_ef3['Total-2018'],errors='coerce')
df_ACQRET_count_M4_ef3 = df_ACQRET_count_M4_ef3.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef3['Total-2018'] = df_ACQRET_count_M4_ef3['Total-2018'].astype(int)
df_ACQRET_count_M4_ef3['ACQ-2018'] = df_ACQRET_count_M4_ef3['ACQ-2018'].astype(int)
df_ACQRET_count_M4_ef3['Percent-2018'] = df_ACQRET_count_M4_ef3['Percent-2018'].astype(float)
df_ACQRET_count_M4_ef3['RET-2018'] = df_ACQRET_count_M4_ef3['RET-2018'].astype(int)
df_ACQRET_count_M4_ef3['Percnt-2018'] = df_ACQRET_count_M4_ef3['Percnt-2018'].astype(float)

df_ACQRET_count_M4_ef3['Total-2019'] = pd.to_numeric(df_ACQRET_count_M4_ef3['Total-2019'],errors='coerce')
df_ACQRET_count_M4_ef3 = df_ACQRET_count_M4_ef3.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef3['Total-2019'] = df_ACQRET_count_M4_ef3['Total-2019'].astype(int)
df_ACQRET_count_M4_ef3['ACQ-2019'] = df_ACQRET_count_M4_ef3['ACQ-2019'].astype(int)
df_ACQRET_count_M4_ef3['Percent-2019'] = df_ACQRET_count_M4_ef3['Percent-2019'].astype(float)
df_ACQRET_count_M4_ef3['RET-2019'] = df_ACQRET_count_M4_ef3['RET-2019'].astype(int)
df_ACQRET_count_M4_ef3['Percnt-2019'] = df_ACQRET_count_M4_ef3['Percnt-2019'].astype(float)

df_ACQRET_count_M4_ef3['Total-2021'] = pd.to_numeric(df_ACQRET_count_M4_ef3['Total-2021'],errors='coerce')
df_ACQRET_count_M4_ef3 = df_ACQRET_count_M4_ef3.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef3['Total-2021'] = df_ACQRET_count_M4_ef3['Total-2021'].astype(int)
df_ACQRET_count_M4_ef3['ACQ-2021'] = df_ACQRET_count_M4_ef3['ACQ-2021'].astype(int)
df_ACQRET_count_M4_ef3['Percent-2021'] = df_ACQRET_count_M4_ef3['Percent-2021'].astype(float)
df_ACQRET_count_M4_ef3['RET-2021'] = df_ACQRET_count_M4_ef3['RET-2021'].astype(int)
df_ACQRET_count_M4_ef3['Percnt-2021'] = df_ACQRET_count_M4_ef3['Percnt-2021'].astype(float)

df_ACQRET_count_M4_ef3['Total-2022'] = pd.to_numeric(df_ACQRET_count_M4_ef3['Total-2022'],errors='coerce')
df_ACQRET_count_M4_ef3 = df_ACQRET_count_M4_ef3.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef3['Total-2022'] = df_ACQRET_count_M4_ef3['Total-2022'].astype(int)
df_ACQRET_count_M4_ef3['ACQ-2022'] = df_ACQRET_count_M4_ef3['ACQ-2022'].astype(int)
df_ACQRET_count_M4_ef3['Percent-2022'] = df_ACQRET_count_M4_ef3['Percent-2022'].astype(float)
df_ACQRET_count_M4_ef3['RET-2022'] = df_ACQRET_count_M4_ef3['RET-2022'].astype(int)
df_ACQRET_count_M4_ef3['Percnt-2022'] = df_ACQRET_count_M4_ef3['Percnt-2022'].astype(float)

df_ACQRET_count_M4_ef3['Total-2023'] = pd.to_numeric(df_ACQRET_count_M4_ef3['Total-2023'],errors='coerce')
df_ACQRET_count_M4_ef3 = df_ACQRET_count_M4_ef3.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_ef3['Total-2023'] = df_ACQRET_count_M4_ef3['Total-2023'].astype(int)
df_ACQRET_count_M4_ef3['ACQ-2023'] = df_ACQRET_count_M4_ef3['ACQ-2023'].astype(int)
df_ACQRET_count_M4_ef3['Percent-2023'] = df_ACQRET_count_M4_ef3['Percent-2023'].astype(float)
df_ACQRET_count_M4_ef3['RET-2023'] = df_ACQRET_count_M4_ef3['RET-2023'].astype(int)
df_ACQRET_count_M4_ef3['Percnt-2023'] = df_ACQRET_count_M4_ef3['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
df_Revenue_calc_ef3['Total-2017'] = pd.to_numeric(df_Revenue_calc_ef3['Total-2017'],errors='coerce')
df_Revenue_calc_ef3 = df_Revenue_calc_ef3.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef3['Total-2017'] = df_Revenue_calc_ef3['Total-2017'].astype(int)
df_Revenue_calc_ef3['Percent-2017'] = df_Revenue_calc_ef3['Percent-2017'].astype(float)
df_Revenue_calc_ef3['7DEvolution-2017'] = df_Revenue_calc_ef3['7DEvolution-2017'].astype(int)

df_Revenue_calc_ef3['Total-2018'] = pd.to_numeric(df_Revenue_calc_ef3['Total-2018'],errors='coerce')
df_Revenue_calc_ef3 = df_Revenue_calc_ef3.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef3['Total-2018'] = df_Revenue_calc_ef3['Total-2018'].astype(int)
df_Revenue_calc_ef3['Percent-2018'] = df_Revenue_calc_ef3['Percent-2018'].astype(float)
df_Revenue_calc_ef3['7DEvolution-2018'] = df_Revenue_calc_ef3['7DEvolution-2018'].astype(int)

df_Revenue_calc_ef3['Total-2019'] = pd.to_numeric(df_Revenue_calc_ef3['Total-2019'],errors='coerce')
df_Revenue_calc_ef3 = df_Revenue_calc_ef3.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef3['Total-2019'] = df_Revenue_calc_ef3['Total-2019'].astype(int)
df_Revenue_calc_ef3['Percent-2019'] = df_Revenue_calc_ef3['Percent-2019'].astype(float)
df_Revenue_calc_ef3['7DEvolution-2019'] = df_Revenue_calc_ef3['7DEvolution-2019'].astype(int)

df_Revenue_calc_ef3['Total-2022'] = pd.to_numeric(df_Revenue_calc_ef3['Total-2022'],errors='coerce')
df_Revenue_calc_ef3 = df_Revenue_calc_ef3.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef3['Total-2022'] = df_Revenue_calc_ef3['Total-2022'].astype(int)
df_Revenue_calc_ef3['Percent-2022'] = df_Revenue_calc_ef3['Percent-2022'].astype(float)
df_Revenue_calc_ef3['7DEvolution-2022'] = df_Revenue_calc_ef3['7DEvolution-2022'].astype(int)

df_Revenue_calc_ef3['Total-2023'] = pd.to_numeric(df_Revenue_calc_ef3['Total-2023'],errors='coerce')
df_Revenue_calc_ef3 = df_Revenue_calc_ef3.replace(np.nan, 0, regex=True)
df_Revenue_calc_ef3['Total-2023'] = df_Revenue_calc_ef3['Total-2023'].astype(int)
df_Revenue_calc_ef3['Percent-2023'] = df_Revenue_calc_ef3['Percent-2023'].astype(float)
df_Revenue_calc_ef3['7DEvolution-2023'] = df_Revenue_calc_ef3['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
df_Registrations_GRDel_ef3['Total-2017'] = pd.to_numeric(df_Registrations_GRDel_ef3['Total-2017'],errors='coerce')
df_Registrations_GRDel_ef3 = df_Registrations_GRDel_ef3.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef3['Total-2017'] = df_Registrations_GRDel_ef3['Total-2017'].astype(int)
df_Registrations_GRDel_ef3['Percent-2017'] = df_Registrations_GRDel_ef3['Percent-2017'].astype(float)
df_Registrations_GRDel_ef3['7DEvolution-2017'] = df_Registrations_GRDel_ef3['7DEvolution-2017'].astype(int)

df_Registrations_GRDel_ef3['Total-2018'] = pd.to_numeric(df_Registrations_GRDel_ef3['Total-2018'],errors='coerce')
df_Registrations_GRDel_ef3 = df_Registrations_GRDel_ef3.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef3['Total-2018'] = df_Registrations_GRDel_ef3['Total-2018'].astype(int)
df_Registrations_GRDel_ef3['Percent-2018'] = df_Registrations_GRDel_ef3['Percent-2018'].astype(float)
df_Registrations_GRDel_ef3['7DEvolution-2018'] = df_Registrations_GRDel_ef3['7DEvolution-2018'].astype(int)

df_Registrations_GRDel_ef3['Total-2019'] = pd.to_numeric(df_Registrations_GRDel_ef3['Total-2019'],errors='coerce')
df_Registrations_GRDel_ef3 = df_Registrations_GRDel_ef3.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef3['Total-2019'] = df_Registrations_GRDel_ef3['Total-2019'].astype(int)
df_Registrations_GRDel_ef3['Percent-2019'] = df_Registrations_GRDel_ef3['Percent-2019'].astype(float)
df_Registrations_GRDel_ef3['7DEvolution-2019'] = df_Registrations_GRDel_ef3['7DEvolution-2019'].astype(int)

df_Registrations_GRDel_ef3['Total-2021'] = pd.to_numeric(df_Registrations_GRDel_ef3['Total-2021'],errors='coerce')
df_Registrations_GRDel_ef3 = df_Registrations_GRDel_ef3.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef3['Total-2021'] = df_Registrations_GRDel_ef3['Total-2021'].astype(int)
df_Registrations_GRDel_ef3['Percent-2021'] = df_Registrations_GRDel_ef3['Percent-2021'].astype(float)
df_Registrations_GRDel_ef3['7DEvolution-2021'] = df_Registrations_GRDel_ef3['7DEvolution-2021'].astype(int)

df_Registrations_GRDel_ef3['Total-2022'] = pd.to_numeric(df_Registrations_GRDel_ef3['Total-2022'],errors='coerce')
df_Registrations_GRDel_ef3 = df_Registrations_GRDel_ef3.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef3['Total-2022'] = df_Registrations_GRDel_ef3['Total-2022'].astype(int)
df_Registrations_GRDel_ef3['Percent-2022'] = df_Registrations_GRDel_ef3['Percent-2022'].astype(float)
df_Registrations_GRDel_ef3['7DEvolution-2022'] = df_Registrations_GRDel_ef3['7DEvolution-2022'].astype(int)

df_Registrations_GRDel_ef3['Total-2023'] = pd.to_numeric(df_Registrations_GRDel_ef3['Total-2023'],errors='coerce')
df_Registrations_GRDel_ef3 = df_Registrations_GRDel_ef3.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_ef3['Total-2023'] = df_Registrations_GRDel_ef3['Total-2023'].astype(int)
df_Registrations_GRDel_ef3['Percent-2023'] = df_Registrations_GRDel_ef3['Percent-2023'].astype(float)
df_Registrations_GRDel_ef3['7DEvolution-2023'] = df_Registrations_GRDel_ef3['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
df_AC_RT_GRDel_M4_ef3['Total-2018'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef3['Total-2018'],errors='coerce')
df_AC_RT_GRDel_M4_ef3 = df_AC_RT_GRDel_M4_ef3.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef3['Total-2018'] = df_AC_RT_GRDel_M4_ef3['Total-2018'].astype(int)
df_AC_RT_GRDel_M4_ef3['ACQ-2018'] = df_AC_RT_GRDel_M4_ef3['ACQ-2018'].astype(int)
df_AC_RT_GRDel_M4_ef3['Percent-2018'] = df_AC_RT_GRDel_M4_ef3['Percent-2018'].astype(float)
df_AC_RT_GRDel_M4_ef3['RET-2018'] = df_AC_RT_GRDel_M4_ef3['RET-2018'].astype(int)
df_AC_RT_GRDel_M4_ef3['Percnt-2018'] = df_AC_RT_GRDel_M4_ef3['Percnt-2018'].astype(float)

df_AC_RT_GRDel_M4_ef3['Total-2019'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef3['Total-2019'],errors='coerce')
df_AC_RT_GRDel_M4_ef3 = df_AC_RT_GRDel_M4_ef3.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef3['Total-2019'] = df_AC_RT_GRDel_M4_ef3['Total-2019'].astype(int)
df_AC_RT_GRDel_M4_ef3['ACQ-2019'] = df_AC_RT_GRDel_M4_ef3['ACQ-2019'].astype(int)
df_AC_RT_GRDel_M4_ef3['Percent-2019'] = df_AC_RT_GRDel_M4_ef3['Percent-2019'].astype(float)
df_AC_RT_GRDel_M4_ef3['RET-2019'] = df_AC_RT_GRDel_M4_ef3['RET-2019'].astype(int)
df_AC_RT_GRDel_M4_ef3['Percnt-2019'] = df_AC_RT_GRDel_M4_ef3['Percnt-2019'].astype(float)

df_AC_RT_GRDel_M4_ef3['Total-2021'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef3['Total-2021'],errors='coerce')
df_AC_RT_GRDel_M4_ef3 = df_AC_RT_GRDel_M4_ef3.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef3['Total-2021'] = df_AC_RT_GRDel_M4_ef3['Total-2021'].astype(int)
df_AC_RT_GRDel_M4_ef3['ACQ-2021'] = df_AC_RT_GRDel_M4_ef3['ACQ-2021'].astype(int)
df_AC_RT_GRDel_M4_ef3['Percent-2021'] = df_AC_RT_GRDel_M4_ef3['Percent-2021'].astype(float)
df_AC_RT_GRDel_M4_ef3['RET-2021'] = df_AC_RT_GRDel_M4_ef3['RET-2021'].astype(int)
df_AC_RT_GRDel_M4_ef3['Percnt-2021'] = df_AC_RT_GRDel_M4_ef3['Percnt-2021'].astype(float)

df_AC_RT_GRDel_M4_ef3['Total-2022'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef3['Total-2022'],errors='coerce')
df_AC_RT_GRDel_M4_ef3 = df_AC_RT_GRDel_M4_ef3.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef3['Total-2022'] = df_AC_RT_GRDel_M4_ef3['Total-2022'].astype(int)
df_AC_RT_GRDel_M4_ef3['ACQ-2022'] = df_AC_RT_GRDel_M4_ef3['ACQ-2022'].astype(int)
df_AC_RT_GRDel_M4_ef3['Percent-2022'] = df_AC_RT_GRDel_M4_ef3['Percent-2022'].astype(float)
df_AC_RT_GRDel_M4_ef3['RET-2022'] = df_AC_RT_GRDel_M4_ef3['RET-2022'].astype(int)
df_AC_RT_GRDel_M4_ef3['Percnt-2022'] = df_AC_RT_GRDel_M4_ef3['Percnt-2022'].astype(float)

df_AC_RT_GRDel_M4_ef3['Total-2023'] = pd.to_numeric(df_AC_RT_GRDel_M4_ef3['Total-2023'],errors='coerce')
df_AC_RT_GRDel_M4_ef3 = df_AC_RT_GRDel_M4_ef3.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_ef3['Total-2023'] = df_AC_RT_GRDel_M4_ef3['Total-2023'].astype(int)
df_AC_RT_GRDel_M4_ef3['ACQ-2023'] = df_AC_RT_GRDel_M4_ef3['ACQ-2023'].astype(int)
df_AC_RT_GRDel_M4_ef3['Percent-2023'] = df_AC_RT_GRDel_M4_ef3['Percent-2023'].astype(float)
df_AC_RT_GRDel_M4_ef3['RET-2023'] = df_AC_RT_GRDel_M4_ef3['RET-2023'].astype(int)
df_AC_RT_GRDel_M4_ef3['Percnt-2023'] = df_AC_RT_GRDel_M4_ef3['Percnt-2023'].astype(float)

#dff1 - GROUPS
df_Revenu_GRDel_ef3['Total-2017'] = pd.to_numeric(df_Revenu_GRDel_ef3['Total-2017'],errors='coerce')
df_Revenu_GRDel_ef3 = df_Revenu_GRDel_ef3.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef3['Total-2017'] = df_Revenu_GRDel_ef3['Total-2017'].astype(int)
df_Revenu_GRDel_ef3['Percent-2017'] = df_Revenu_GRDel_ef3['Percent-2017'].astype(float)
df_Revenu_GRDel_ef3['7DEvolution-2017'] = df_Revenu_GRDel_ef3['7DEvolution-2017'].astype(int)

df_Revenu_GRDel_ef3['Total-2018'] = pd.to_numeric(df_Revenu_GRDel_ef3['Total-2018'],errors='coerce')
df_Revenu_GRDel_ef3 = df_Revenu_GRDel_ef3.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef3['Total-2018'] = df_Revenu_GRDel_ef3['Total-2018'].astype(int)
df_Revenu_GRDel_ef3['Percent-2018'] = df_Revenu_GRDel_ef3['Percent-2018'].astype(float)
df_Revenu_GRDel_ef3['7DEvolution-2018'] = df_Revenu_GRDel_ef3['7DEvolution-2018'].astype(int)

df_Revenu_GRDel_ef3['Total-2019'] = pd.to_numeric(df_Revenu_GRDel_ef3['Total-2019'],errors='coerce')
df_Revenu_GRDel_ef3 = df_Revenu_GRDel_ef3.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef3['Total-2019'] = df_Revenu_GRDel_ef3['Total-2019'].astype(int)
df_Revenu_GRDel_ef3['Percent-2019'] = df_Revenu_GRDel_ef3['Percent-2019'].astype(float)
df_Revenu_GRDel_ef3['7DEvolution-2019'] = df_Revenu_GRDel_ef3['7DEvolution-2019'].astype(int)

df_Revenu_GRDel_ef3['Total-2022'] = pd.to_numeric(df_Revenu_GRDel_ef3['Total-2022'],errors='coerce')
df_Revenu_GRDel_ef3 = df_Revenu_GRDel_ef3.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef3['Total-2022'] = df_Revenu_GRDel_ef3['Total-2022'].astype(int)
df_Revenu_GRDel_ef3['Percent-2022'] = df_Revenu_GRDel_ef3['Percent-2022'].astype(float)
df_Revenu_GRDel_ef3['7DEvolution-2022'] = df_Revenu_GRDel_ef3['7DEvolution-2022'].astype(int)

df_Revenu_GRDel_ef3['Total-2023'] = pd.to_numeric(df_Revenu_GRDel_ef3['Total-2023'],errors='coerce')
df_Revenu_GRDel_ef3 = df_Revenu_GRDel_ef3.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_ef3['Total-2023'] = df_Revenu_GRDel_ef3['Total-2023'].astype(int)
df_Revenu_GRDel_ef3['Percent-2023'] = df_Revenu_GRDel_ef3['Percent-2023'].astype(float)
df_Revenu_GRDel_ef3['7DEvolution-2023'] = df_Revenu_GRDel_ef3['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_ef3['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_ef3['Total-2017'],errors='coerce')
df_Profile_Count_m2_ef3 = df_Profile_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef3['Total-2017'] = df_Profile_Count_m2_ef3['Total-2017'].astype(int)
df_Profile_Count_m2_ef3['Percent-2017'] = df_Profile_Count_m2_ef3['Percent-2017'].astype(float)

df_Profile_Count_m2_ef3['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_ef3['Total-2018'],errors='coerce')
df_Profile_Count_m2_ef3 = df_Profile_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef3['Total-2018'] = df_Profile_Count_m2_ef3['Total-2018'].astype(int)
df_Profile_Count_m2_ef3['Percent-2018'] = df_Profile_Count_m2_ef3['Percent-2018'].astype(float)

df_Profile_Count_m2_ef3['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_ef3['Total-2019'],errors='coerce')
df_Profile_Count_m2_ef3 = df_Profile_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef3['Total-2019'] = df_Profile_Count_m2_ef3['Total-2019'].astype(int)
df_Profile_Count_m2_ef3['Percent-2019'] = df_Profile_Count_m2_ef3['Percent-2019'].astype(float)

df_Profile_Count_m2_ef3['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_ef3['Total-2021'],errors='coerce')
df_Profile_Count_m2_ef3 = df_Profile_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef3['Total-2021'] = df_Profile_Count_m2_ef3['Total-2021'].astype(int)
df_Profile_Count_m2_ef3['Percent-2021'] = df_Profile_Count_m2_ef3['Percent-2021'].astype(float)

df_Profile_Count_m2_ef3['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_ef3['Total-2022'],errors='coerce')
df_Profile_Count_m2_ef3 = df_Profile_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef3['Total-2022'] = df_Profile_Count_m2_ef3['Total-2022'].astype(int)
df_Profile_Count_m2_ef3['Percent-2022'] = df_Profile_Count_m2_ef3['Percent-2022'].astype(float)

df_Profile_Count_m2_ef3['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_ef3['Total-2023'],errors='coerce')
df_Profile_Count_m2_ef3 = df_Profile_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_ef3['Total-2023'] = df_Profile_Count_m2_ef3['Total-2023'].astype(int)
df_Profile_Count_m2_ef3['Percent-2023'] = df_Profile_Count_m2_ef3['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_ef3['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_ef3['Total-2017'],errors='coerce')
df_Pass_Count_m2_ef3 = df_Pass_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef3['Total-2017'] = df_Pass_Count_m2_ef3['Total-2017'].astype(int)
df_Pass_Count_m2_ef3['Percent-2017'] = df_Pass_Count_m2_ef3['Percent-2017'].astype(float)

df_Pass_Count_m2_ef3['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_ef3['Total-2018'],errors='coerce')
df_Pass_Count_m2_ef3 = df_Pass_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef3['Total-2018'] = df_Pass_Count_m2_ef3['Total-2018'].astype(int)
df_Pass_Count_m2_ef3['Percent-2018'] = df_Pass_Count_m2_ef3['Percent-2018'].astype(float)

df_Pass_Count_m2_ef3['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_ef3['Total-2019'],errors='coerce')
df_Pass_Count_m2_ef3 = df_Pass_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef3['Total-2019'] = df_Pass_Count_m2_ef3['Total-2019'].astype(int)
df_Pass_Count_m2_ef3['Percent-2019'] = df_Pass_Count_m2_ef3['Percent-2019'].astype(float)

df_Pass_Count_m2_ef3['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_ef3['Total-2021'],errors='coerce')
df_Pass_Count_m2_ef3 = df_Pass_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef3['Total-2021'] = df_Pass_Count_m2_ef3['Total-2021'].astype(int)
df_Pass_Count_m2_ef3['Percent-2021'] = df_Pass_Count_m2_ef3['Percent-2021'].astype(float)

df_Pass_Count_m2_ef3['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_ef3['Total-2022'],errors='coerce')
df_Pass_Count_m2_ef3 = df_Pass_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef3['Total-2022'] = df_Pass_Count_m2_ef3['Total-2022'].astype(int)
df_Pass_Count_m2_ef3['Percent-2022'] = df_Pass_Count_m2_ef3['Percent-2022'].astype(float)

df_Pass_Count_m2_ef3['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_ef3['Total-2023'],errors='coerce')
df_Pass_Count_m2_ef3 = df_Pass_Count_m2_ef3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_ef3['Total-2023'] = df_Pass_Count_m2_ef3['Total-2023'].astype(int)
df_Pass_Count_m2_ef3['Percent-2023'] = df_Pass_Count_m2_ef3['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_ef3['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef3['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_ef3 = dfAttendees_Country_Count_m2_ef3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef3['Total-2017'] = dfAttendees_Country_Count_m2_ef3['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_ef3['Percent-2017'] = dfAttendees_Country_Count_m2_ef3['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_ef3['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef3['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_ef3 = dfAttendees_Country_Count_m2_ef3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef3['Total-2018'] = dfAttendees_Country_Count_m2_ef3['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_ef3['Percent-2018'] = dfAttendees_Country_Count_m2_ef3['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_ef3['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef3['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_ef3 = dfAttendees_Country_Count_m2_ef3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef3['Total-2019'] = dfAttendees_Country_Count_m2_ef3['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_ef3['Percent-2019'] = dfAttendees_Country_Count_m2_ef3['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_ef3['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef3['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_ef3 = dfAttendees_Country_Count_m2_ef3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef3['Total-2021'] = dfAttendees_Country_Count_m2_ef3['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_ef3['Percent-2021'] = dfAttendees_Country_Count_m2_ef3['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_ef3['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef3['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_ef3 = dfAttendees_Country_Count_m2_ef3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef3['Total-2022'] = dfAttendees_Country_Count_m2_ef3['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_ef3['Percent-2022'] = dfAttendees_Country_Count_m2_ef3['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_ef3['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_ef3['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_ef3 = dfAttendees_Country_Count_m2_ef3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_ef3['Total-2023'] = dfAttendees_Country_Count_m2_ef3['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_ef3['Percent-2023'] = dfAttendees_Country_Count_m2_ef3['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_ef3['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef3['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef3 = df_ATTENDEES_AREAS_count_m2_ef3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef3['Total-2017'] = df_ATTENDEES_AREAS_count_m2_ef3['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef3['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_ef3['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef3['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef3['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef3 = df_ATTENDEES_AREAS_count_m2_ef3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef3['Total-2018'] = df_ATTENDEES_AREAS_count_m2_ef3['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef3['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_ef3['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef3['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef3['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef3 = df_ATTENDEES_AREAS_count_m2_ef3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef3['Total-2019'] = df_ATTENDEES_AREAS_count_m2_ef3['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef3['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_ef3['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef3['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef3['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef3 = df_ATTENDEES_AREAS_count_m2_ef3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef3['Total-2021'] = df_ATTENDEES_AREAS_count_m2_ef3['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef3['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_ef3['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef3['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef3['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef3 = df_ATTENDEES_AREAS_count_m2_ef3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef3['Total-2022'] = df_ATTENDEES_AREAS_count_m2_ef3['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef3['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_ef3['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_ef3['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_ef3['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_ef3 = df_ATTENDEES_AREAS_count_m2_ef3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_ef3['Total-2023'] = df_ATTENDEES_AREAS_count_m2_ef3['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_ef3['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_ef3['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_ef3['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_ef3['Total-2017'],errors='coerce')
df_Specialty_count_m2_ef3 = df_Specialty_count_m2_ef3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef3['Total-2017'] = df_Specialty_count_m2_ef3['Total-2017'].astype(int)
df_Specialty_count_m2_ef3['Percent-2017'] = df_Specialty_count_m2_ef3['Percent-2017'].astype(float)

df_Specialty_count_m2_ef3['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_ef3['Total-2018'],errors='coerce')
df_Specialty_count_m2_ef3 = df_Specialty_count_m2_ef3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef3['Total-2018'] = df_Specialty_count_m2_ef3['Total-2018'].astype(int)
df_Specialty_count_m2_ef3['Percent-2018'] = df_Specialty_count_m2_ef3['Percent-2018'].astype(float)

df_Specialty_count_m2_ef3['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_ef3['Total-2019'],errors='coerce')
df_Specialty_count_m2_ef3 = df_Specialty_count_m2_ef3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef3['Total-2019'] = df_Specialty_count_m2_ef3['Total-2019'].astype(int)
df_Specialty_count_m2_ef3['Percent-2019'] = df_Specialty_count_m2_ef3['Percent-2019'].astype(float)

df_Specialty_count_m2_ef3['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_ef3['Total-2021'],errors='coerce')
df_Specialty_count_m2_ef3 = df_Specialty_count_m2_ef3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef3['Total-2021'] = df_Specialty_count_m2_ef3['Total-2021'].astype(int)
df_Specialty_count_m2_ef3['Percent-2021'] = df_Specialty_count_m2_ef3['Percent-2021'].astype(float)

df_Specialty_count_m2_ef3['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_ef3['Total-2022'],errors='coerce')
df_Specialty_count_m2_ef3 = df_Specialty_count_m2_ef3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef3['Total-2022'] = df_Specialty_count_m2_ef3['Total-2022'].astype(int)
df_Specialty_count_m2_ef3['Percent-2022'] = df_Specialty_count_m2_ef3['Percent-2022'].astype(float)

df_Specialty_count_m2_ef3['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_ef3['Total-2023'],errors='coerce')
df_Specialty_count_m2_ef3 = df_Specialty_count_m2_ef3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_ef3['Total-2023'] = df_Specialty_count_m2_ef3['Total-2023'].astype(int)
df_Specialty_count_m2_ef3['Percent-2023'] = df_Specialty_count_m2_ef3['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_ef3.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_ef3.dtypes)
#print(df_Specialty_count_m2_ef3.dtypes)

#print(dfAttendees_Country_Count_m2_ef3.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_ef3.dtypes)
#print(df_Specialty_count_m2_ef3.dtypes)

#emergency operation - reverse engineering
#total registrations - UNIT INDIVIDUALS
Reverse_Registration_count_Frames_ef1_ef3 = [df_Registrations_Merge_ef1, df_Registrations_Merge_ef2, df_Registrations_Merge_ef3]
Concat_Reverse_Registration_count_Frames_ef1_ef3 = pd.concat(Reverse_Registration_count_Frames_ef1_ef3)

#ACQUISITION & RETENTION - UNIT INDIVIDUALS
Reverse_ACQRET_count_Frames_ef1_ef3 = [df_ACQRET_count_M4_ef1, df_ACQRET_count_M4_ef2, df_ACQRET_count_M4_ef3]
Concat_Reverse_ACQRET_count_Frames_ef1_ef3 = pd.concat(Reverse_ACQRET_count_Frames_ef1_ef3)

#REVENUE CALCULATION
Reverse_REVENUE_calc_Frames_ef1_ef3 = [df_Revenue_calc_ef1, df_Revenue_calc_ef2, df_Revenue_calc_ef3]
Concat_Reverse_REVENUE_calc_Frames_ef1_ef3 = pd.concat(Reverse_REVENUE_calc_Frames_ef1_ef3)

#unit 2
#total registrations - UNIT GROUPS
Reverse_Registration_count_GRDEL_Frames_ef1_ef3 = [df_Registrations_GRDel_ef1, df_Registrations_GRDel_ef2, df_Registrations_GRDel_ef3]
Concat_Reverse_Registration_count_GRDEL_Frames_ef1_ef3 = pd.concat(Reverse_Registration_count_GRDEL_Frames_ef1_ef3)
#print(tab(Concat_Reverse_Registration_count_GRDEL_Frames_ef1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

#ACQUISITION & RETENTION - UNIT GROUPS
Reverse_ACQRET_count_GRDEL_Frames_ef1_ef3 = [df_AC_RT_GRDel_M4_ef1, df_AC_RT_GRDel_M4_ef2, df_AC_RT_GRDel_M4_ef3]
Concat_Reverse_ACQRET_count_GRDEL_Frames_ef1_ef3 = pd.concat(Reverse_ACQRET_count_GRDEL_Frames_ef1_ef3)
#print(tab(Concat_Reverse_ACQRET_count_GRDEL_Frames_ef1_ef3.head(10), headers='keys', tablefmt='psql', showindex=False))

#REVENUE CALCULATION
Reverse_REVENUE_calc_GRDEL_Frames_ef1_ef3 = [df_Revenu_GRDel_ef1, df_Revenu_GRDel_ef2, df_Revenu_GRDel_ef3]
Concat_Reverse_REVENUE_calc_GRDEL_Frames_ef1_ef3 = pd.concat(Reverse_REVENUE_calc_GRDEL_Frames_ef1_ef3)

# EXCEL FILE
writer_ef3 = pd.ExcelWriter(outputExcelFile_ef3, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Reverse_Registration_count_Frames_ef1_ef3.to_excel\
    (writer_ef3, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_Reverse_ACQRET_count_Frames_ef1_ef3.to_excel\
    (writer_ef3, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_Reverse_REVENUE_calc_Frames_ef1_ef3.to_excel\
    (writer_ef3, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_Reverse_Registration_count_GRDEL_Frames_ef1_ef3.to_excel\
    (writer_ef3, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_Reverse_ACQRET_count_GRDEL_Frames_ef1_ef3.to_excel\
    (writer_ef3, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_Reverse_REVENUE_calc_GRDEL_Frames_ef1_ef3.to_excel\
    (writer_ef3, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_ef3.to_excel\
    (writer_ef3, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_ef3.to_excel\
    (writer_ef3, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_ef3.to_excel\
    (writer_ef3, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_ef3.to_excel\
    (writer_ef3, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_ef3.to_excel\
    (writer_ef3, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writer_ef3.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_ef3)

workbook.save(outputExcelFile_ef3)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')
print('************************************End of 203 days**********************************************')

#unit 1
#Total Number of Registrations
dfd17_f1_Registrations_count = pd.DataFrame(filter_1_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f1_Registrations_count = dfd17_f1_Registrations_count.fillna('Unknown')
dfd17_f1_Registrations_count['Percent-2017'] = (dfd17_f1_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f1_Registrations_count['Percent-2017'] = dfd17_f1_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f1_Registrations_count['7DEvolution-2017'] = dfd17_f1_Registrations_count['Total-2017'] - dfd17_ef3_Registrations_count['Total-2017']
#print(tab(dfd17_f1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f1_Registrations_count = pd.DataFrame(filter_1_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f1_Registrations_count = dfd18_f1_Registrations_count.fillna('Unknown')
dfd18_f1_Registrations_count['Percent-2018'] = (dfd18_f1_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f1_Registrations_count['Percent-2018'] = dfd18_f1_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f1_Registrations_count['7DEvolution-2018'] = dfd18_f1_Registrations_count['Total-2018'] - dfd18_ef3_Registrations_count['Total-2018']
#print(tab(dfd18_f1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f1_Registrations_count = pd.DataFrame(filter_1_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f1_Registrations_count = dfd19_f1_Registrations_count.fillna('Unknown')
dfd19_f1_Registrations_count['Percent-2019'] = (dfd19_f1_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f1_Registrations_count['Percent-2019'] = dfd19_f1_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f1_Registrations_count['7DEvolution-2019'] = dfd19_f1_Registrations_count['Total-2019'] - dfd19_ef3_Registrations_count['Total-2019']
#print(tab(dfd19_f1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f1_Registrations_count = pd.DataFrame(filter_1_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f1_Registrations_count = dfd21_f1_Registrations_count.fillna('Unknown')
dfd21_f1_Registrations_count['Percent-2021'] = (dfd21_f1_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f1_Registrations_count['Percent-2021'] = dfd21_f1_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f1_Registrations_count['7DEvolution-2021'] = dfd21_f1_Registrations_count['Total-2021'] - dfd21_ef3_Registrations_count['Total-2021']
#print(tab(dfd21_f1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f1_Registrations_count = pd.DataFrame(filter_1_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f1_Registrations_count = dfd22_f1_Registrations_count.fillna('Unknown')
dfd22_f1_Registrations_count['Percent-2022'] = (dfd22_f1_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f1_Registrations_count['Percent-2022'] = dfd22_f1_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f1_Registrations_count['7DEvolution-2022'] = dfd22_f1_Registrations_count['Total-2022'] - dfd22_ef3_Registrations_count['Total-2022']
print(tab(dfd22_f1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_Registrations_count = pd.DataFrame(filter_1_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f1_Registrations_count = dfd23_f1_Registrations_count.fillna('Unknown')
dfd23_f1_Registrations_count['Percent-2023'] = (dfd23_f1_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f1_Registrations_count['Percent-2023'] = dfd23_f1_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f1_Registrations_count['7DEvolution-2023'] = dfd23_f1_Registrations_count['Total-2023'] - dfd23_ef3_Registrations_count['Total-2023']
#print(tab(dfd23_f1_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f1_RegistrationsEvolution_count = pd.DataFrame(filter_1_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f1_RegistrationsEvolution_count = dfd23_f1_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f1_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f1_Registrations_count['Total-2023'] - dfd19_f1_Registrations_count['Total-2019']) / dfd19_f1_Registrations_count['Total-2019'].sum()) * 100
dfd23_f1_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f1_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f1_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f1 = pd.DataFrame(pd.merge(dfd17_f1_Registrations_count, dfd18_f1_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f1 = pd.DataFrame(pd.merge(dfd19_f1_Registrations_count, dfd21_f1_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f1 = pd.DataFrame(pd.merge(dfd22_f1_Registrations_count, dfd23_f1_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f1 = pd.DataFrame(pd.merge(df_Registrations_count_1_f1, df_Registrations_count_2_f1, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f1 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f1, df_Registrations_count_3_f1, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_m3_f1 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f1, dfd23_f1_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_Registrations_count_ef3_f1 = [Concat_Reverse_Registration_count_Frames_ef1_ef3, df_Registrations_Merge_m3_f1]
df_Registrations_Merge_f1 = pd.concat(ConcatFrames_Registrations_count_ef3_f1)

#Customer_Acquisition
df_NewCustomer_df18_f1 = filter_1_df18[filter_1_df18['New customer'] == 1]
df_NewCustomer_df19_f1 = filter_1_df19[filter_1_df19['New customer'] == 1]
df_NewCustomer_df21_f1 = filter_1_df21[filter_1_df21['New customer'] == 1]
df_NewCustomer_df22_f1 = filter_1_df22[filter_1_df22['New customer'] == 1]
df_NewCustomer_df23_f1 = filter_1_df23[filter_1_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f1.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f1.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f1.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a1_ACQRET_count = pd.DataFrame(filter_1_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f1_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f1.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f1_ACQRET_count['Percent-2018'] = (dfd18_f1_ACQRET_count['ACQ-2018'] / dfd18_f1_Registrations_count['Total-2018'].sum()) * 100
dfd18_f1_ACQRET_count['Percent-2018'] = dfd18_f1_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f1_ACQRET_count['RET-2018'] = dfd18_a1_ACQRET_count['Total-2018'] - dfd18_f1_ACQRET_count['ACQ-2018']
dfd18_f1_ACQRET_count['Percnt-2018'] = (dfd18_f1_ACQRET_count['RET-2018'] / dfd18_a1_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f1_ACQRET_count['Percnt-2018'] = dfd18_f1_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f1_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a1_ACQRET_count = pd.DataFrame(filter_1_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f1_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f1.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f1_ACQRET_count['Percent-2019'] = (dfd19_f1_ACQRET_count['ACQ-2019'] / dfd19_f1_Registrations_count['Total-2019'].sum()) * 100
dfd19_f1_ACQRET_count['Percent-2019'] = dfd19_f1_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f1_ACQRET_count['RET-2019'] = dfd19_a1_ACQRET_count['Total-2019'] - dfd19_f1_ACQRET_count['ACQ-2019']
dfd19_f1_ACQRET_count['Percnt-2019'] = (dfd19_f1_ACQRET_count['RET-2019'] / dfd19_a1_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f1_ACQRET_count['Percnt-2019'] = dfd19_f1_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f1_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a1_ACQRET_count = pd.DataFrame(filter_1_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f1_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f1.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f1_ACQRET_count['Percent-2021'] = (dfd21_f1_ACQRET_count['ACQ-2021'] / dfd21_f1_Registrations_count['Total-2021'].sum()) * 100
dfd21_f1_ACQRET_count['Percent-2021'] = dfd21_f1_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f1_ACQRET_count['RET-2021'] = dfd21_a1_ACQRET_count['Total-2021'] - dfd21_f1_ACQRET_count['ACQ-2021']
dfd21_f1_ACQRET_count['Percnt-2021'] = (dfd21_f1_ACQRET_count['RET-2021'] / dfd21_a1_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f1_ACQRET_count['Percnt-2021'] = dfd21_f1_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f1_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a1_ACQRET_count = pd.DataFrame(filter_1_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f1_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f1.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f1_ACQRET_count['Percent-2022'] = (dfd22_f1_ACQRET_count['ACQ-2022'] / dfd22_f1_Registrations_count['Total-2022'].sum()) * 100
dfd22_f1_ACQRET_count['Percent-2022'] = dfd22_f1_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f1_ACQRET_count['RET-2022'] = dfd22_a1_ACQRET_count['Total-2022'] - dfd22_f1_ACQRET_count['ACQ-2022']
dfd22_f1_ACQRET_count['Percnt-2022'] = (dfd22_f1_ACQRET_count['RET-2022'] / dfd22_a1_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f1_ACQRET_count['Percnt-2022'] = dfd22_f1_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f1_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a1_ACQRET_count = pd.DataFrame(filter_1_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f1_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f1.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f1_ACQRET_count['Percent-2023'] = (dfd23_f1_ACQRET_count['ACQ-2023'] / dfd23_f1_Registrations_count['Total-2023'].sum()) * 100
dfd23_f1_ACQRET_count['Percent-2023'] = dfd23_f1_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f1_ACQRET_count['RET-2023'] = dfd23_a1_ACQRET_count['Total-2023'] - dfd23_f1_ACQRET_count['ACQ-2023']
dfd23_f1_ACQRET_count['Percnt-2023'] = (dfd23_f1_ACQRET_count['RET-2023'] / dfd23_a1_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f1_ACQRET_count['Percnt-2023'] = dfd23_f1_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f1_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f1 = pd.DataFrame(pd.merge(dfd18_a1_ACQRET_count, dfd18_f1_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f1 = pd.DataFrame(pd.merge(dfd19_a1_ACQRET_count, dfd19_f1_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f1 = pd.DataFrame(pd.merge(dfd21_a1_ACQRET_count, dfd21_f1_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f1 = pd.DataFrame(pd.merge(dfd22_a1_ACQRET_count, dfd22_f1_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_5_f1 = pd.DataFrame(pd.merge(dfd23_a1_ACQRET_count, dfd23_f1_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_5_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f1 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f1, df_ACQRET_count_2_f1, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f1 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f1, df_ACQRET_count_3_f1, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f1 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f1, df_ACQRET_count_4_f1, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_E4_f1 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f1, df_ACQRET_count_5_f1, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_ef3_f1 = [Concat_Reverse_ACQRET_count_Frames_ef1_ef3, df_ACQRET_count_E4_f1]
df_ACQRET_count_M4_f1 = pd.concat(ConcatFrames_ACQRET_count_ef3_f1)

df_ACQRET_count_M4_f1 = df_ACQRET_count_M4_f1[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f1_Revenue_calc = pd.DataFrame(filter_1_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f1_Revenue_calc['Percent-2017'] = (dfd17_f1_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f1_Revenue_calc['Percent-2017'] = dfd17_f1_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f1_Revenue_calc['7DEvolution-2017'] = dfd17_f1_Revenue_calc['Total-2017'] - dfd17_ef3_Revenue_calc['Total-2017']
#print(tab(dfd17_f1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f1_Revenue_calc = pd.DataFrame(filter_1_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f1_Revenue_calc['Percent-2018'] = (dfd18_f1_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f1_Revenue_calc['Percent-2018'] = dfd18_f1_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f1_Revenue_calc['7DEvolution-2018'] = dfd18_f1_Revenue_calc['Total-2018'] - dfd18_ef3_Revenue_calc['Total-2018']
#print(tab(dfd18_f1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f1_Revenue_calc = pd.DataFrame(filter_1_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f1_Revenue_calc['Percent-2019'] = (dfd19_f1_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f1_Revenue_calc['Percent-2019'] = dfd19_f1_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f1_Revenue_calc['7DEvolution-2019'] = dfd19_f1_Revenue_calc['Total-2019'] - dfd19_ef3_Revenue_calc['Total-2019']
#print(tab(dfd19_f1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f1_Revenue_calc = pd.DataFrame(filter_1_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f1_Revenue_calc['Percent-2021'] = (dfd21_f1_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f1_Revenue_calc['Percent-2021'] = dfd21_f1_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f1_Revenue_calc['7DEvolution-2021'] = dfd21_f1_Revenue_calc['Total-2021'] - dfd21_ef3_Revenue_calc['Total-2021']
#print(tab(dfd21_f1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f1_Revenue_calc = pd.DataFrame(filter_1_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f1_Revenue_calc['Percent-2022'] = (dfd22_f1_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f1_Revenue_calc['Percent-2022'] = dfd22_f1_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f1_Revenue_calc['7DEvolution-2022'] = dfd22_f1_Revenue_calc['Total-2022'] - dfd22_ef3_Revenue_calc['Total-2022']
#print(tab(dfd22_f1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_Revenue_calc = pd.DataFrame(filter_1_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f1_Revenue_calc['Percent-2023'] = (dfd23_f1_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f1_Revenue_calc['Percent-2023'] = dfd23_f1_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f1_Revenue_calc['7DEvolution-2023'] = dfd23_f1_Revenue_calc['Total-2023'] - dfd23_ef3_Revenue_calc['Total-2023']
#print(tab(dfd23_f1_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f1_RevenueEvolution_calc = pd.DataFrame(filter_1_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f1_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f1_Revenue_calc['Total-2023'] - dfd19_f1_Revenue_calc['Total-2019'])/ dfd19_f1_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f1_RevenueEvolution_calc['Evolution-2023'] = dfd23_f1_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f1_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f1 = pd.DataFrame(pd.merge(dfd17_f1_Revenue_calc, dfd18_f1_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f1 = pd.DataFrame(pd.merge(dfd19_f1_Revenue_calc, dfd21_f1_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f1 = pd.DataFrame(pd.merge(dfd22_f1_Revenue_calc, dfd23_f1_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f1_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f1, df_Revenue_calc_2_f1, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f1Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f1_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f1_Evolution, df_Revenue_calc_3_f1, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f1Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M3_f1 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f1_Evolution, dfd23_f1_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_ef3_f1 = [Concat_Reverse_REVENUE_calc_Frames_ef1_ef3, df_Revenue_calc_M3_f1]
df_Revenue_calc_f1 = pd.concat(ConcatFrames_REV_count_ef3_f1)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f1_Registrations_GRDel = pd.DataFrame(filtr_1_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f1_Registrations_GRDel = dfd17_f1_Registrations_GRDel.fillna('Unknown')
dfd17_f1_Registrations_GRDel['Percent-2017'] = (dfd17_f1_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f1_Registrations_GRDel['Percent-2017'] = dfd17_f1_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f1_Registrations_GRDel['7DEvolution-2017'] = dfd17_f1_Registrations_GRDel['Total-2017'] - dfd17_ef3_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f1_Registrations_GRDel = pd.DataFrame(filtr_1_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f1_Registrations_GRDel = dfd18_f1_Registrations_GRDel.fillna('Unknown')
dfd18_f1_Registrations_GRDel['Percent-2018'] = (dfd18_f1_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f1_Registrations_GRDel['Percent-2018'] = dfd18_f1_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f1_Registrations_GRDel['7DEvolution-2018'] = dfd18_f1_Registrations_GRDel['Total-2018'] - dfd18_ef3_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f1_Registrations_GRDel = pd.DataFrame(filtr_1_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f1_Registrations_GRDel = dfd19_f1_Registrations_GRDel.fillna('Unknown')
dfd19_f1_Registrations_GRDel['Percent-2019'] = (dfd19_f1_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f1_Registrations_GRDel['Percent-2019'] = dfd19_f1_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f1_Registrations_GRDel['7DEvolution-2019'] = dfd19_f1_Registrations_GRDel['Total-2019'] - dfd19_ef3_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f1_Registrations_GRDel = pd.DataFrame(filtr_1_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f1_Registrations_GRDel = dfd21_f1_Registrations_GRDel.fillna('Unknown')
dfd21_f1_Registrations_GRDel['Percent-2021'] = (dfd21_f1_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f1_Registrations_GRDel['Percent-2021'] = dfd21_f1_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f1_Registrations_GRDel['7DEvolution-2021'] = dfd21_f1_Registrations_GRDel['Total-2021'] - dfd21_ef3_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f1_Registrations_GRDel = pd.DataFrame(filtr_1_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f1_Registrations_GRDel = dfd22_f1_Registrations_GRDel.fillna('Unknown')
dfd22_f1_Registrations_GRDel['Percent-2022'] = (dfd22_f1_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f1_Registrations_GRDel['Percent-2022'] = dfd22_f1_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f1_Registrations_GRDel['7DEvolution-2022'] = dfd22_f1_Registrations_GRDel['Total-2022'] - dfd22_ef3_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_Registrations_GRDel = pd.DataFrame(filtr_1_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f1_Registrations_GRDel = dfd23_f1_Registrations_GRDel.fillna('Unknown')
dfd23_f1_Registrations_GRDel['Percent-2023'] = (dfd23_f1_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f1_Registrations_GRDel['Percent-2023'] = dfd23_f1_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f1_Registrations_GRDel['7DEvolution-2023'] = dfd23_f1_Registrations_GRDel['Total-2023'] - dfd23_ef3_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f1_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f1_Registrations_Evol_GRDel = pd.DataFrame(filtr_1_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f1_Registrations_Evol_GRDel = dfd23_f1_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f1_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f1_Registrations_GRDel['Total-2023'] - dfd19_f1_Registrations_GRDel['Total-2019'])/ dfd19_f1_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f1_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f1 = pd.concat([dfd17_f1_Registrations_GRDel, dfd18_f1_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f1 = pd.DataFrame(pd.merge(dfd17_f1_Registrations_GRDel, dfd18_f1_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f1 = pd.DataFrame(pd.merge(dfd19_f1_Registrations_GRDel, dfd21_f1_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f1 = pd.DataFrame(pd.merge(dfd22_f1_Registrations_GRDel, dfd23_f1_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f1 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f1, df_Registrations_GRDel_2_f1, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_5_f1 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f1, df_Registrations_GRDel_3_f1, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_6_f1 = pd.DataFrame(pd.merge(df_Registrations_GRDel_5_f1, dfd23_f1_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_6_f1 = df_Registrations_GRDel_6_f1[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_ef3_f1 = [Concat_Reverse_Registration_count_GRDEL_Frames_ef1_ef3, df_Registrations_GRDel_6_f1]
df_Registrations_GRDel_f1 = pd.concat(ConcatFrames_RegGRDel_count_ef3_f1)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f1 = filtr_1_df18_GRdel[filtr_1_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f1 = filtr_1_df19_GRdel[filtr_1_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f1 = filtr_1_df21_GRdel[filtr_1_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f1 = filtr_1_df22_GRdel[filtr_1_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f1 = filtr_1_df23_GRdel[filtr_1_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f1.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f1.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a1_AC_RT_GRDel = pd.DataFrame(filtr_1_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f1_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f1.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f1_AC_RT_GRDel['Percent-2018'] = (dfd18_f1_AC_RT_GRDel['ACQ-2018'] / dfd18_f1_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f1_AC_RT_GRDel['Percent-2018'] = dfd18_f1_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f1_AC_RT_GRDel['RET-2018'] = dfd18_a1_AC_RT_GRDel['Total-2018'] - dfd18_f1_AC_RT_GRDel['ACQ-2018']
dfd18_f1_AC_RT_GRDel['Percnt-2018'] = (dfd18_f1_AC_RT_GRDel['RET-2018'] / dfd18_a1_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f1_AC_RT_GRDel['Percnt-2018'] = dfd18_f1_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f1_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a1_AC_RT_GRDel = pd.DataFrame(filtr_1_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f1_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f1.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f1_AC_RT_GRDel['Percent-2019'] = (dfd19_f1_AC_RT_GRDel['ACQ-2019'] / dfd19_f1_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f1_AC_RT_GRDel['Percent-2019'] = dfd19_f1_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f1_AC_RT_GRDel['RET-2019'] = dfd19_a1_AC_RT_GRDel['Total-2019'] - dfd19_f1_AC_RT_GRDel['ACQ-2019']
dfd19_f1_AC_RT_GRDel['Percnt-2019'] = (dfd19_f1_AC_RT_GRDel['RET-2019'] / dfd19_a1_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f1_AC_RT_GRDel['Percnt-2019'] = dfd19_f1_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f1_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a1_AC_RT_GRDel = pd.DataFrame(filtr_1_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f1_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f1.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f1_AC_RT_GRDel['Percent-2021'] = (dfd21_f1_AC_RT_GRDel['ACQ-2021'] / dfd21_f1_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f1_AC_RT_GRDel['Percent-2021'] = dfd21_f1_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f1_AC_RT_GRDel['RET-2021'] = dfd21_a1_AC_RT_GRDel['Total-2021'] - dfd21_f1_AC_RT_GRDel['ACQ-2021']
dfd21_f1_AC_RT_GRDel['Percnt-2021'] = (dfd21_f1_AC_RT_GRDel['RET-2021'] / dfd21_a1_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f1_AC_RT_GRDel['Percnt-2021'] = dfd21_f1_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f1_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a1_AC_RT_GRDel = pd.DataFrame(filtr_1_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f1_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f1.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f1_AC_RT_GRDel['Percent-2022'] = (dfd22_f1_AC_RT_GRDel['ACQ-2022'] / dfd22_f1_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f1_AC_RT_GRDel['Percent-2022'] = dfd22_f1_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f1_AC_RT_GRDel['RET-2022'] = dfd22_a1_AC_RT_GRDel['Total-2022'] - dfd22_f1_AC_RT_GRDel['ACQ-2022']
dfd22_f1_AC_RT_GRDel['Percnt-2022'] = (dfd22_f1_AC_RT_GRDel['RET-2022'] / dfd22_a1_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f1_AC_RT_GRDel['Percnt-2022'] = dfd22_f1_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f1_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a1_AC_RT_GRDel = pd.DataFrame(filtr_1_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f1_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f1.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f1_AC_RT_GRDel['Percent-2023'] = (dfd23_f1_AC_RT_GRDel['ACQ-2023'] / dfd23_f1_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f1_AC_RT_GRDel['Percent-2023'] = dfd23_f1_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f1_AC_RT_GRDel['RET-2023'] = dfd23_a1_AC_RT_GRDel['Total-2023'] - dfd23_f1_AC_RT_GRDel['ACQ-2023']
dfd23_f1_AC_RT_GRDel['Percnt-2023'] = (dfd23_f1_AC_RT_GRDel['RET-2023'] / dfd23_a1_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f1_AC_RT_GRDel['Percnt-2023'] = dfd23_f1_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f1_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f1 = pd.DataFrame(pd.merge_ordered(dfd18_a1_AC_RT_GRDel, dfd18_f1_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f1 = pd.DataFrame(pd.merge_ordered(dfd19_a1_AC_RT_GRDel, dfd19_f1_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f1 = pd.DataFrame(pd.merge_ordered(dfd21_a1_AC_RT_GRDel, dfd21_f1_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f1 = pd.DataFrame(pd.merge_ordered(dfd22_a1_AC_RT_GRDel, dfd22_f1_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_5_f1 = pd.DataFrame(pd.merge_ordered(dfd23_a1_AC_RT_GRDel, dfd23_f1_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f1 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f1, df_AC_ET_GRDel_2_f1, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f1 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f1, df_AC_ET_GRDel_3_f1, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f1 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f1, df_AC_ET_GRDel_4_f1, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_E4_f1 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f1, df_AC_ET_GRDel_5_f1, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_E4_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_E4_f1 = df_AC_RT_GRDel_E4_f1[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_ef3_f1 = [Concat_Reverse_ACQRET_count_GRDEL_Frames_ef1_ef3, df_AC_RT_GRDel_E4_f1]
df_AC_RT_GRDel_M4_f1 = pd.concat(ConcatFr_AC_RT_GRDel_ef3_f1)
print(tab(df_AC_RT_GRDel_M4_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_1_df17_GRdel = filtr_1_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f1_Revenu_GRDel = pd.DataFrame(filtr_1_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f1_Revenu_GRDel['Percent-2017'] = (dfd17_f1_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f1_Revenu_GRDel['Percent-2017'] = dfd17_f1_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f1_Revenu_GRDel['7DEvolution-2017'] = dfd17_f1_Revenu_GRDel['Total-2017'] - dfd17_ef3_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_1_df18_GRdel = filtr_1_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f1_Revenu_GRDel = pd.DataFrame(filtr_1_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f1_Revenu_GRDel['Percent-2018'] = (dfd18_f1_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f1_Revenu_GRDel['Percent-2018'] = dfd18_f1_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f1_Revenu_GRDel['7DEvolution-2018'] = dfd18_f1_Revenu_GRDel['Total-2018'] - dfd18_ef3_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_1_df19_GRdel = filtr_1_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f1_Revenu_GRDel = pd.DataFrame(filtr_1_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f1_Revenu_GRDel['Percent-2019'] = (dfd19_f1_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f1_Revenu_GRDel['Percent-2019'] = dfd19_f1_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f1_Revenu_GRDel['7DEvolution-2019'] = dfd19_f1_Revenu_GRDel['Total-2019'] - dfd19_ef3_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_1_df21_GRdel = filtr_1_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f1_Revenu_GRDel = pd.DataFrame(filtr_1_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f1_Revenu_GRDel['Percent-2021'] = (dfd21_f1_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f1_Revenu_GRDel['Percent-2021'] = dfd21_f1_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f1_Revenu_GRDel['7DEvolution-2021'] = dfd21_f1_Revenu_GRDel['Total-2021'] - dfd21_ef3_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_1_df22_GRdel = filtr_1_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f1_Revenu_GRDel = pd.DataFrame(filtr_1_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f1_Revenu_GRDel['Percent-2022'] = (dfd22_f1_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f1_Revenu_GRDel['Percent-2022'] = dfd22_f1_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f1_Revenu_GRDel['7DEvolution-2022'] = dfd22_f1_Revenu_GRDel['Total-2022'] - dfd22_ef3_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_1_df23_GRdel = filtr_1_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f1_Revenu_GRDel = pd.DataFrame(filtr_1_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f1_Revenu_GRDel['Percent-2023'] = (dfd23_f1_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f1_Revenu_GRDel['Percent-2023'] = dfd23_f1_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f1_Revenu_GRDel['7DEvolution-2023'] = dfd23_f1_Revenu_GRDel['Total-2023'] - dfd23_ef3_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f1_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f1_Revenu_Evlt_GRDel = pd.DataFrame(filtr_1_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f1_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f1_Revenu_GRDel['Total-2023'] - dfd19_f1_Revenu_GRDel['Total-2019'])/ dfd19_f1_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f1_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f1_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f1_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f1 = pd.DataFrame(pd.merge(dfd17_f1_Revenu_GRDel, dfd18_f1_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f1 = pd.DataFrame(pd.merge(dfd19_f1_Revenu_GRDel, dfd21_f1_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f1 = pd.DataFrame(pd.merge(dfd22_f1_Revenu_GRDel, dfd23_f1_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f1 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f1, df_Revenu_GRDel_2_f1, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_5_f1 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f1, df_Revenu_GRDel_3_f1, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_6_f1 = pd.DataFrame(pd.merge(df_Revenu_GRDel_5_f1, dfd23_f1_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_6_f1 = df_Revenu_GRDel_6_f1[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_ef3_f2 = [Concat_Reverse_REVENUE_calc_GRDEL_Frames_ef1_ef3, df_Revenu_GRDel_6_f1]
df_Revenu_GRDel_f1 = pd.concat(ConcatFra_RV_GRDel_ef3_f2)
print(tab(df_Revenu_GRDel_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f1_Profile_count = pd.DataFrame(filtr_1_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f1_Profile_count = dfd17_f1_Profile_count.fillna('Unknown')
dfd17_f1_Profile_count['Percent-2017'] = (dfd17_f1_Profile_count['Total-2017'] / dfd17_f1_Profile_count['Total-2017'].sum()) * 100
dfd17_f1_Profile_count['Percent-2017'] = dfd17_f1_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f1_Profile_count = pd.DataFrame(filtr_1_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f1_Profile_count = dfd18_f1_Profile_count.fillna('Unknown')
dfd18_f1_Profile_count['Percent-2018'] = (dfd18_f1_Profile_count['Total-2018'] / dfd18_f1_Profile_count['Total-2018'].sum()) * 100
dfd18_f1_Profile_count['Percent-2018'] = dfd18_f1_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f1_Profile_count = pd.DataFrame(filtr_1_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f1_Profile_count = dfd19_f1_Profile_count.fillna('Unknown')
dfd19_f1_Profile_count['Percent-2019'] = (dfd19_f1_Profile_count['Total-2019'] / dfd19_f1_Profile_count['Total-2019'].sum()) * 100
dfd19_f1_Profile_count['Percent-2019'] = dfd19_f1_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f1_Profile_count = pd.DataFrame(filtr_1_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f1_Profile_count = dfd21_f1_Profile_count.fillna('Unknown')
dfd21_f1_Profile_count['Percent-2021'] = (dfd21_f1_Profile_count['Total-2021'] / dfd21_f1_Profile_count['Total-2021'].sum()) * 100
dfd21_f1_Profile_count['Percent-2021'] = dfd21_f1_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f1_Profile_count = pd.DataFrame(filtr_1_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f1_Profile_count = dfd22_f1_Profile_count.fillna('Unknown')
dfd22_f1_Profile_count['Percent-2022'] = (dfd22_f1_Profile_count['Total-2022'] / dfd22_f1_Profile_count['Total-2022'].sum()) * 100
dfd22_f1_Profile_count['Percent-2022'] = dfd22_f1_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_Profile_count = pd.DataFrame(filtr_1_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f1_Profile_count = dfd23_f1_Profile_count.fillna('Unknown')
dfd23_f1_Profile_count['Percent-2023'] = (dfd23_f1_Profile_count['Total-2023'] / dfd23_f1_Profile_count['Total-2023'].sum()) * 100
dfd23_f1_Profile_count['Percent-2023'] = dfd23_f1_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f1_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f1 = pd.DataFrame(pd.merge(dfd17_f1_Profile_count, dfd18_f1_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f1 = pd.DataFrame(pd.merge(dfd19_f1_Profile_count, dfd21_f1_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f1 = pd.DataFrame(pd.merge(dfd22_f1_Profile_count, dfd23_f1_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f1 = pd.DataFrame(pd.merge(df_Profile_Count_1_f1, df_Profile_Count_2_f1, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f1 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f1, df_Profile_Count_3_f1, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f1 = df_Profile_Count_m2_f1.append(df_Profile_Count_m2_f1.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f1['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f1_Pass_count = pd.DataFrame(filtr_1_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f1_Pass_count = dfd17_f1_Pass_count.fillna('Unknown')
dfd17_f1_Pass_count['Percent-2017'] = (dfd17_f1_Pass_count['Total-2017'] / dfd17_f1_Pass_count['Total-2017'].sum()) * 100
dfd17_f1_Pass_count['Percent-2017'] = dfd17_f1_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f1_Pass_count = pd.DataFrame(filtr_1_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f1_Pass_count = dfd18_f1_Pass_count.fillna('Unknown')
dfd18_f1_Pass_count['Percent-2018'] = (dfd18_f1_Pass_count['Total-2018'] / dfd18_f1_Pass_count['Total-2018'].sum()) * 100
dfd18_f1_Pass_count['Percent-2018'] = dfd18_f1_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f1_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f1_Pass_count = pd.DataFrame(filtr_1_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f1_Pass_count = dfd19_f1_Pass_count.fillna('Unknown')
dfd19_f1_Pass_count['Percent-2019'] = (dfd19_f1_Pass_count['Total-2019'] / dfd19_f1_Pass_count['Total-2019'].sum()) * 100
dfd19_f1_Pass_count['Percent-2019'] = dfd19_f1_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f1_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f1_Pass_count = pd.DataFrame(filtr_1_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f1_Pass_count = dfd21_f1_Pass_count.fillna('Unknown')
dfd21_f1_Pass_count['Percent-2021'] = (dfd21_f1_Pass_count['Total-2021'] / dfd21_f1_Pass_count['Total-2021'].sum()) * 100
dfd21_f1_Pass_count['Percent-2021'] = dfd21_f1_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f1_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f1_Pass_count = pd.DataFrame(filtr_1_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f1_Pass_count = dfd22_f1_Pass_count.fillna('Unknown')
dfd22_f1_Pass_count['Percent-2022'] = (dfd22_f1_Pass_count['Total-2022'] / dfd22_f1_Pass_count['Total-2022'].sum()) * 100
dfd22_f1_Pass_count['Percent-2022'] = dfd22_f1_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f1_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_Pass_count = pd.DataFrame(filtr_1_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f1_Pass_count = dfd23_f1_Pass_count.fillna('Unknown')
dfd23_f1_Pass_count['Percent-2023'] = (dfd23_f1_Pass_count['Total-2023'] / dfd23_f1_Pass_count['Total-2023'].sum()) * 100
dfd23_f1_Pass_count['Percent-2023'] = dfd23_f1_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f1_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f1 = pd.DataFrame(pd.merge(dfd17_f1_Pass_count, dfd18_f1_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f1 = pd.DataFrame(pd.merge(dfd19_f1_Pass_count, dfd21_f1_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f1 = pd.DataFrame(pd.merge(dfd22_f1_Pass_count, dfd23_f1_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f1 = pd.DataFrame(pd.merge(df_Pass_Count_1_f1, df_Pass_Count_2_f1, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f1 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f1, df_Pass_Count_3_f1, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f1 = df_Pass_Count_m2_f1.append(df_Pass_Count_m2_f1.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f1['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f1_Attendees_Country_count = pd.DataFrame(filtr_1_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f1_Attendees_Country_count = dfd17_f1_Attendees_Country_count.fillna('Unknown')
dfd17_f1_Attendees_Country_count['Percent-2017'] = (dfd17_f1_Attendees_Country_count['Total-2017'] / dfd17_f1_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f1_Attendees_Country_count['Percent-2017'] = dfd17_f1_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f1_Attendees_Country_count = pd.DataFrame(filtr_1_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f1_Attendees_Country_count = dfd18_f1_Attendees_Country_count.fillna('Unknown')
dfd18_f1_Attendees_Country_count['Percent-2018'] = (dfd18_f1_Attendees_Country_count['Total-2018'] / dfd18_f1_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f1_Attendees_Country_count['Percent-2018'] = dfd18_f1_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f1_Attendees_Country_count = pd.DataFrame(filtr_1_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f1_Attendees_Country_count = dfd19_f1_Attendees_Country_count.fillna('Unknown')
dfd19_f1_Attendees_Country_count['Percent-2019'] = (dfd19_f1_Attendees_Country_count['Total-2019'] / dfd19_f1_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f1_Attendees_Country_count['Percent-2019'] = dfd19_f1_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f1_Attendees_Country_count = pd.DataFrame(filtr_1_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f1_Attendees_Country_count = dfd21_f1_Attendees_Country_count.fillna('Unknown')
dfd21_f1_Attendees_Country_count['Percent-2021'] = (dfd21_f1_Attendees_Country_count['Total-2021'] / dfd21_f1_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f1_Attendees_Country_count['Percent-2021'] = dfd21_f1_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f1_Attendees_Country_count = pd.DataFrame(filtr_1_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f1_Attendees_Country_count = dfd22_f1_Attendees_Country_count.fillna('Unknown')
dfd22_f1_Attendees_Country_count['Percent-2022'] = (dfd22_f1_Attendees_Country_count['Total-2022'] / dfd22_f1_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f1_Attendees_Country_count['Percent-2022'] = dfd22_f1_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_Attendees_Country_count = pd.DataFrame(filtr_1_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f1_Attendees_Country_count = dfd23_f1_Attendees_Country_count.fillna('Unknown')
dfd23_f1_Attendees_Country_count['Percent-2023'] = (dfd23_f1_Attendees_Country_count['Total-2023'] / dfd23_f1_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f1_Attendees_Country_count['Percent-2023'] = dfd23_f1_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f1_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f1 = pd.DataFrame(pd.merge(dfd17_f1_Attendees_Country_count, dfd18_f1_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f1 = pd.DataFrame(pd.merge(dfd19_f1_Attendees_Country_count, dfd21_f1_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f1 = pd.DataFrame(pd.merge(dfd22_f1_Attendees_Country_count, dfd23_f1_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f1 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f1, dfAttendees_Country_Count_2_f1, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f1.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f1 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f1, dfAttendees_Country_Count_3_f1, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f1 = dfAttendees_Country_Count_m2_f1.append(dfAttendees_Country_Count_m2_f1.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f1['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_1_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f1_ATTENDEES_AREAS_count = dfd17_f1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f1_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f1_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f1_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f1_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f1_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_1_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f1_ATTENDEES_AREAS_count = dfd18_f1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f1_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f1_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f1_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f1_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f1_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_1_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f1_ATTENDEES_AREAS_count = dfd19_f1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f1_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f1_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f1_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f1_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f1_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_1_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f1_ATTENDEES_AREAS_count = dfd21_f1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f1_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f1_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f1_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f1_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f1_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_1_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f1_ATTENDEES_AREAS_count = dfd22_f1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f1_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f1_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f1_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f1_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f1_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_ATTENDEES_AREAS_count = pd.DataFrame(filtr_1_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f1_ATTENDEES_AREAS_count = dfd23_f1_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f1_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f1_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f1_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f1_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f1_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f1_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f1 = pd.DataFrame(pd.merge(dfd17_f1_ATTENDEES_AREAS_count, dfd18_f1_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f1 = pd.DataFrame(pd.merge(dfd19_f1_ATTENDEES_AREAS_count, dfd21_f1_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f1 = pd.DataFrame(pd.merge(dfd22_f1_ATTENDEES_AREAS_count, dfd23_f1_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f1.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f1 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f1, df_ATTENDEES_AREAS_count_2_f1, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f1 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f1, df_ATTENDEES_AREAS_count_3_f1, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f1 = df_ATTENDEES_AREAS_count_m2_f1.append(df_ATTENDEES_AREAS_count_m2_f1.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f1['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f1_Attendees_Specialty_count = pd.DataFrame(filtr_1_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f1_Attendees_Specialty_count = dfd17_f1_Attendees_Specialty_count.fillna('Unknown')
dfd17_f1_Attendees_Specialty_count['Percent-2017'] = (dfd17_f1_Attendees_Specialty_count['Total-2017'] / dfd17_f1_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f1_Attendees_Specialty_count['Percent-2017'] = dfd17_f1_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f1_Attendees_Specialty_count = pd.DataFrame(filtr_1_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f1_Attendees_Specialty_count = dfd18_f1_Attendees_Specialty_count.fillna('Unknown')
dfd18_f1_Attendees_Specialty_count['Percent-2018'] = (dfd18_f1_Attendees_Specialty_count['Total-2018'] / dfd18_f1_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f1_Attendees_Specialty_count['Percent-2018'] = dfd18_f1_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f1_Attendees_Specialty_count = pd.DataFrame(filtr_1_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f1_Attendees_Specialty_count = dfd19_f1_Attendees_Specialty_count.fillna('Unknown')
dfd19_f1_Attendees_Specialty_count['Percent-2019'] = (dfd19_f1_Attendees_Specialty_count['Total-2019'] / dfd19_f1_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f1_Attendees_Specialty_count['Percent-2019'] = dfd19_f1_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f1_Attendees_Specialty_count = pd.DataFrame(filtr_1_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f1_Attendees_Specialty_count = dfd21_f1_Attendees_Specialty_count.fillna('Unknown')
dfd21_f1_Attendees_Specialty_count['Percent-2021'] = (dfd21_f1_Attendees_Specialty_count['Total-2021'] / dfd21_f1_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f1_Attendees_Specialty_count['Percent-2021'] = dfd21_f1_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f1_Attendees_Specialty_count = pd.DataFrame(filtr_1_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f1_Attendees_Specialty_count = dfd22_f1_Attendees_Specialty_count.fillna('Unknown')
dfd22_f1_Attendees_Specialty_count['Percent-2022'] = (dfd22_f1_Attendees_Specialty_count['Total-2022'] / dfd22_f1_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f1_Attendees_Specialty_count['Percent-2022'] = dfd22_f1_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f1_Attendees_Specialty_count = pd.DataFrame(filtr_1_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f1_Attendees_Specialty_count = dfd23_f1_Attendees_Specialty_count.fillna('Unknown')
dfd23_f1_Attendees_Specialty_count['Percent-2023'] = (dfd23_f1_Attendees_Specialty_count['Total-2023'] / dfd23_f1_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f1_Attendees_Specialty_count['Percent-2023'] = dfd23_f1_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f1_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f1 = pd.DataFrame(pd.merge(dfd17_f1_Attendees_Specialty_count, dfd18_f1_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f1 = pd.DataFrame(pd.merge(dfd19_f1_Attendees_Specialty_count, dfd21_f1_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f1 = pd.DataFrame(pd.merge(dfd22_f1_Attendees_Specialty_count, dfd23_f1_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f1 = pd.DataFrame(pd.merge(df_Specialty_count_1_f1, df_Specialty_count_2_f1, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f1.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f1 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f1, df_Specialty_count_3_f1, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f1 = df_Specialty_count_m2_f1.append(df_Specialty_count_m2_f1.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f1['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
df_Registrations_Merge_f1['Total-2017'] = pd.to_numeric(df_Registrations_Merge_f1['Total-2017'],errors='coerce')
df_Registrations_Merge_f1 = df_Registrations_Merge_f1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_f1['Total-2017'] = df_Registrations_Merge_f1['Total-2017'].astype(int)
df_Registrations_Merge_f1['Percent-2017'] = df_Registrations_Merge_f1['Percent-2017'].astype(float)
df_Registrations_Merge_f1['7DEvolution-2017'] = df_Registrations_Merge_f1['7DEvolution-2017'].astype(int)

df_Registrations_Merge_f1['Total-2018'] = pd.to_numeric(df_Registrations_Merge_f1['Total-2018'],errors='coerce')
df_Registrations_Merge_f1 = df_Registrations_Merge_f1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_f1['Total-2018'] = df_Registrations_Merge_f1['Total-2018'].astype(int)
df_Registrations_Merge_f1['Percent-2018'] = df_Registrations_Merge_f1['Percent-2018'].astype(float)
df_Registrations_Merge_f1['7DEvolution-2018'] = df_Registrations_Merge_f1['7DEvolution-2018'].astype(int)

df_Registrations_Merge_f1['Total-2019'] = pd.to_numeric(df_Registrations_Merge_f1['Total-2019'],errors='coerce')
df_Registrations_Merge_f1 = df_Registrations_Merge_f1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_f1['Total-2019'] = df_Registrations_Merge_f1['Total-2019'].astype(int)
df_Registrations_Merge_f1['Percent-2019'] = df_Registrations_Merge_f1['Percent-2019'].astype(float)
df_Registrations_Merge_f1['7DEvolution-2019'] = df_Registrations_Merge_f1['7DEvolution-2019'].astype(int)

df_Registrations_Merge_f1['Total-2021'] = pd.to_numeric(df_Registrations_Merge_f1['Total-2021'],errors='coerce')
df_Registrations_Merge_f1 = df_Registrations_Merge_f1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_f1['Total-2021'] = df_Registrations_Merge_f1['Total-2021'].astype(int)
df_Registrations_Merge_f1['Percent-2021'] = df_Registrations_Merge_f1['Percent-2021'].astype(float)
df_Registrations_Merge_f1['7DEvolution-2021'] = df_Registrations_Merge_f1['7DEvolution-2021'].astype(int)

df_Registrations_Merge_f1['Total-2022'] = pd.to_numeric(df_Registrations_Merge_f1['Total-2022'],errors='coerce')
df_Registrations_Merge_f1 = df_Registrations_Merge_f1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_f1['Total-2022'] = df_Registrations_Merge_f1['Total-2022'].astype(int)
df_Registrations_Merge_f1['Percent-2022'] = df_Registrations_Merge_f1['Percent-2022'].astype(float)
df_Registrations_Merge_f1['7DEvolution-2022'] = df_Registrations_Merge_f1['7DEvolution-2022'].astype(int)

df_Registrations_Merge_f1['Total-2023'] = pd.to_numeric(df_Registrations_Merge_f1['Total-2023'],errors='coerce')
df_Registrations_Merge_f1 = df_Registrations_Merge_f1.replace(np.nan, 0, regex=True)
df_Registrations_Merge_f1['Total-2023'] = df_Registrations_Merge_f1['Total-2023'].astype(int)
df_Registrations_Merge_f1['Percent-2023'] = df_Registrations_Merge_f1['Percent-2023'].astype(float)
df_Registrations_Merge_f1['7DEvolution-2023'] = df_Registrations_Merge_f1['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
df_ACQRET_count_M4_f1['Total-2018'] = pd.to_numeric(df_ACQRET_count_M4_f1['Total-2018'],errors='coerce')
df_ACQRET_count_M4_f1 = df_ACQRET_count_M4_f1.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_f1['Total-2018'] = df_ACQRET_count_M4_f1['Total-2018'].astype(int)
df_ACQRET_count_M4_f1['ACQ-2018'] = df_ACQRET_count_M4_f1['ACQ-2018'].astype(int)
df_ACQRET_count_M4_f1['Percent-2018'] = df_ACQRET_count_M4_f1['Percent-2018'].astype(float)
df_ACQRET_count_M4_f1['RET-2018'] = df_ACQRET_count_M4_f1['RET-2018'].astype(int)
df_ACQRET_count_M4_f1['Percnt-2018'] = df_ACQRET_count_M4_f1['Percnt-2018'].astype(float)

df_ACQRET_count_M4_f1['Total-2019'] = pd.to_numeric(df_ACQRET_count_M4_f1['Total-2019'],errors='coerce')
df_ACQRET_count_M4_f1 = df_ACQRET_count_M4_f1.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_f1['Total-2019'] = df_ACQRET_count_M4_f1['Total-2019'].astype(int)
df_ACQRET_count_M4_f1['ACQ-2019'] = df_ACQRET_count_M4_f1['ACQ-2019'].astype(int)
df_ACQRET_count_M4_f1['Percent-2019'] = df_ACQRET_count_M4_f1['Percent-2019'].astype(float)
df_ACQRET_count_M4_f1['RET-2019'] = df_ACQRET_count_M4_f1['RET-2019'].astype(int)
df_ACQRET_count_M4_f1['Percnt-2019'] = df_ACQRET_count_M4_f1['Percnt-2019'].astype(float)

df_ACQRET_count_M4_f1['Total-2021'] = pd.to_numeric(df_ACQRET_count_M4_f1['Total-2021'],errors='coerce')
df_ACQRET_count_M4_f1 = df_ACQRET_count_M4_f1.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_f1['Total-2021'] = df_ACQRET_count_M4_f1['Total-2021'].astype(int)
df_ACQRET_count_M4_f1['ACQ-2021'] = df_ACQRET_count_M4_f1['ACQ-2021'].astype(int)
df_ACQRET_count_M4_f1['Percent-2021'] = df_ACQRET_count_M4_f1['Percent-2021'].astype(float)
df_ACQRET_count_M4_f1['RET-2021'] = df_ACQRET_count_M4_f1['RET-2021'].astype(int)
df_ACQRET_count_M4_f1['Percnt-2021'] = df_ACQRET_count_M4_f1['Percnt-2021'].astype(float)

df_ACQRET_count_M4_f1['Total-2022'] = pd.to_numeric(df_ACQRET_count_M4_f1['Total-2022'],errors='coerce')
df_ACQRET_count_M4_f1 = df_ACQRET_count_M4_f1.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_f1['Total-2022'] = df_ACQRET_count_M4_f1['Total-2022'].astype(int)
df_ACQRET_count_M4_f1['ACQ-2022'] = df_ACQRET_count_M4_f1['ACQ-2022'].astype(int)
df_ACQRET_count_M4_f1['Percent-2022'] = df_ACQRET_count_M4_f1['Percent-2022'].astype(float)
df_ACQRET_count_M4_f1['RET-2022'] = df_ACQRET_count_M4_f1['RET-2022'].astype(int)
df_ACQRET_count_M4_f1['Percnt-2022'] = df_ACQRET_count_M4_f1['Percnt-2022'].astype(float)

df_ACQRET_count_M4_f1['Total-2023'] = pd.to_numeric(df_ACQRET_count_M4_f1['Total-2023'],errors='coerce')
df_ACQRET_count_M4_f1 = df_ACQRET_count_M4_f1.replace(np.nan, 0, regex=True)
df_ACQRET_count_M4_f1['Total-2023'] = df_ACQRET_count_M4_f1['Total-2023'].astype(int)
df_ACQRET_count_M4_f1['ACQ-2023'] = df_ACQRET_count_M4_f1['ACQ-2023'].astype(int)
df_ACQRET_count_M4_f1['Percent-2023'] = df_ACQRET_count_M4_f1['Percent-2023'].astype(float)
df_ACQRET_count_M4_f1['RET-2023'] = df_ACQRET_count_M4_f1['RET-2023'].astype(int)
df_ACQRET_count_M4_f1['Percnt-2023'] = df_ACQRET_count_M4_f1['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
df_Revenue_calc_f1['Total-2017'] = pd.to_numeric(df_Revenue_calc_f1['Total-2017'],errors='coerce')
df_Revenue_calc_f1 = df_Revenue_calc_f1.replace(np.nan, 0, regex=True)
df_Revenue_calc_f1['Total-2017'] = df_Revenue_calc_f1['Total-2017'].astype(int)
df_Revenue_calc_f1['Percent-2017'] = df_Revenue_calc_f1['Percent-2017'].astype(float)
df_Revenue_calc_f1['7DEvolution-2017'] = df_Revenue_calc_f1['7DEvolution-2017'].astype(int)

df_Revenue_calc_f1['Total-2018'] = pd.to_numeric(df_Revenue_calc_f1['Total-2018'],errors='coerce')
df_Revenue_calc_f1 = df_Revenue_calc_f1.replace(np.nan, 0, regex=True)
df_Revenue_calc_f1['Total-2018'] = df_Revenue_calc_f1['Total-2018'].astype(int)
df_Revenue_calc_f1['Percent-2018'] = df_Revenue_calc_f1['Percent-2018'].astype(float)
df_Revenue_calc_f1['7DEvolution-2018'] = df_Revenue_calc_f1['7DEvolution-2018'].astype(int)

df_Revenue_calc_f1['Total-2019'] = pd.to_numeric(df_Revenue_calc_f1['Total-2019'],errors='coerce')
df_Revenue_calc_f1 = df_Revenue_calc_f1.replace(np.nan, 0, regex=True)
df_Revenue_calc_f1['Total-2019'] = df_Revenue_calc_f1['Total-2019'].astype(int)
df_Revenue_calc_f1['Percent-2019'] = df_Revenue_calc_f1['Percent-2019'].astype(float)
df_Revenue_calc_f1['7DEvolution-2019'] = df_Revenue_calc_f1['7DEvolution-2019'].astype(int)

df_Revenue_calc_f1['Total-2022'] = pd.to_numeric(df_Revenue_calc_f1['Total-2022'],errors='coerce')
df_Revenue_calc_f1 = df_Revenue_calc_f1.replace(np.nan, 0, regex=True)
df_Revenue_calc_f1['Total-2022'] = df_Revenue_calc_f1['Total-2022'].astype(int)
df_Revenue_calc_f1['Percent-2022'] = df_Revenue_calc_f1['Percent-2022'].astype(float)
df_Revenue_calc_f1['7DEvolution-2022'] = df_Revenue_calc_f1['7DEvolution-2022'].astype(int)

df_Revenue_calc_f1['Total-2023'] = pd.to_numeric(df_Revenue_calc_f1['Total-2023'],errors='coerce')
df_Revenue_calc_f1 = df_Revenue_calc_f1.replace(np.nan, 0, regex=True)
df_Revenue_calc_f1['Total-2023'] = df_Revenue_calc_f1['Total-2023'].astype(int)
df_Revenue_calc_f1['Percent-2023'] = df_Revenue_calc_f1['Percent-2023'].astype(float)
df_Revenue_calc_f1['7DEvolution-2023'] = df_Revenue_calc_f1['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
df_Registrations_GRDel_f1['Total-2017'] = pd.to_numeric(df_Registrations_GRDel_f1['Total-2017'],errors='coerce')
df_Registrations_GRDel_f1 = df_Registrations_GRDel_f1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_f1['Total-2017'] = df_Registrations_GRDel_f1['Total-2017'].astype(int)
df_Registrations_GRDel_f1['Percent-2017'] = df_Registrations_GRDel_f1['Percent-2017'].astype(float)
df_Registrations_GRDel_f1['7DEvolution-2017'] = df_Registrations_GRDel_f1['7DEvolution-2017'].astype(int)

df_Registrations_GRDel_f1['Total-2018'] = pd.to_numeric(df_Registrations_GRDel_f1['Total-2018'],errors='coerce')
df_Registrations_GRDel_f1 = df_Registrations_GRDel_f1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_f1['Total-2018'] = df_Registrations_GRDel_f1['Total-2018'].astype(int)
df_Registrations_GRDel_f1['Percent-2018'] = df_Registrations_GRDel_f1['Percent-2018'].astype(float)
df_Registrations_GRDel_f1['7DEvolution-2018'] = df_Registrations_GRDel_f1['7DEvolution-2018'].astype(int)

df_Registrations_GRDel_f1['Total-2019'] = pd.to_numeric(df_Registrations_GRDel_f1['Total-2019'],errors='coerce')
df_Registrations_GRDel_f1 = df_Registrations_GRDel_f1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_f1['Total-2019'] = df_Registrations_GRDel_f1['Total-2019'].astype(int)
df_Registrations_GRDel_f1['Percent-2019'] = df_Registrations_GRDel_f1['Percent-2019'].astype(float)
df_Registrations_GRDel_f1['7DEvolution-2019'] = df_Registrations_GRDel_f1['7DEvolution-2019'].astype(int)

df_Registrations_GRDel_f1['Total-2021'] = pd.to_numeric(df_Registrations_GRDel_f1['Total-2021'],errors='coerce')
df_Registrations_GRDel_f1 = df_Registrations_GRDel_f1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_f1['Total-2021'] = df_Registrations_GRDel_f1['Total-2021'].astype(int)
df_Registrations_GRDel_f1['Percent-2021'] = df_Registrations_GRDel_f1['Percent-2021'].astype(float)
df_Registrations_GRDel_f1['7DEvolution-2021'] = df_Registrations_GRDel_f1['7DEvolution-2021'].astype(int)

df_Registrations_GRDel_f1['Total-2022'] = pd.to_numeric(df_Registrations_GRDel_f1['Total-2022'],errors='coerce')
df_Registrations_GRDel_f1 = df_Registrations_GRDel_f1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_f1['Total-2022'] = df_Registrations_GRDel_f1['Total-2022'].astype(int)
df_Registrations_GRDel_f1['Percent-2022'] = df_Registrations_GRDel_f1['Percent-2022'].astype(float)
df_Registrations_GRDel_f1['7DEvolution-2022'] = df_Registrations_GRDel_f1['7DEvolution-2022'].astype(int)

df_Registrations_GRDel_f1['Total-2023'] = pd.to_numeric(df_Registrations_GRDel_f1['Total-2023'],errors='coerce')
df_Registrations_GRDel_f1 = df_Registrations_GRDel_f1.replace(np.nan, 0, regex=True)
df_Registrations_GRDel_f1['Total-2023'] = df_Registrations_GRDel_f1['Total-2023'].astype(int)
df_Registrations_GRDel_f1['Percent-2023'] = df_Registrations_GRDel_f1['Percent-2023'].astype(float)
df_Registrations_GRDel_f1['7DEvolution-2023'] = df_Registrations_GRDel_f1['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
df_AC_RT_GRDel_M4_f1['Total-2018'] = pd.to_numeric(df_AC_RT_GRDel_M4_f1['Total-2018'],errors='coerce')
df_AC_RT_GRDel_M4_f1 = df_AC_RT_GRDel_M4_f1.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_f1['Total-2018'] = df_AC_RT_GRDel_M4_f1['Total-2018'].astype(int)
df_AC_RT_GRDel_M4_f1['ACQ-2018'] = df_AC_RT_GRDel_M4_f1['ACQ-2018'].astype(int)
df_AC_RT_GRDel_M4_f1['Percent-2018'] = df_AC_RT_GRDel_M4_f1['Percent-2018'].astype(float)
df_AC_RT_GRDel_M4_f1['RET-2018'] = df_AC_RT_GRDel_M4_f1['RET-2018'].astype(int)
df_AC_RT_GRDel_M4_f1['Percnt-2018'] = df_AC_RT_GRDel_M4_f1['Percnt-2018'].astype(float)

df_AC_RT_GRDel_M4_f1['Total-2019'] = pd.to_numeric(df_AC_RT_GRDel_M4_f1['Total-2019'],errors='coerce')
df_AC_RT_GRDel_M4_f1 = df_AC_RT_GRDel_M4_f1.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_f1['Total-2019'] = df_AC_RT_GRDel_M4_f1['Total-2019'].astype(int)
df_AC_RT_GRDel_M4_f1['ACQ-2019'] = df_AC_RT_GRDel_M4_f1['ACQ-2019'].astype(int)
df_AC_RT_GRDel_M4_f1['Percent-2019'] = df_AC_RT_GRDel_M4_f1['Percent-2019'].astype(float)
df_AC_RT_GRDel_M4_f1['RET-2019'] = df_AC_RT_GRDel_M4_f1['RET-2019'].astype(int)
df_AC_RT_GRDel_M4_f1['Percnt-2019'] = df_AC_RT_GRDel_M4_f1['Percnt-2019'].astype(float)

df_AC_RT_GRDel_M4_f1['Total-2021'] = pd.to_numeric(df_AC_RT_GRDel_M4_f1['Total-2021'],errors='coerce')
df_AC_RT_GRDel_M4_f1 = df_AC_RT_GRDel_M4_f1.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_f1['Total-2021'] = df_AC_RT_GRDel_M4_f1['Total-2021'].astype(int)
df_AC_RT_GRDel_M4_f1['ACQ-2021'] = df_AC_RT_GRDel_M4_f1['ACQ-2021'].astype(int)
df_AC_RT_GRDel_M4_f1['Percent-2021'] = df_AC_RT_GRDel_M4_f1['Percent-2021'].astype(float)
df_AC_RT_GRDel_M4_f1['RET-2021'] = df_AC_RT_GRDel_M4_f1['RET-2021'].astype(int)
df_AC_RT_GRDel_M4_f1['Percnt-2021'] = df_AC_RT_GRDel_M4_f1['Percnt-2021'].astype(float)

df_AC_RT_GRDel_M4_f1['Total-2022'] = pd.to_numeric(df_AC_RT_GRDel_M4_f1['Total-2022'],errors='coerce')
df_AC_RT_GRDel_M4_f1 = df_AC_RT_GRDel_M4_f1.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_f1['Total-2022'] = df_AC_RT_GRDel_M4_f1['Total-2022'].astype(int)
df_AC_RT_GRDel_M4_f1['ACQ-2022'] = df_AC_RT_GRDel_M4_f1['ACQ-2022'].astype(int)
df_AC_RT_GRDel_M4_f1['Percent-2022'] = df_AC_RT_GRDel_M4_f1['Percent-2022'].astype(float)
df_AC_RT_GRDel_M4_f1['RET-2022'] = df_AC_RT_GRDel_M4_f1['RET-2022'].astype(int)
df_AC_RT_GRDel_M4_f1['Percnt-2022'] = df_AC_RT_GRDel_M4_f1['Percnt-2022'].astype(float)

df_AC_RT_GRDel_M4_f1['Total-2023'] = pd.to_numeric(df_AC_RT_GRDel_M4_f1['Total-2023'],errors='coerce')
df_AC_RT_GRDel_M4_f1 = df_AC_RT_GRDel_M4_f1.replace(np.nan, 0, regex=True)
df_AC_RT_GRDel_M4_f1['Total-2023'] = df_AC_RT_GRDel_M4_f1['Total-2023'].astype(int)
df_AC_RT_GRDel_M4_f1['ACQ-2023'] = df_AC_RT_GRDel_M4_f1['ACQ-2023'].astype(int)
df_AC_RT_GRDel_M4_f1['Percent-2023'] = df_AC_RT_GRDel_M4_f1['Percent-2023'].astype(float)
df_AC_RT_GRDel_M4_f1['RET-2023'] = df_AC_RT_GRDel_M4_f1['RET-2023'].astype(int)
df_AC_RT_GRDel_M4_f1['Percnt-2023'] = df_AC_RT_GRDel_M4_f1['Percnt-2023'].astype(float)

#dff1 - GROUPS
df_Revenu_GRDel_f1['Total-2017'] = pd.to_numeric(df_Revenu_GRDel_f1['Total-2017'],errors='coerce')
df_Revenu_GRDel_f1 = df_Revenu_GRDel_f1.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_f1['Total-2017'] = df_Revenu_GRDel_f1['Total-2017'].astype(int)
df_Revenu_GRDel_f1['Percent-2017'] = df_Revenu_GRDel_f1['Percent-2017'].astype(float)
df_Revenu_GRDel_f1['7DEvolution-2017'] = df_Revenu_GRDel_f1['7DEvolution-2017'].astype(int)

df_Revenu_GRDel_f1['Total-2018'] = pd.to_numeric(df_Revenu_GRDel_f1['Total-2018'],errors='coerce')
df_Revenu_GRDel_f1 = df_Revenu_GRDel_f1.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_f1['Total-2018'] = df_Revenu_GRDel_f1['Total-2018'].astype(int)
df_Revenu_GRDel_f1['Percent-2018'] = df_Revenu_GRDel_f1['Percent-2018'].astype(float)
df_Revenu_GRDel_f1['7DEvolution-2018'] = df_Revenu_GRDel_f1['7DEvolution-2018'].astype(int)

df_Revenu_GRDel_f1['Total-2019'] = pd.to_numeric(df_Revenu_GRDel_f1['Total-2019'],errors='coerce')
df_Revenu_GRDel_f1 = df_Revenu_GRDel_f1.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_f1['Total-2019'] = df_Revenu_GRDel_f1['Total-2019'].astype(int)
df_Revenu_GRDel_f1['Percent-2019'] = df_Revenu_GRDel_f1['Percent-2019'].astype(float)
df_Revenu_GRDel_f1['7DEvolution-2019'] = df_Revenu_GRDel_f1['7DEvolution-2019'].astype(int)

df_Revenu_GRDel_f1['Total-2022'] = pd.to_numeric(df_Revenu_GRDel_f1['Total-2022'],errors='coerce')
df_Revenu_GRDel_f1 = df_Revenu_GRDel_f1.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_f1['Total-2022'] = df_Revenu_GRDel_f1['Total-2022'].astype(int)
df_Revenu_GRDel_f1['Percent-2022'] = df_Revenu_GRDel_f1['Percent-2022'].astype(float)
df_Revenu_GRDel_f1['7DEvolution-2022'] = df_Revenu_GRDel_f1['7DEvolution-2022'].astype(int)

df_Revenu_GRDel_f1['Total-2023'] = pd.to_numeric(df_Revenu_GRDel_f1['Total-2023'],errors='coerce')
df_Revenu_GRDel_f1 = df_Revenu_GRDel_f1.replace(np.nan, 0, regex=True)
df_Revenu_GRDel_f1['Total-2023'] = df_Revenu_GRDel_f1['Total-2023'].astype(int)
df_Revenu_GRDel_f1['Percent-2023'] = df_Revenu_GRDel_f1['Percent-2023'].astype(float)
df_Revenu_GRDel_f1['7DEvolution-2023'] = df_Revenu_GRDel_f1['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f1['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f1['Total-2017'],errors='coerce')
df_Profile_Count_m2_f1 = df_Profile_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f1['Total-2017'] = df_Profile_Count_m2_f1['Total-2017'].astype(int)
df_Profile_Count_m2_f1['Percent-2017'] = df_Profile_Count_m2_f1['Percent-2017'].astype(float)

df_Profile_Count_m2_f1['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f1['Total-2018'],errors='coerce')
df_Profile_Count_m2_f1 = df_Profile_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f1['Total-2018'] = df_Profile_Count_m2_f1['Total-2018'].astype(int)
df_Profile_Count_m2_f1['Percent-2018'] = df_Profile_Count_m2_f1['Percent-2018'].astype(float)

df_Profile_Count_m2_f1['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f1['Total-2019'],errors='coerce')
df_Profile_Count_m2_f1 = df_Profile_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f1['Total-2019'] = df_Profile_Count_m2_f1['Total-2019'].astype(int)
df_Profile_Count_m2_f1['Percent-2019'] = df_Profile_Count_m2_f1['Percent-2019'].astype(float)

df_Profile_Count_m2_f1['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f1['Total-2021'],errors='coerce')
df_Profile_Count_m2_f1 = df_Profile_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f1['Total-2021'] = df_Profile_Count_m2_f1['Total-2021'].astype(int)
df_Profile_Count_m2_f1['Percent-2021'] = df_Profile_Count_m2_f1['Percent-2021'].astype(float)

df_Profile_Count_m2_f1['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f1['Total-2022'],errors='coerce')
df_Profile_Count_m2_f1 = df_Profile_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f1['Total-2022'] = df_Profile_Count_m2_f1['Total-2022'].astype(int)
df_Profile_Count_m2_f1['Percent-2022'] = df_Profile_Count_m2_f1['Percent-2022'].astype(float)

df_Profile_Count_m2_f1['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f1['Total-2023'],errors='coerce')
df_Profile_Count_m2_f1 = df_Profile_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f1['Total-2023'] = df_Profile_Count_m2_f1['Total-2023'].astype(int)
df_Profile_Count_m2_f1['Percent-2023'] = df_Profile_Count_m2_f1['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f1['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f1['Total-2017'],errors='coerce')
df_Pass_Count_m2_f1 = df_Pass_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f1['Total-2017'] = df_Pass_Count_m2_f1['Total-2017'].astype(int)
df_Pass_Count_m2_f1['Percent-2017'] = df_Pass_Count_m2_f1['Percent-2017'].astype(float)

df_Pass_Count_m2_f1['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f1['Total-2018'],errors='coerce')
df_Pass_Count_m2_f1 = df_Pass_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f1['Total-2018'] = df_Pass_Count_m2_f1['Total-2018'].astype(int)
df_Pass_Count_m2_f1['Percent-2018'] = df_Pass_Count_m2_f1['Percent-2018'].astype(float)

df_Pass_Count_m2_f1['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f1['Total-2019'],errors='coerce')
df_Pass_Count_m2_f1 = df_Pass_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f1['Total-2019'] = df_Pass_Count_m2_f1['Total-2019'].astype(int)
df_Pass_Count_m2_f1['Percent-2019'] = df_Pass_Count_m2_f1['Percent-2019'].astype(float)

df_Pass_Count_m2_f1['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f1['Total-2021'],errors='coerce')
df_Pass_Count_m2_f1 = df_Pass_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f1['Total-2021'] = df_Pass_Count_m2_f1['Total-2021'].astype(int)
df_Pass_Count_m2_f1['Percent-2021'] = df_Pass_Count_m2_f1['Percent-2021'].astype(float)

df_Pass_Count_m2_f1['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f1['Total-2022'],errors='coerce')
df_Pass_Count_m2_f1 = df_Pass_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f1['Total-2022'] = df_Pass_Count_m2_f1['Total-2022'].astype(int)
df_Pass_Count_m2_f1['Percent-2022'] = df_Pass_Count_m2_f1['Percent-2022'].astype(float)

df_Pass_Count_m2_f1['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f1['Total-2023'],errors='coerce')
df_Pass_Count_m2_f1 = df_Pass_Count_m2_f1.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f1['Total-2023'] = df_Pass_Count_m2_f1['Total-2023'].astype(int)
df_Pass_Count_m2_f1['Percent-2023'] = df_Pass_Count_m2_f1['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f1['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f1['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f1 = dfAttendees_Country_Count_m2_f1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f1['Total-2017'] = dfAttendees_Country_Count_m2_f1['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f1['Percent-2017'] = dfAttendees_Country_Count_m2_f1['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f1['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f1['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f1 = dfAttendees_Country_Count_m2_f1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f1['Total-2018'] = dfAttendees_Country_Count_m2_f1['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f1['Percent-2018'] = dfAttendees_Country_Count_m2_f1['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f1['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f1['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f1 = dfAttendees_Country_Count_m2_f1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f1['Total-2019'] = dfAttendees_Country_Count_m2_f1['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f1['Percent-2019'] = dfAttendees_Country_Count_m2_f1['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f1['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f1['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f1 = dfAttendees_Country_Count_m2_f1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f1['Total-2021'] = dfAttendees_Country_Count_m2_f1['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f1['Percent-2021'] = dfAttendees_Country_Count_m2_f1['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f1['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f1['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f1 = dfAttendees_Country_Count_m2_f1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f1['Total-2022'] = dfAttendees_Country_Count_m2_f1['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f1['Percent-2022'] = dfAttendees_Country_Count_m2_f1['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f1['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f1['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f1 = dfAttendees_Country_Count_m2_f1.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f1['Total-2023'] = dfAttendees_Country_Count_m2_f1['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f1['Percent-2023'] = dfAttendees_Country_Count_m2_f1['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f1['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f1['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f1 = df_ATTENDEES_AREAS_count_m2_f1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f1['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f1['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f1['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f1['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f1['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f1['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f1 = df_ATTENDEES_AREAS_count_m2_f1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f1['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f1['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f1['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f1['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f1['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f1['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f1 = df_ATTENDEES_AREAS_count_m2_f1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f1['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f1['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f1['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f1['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f1['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f1['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f1 = df_ATTENDEES_AREAS_count_m2_f1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f1['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f1['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f1['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f1['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f1['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f1['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f1 = df_ATTENDEES_AREAS_count_m2_f1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f1['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f1['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f1['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f1['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f1['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f1['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f1 = df_ATTENDEES_AREAS_count_m2_f1.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f1['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f1['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f1['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f1['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f1['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f1['Total-2017'],errors='coerce')
df_Specialty_count_m2_f1 = df_Specialty_count_m2_f1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f1['Total-2017'] = df_Specialty_count_m2_f1['Total-2017'].astype(int)
df_Specialty_count_m2_f1['Percent-2017'] = df_Specialty_count_m2_f1['Percent-2017'].astype(float)

df_Specialty_count_m2_f1['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f1['Total-2018'],errors='coerce')
df_Specialty_count_m2_f1 = df_Specialty_count_m2_f1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f1['Total-2018'] = df_Specialty_count_m2_f1['Total-2018'].astype(int)
df_Specialty_count_m2_f1['Percent-2018'] = df_Specialty_count_m2_f1['Percent-2018'].astype(float)

df_Specialty_count_m2_f1['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f1['Total-2019'],errors='coerce')
df_Specialty_count_m2_f1 = df_Specialty_count_m2_f1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f1['Total-2019'] = df_Specialty_count_m2_f1['Total-2019'].astype(int)
df_Specialty_count_m2_f1['Percent-2019'] = df_Specialty_count_m2_f1['Percent-2019'].astype(float)

df_Specialty_count_m2_f1['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f1['Total-2021'],errors='coerce')
df_Specialty_count_m2_f1 = df_Specialty_count_m2_f1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f1['Total-2021'] = df_Specialty_count_m2_f1['Total-2021'].astype(int)
df_Specialty_count_m2_f1['Percent-2021'] = df_Specialty_count_m2_f1['Percent-2021'].astype(float)

df_Specialty_count_m2_f1['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f1['Total-2022'],errors='coerce')
df_Specialty_count_m2_f1 = df_Specialty_count_m2_f1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f1['Total-2022'] = df_Specialty_count_m2_f1['Total-2022'].astype(int)
df_Specialty_count_m2_f1['Percent-2022'] = df_Specialty_count_m2_f1['Percent-2022'].astype(float)

df_Specialty_count_m2_f1['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f1['Total-2023'],errors='coerce')
df_Specialty_count_m2_f1 = df_Specialty_count_m2_f1.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f1['Total-2023'] = df_Specialty_count_m2_f1['Total-2023'].astype(int)
df_Specialty_count_m2_f1['Percent-2023'] = df_Specialty_count_m2_f1['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f1.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f1.dtypes)
#print(df_Specialty_count_m2_f1.dtypes)

#print(dfAttendees_Country_Count_m2_f1.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f1.dtypes)
#print(df_Specialty_count_m2_f1.dtypes)

# EXCEL FILE
writerf1 = pd.ExcelWriter(outputExcelFile_f1, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
df_Registrations_Merge_f1.to_excel\
    (writerf1, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
df_ACQRET_count_M4_f1.to_excel\
    (writerf1, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
df_Revenue_calc_f1.to_excel\
    (writerf1, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
df_Registrations_GRDel_f1.to_excel\
    (writerf1, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
df_AC_RT_GRDel_M4_f1.to_excel\
    (writerf1, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
df_Revenu_GRDel_f1.to_excel\
    (writerf1, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f1.to_excel\
    (writerf1, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f1.to_excel\
    (writerf1, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f1.to_excel\
    (writerf1, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f1.to_excel\
    (writerf1, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f1.to_excel\
    (writerf1, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf1.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f1)

workbook.save(outputExcelFile_f1)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 189 days**********************************************')
print('************************************End of 189 days**********************************************')
print('************************************End of 189 days**********************************************')
print('************************************End of 189 days**********************************************')
print('************************************End of 189 days**********************************************')
print('************************************End of 189 days**********************************************')
print('************************************End of 189 days**********************************************')
print('************************************End of 189 days**********************************************')
print('************************************End of 189 days**********************************************')

#unit 1
#Total Number of Registrations
dfd17_f2_Registrations_count = pd.DataFrame(filter_2_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f2_Registrations_count = dfd17_f2_Registrations_count.fillna('Unknown')
dfd17_f2_Registrations_count['Percent-2017'] = (dfd17_f2_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f2_Registrations_count['Percent-2017'] = dfd17_f2_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f2_Registrations_count['7DEvolution-2017'] = dfd17_f2_Registrations_count['Total-2017'] - dfd17_f1_Registrations_count['Total-2017']
#print(tab(dfd17_f2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f2_Registrations_count = pd.DataFrame(filter_2_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f2_Registrations_count = dfd18_f2_Registrations_count.fillna('Unknown')
dfd18_f2_Registrations_count['Percent-2018'] = (dfd18_f2_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f2_Registrations_count['Percent-2018'] = dfd18_f2_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f2_Registrations_count['7DEvolution-2018'] = dfd18_f2_Registrations_count['Total-2018'] - dfd18_f1_Registrations_count['Total-2018']
#print(tab(dfd18_f2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f2_Registrations_count = pd.DataFrame(filter_2_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f2_Registrations_count = dfd19_f2_Registrations_count.fillna('Unknown')
dfd19_f2_Registrations_count['Percent-2019'] = (dfd19_f2_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f2_Registrations_count['Percent-2019'] = dfd19_f2_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f2_Registrations_count['7DEvolution-2019'] = dfd19_f2_Registrations_count['Total-2019'] - dfd19_f1_Registrations_count['Total-2019']
#print(tab(dfd19_f2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f2_Registrations_count = pd.DataFrame(filter_2_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f2_Registrations_count = dfd21_f2_Registrations_count.fillna('Unknown')
dfd21_f2_Registrations_count['Percent-2021'] = (dfd21_f2_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f2_Registrations_count['Percent-2021'] = dfd21_f2_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f2_Registrations_count['7DEvolution-2021'] = dfd21_f2_Registrations_count['Total-2021'] - dfd21_f1_Registrations_count['Total-2021']
#print(tab(dfd21_f2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f2_Registrations_count = pd.DataFrame(filter_2_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f2_Registrations_count = dfd22_f2_Registrations_count.fillna('Unknown')
dfd22_f2_Registrations_count['Percent-2022'] = (dfd22_f2_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f2_Registrations_count['Percent-2022'] = dfd22_f2_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f2_Registrations_count['7DEvolution-2022'] = dfd22_f2_Registrations_count['Total-2022'] - dfd22_f1_Registrations_count['Total-2022']
print(tab(dfd22_f2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_Registrations_count = pd.DataFrame(filter_2_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f2_Registrations_count = dfd23_f2_Registrations_count.fillna('Unknown')
dfd23_f2_Registrations_count['Percent-2023'] = (dfd23_f2_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f2_Registrations_count['Percent-2023'] = dfd23_f2_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f2_Registrations_count['7DEvolution-2023'] = dfd23_f2_Registrations_count['Total-2023'] - dfd23_f1_Registrations_count['Total-2023']
#print(tab(dfd23_f2_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f2_RegistrationsEvolution_count = pd.DataFrame(filter_2_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f2_RegistrationsEvolution_count = dfd23_f2_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f2_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f2_Registrations_count['Total-2023'] - dfd19_f2_Registrations_count['Total-2019']) / dfd19_f2_Registrations_count['Total-2019'].sum()) * 100
dfd23_f2_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f2_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f2_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f2 = pd.DataFrame(pd.merge(dfd17_f2_Registrations_count, dfd18_f2_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f2 = pd.DataFrame(pd.merge(dfd19_f2_Registrations_count, dfd21_f2_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f2 = pd.DataFrame(pd.merge(dfd22_f2_Registrations_count, dfd23_f2_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f2 = pd.DataFrame(pd.merge(df_Registrations_count_1_f2, df_Registrations_count_2_f2, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f2 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f2, df_Registrations_count_3_f2, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f2 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f2, dfd23_f2_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f2 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2]
Concat_Registrations_count_f1_f2 = pd.concat(ConcatFrames_Registrations_count_f1_f2)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f2  = ConcatFrames_Registrations_count_f1_f2.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f2.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f2 = filter_2_df18[filter_2_df18['New customer'] == 1]
df_NewCustomer_df19_f2 = filter_2_df19[filter_2_df19['New customer'] == 1]
df_NewCustomer_df21_f2 = filter_2_df21[filter_2_df21['New customer'] == 1]
df_NewCustomer_df22_f2 = filter_2_df22[filter_2_df22['New customer'] == 1]
df_NewCustomer_df23_f2 = filter_2_df23[filter_2_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f2.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f2.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f2.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a2_ACQRET_count = pd.DataFrame(filter_2_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f2_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f2.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f2_ACQRET_count['Percent-2018'] = (dfd18_f2_ACQRET_count['ACQ-2018'] / dfd18_f2_Registrations_count['Total-2018'].sum()) * 100
dfd18_f2_ACQRET_count['Percent-2018'] = dfd18_f2_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f2_ACQRET_count['RET-2018'] = dfd18_a2_ACQRET_count['Total-2018'] - dfd18_f2_ACQRET_count['ACQ-2018']
dfd18_f2_ACQRET_count['Percnt-2018'] = (dfd18_f2_ACQRET_count['RET-2018'] / dfd18_a2_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f2_ACQRET_count['Percnt-2018'] = dfd18_f2_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f2_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a2_ACQRET_count = pd.DataFrame(filter_2_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f2_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f2.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f2_ACQRET_count['Percent-2019'] = (dfd19_f2_ACQRET_count['ACQ-2019'] / dfd19_f2_Registrations_count['Total-2019'].sum()) * 100
dfd19_f2_ACQRET_count['Percent-2019'] = dfd19_f2_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f2_ACQRET_count['RET-2019'] = dfd19_a2_ACQRET_count['Total-2019'] - dfd19_f2_ACQRET_count['ACQ-2019']
dfd19_f2_ACQRET_count['Percnt-2019'] = (dfd19_f2_ACQRET_count['RET-2019'] / dfd19_a2_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f2_ACQRET_count['Percnt-2019'] = dfd19_f2_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f2_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a2_ACQRET_count = pd.DataFrame(filter_2_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f2_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f2.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f2_ACQRET_count['Percent-2021'] = (dfd21_f2_ACQRET_count['ACQ-2021'] / dfd21_f2_Registrations_count['Total-2021'].sum()) * 100
dfd21_f2_ACQRET_count['Percent-2021'] = dfd21_f2_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f2_ACQRET_count['RET-2021'] = dfd21_a2_ACQRET_count['Total-2021'] - dfd21_f2_ACQRET_count['ACQ-2021']
dfd21_f2_ACQRET_count['Percnt-2021'] = (dfd21_f2_ACQRET_count['RET-2021'] / dfd21_a2_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f2_ACQRET_count['Percnt-2021'] = dfd21_f2_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f2_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a2_ACQRET_count = pd.DataFrame(filter_2_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f2_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f2.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f2_ACQRET_count['Percent-2022'] = (dfd22_f2_ACQRET_count['ACQ-2022'] / dfd22_f2_Registrations_count['Total-2022'].sum()) * 100
dfd22_f2_ACQRET_count['Percent-2022'] = dfd22_f2_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f2_ACQRET_count['RET-2022'] = dfd22_a2_ACQRET_count['Total-2022'] - dfd22_f2_ACQRET_count['ACQ-2022']
dfd22_f2_ACQRET_count['Percnt-2022'] = (dfd22_f2_ACQRET_count['RET-2022'] / dfd22_a2_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f2_ACQRET_count['Percnt-2022'] = dfd22_f2_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f2_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a2_ACQRET_count = pd.DataFrame(filter_2_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f2_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f2.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f2_ACQRET_count['Percent-2023'] = (dfd23_f2_ACQRET_count['ACQ-2023'] / dfd23_f2_Registrations_count['Total-2023'].sum()) * 100
dfd23_f2_ACQRET_count['Percent-2023'] = dfd23_f2_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f2_ACQRET_count['RET-2023'] = dfd23_a2_ACQRET_count['Total-2023'] - dfd23_f2_ACQRET_count['ACQ-2023']
dfd23_f2_ACQRET_count['Percnt-2023'] = (dfd23_f2_ACQRET_count['RET-2023'] / dfd23_a2_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f2_ACQRET_count['Percnt-2023'] = dfd23_f2_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f2_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f2 = pd.DataFrame(pd.merge(dfd18_a2_ACQRET_count, dfd18_f2_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f2 = pd.DataFrame(pd.merge(dfd19_a2_ACQRET_count, dfd19_f2_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f2 = pd.DataFrame(pd.merge(dfd21_a2_ACQRET_count, dfd21_f2_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f2 = pd.DataFrame(pd.merge(dfd22_a2_ACQRET_count, dfd22_f2_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_5_f2 = pd.DataFrame(pd.merge(dfd23_a2_ACQRET_count, dfd23_f2_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_5_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f2 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f2, df_ACQRET_count_2_f2, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f2 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f2, df_ACQRET_count_3_f2, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f2 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f2, df_ACQRET_count_4_f2, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f2 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f2, df_ACQRET_count_5_f2, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f2 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2]
Concat_ACQRET_count_f1_f2 = pd.concat(ConcatFrames_ACQRET_count_f1_f2)
#print(tab(Concat_ACQRET_count_f1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f2 = Concat_ACQRET_count_f1_f2[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f2_Revenue_calc = pd.DataFrame(filter_2_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f2_Revenue_calc['Percent-2017'] = (dfd17_f2_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f2_Revenue_calc['Percent-2017'] = dfd17_f2_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f2_Revenue_calc['7DEvolution-2017'] = dfd17_f2_Revenue_calc['Total-2017'] - dfd17_f1_Revenue_calc['Total-2017']
#print(tab(dfd17_f2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f2_Revenue_calc = pd.DataFrame(filter_2_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f2_Revenue_calc['Percent-2018'] = (dfd18_f2_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f2_Revenue_calc['Percent-2018'] = dfd18_f2_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f2_Revenue_calc['7DEvolution-2018'] = dfd18_f2_Revenue_calc['Total-2018'] - dfd18_f1_Revenue_calc['Total-2018']
#print(tab(dfd18_f2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f2_Revenue_calc = pd.DataFrame(filter_2_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f2_Revenue_calc['Percent-2019'] = (dfd19_f2_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f2_Revenue_calc['Percent-2019'] = dfd19_f2_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f2_Revenue_calc['7DEvolution-2019'] = dfd19_f2_Revenue_calc['Total-2019'] - dfd19_f1_Revenue_calc['Total-2019']
#print(tab(dfd19_f2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f2_Revenue_calc = pd.DataFrame(filter_2_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f2_Revenue_calc['Percent-2021'] = (dfd21_f2_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f2_Revenue_calc['Percent-2021'] = dfd21_f2_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f2_Revenue_calc['7DEvolution-2021'] = dfd21_f2_Revenue_calc['Total-2021'] - dfd21_f1_Revenue_calc['Total-2021']
#print(tab(dfd21_f2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f2_Revenue_calc = pd.DataFrame(filter_2_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f2_Revenue_calc['Percent-2022'] = (dfd22_f2_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f2_Revenue_calc['Percent-2022'] = dfd22_f2_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f2_Revenue_calc['7DEvolution-2022'] = dfd22_f2_Revenue_calc['Total-2022'] - dfd22_f1_Revenue_calc['Total-2022']
#print(tab(dfd22_f2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_Revenue_calc = pd.DataFrame(filter_2_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f2_Revenue_calc['Percent-2023'] = (dfd23_f2_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f2_Revenue_calc['Percent-2023'] = dfd23_f2_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f2_Revenue_calc['7DEvolution-2023'] = dfd23_f2_Revenue_calc['Total-2023'] - dfd23_f1_Revenue_calc['Total-2023']
#print(tab(dfd23_f2_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f2_RevenueEvolution_calc = pd.DataFrame(filter_2_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f2_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f2_Revenue_calc['Total-2023'] - dfd19_f2_Revenue_calc['Total-2019'])/ dfd19_f2_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f2_RevenueEvolution_calc['Evolution-2023'] = dfd23_f2_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f2_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f2 = pd.DataFrame(pd.merge(dfd17_f2_Revenue_calc, dfd18_f2_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f2 = pd.DataFrame(pd.merge(dfd19_f2_Revenue_calc, dfd21_f2_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f2 = pd.DataFrame(pd.merge(dfd22_f2_Revenue_calc, dfd23_f2_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f2_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f2, df_Revenue_calc_2_f2, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f2Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f2_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f2_Evolution, df_Revenue_calc_3_f2, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f2Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f2 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f2_Evolution, dfd23_f2_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f2 = [df_Revenue_calc_f1, df_Revenue_calc_f2]
Concat_REV_count_f1_f2 = pd.concat(ConcatFrames_REV_count_f1_f2)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f2_Registrations_GRDel = pd.DataFrame(filtr_2_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f2_Registrations_GRDel = dfd17_f2_Registrations_GRDel.fillna('Unknown')
dfd17_f2_Registrations_GRDel['Percent-2017'] = (dfd17_f2_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f2_Registrations_GRDel['Percent-2017'] = dfd17_f2_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f2_Registrations_GRDel['7DEvolution-2017'] = dfd17_f2_Registrations_GRDel['Total-2017'] - dfd17_f1_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f2_Registrations_GRDel = pd.DataFrame(filtr_2_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f2_Registrations_GRDel = dfd18_f2_Registrations_GRDel.fillna('Unknown')
dfd18_f2_Registrations_GRDel['Percent-2018'] = (dfd18_f2_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f2_Registrations_GRDel['Percent-2018'] = dfd18_f2_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f2_Registrations_GRDel['7DEvolution-2018'] = dfd18_f2_Registrations_GRDel['Total-2018'] - dfd18_f1_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f2_Registrations_GRDel = pd.DataFrame(filtr_2_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f2_Registrations_GRDel = dfd19_f2_Registrations_GRDel.fillna('Unknown')
dfd19_f2_Registrations_GRDel['Percent-2019'] = (dfd19_f2_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f2_Registrations_GRDel['Percent-2019'] = dfd19_f2_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f2_Registrations_GRDel['7DEvolution-2019'] = dfd19_f2_Registrations_GRDel['Total-2019'] - dfd19_f1_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f2_Registrations_GRDel = pd.DataFrame(filtr_2_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f2_Registrations_GRDel = dfd21_f2_Registrations_GRDel.fillna('Unknown')
dfd21_f2_Registrations_GRDel['Percent-2021'] = (dfd21_f2_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f2_Registrations_GRDel['Percent-2021'] = dfd21_f2_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f2_Registrations_GRDel['7DEvolution-2021'] = dfd21_f2_Registrations_GRDel['Total-2021'] - dfd21_f1_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f2_Registrations_GRDel = pd.DataFrame(filtr_2_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f2_Registrations_GRDel = dfd22_f2_Registrations_GRDel.fillna('Unknown')
dfd22_f2_Registrations_GRDel['Percent-2022'] = (dfd22_f2_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f2_Registrations_GRDel['Percent-2022'] = dfd22_f2_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f2_Registrations_GRDel['7DEvolution-2022'] = dfd22_f2_Registrations_GRDel['Total-2022'] - dfd22_f1_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_Registrations_GRDel = pd.DataFrame(filtr_2_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f2_Registrations_GRDel = dfd23_f2_Registrations_GRDel.fillna('Unknown')
dfd23_f2_Registrations_GRDel['Percent-2023'] = (dfd23_f2_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f2_Registrations_GRDel['Percent-2023'] = dfd23_f2_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f2_Registrations_GRDel['7DEvolution-2023'] = dfd23_f2_Registrations_GRDel['Total-2023'] - dfd23_f1_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f2_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f2_Registrations_Evol_GRDel = pd.DataFrame(filtr_2_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f2_Registrations_Evol_GRDel = dfd23_f2_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f2_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f2_Registrations_GRDel['Total-2023'] - dfd19_f2_Registrations_GRDel['Total-2019'])/ dfd19_f2_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f2_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f2 = pd.concat([dfd17_f2_Registrations_GRDel, dfd18_f2_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f2 = pd.DataFrame(pd.merge(dfd17_f2_Registrations_GRDel, dfd18_f2_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f2 = pd.DataFrame(pd.merge(dfd19_f2_Registrations_GRDel, dfd21_f2_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f2 = pd.DataFrame(pd.merge(dfd22_f2_Registrations_GRDel, dfd23_f2_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f2 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f2, df_Registrations_GRDel_2_f2, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_5_f2 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f2, df_Registrations_GRDel_3_f2, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f2 = pd.DataFrame(pd.merge(df_Registrations_GRDel_5_f2, dfd23_f2_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f2 = df_Registrations_GRDel_f2[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f2 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2]
Concat_RegGRDel_count_f1_f2 = pd.concat(ConcatFrames_RegGRDel_count_f1_f2)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f2 = filtr_2_df18_GRdel[filtr_2_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f2 = filtr_2_df19_GRdel[filtr_2_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f2 = filtr_2_df21_GRdel[filtr_2_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f2 = filtr_2_df22_GRdel[filtr_2_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f2 = filtr_2_df23_GRdel[filtr_2_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f2.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f2.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a2_AC_RT_GRDel = pd.DataFrame(filtr_2_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f2_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f2.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f2_AC_RT_GRDel['Percent-2018'] = (dfd18_f2_AC_RT_GRDel['ACQ-2018'] / dfd18_f2_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f2_AC_RT_GRDel['Percent-2018'] = dfd18_f2_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f2_AC_RT_GRDel['RET-2018'] = dfd18_a2_AC_RT_GRDel['Total-2018'] - dfd18_f2_AC_RT_GRDel['ACQ-2018']
dfd18_f2_AC_RT_GRDel['Percnt-2018'] = (dfd18_f2_AC_RT_GRDel['RET-2018'] / dfd18_a2_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f2_AC_RT_GRDel['Percnt-2018'] = dfd18_f2_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f2_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a2_AC_RT_GRDel = pd.DataFrame(filtr_2_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f2_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f2.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f2_AC_RT_GRDel['Percent-2019'] = (dfd19_f2_AC_RT_GRDel['ACQ-2019'] / dfd19_f2_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f2_AC_RT_GRDel['Percent-2019'] = dfd19_f2_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f2_AC_RT_GRDel['RET-2019'] = dfd19_a2_AC_RT_GRDel['Total-2019'] - dfd19_f2_AC_RT_GRDel['ACQ-2019']
dfd19_f2_AC_RT_GRDel['Percnt-2019'] = (dfd19_f2_AC_RT_GRDel['RET-2019'] / dfd19_a2_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f2_AC_RT_GRDel['Percnt-2019'] = dfd19_f2_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f2_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a2_AC_RT_GRDel = pd.DataFrame(filtr_2_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f2_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f2.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f2_AC_RT_GRDel['Percent-2021'] = (dfd21_f2_AC_RT_GRDel['ACQ-2021'] / dfd21_f2_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f2_AC_RT_GRDel['Percent-2021'] = dfd21_f2_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f2_AC_RT_GRDel['RET-2021'] = dfd21_a2_AC_RT_GRDel['Total-2021'] - dfd21_f2_AC_RT_GRDel['ACQ-2021']
dfd21_f2_AC_RT_GRDel['Percnt-2021'] = (dfd21_f2_AC_RT_GRDel['RET-2021'] / dfd21_a2_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f2_AC_RT_GRDel['Percnt-2021'] = dfd21_f2_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f2_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a2_AC_RT_GRDel = pd.DataFrame(filtr_2_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f2_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f2.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f2_AC_RT_GRDel['Percent-2022'] = (dfd22_f2_AC_RT_GRDel['ACQ-2022'] / dfd22_f2_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f2_AC_RT_GRDel['Percent-2022'] = dfd22_f2_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f2_AC_RT_GRDel['RET-2022'] = dfd22_a2_AC_RT_GRDel['Total-2022'] - dfd22_f2_AC_RT_GRDel['ACQ-2022']
dfd22_f2_AC_RT_GRDel['Percnt-2022'] = (dfd22_f2_AC_RT_GRDel['RET-2022'] / dfd22_a2_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f2_AC_RT_GRDel['Percnt-2022'] = dfd22_f2_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f2_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a2_AC_RT_GRDel = pd.DataFrame(filtr_2_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f2_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f2.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f2_AC_RT_GRDel['Percent-2023'] = (dfd23_f2_AC_RT_GRDel['ACQ-2023'] / dfd23_f2_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f2_AC_RT_GRDel['Percent-2023'] = dfd23_f2_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f2_AC_RT_GRDel['RET-2023'] = dfd23_a2_AC_RT_GRDel['Total-2023'] - dfd23_f2_AC_RT_GRDel['ACQ-2023']
dfd23_f2_AC_RT_GRDel['Percnt-2023'] = (dfd23_f2_AC_RT_GRDel['RET-2023'] / dfd23_a2_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f2_AC_RT_GRDel['Percnt-2023'] = dfd23_f2_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f2_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f2 = pd.DataFrame(pd.merge_ordered(dfd18_a2_AC_RT_GRDel, dfd18_f2_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f2 = pd.DataFrame(pd.merge_ordered(dfd19_a2_AC_RT_GRDel, dfd19_f2_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f2 = pd.DataFrame(pd.merge_ordered(dfd21_a2_AC_RT_GRDel, dfd21_f2_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f2 = pd.DataFrame(pd.merge_ordered(dfd22_a2_AC_RT_GRDel, dfd22_f2_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_5_f2 = pd.DataFrame(pd.merge_ordered(dfd23_a2_AC_RT_GRDel, dfd23_f2_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f2 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f2, df_AC_ET_GRDel_2_f2, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f2 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f2, df_AC_ET_GRDel_3_f2, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f2 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f2, df_AC_ET_GRDel_4_f2, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f2 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f2, df_AC_ET_GRDel_5_f2, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f2 = df_AC_RT_GRDel_M4_f2[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f2 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2]
Conct_AC_RT_GRDel_f1_f2 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f2)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_2_df17_GRdel = filtr_2_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f2_Revenu_GRDel = pd.DataFrame(filtr_2_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f2_Revenu_GRDel['Percent-2017'] = (dfd17_f2_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f2_Revenu_GRDel['Percent-2017'] = dfd17_f2_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f2_Revenu_GRDel['7DEvolution-2017'] = dfd17_f2_Revenu_GRDel['Total-2017'] - dfd17_f1_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_2_df18_GRdel = filtr_2_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f2_Revenu_GRDel = pd.DataFrame(filtr_2_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f2_Revenu_GRDel['Percent-2018'] = (dfd18_f2_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f2_Revenu_GRDel['Percent-2018'] = dfd18_f2_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f2_Revenu_GRDel['7DEvolution-2018'] = dfd18_f2_Revenu_GRDel['Total-2018'] - dfd18_f1_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_2_df19_GRdel = filtr_2_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f2_Revenu_GRDel = pd.DataFrame(filtr_2_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f2_Revenu_GRDel['Percent-2019'] = (dfd19_f2_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f2_Revenu_GRDel['Percent-2019'] = dfd19_f2_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f2_Revenu_GRDel['7DEvolution-2019'] = dfd19_f2_Revenu_GRDel['Total-2019'] - dfd19_f1_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_2_df21_GRdel = filtr_2_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f2_Revenu_GRDel = pd.DataFrame(filtr_2_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f2_Revenu_GRDel['Percent-2021'] = (dfd21_f2_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f2_Revenu_GRDel['Percent-2021'] = dfd21_f2_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f2_Revenu_GRDel['7DEvolution-2021'] = dfd21_f2_Revenu_GRDel['Total-2021'] - dfd21_f1_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_2_df22_GRdel = filtr_2_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f2_Revenu_GRDel = pd.DataFrame(filtr_2_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f2_Revenu_GRDel['Percent-2022'] = (dfd22_f2_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f2_Revenu_GRDel['Percent-2022'] = dfd22_f2_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f2_Revenu_GRDel['7DEvolution-2022'] = dfd22_f2_Revenu_GRDel['Total-2022'] - dfd22_f1_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_2_df23_GRdel = filtr_2_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f2_Revenu_GRDel = pd.DataFrame(filtr_2_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f2_Revenu_GRDel['Percent-2023'] = (dfd23_f2_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f2_Revenu_GRDel['Percent-2023'] = dfd23_f2_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f2_Revenu_GRDel['7DEvolution-2023'] = dfd23_f2_Revenu_GRDel['Total-2023'] - dfd23_f1_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f2_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f2_Revenu_Evlt_GRDel = pd.DataFrame(filtr_2_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f2_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f2_Revenu_GRDel['Total-2023'] - dfd19_f2_Revenu_GRDel['Total-2019'])/ dfd19_f2_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f2_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f2_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f2_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f2 = pd.DataFrame(pd.merge(dfd17_f2_Revenu_GRDel, dfd18_f2_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f2 = pd.DataFrame(pd.merge(dfd19_f2_Revenu_GRDel, dfd21_f2_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f2 = pd.DataFrame(pd.merge(dfd22_f2_Revenu_GRDel, dfd23_f2_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f2 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f2, df_Revenu_GRDel_2_f2, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_5_f2 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f2, df_Revenu_GRDel_3_f2, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f2 = pd.DataFrame(pd.merge(df_Revenu_GRDel_5_f2, dfd23_f2_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f2 = df_Revenu_GRDel_f2[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f2 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2]
Conct_RV_GRDel_f1_f2 = pd.concat(ConcatFra_RV_GRDel_f1_f2)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f2_Profile_count = pd.DataFrame(filtr_2_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f2_Profile_count = dfd17_f2_Profile_count.fillna('Unknown')
dfd17_f2_Profile_count['Percent-2017'] = (dfd17_f2_Profile_count['Total-2017'] / dfd17_f2_Profile_count['Total-2017'].sum()) * 100
dfd17_f2_Profile_count['Percent-2017'] = dfd17_f2_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f2_Profile_count = pd.DataFrame(filtr_2_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f2_Profile_count = dfd18_f2_Profile_count.fillna('Unknown')
dfd18_f2_Profile_count['Percent-2018'] = (dfd18_f2_Profile_count['Total-2018'] / dfd18_f2_Profile_count['Total-2018'].sum()) * 100
dfd18_f2_Profile_count['Percent-2018'] = dfd18_f2_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f2_Profile_count = pd.DataFrame(filtr_2_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f2_Profile_count = dfd19_f2_Profile_count.fillna('Unknown')
dfd19_f2_Profile_count['Percent-2019'] = (dfd19_f2_Profile_count['Total-2019'] / dfd19_f2_Profile_count['Total-2019'].sum()) * 100
dfd19_f2_Profile_count['Percent-2019'] = dfd19_f2_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f2_Profile_count = pd.DataFrame(filtr_2_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f2_Profile_count = dfd21_f2_Profile_count.fillna('Unknown')
dfd21_f2_Profile_count['Percent-2021'] = (dfd21_f2_Profile_count['Total-2021'] / dfd21_f2_Profile_count['Total-2021'].sum()) * 100
dfd21_f2_Profile_count['Percent-2021'] = dfd21_f2_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f2_Profile_count = pd.DataFrame(filtr_2_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f2_Profile_count = dfd22_f2_Profile_count.fillna('Unknown')
dfd22_f2_Profile_count['Percent-2022'] = (dfd22_f2_Profile_count['Total-2022'] / dfd22_f2_Profile_count['Total-2022'].sum()) * 100
dfd22_f2_Profile_count['Percent-2022'] = dfd22_f2_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_Profile_count = pd.DataFrame(filtr_2_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f2_Profile_count = dfd23_f2_Profile_count.fillna('Unknown')
dfd23_f2_Profile_count['Percent-2023'] = (dfd23_f2_Profile_count['Total-2023'] / dfd23_f2_Profile_count['Total-2023'].sum()) * 100
dfd23_f2_Profile_count['Percent-2023'] = dfd23_f2_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f2_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f2 = pd.DataFrame(pd.merge(dfd17_f2_Profile_count, dfd18_f2_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f2 = pd.DataFrame(pd.merge(dfd19_f2_Profile_count, dfd21_f2_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f2 = pd.DataFrame(pd.merge(dfd22_f2_Profile_count, dfd23_f2_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f2 = pd.DataFrame(pd.merge(df_Profile_Count_1_f2, df_Profile_Count_2_f2, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f2 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f2, df_Profile_Count_3_f2, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f2 = df_Profile_Count_m2_f2.append(df_Profile_Count_m2_f2.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f2['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f2_Pass_count = pd.DataFrame(filtr_2_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f2_Pass_count = dfd17_f2_Pass_count.fillna('Unknown')
dfd17_f2_Pass_count['Percent-2017'] = (dfd17_f2_Pass_count['Total-2017'] / dfd17_f2_Pass_count['Total-2017'].sum()) * 100
dfd17_f2_Pass_count['Percent-2017'] = dfd17_f2_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f2_Pass_count = pd.DataFrame(filtr_2_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f2_Pass_count = dfd18_f2_Pass_count.fillna('Unknown')
dfd18_f2_Pass_count['Percent-2018'] = (dfd18_f2_Pass_count['Total-2018'] / dfd18_f2_Pass_count['Total-2018'].sum()) * 100
dfd18_f2_Pass_count['Percent-2018'] = dfd18_f2_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f2_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f2_Pass_count = pd.DataFrame(filtr_2_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f2_Pass_count = dfd19_f2_Pass_count.fillna('Unknown')
dfd19_f2_Pass_count['Percent-2019'] = (dfd19_f2_Pass_count['Total-2019'] / dfd19_f2_Pass_count['Total-2019'].sum()) * 100
dfd19_f2_Pass_count['Percent-2019'] = dfd19_f2_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f2_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f2_Pass_count = pd.DataFrame(filtr_2_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f2_Pass_count = dfd21_f2_Pass_count.fillna('Unknown')
dfd21_f2_Pass_count['Percent-2021'] = (dfd21_f2_Pass_count['Total-2021'] / dfd21_f2_Pass_count['Total-2021'].sum()) * 100
dfd21_f2_Pass_count['Percent-2021'] = dfd21_f2_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f2_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f2_Pass_count = pd.DataFrame(filtr_2_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f2_Pass_count = dfd22_f2_Pass_count.fillna('Unknown')
dfd22_f2_Pass_count['Percent-2022'] = (dfd22_f2_Pass_count['Total-2022'] / dfd22_f2_Pass_count['Total-2022'].sum()) * 100
dfd22_f2_Pass_count['Percent-2022'] = dfd22_f2_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f2_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_Pass_count = pd.DataFrame(filtr_2_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f2_Pass_count = dfd23_f2_Pass_count.fillna('Unknown')
dfd23_f2_Pass_count['Percent-2023'] = (dfd23_f2_Pass_count['Total-2023'] / dfd23_f2_Pass_count['Total-2023'].sum()) * 100
dfd23_f2_Pass_count['Percent-2023'] = dfd23_f2_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f2_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f2 = pd.DataFrame(pd.merge(dfd17_f2_Pass_count, dfd18_f2_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f2 = pd.DataFrame(pd.merge(dfd19_f2_Pass_count, dfd21_f2_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f2 = pd.DataFrame(pd.merge(dfd22_f2_Pass_count, dfd23_f2_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f2 = pd.DataFrame(pd.merge(df_Pass_Count_1_f2, df_Pass_Count_2_f2, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f2 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f2, df_Pass_Count_3_f2, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f2 = df_Pass_Count_m2_f2.append(df_Pass_Count_m2_f2.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f2['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f2_Attendees_Country_count = pd.DataFrame(filtr_2_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f2_Attendees_Country_count = dfd17_f2_Attendees_Country_count.fillna('Unknown')
dfd17_f2_Attendees_Country_count['Percent-2017'] = (dfd17_f2_Attendees_Country_count['Total-2017'] / dfd17_f2_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f2_Attendees_Country_count['Percent-2017'] = dfd17_f2_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f2_Attendees_Country_count = pd.DataFrame(filtr_2_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f2_Attendees_Country_count = dfd18_f2_Attendees_Country_count.fillna('Unknown')
dfd18_f2_Attendees_Country_count['Percent-2018'] = (dfd18_f2_Attendees_Country_count['Total-2018'] / dfd18_f2_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f2_Attendees_Country_count['Percent-2018'] = dfd18_f2_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f2_Attendees_Country_count = pd.DataFrame(filtr_2_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f2_Attendees_Country_count = dfd19_f2_Attendees_Country_count.fillna('Unknown')
dfd19_f2_Attendees_Country_count['Percent-2019'] = (dfd19_f2_Attendees_Country_count['Total-2019'] / dfd19_f2_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f2_Attendees_Country_count['Percent-2019'] = dfd19_f2_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f2_Attendees_Country_count = pd.DataFrame(filtr_2_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f2_Attendees_Country_count = dfd21_f2_Attendees_Country_count.fillna('Unknown')
dfd21_f2_Attendees_Country_count['Percent-2021'] = (dfd21_f2_Attendees_Country_count['Total-2021'] / dfd21_f2_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f2_Attendees_Country_count['Percent-2021'] = dfd21_f2_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f2_Attendees_Country_count = pd.DataFrame(filtr_2_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f2_Attendees_Country_count = dfd22_f2_Attendees_Country_count.fillna('Unknown')
dfd22_f2_Attendees_Country_count['Percent-2022'] = (dfd22_f2_Attendees_Country_count['Total-2022'] / dfd22_f2_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f2_Attendees_Country_count['Percent-2022'] = dfd22_f2_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_Attendees_Country_count = pd.DataFrame(filtr_2_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f2_Attendees_Country_count = dfd23_f2_Attendees_Country_count.fillna('Unknown')
dfd23_f2_Attendees_Country_count['Percent-2023'] = (dfd23_f2_Attendees_Country_count['Total-2023'] / dfd23_f2_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f2_Attendees_Country_count['Percent-2023'] = dfd23_f2_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f2_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f2 = pd.DataFrame(pd.merge(dfd17_f2_Attendees_Country_count, dfd18_f2_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f2 = pd.DataFrame(pd.merge(dfd19_f2_Attendees_Country_count, dfd21_f2_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f2 = pd.DataFrame(pd.merge(dfd22_f2_Attendees_Country_count, dfd23_f2_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f2 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f2, dfAttendees_Country_Count_2_f2, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f2.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f2 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f2, dfAttendees_Country_Count_3_f2, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f2 = dfAttendees_Country_Count_m2_f2.append(dfAttendees_Country_Count_m2_f2.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f2['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_2_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f2_ATTENDEES_AREAS_count = dfd17_f2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f2_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f2_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f2_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f2_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f2_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_2_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f2_ATTENDEES_AREAS_count = dfd18_f2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f2_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f2_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f2_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f2_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f2_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_2_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f2_ATTENDEES_AREAS_count = dfd19_f2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f2_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f2_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f2_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f2_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f2_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_2_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f2_ATTENDEES_AREAS_count = dfd21_f2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f2_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f2_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f2_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f2_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f2_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_2_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f2_ATTENDEES_AREAS_count = dfd22_f2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f2_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f2_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f2_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f2_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f2_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_ATTENDEES_AREAS_count = pd.DataFrame(filtr_2_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f2_ATTENDEES_AREAS_count = dfd23_f2_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f2_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f2_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f2_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f2_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f2_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f2_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f2 = pd.DataFrame(pd.merge(dfd17_f2_ATTENDEES_AREAS_count, dfd18_f2_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f2 = pd.DataFrame(pd.merge(dfd19_f2_ATTENDEES_AREAS_count, dfd21_f2_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f2 = pd.DataFrame(pd.merge(dfd22_f2_ATTENDEES_AREAS_count, dfd23_f2_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f2.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f2 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f2, df_ATTENDEES_AREAS_count_2_f2, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f2 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f2, df_ATTENDEES_AREAS_count_3_f2, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f2 = df_ATTENDEES_AREAS_count_m2_f2.append(df_ATTENDEES_AREAS_count_m2_f2.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f2['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f2_Attendees_Specialty_count = pd.DataFrame(filtr_2_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f2_Attendees_Specialty_count = dfd17_f2_Attendees_Specialty_count.fillna('Unknown')
dfd17_f2_Attendees_Specialty_count['Percent-2017'] = (dfd17_f2_Attendees_Specialty_count['Total-2017'] / dfd17_f2_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f2_Attendees_Specialty_count['Percent-2017'] = dfd17_f2_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f2_Attendees_Specialty_count = pd.DataFrame(filtr_2_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f2_Attendees_Specialty_count = dfd18_f2_Attendees_Specialty_count.fillna('Unknown')
dfd18_f2_Attendees_Specialty_count['Percent-2018'] = (dfd18_f2_Attendees_Specialty_count['Total-2018'] / dfd18_f2_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f2_Attendees_Specialty_count['Percent-2018'] = dfd18_f2_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f2_Attendees_Specialty_count = pd.DataFrame(filtr_2_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f2_Attendees_Specialty_count = dfd19_f2_Attendees_Specialty_count.fillna('Unknown')
dfd19_f2_Attendees_Specialty_count['Percent-2019'] = (dfd19_f2_Attendees_Specialty_count['Total-2019'] / dfd19_f2_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f2_Attendees_Specialty_count['Percent-2019'] = dfd19_f2_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f2_Attendees_Specialty_count = pd.DataFrame(filtr_2_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f2_Attendees_Specialty_count = dfd21_f2_Attendees_Specialty_count.fillna('Unknown')
dfd21_f2_Attendees_Specialty_count['Percent-2021'] = (dfd21_f2_Attendees_Specialty_count['Total-2021'] / dfd21_f2_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f2_Attendees_Specialty_count['Percent-2021'] = dfd21_f2_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f2_Attendees_Specialty_count = pd.DataFrame(filtr_2_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f2_Attendees_Specialty_count = dfd22_f2_Attendees_Specialty_count.fillna('Unknown')
dfd22_f2_Attendees_Specialty_count['Percent-2022'] = (dfd22_f2_Attendees_Specialty_count['Total-2022'] / dfd22_f2_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f2_Attendees_Specialty_count['Percent-2022'] = dfd22_f2_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f2_Attendees_Specialty_count = pd.DataFrame(filtr_2_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f2_Attendees_Specialty_count = dfd23_f2_Attendees_Specialty_count.fillna('Unknown')
dfd23_f2_Attendees_Specialty_count['Percent-2023'] = (dfd23_f2_Attendees_Specialty_count['Total-2023'] / dfd23_f2_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f2_Attendees_Specialty_count['Percent-2023'] = dfd23_f2_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f2_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f2 = pd.DataFrame(pd.merge(dfd17_f2_Attendees_Specialty_count, dfd18_f2_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f2 = pd.DataFrame(pd.merge(dfd19_f2_Attendees_Specialty_count, dfd21_f2_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f2 = pd.DataFrame(pd.merge(dfd22_f2_Attendees_Specialty_count, dfd23_f2_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f2 = pd.DataFrame(pd.merge(df_Specialty_count_1_f2, df_Specialty_count_2_f2, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f2.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f2 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f2, df_Specialty_count_3_f2, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f2 = df_Specialty_count_m2_f2.append(df_Specialty_count_m2_f2.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f2['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f2['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f2['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f2 = Concat_Registrations_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f2['Total-2017'] = Concat_Registrations_count_f1_f2['Total-2017'].astype(int)
Concat_Registrations_count_f1_f2['Percent-2017'] = Concat_Registrations_count_f1_f2['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f2['7DEvolution-2017'] = Concat_Registrations_count_f1_f2['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f2['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f2['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f2 = Concat_Registrations_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f2['Total-2018'] = Concat_Registrations_count_f1_f2['Total-2018'].astype(int)
Concat_Registrations_count_f1_f2['Percent-2018'] = Concat_Registrations_count_f1_f2['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f2['7DEvolution-2018'] = Concat_Registrations_count_f1_f2['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f2['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f2['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f2 = Concat_Registrations_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f2['Total-2019'] = Concat_Registrations_count_f1_f2['Total-2019'].astype(int)
Concat_Registrations_count_f1_f2['Percent-2019'] = Concat_Registrations_count_f1_f2['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f2['7DEvolution-2019'] = Concat_Registrations_count_f1_f2['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f2['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f2['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f2 = Concat_Registrations_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f2['Total-2021'] = Concat_Registrations_count_f1_f2['Total-2021'].astype(int)
Concat_Registrations_count_f1_f2['Percent-2021'] = Concat_Registrations_count_f1_f2['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f2['7DEvolution-2021'] = Concat_Registrations_count_f1_f2['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f2['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f2['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f2 = Concat_Registrations_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f2['Total-2022'] = Concat_Registrations_count_f1_f2['Total-2022'].astype(int)
Concat_Registrations_count_f1_f2['Percent-2022'] = Concat_Registrations_count_f1_f2['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f2['7DEvolution-2022'] = Concat_Registrations_count_f1_f2['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f2['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f2['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f2 = Concat_Registrations_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f2['Total-2023'] = Concat_Registrations_count_f1_f2['Total-2023'].astype(int)
Concat_Registrations_count_f1_f2['Percent-2023'] = Concat_Registrations_count_f1_f2['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f2['7DEvolution-2023'] = Concat_Registrations_count_f1_f2['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f2['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f2['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f2 = Concat_ACQRET_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f2['Total-2018'] = Concat_ACQRET_count_f1_f2['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f2['ACQ-2018'] = Concat_ACQRET_count_f1_f2['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f2['Percent-2018'] = Concat_ACQRET_count_f1_f2['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f2['RET-2018'] = Concat_ACQRET_count_f1_f2['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f2['Percnt-2018'] = Concat_ACQRET_count_f1_f2['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f2['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f2['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f2 = Concat_ACQRET_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f2['Total-2019'] = Concat_ACQRET_count_f1_f2['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f2['ACQ-2019'] = Concat_ACQRET_count_f1_f2['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f2['Percent-2019'] = Concat_ACQRET_count_f1_f2['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f2['RET-2019'] = Concat_ACQRET_count_f1_f2['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f2['Percnt-2019'] = Concat_ACQRET_count_f1_f2['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f2['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f2['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f2 = Concat_ACQRET_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f2['Total-2021'] = Concat_ACQRET_count_f1_f2['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f2['ACQ-2021'] = Concat_ACQRET_count_f1_f2['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f2['Percent-2021'] = Concat_ACQRET_count_f1_f2['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f2['RET-2021'] = Concat_ACQRET_count_f1_f2['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f2['Percnt-2021'] = Concat_ACQRET_count_f1_f2['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f2['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f2['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f2 = Concat_ACQRET_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f2['Total-2022'] = Concat_ACQRET_count_f1_f2['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f2['ACQ-2022'] = Concat_ACQRET_count_f1_f2['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f2['Percent-2022'] = Concat_ACQRET_count_f1_f2['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f2['RET-2022'] = Concat_ACQRET_count_f1_f2['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f2['Percnt-2022'] = Concat_ACQRET_count_f1_f2['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f2['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f2['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f2 = Concat_ACQRET_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f2['Total-2023'] = Concat_ACQRET_count_f1_f2['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f2['ACQ-2023'] = Concat_ACQRET_count_f1_f2['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f2['Percent-2023'] = Concat_ACQRET_count_f1_f2['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f2['RET-2023'] = Concat_ACQRET_count_f1_f2['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f2['Percnt-2023'] = Concat_ACQRET_count_f1_f2['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f2['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f2['Total-2017'],errors='coerce')
Concat_REV_count_f1_f2 = Concat_REV_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f2['Total-2017'] = Concat_REV_count_f1_f2['Total-2017'].astype(int)
Concat_REV_count_f1_f2['Percent-2017'] = Concat_REV_count_f1_f2['Percent-2017'].astype(float)
Concat_REV_count_f1_f2['7DEvolution-2017'] = Concat_REV_count_f1_f2['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f2['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f2['Total-2018'],errors='coerce')
Concat_REV_count_f1_f2 = Concat_REV_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f2['Total-2018'] = Concat_REV_count_f1_f2['Total-2018'].astype(int)
Concat_REV_count_f1_f2['Percent-2018'] = Concat_REV_count_f1_f2['Percent-2018'].astype(float)
Concat_REV_count_f1_f2['7DEvolution-2018'] = Concat_REV_count_f1_f2['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f2['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f2['Total-2019'],errors='coerce')
Concat_REV_count_f1_f2 = Concat_REV_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f2['Total-2019'] = Concat_REV_count_f1_f2['Total-2019'].astype(int)
Concat_REV_count_f1_f2['Percent-2019'] = Concat_REV_count_f1_f2['Percent-2019'].astype(float)
Concat_REV_count_f1_f2['7DEvolution-2019'] = Concat_REV_count_f1_f2['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f2['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f2['Total-2022'],errors='coerce')
Concat_REV_count_f1_f2 = Concat_REV_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f2['Total-2022'] = Concat_REV_count_f1_f2['Total-2022'].astype(int)
Concat_REV_count_f1_f2['Percent-2022'] = Concat_REV_count_f1_f2['Percent-2022'].astype(float)
Concat_REV_count_f1_f2['7DEvolution-2022'] = Concat_REV_count_f1_f2['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f2['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f2['Total-2023'],errors='coerce')
Concat_REV_count_f1_f2 = Concat_REV_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f2['Total-2023'] = Concat_REV_count_f1_f2['Total-2023'].astype(int)
Concat_REV_count_f1_f2['Percent-2023'] = Concat_REV_count_f1_f2['Percent-2023'].astype(float)
Concat_REV_count_f1_f2['7DEvolution-2023'] = Concat_REV_count_f1_f2['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f2['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f2['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f2 = Concat_RegGRDel_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f2['Total-2017'] = Concat_RegGRDel_count_f1_f2['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f2['Percent-2017'] = Concat_RegGRDel_count_f1_f2['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f2['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f2['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f2['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f2['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f2 = Concat_RegGRDel_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f2['Total-2018'] = Concat_RegGRDel_count_f1_f2['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f2['Percent-2018'] = Concat_RegGRDel_count_f1_f2['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f2['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f2['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f2['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f2['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f2 = Concat_RegGRDel_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f2['Total-2019'] = Concat_RegGRDel_count_f1_f2['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f2['Percent-2019'] = Concat_RegGRDel_count_f1_f2['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f2['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f2['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f2['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f2['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f2 = Concat_RegGRDel_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f2['Total-2021'] = Concat_RegGRDel_count_f1_f2['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f2['Percent-2021'] = Concat_RegGRDel_count_f1_f2['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f2['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f2['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f2['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f2['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f2 = Concat_RegGRDel_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f2['Total-2022'] = Concat_RegGRDel_count_f1_f2['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f2['Percent-2022'] = Concat_RegGRDel_count_f1_f2['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f2['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f2['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f2['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f2['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f2 = Concat_RegGRDel_count_f1_f2.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f2['Total-2023'] = Concat_RegGRDel_count_f1_f2['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f2['Percent-2023'] = Concat_RegGRDel_count_f1_f2['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f2['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f2['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f2['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f2['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f2 = Conct_AC_RT_GRDel_f1_f2.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f2['Total-2018'] = Conct_AC_RT_GRDel_f1_f2['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f2['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f2['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f2['Percent-2018'] = Conct_AC_RT_GRDel_f1_f2['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f2['RET-2018'] = Conct_AC_RT_GRDel_f1_f2['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f2['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f2['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f2['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f2['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f2 = Conct_AC_RT_GRDel_f1_f2.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f2['Total-2019'] = Conct_AC_RT_GRDel_f1_f2['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f2['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f2['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f2['Percent-2019'] = Conct_AC_RT_GRDel_f1_f2['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f2['RET-2019'] = Conct_AC_RT_GRDel_f1_f2['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f2['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f2['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f2['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f2['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f2 = Conct_AC_RT_GRDel_f1_f2.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f2['Total-2021'] = Conct_AC_RT_GRDel_f1_f2['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f2['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f2['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f2['Percent-2021'] = Conct_AC_RT_GRDel_f1_f2['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f2['RET-2021'] = Conct_AC_RT_GRDel_f1_f2['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f2['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f2['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f2['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f2['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f2 = Conct_AC_RT_GRDel_f1_f2.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f2['Total-2022'] = Conct_AC_RT_GRDel_f1_f2['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f2['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f2['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f2['Percent-2022'] = Conct_AC_RT_GRDel_f1_f2['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f2['RET-2022'] = Conct_AC_RT_GRDel_f1_f2['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f2['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f2['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f2['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f2['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f2 = Conct_AC_RT_GRDel_f1_f2.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f2['Total-2023'] = Conct_AC_RT_GRDel_f1_f2['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f2['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f2['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f2['Percent-2023'] = Conct_AC_RT_GRDel_f1_f2['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f2['RET-2023'] = Conct_AC_RT_GRDel_f1_f2['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f2['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f2['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f2['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f2['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f2 = Conct_RV_GRDel_f1_f2.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f2['Total-2017'] = Conct_RV_GRDel_f1_f2['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f2['Percent-2017'] = Conct_RV_GRDel_f1_f2['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f2['7DEvolution-2017'] = Conct_RV_GRDel_f1_f2['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f2['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f2['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f2 = Conct_RV_GRDel_f1_f2.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f2['Total-2018'] = Conct_RV_GRDel_f1_f2['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f2['Percent-2018'] = Conct_RV_GRDel_f1_f2['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f2['7DEvolution-2018'] = Conct_RV_GRDel_f1_f2['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f2['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f2['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f2 = Conct_RV_GRDel_f1_f2.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f2['Total-2019'] = Conct_RV_GRDel_f1_f2['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f2['Percent-2019'] = Conct_RV_GRDel_f1_f2['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f2['7DEvolution-2019'] = Conct_RV_GRDel_f1_f2['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f2['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f2['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f2 = Conct_RV_GRDel_f1_f2.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f2['Total-2022'] = Conct_RV_GRDel_f1_f2['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f2['Percent-2022'] = Conct_RV_GRDel_f1_f2['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f2['7DEvolution-2022'] = Conct_RV_GRDel_f1_f2['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f2['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f2['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f2 = Conct_RV_GRDel_f1_f2.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f2['Total-2023'] = Conct_RV_GRDel_f1_f2['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f2['Percent-2023'] = Conct_RV_GRDel_f1_f2['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f2['7DEvolution-2023'] = Conct_RV_GRDel_f1_f2['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f2['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f2['Total-2017'],errors='coerce')
df_Profile_Count_m2_f2 = df_Profile_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f2['Total-2017'] = df_Profile_Count_m2_f2['Total-2017'].astype(int)
df_Profile_Count_m2_f2['Percent-2017'] = df_Profile_Count_m2_f2['Percent-2017'].astype(float)

df_Profile_Count_m2_f2['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f2['Total-2018'],errors='coerce')
df_Profile_Count_m2_f2 = df_Profile_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f2['Total-2018'] = df_Profile_Count_m2_f2['Total-2018'].astype(int)
df_Profile_Count_m2_f2['Percent-2018'] = df_Profile_Count_m2_f2['Percent-2018'].astype(float)

df_Profile_Count_m2_f2['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f2['Total-2019'],errors='coerce')
df_Profile_Count_m2_f2 = df_Profile_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f2['Total-2019'] = df_Profile_Count_m2_f2['Total-2019'].astype(int)
df_Profile_Count_m2_f2['Percent-2019'] = df_Profile_Count_m2_f2['Percent-2019'].astype(float)

df_Profile_Count_m2_f2['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f2['Total-2021'],errors='coerce')
df_Profile_Count_m2_f2 = df_Profile_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f2['Total-2021'] = df_Profile_Count_m2_f2['Total-2021'].astype(int)
df_Profile_Count_m2_f2['Percent-2021'] = df_Profile_Count_m2_f2['Percent-2021'].astype(float)

df_Profile_Count_m2_f2['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f2['Total-2022'],errors='coerce')
df_Profile_Count_m2_f2 = df_Profile_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f2['Total-2022'] = df_Profile_Count_m2_f2['Total-2022'].astype(int)
df_Profile_Count_m2_f2['Percent-2022'] = df_Profile_Count_m2_f2['Percent-2022'].astype(float)

df_Profile_Count_m2_f2['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f2['Total-2023'],errors='coerce')
df_Profile_Count_m2_f2 = df_Profile_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f2['Total-2023'] = df_Profile_Count_m2_f2['Total-2023'].astype(int)
df_Profile_Count_m2_f2['Percent-2023'] = df_Profile_Count_m2_f2['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f2['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f2['Total-2017'],errors='coerce')
df_Pass_Count_m2_f2 = df_Pass_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f2['Total-2017'] = df_Pass_Count_m2_f2['Total-2017'].astype(int)
df_Pass_Count_m2_f2['Percent-2017'] = df_Pass_Count_m2_f2['Percent-2017'].astype(float)

df_Pass_Count_m2_f2['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f2['Total-2018'],errors='coerce')
df_Pass_Count_m2_f2 = df_Pass_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f2['Total-2018'] = df_Pass_Count_m2_f2['Total-2018'].astype(int)
df_Pass_Count_m2_f2['Percent-2018'] = df_Pass_Count_m2_f2['Percent-2018'].astype(float)

df_Pass_Count_m2_f2['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f2['Total-2019'],errors='coerce')
df_Pass_Count_m2_f2 = df_Pass_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f2['Total-2019'] = df_Pass_Count_m2_f2['Total-2019'].astype(int)
df_Pass_Count_m2_f2['Percent-2019'] = df_Pass_Count_m2_f2['Percent-2019'].astype(float)

df_Pass_Count_m2_f2['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f2['Total-2021'],errors='coerce')
df_Pass_Count_m2_f2 = df_Pass_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f2['Total-2021'] = df_Pass_Count_m2_f2['Total-2021'].astype(int)
df_Pass_Count_m2_f2['Percent-2021'] = df_Pass_Count_m2_f2['Percent-2021'].astype(float)

df_Pass_Count_m2_f2['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f2['Total-2022'],errors='coerce')
df_Pass_Count_m2_f2 = df_Pass_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f2['Total-2022'] = df_Pass_Count_m2_f2['Total-2022'].astype(int)
df_Pass_Count_m2_f2['Percent-2022'] = df_Pass_Count_m2_f2['Percent-2022'].astype(float)

df_Pass_Count_m2_f2['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f2['Total-2023'],errors='coerce')
df_Pass_Count_m2_f2 = df_Pass_Count_m2_f2.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f2['Total-2023'] = df_Pass_Count_m2_f2['Total-2023'].astype(int)
df_Pass_Count_m2_f2['Percent-2023'] = df_Pass_Count_m2_f2['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f2['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f2['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f2 = dfAttendees_Country_Count_m2_f2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f2['Total-2017'] = dfAttendees_Country_Count_m2_f2['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f2['Percent-2017'] = dfAttendees_Country_Count_m2_f2['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f2['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f2['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f2 = dfAttendees_Country_Count_m2_f2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f2['Total-2018'] = dfAttendees_Country_Count_m2_f2['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f2['Percent-2018'] = dfAttendees_Country_Count_m2_f2['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f2['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f2['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f2 = dfAttendees_Country_Count_m2_f2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f2['Total-2019'] = dfAttendees_Country_Count_m2_f2['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f2['Percent-2019'] = dfAttendees_Country_Count_m2_f2['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f2['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f2['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f2 = dfAttendees_Country_Count_m2_f2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f2['Total-2021'] = dfAttendees_Country_Count_m2_f2['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f2['Percent-2021'] = dfAttendees_Country_Count_m2_f2['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f2['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f2['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f2 = dfAttendees_Country_Count_m2_f2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f2['Total-2022'] = dfAttendees_Country_Count_m2_f2['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f2['Percent-2022'] = dfAttendees_Country_Count_m2_f2['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f2['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f2['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f2 = dfAttendees_Country_Count_m2_f2.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f2['Total-2023'] = dfAttendees_Country_Count_m2_f2['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f2['Percent-2023'] = dfAttendees_Country_Count_m2_f2['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f2['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f2['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f2 = df_ATTENDEES_AREAS_count_m2_f2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f2['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f2['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f2['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f2['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f2['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f2['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f2 = df_ATTENDEES_AREAS_count_m2_f2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f2['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f2['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f2['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f2['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f2['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f2['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f2 = df_ATTENDEES_AREAS_count_m2_f2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f2['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f2['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f2['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f2['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f2['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f2['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f2 = df_ATTENDEES_AREAS_count_m2_f2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f2['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f2['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f2['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f2['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f2['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f2['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f2 = df_ATTENDEES_AREAS_count_m2_f2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f2['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f2['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f2['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f2['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f2['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f2['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f2 = df_ATTENDEES_AREAS_count_m2_f2.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f2['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f2['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f2['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f2['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f2['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f2['Total-2017'],errors='coerce')
df_Specialty_count_m2_f2 = df_Specialty_count_m2_f2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f2['Total-2017'] = df_Specialty_count_m2_f2['Total-2017'].astype(int)
df_Specialty_count_m2_f2['Percent-2017'] = df_Specialty_count_m2_f2['Percent-2017'].astype(float)

df_Specialty_count_m2_f2['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f2['Total-2018'],errors='coerce')
df_Specialty_count_m2_f2 = df_Specialty_count_m2_f2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f2['Total-2018'] = df_Specialty_count_m2_f2['Total-2018'].astype(int)
df_Specialty_count_m2_f2['Percent-2018'] = df_Specialty_count_m2_f2['Percent-2018'].astype(float)

df_Specialty_count_m2_f2['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f2['Total-2019'],errors='coerce')
df_Specialty_count_m2_f2 = df_Specialty_count_m2_f2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f2['Total-2019'] = df_Specialty_count_m2_f2['Total-2019'].astype(int)
df_Specialty_count_m2_f2['Percent-2019'] = df_Specialty_count_m2_f2['Percent-2019'].astype(float)

df_Specialty_count_m2_f2['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f2['Total-2021'],errors='coerce')
df_Specialty_count_m2_f2 = df_Specialty_count_m2_f2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f2['Total-2021'] = df_Specialty_count_m2_f2['Total-2021'].astype(int)
df_Specialty_count_m2_f2['Percent-2021'] = df_Specialty_count_m2_f2['Percent-2021'].astype(float)

df_Specialty_count_m2_f2['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f2['Total-2022'],errors='coerce')
df_Specialty_count_m2_f2 = df_Specialty_count_m2_f2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f2['Total-2022'] = df_Specialty_count_m2_f2['Total-2022'].astype(int)
df_Specialty_count_m2_f2['Percent-2022'] = df_Specialty_count_m2_f2['Percent-2022'].astype(float)

df_Specialty_count_m2_f2['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f2['Total-2023'],errors='coerce')
df_Specialty_count_m2_f2 = df_Specialty_count_m2_f2.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f2['Total-2023'] = df_Specialty_count_m2_f2['Total-2023'].astype(int)
df_Specialty_count_m2_f2['Percent-2023'] = df_Specialty_count_m2_f2['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f2.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f2.dtypes)
#print(df_Specialty_count_m2_f2.dtypes)

#print(dfAttendees_Country_Count_m2_f2.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f2.dtypes)
#print(df_Specialty_count_m2_f2.dtypes)

# EXCEL FILE
writerf2 = pd.ExcelWriter(outputExcelFile_f2, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f2.to_excel\
    (writerf2, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f2.to_excel\
    (writerf2, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f2.to_excel\
    (writerf2, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f2.to_excel\
    (writerf2, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f2.to_excel\
    (writerf2, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f2.to_excel\
    (writerf2, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f2.to_excel\
    (writerf2, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f2.to_excel\
    (writerf2, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f2.to_excel\
    (writerf2, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f2.to_excel\
    (writerf2, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f2.to_excel\
    (writerf2, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf2.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f2)

workbook.save(outputExcelFile_f2)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 182 days**********************************************')
print('************************************End of 182 days**********************************************')
print('************************************End of 182 days**********************************************')
print('************************************End of 182 days**********************************************')
print('************************************End of 182 days**********************************************')
print('************************************End of 182 days**********************************************')
print('************************************End of 182 days**********************************************')
print('************************************End of 182 days**********************************************')
print('************************************End of 182 days**********************************************')

#unit 1
#Total Number of Registrations
dfd17_f3_Registrations_count = pd.DataFrame(filter_3_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f3_Registrations_count = dfd17_f3_Registrations_count.fillna('Unknown')
dfd17_f3_Registrations_count['Percent-2017'] = (dfd17_f3_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f3_Registrations_count['Percent-2017'] = dfd17_f3_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f3_Registrations_count['7DEvolution-2017'] = dfd17_f3_Registrations_count['Total-2017'] - dfd17_f2_Registrations_count['Total-2017']
#print(tab(dfd17_f3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f3_Registrations_count = pd.DataFrame(filter_3_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f3_Registrations_count = dfd18_f3_Registrations_count.fillna('Unknown')
dfd18_f3_Registrations_count['Percent-2018'] = (dfd18_f3_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f3_Registrations_count['Percent-2018'] = dfd18_f3_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f3_Registrations_count['7DEvolution-2018'] = dfd18_f3_Registrations_count['Total-2018'] - dfd18_f2_Registrations_count['Total-2018']
#print(tab(dfd18_f3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f3_Registrations_count = pd.DataFrame(filter_3_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f3_Registrations_count = dfd19_f3_Registrations_count.fillna('Unknown')
dfd19_f3_Registrations_count['Percent-2019'] = (dfd19_f3_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f3_Registrations_count['Percent-2019'] = dfd19_f3_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f3_Registrations_count['7DEvolution-2019'] = dfd19_f3_Registrations_count['Total-2019'] - dfd19_f2_Registrations_count['Total-2019']
#print(tab(dfd19_f3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f3_Registrations_count = pd.DataFrame(filter_3_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f3_Registrations_count = dfd21_f3_Registrations_count.fillna('Unknown')
dfd21_f3_Registrations_count['Percent-2021'] = (dfd21_f3_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f3_Registrations_count['Percent-2021'] = dfd21_f3_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f3_Registrations_count['7DEvolution-2021'] = dfd21_f3_Registrations_count['Total-2021'] - dfd21_f2_Registrations_count['Total-2021']
#print(tab(dfd21_f3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f3_Registrations_count = pd.DataFrame(filter_3_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f3_Registrations_count = dfd22_f3_Registrations_count.fillna('Unknown')
dfd22_f3_Registrations_count['Percent-2022'] = (dfd22_f3_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f3_Registrations_count['Percent-2022'] = dfd22_f3_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f3_Registrations_count['7DEvolution-2022'] = dfd22_f3_Registrations_count['Total-2022'] - dfd22_f2_Registrations_count['Total-2022']
print(tab(dfd22_f3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_Registrations_count = pd.DataFrame(filter_3_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f3_Registrations_count = dfd23_f3_Registrations_count.fillna('Unknown')
dfd23_f3_Registrations_count['Percent-2023'] = (dfd23_f3_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f3_Registrations_count['Percent-2023'] = dfd23_f3_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f3_Registrations_count['7DEvolution-2023'] = dfd23_f3_Registrations_count['Total-2023'] - dfd23_f2_Registrations_count['Total-2023']
#print(tab(dfd23_f3_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f3_RegistrationsEvolution_count = pd.DataFrame(filter_3_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f3_RegistrationsEvolution_count = dfd23_f3_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f3_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f3_Registrations_count['Total-2023'] - dfd19_f3_Registrations_count['Total-2019'])/ dfd19_f3_Registrations_count['Total-2019'].sum()) * 100
dfd23_f3_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f3_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f3_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f3 = pd.DataFrame(pd.merge(dfd17_f3_Registrations_count, dfd18_f3_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f3 = pd.DataFrame(pd.merge(dfd19_f3_Registrations_count, dfd21_f3_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f3 = pd.DataFrame(pd.merge(dfd22_f3_Registrations_count, dfd23_f3_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f3 = pd.DataFrame(pd.merge(df_Registrations_count_1_f3, df_Registrations_count_2_f3, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f3 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f3, df_Registrations_count_3_f3, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f3 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f3, dfd23_f3_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f3 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3]
Concat_Registrations_count_f1_f3 = pd.concat(ConcatFrames_Registrations_count_f1_f3)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f3  = ConcatFrames_Registrations_count_f1_f3.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f3.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f3 = filter_3_df18[filter_3_df18['New customer'] == 1]
df_NewCustomer_df19_f3 = filter_3_df19[filter_3_df19['New customer'] == 1]
df_NewCustomer_df21_f3 = filter_3_df21[filter_3_df21['New customer'] == 1]
df_NewCustomer_df22_f3 = filter_3_df22[filter_3_df22['New customer'] == 1]
df_NewCustomer_df23_f3 = filter_3_df23[filter_3_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f3.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f3.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f3.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a3_ACQRET_count = pd.DataFrame(filter_3_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f3_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f3.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f3_ACQRET_count['Percent-2018'] = (dfd18_f3_ACQRET_count['ACQ-2018'] / dfd18_f3_Registrations_count['Total-2018'].sum()) * 100
dfd18_f3_ACQRET_count['Percent-2018'] = dfd18_f3_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f3_ACQRET_count['RET-2018'] = dfd18_a3_ACQRET_count['Total-2018'] - dfd18_f3_ACQRET_count['ACQ-2018']
dfd18_f3_ACQRET_count['Percnt-2018'] = (dfd18_f3_ACQRET_count['RET-2018'] / dfd18_a3_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f3_ACQRET_count['Percnt-2018'] = dfd18_f3_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f3_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a3_ACQRET_count = pd.DataFrame(filter_3_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f3_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f3.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f3_ACQRET_count['Percent-2019'] = (dfd19_f3_ACQRET_count['ACQ-2019'] / dfd19_f3_Registrations_count['Total-2019'].sum()) * 100
dfd19_f3_ACQRET_count['Percent-2019'] = dfd19_f3_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f3_ACQRET_count['RET-2019'] = dfd19_a3_ACQRET_count['Total-2019'] - dfd19_f3_ACQRET_count['ACQ-2019']
dfd19_f3_ACQRET_count['Percnt-2019'] = (dfd19_f3_ACQRET_count['RET-2019'] / dfd19_a3_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f3_ACQRET_count['Percnt-2019'] = dfd19_f3_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f3_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a3_ACQRET_count = pd.DataFrame(filter_3_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f3_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f3.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f3_ACQRET_count['Percent-2021'] = (dfd21_f3_ACQRET_count['ACQ-2021'] / dfd21_f3_Registrations_count['Total-2021'].sum()) * 100
dfd21_f3_ACQRET_count['Percent-2021'] = dfd21_f3_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f3_ACQRET_count['RET-2021'] = dfd21_a3_ACQRET_count['Total-2021'] - dfd21_f3_ACQRET_count['ACQ-2021']
dfd21_f3_ACQRET_count['Percnt-2021'] = (dfd21_f3_ACQRET_count['RET-2021'] / dfd21_a3_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f3_ACQRET_count['Percnt-2021'] = dfd21_f3_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f3_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a3_ACQRET_count = pd.DataFrame(filter_3_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f3_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f3.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f3_ACQRET_count['Percent-2022'] = (dfd22_f3_ACQRET_count['ACQ-2022'] / dfd22_f3_Registrations_count['Total-2022'].sum()) * 100
dfd22_f3_ACQRET_count['Percent-2022'] = dfd22_f3_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f3_ACQRET_count['RET-2022'] = dfd22_a3_ACQRET_count['Total-2022'] - dfd22_f3_ACQRET_count['ACQ-2022']
dfd22_f3_ACQRET_count['Percnt-2022'] = (dfd22_f3_ACQRET_count['RET-2022'] / dfd22_a3_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f3_ACQRET_count['Percnt-2022'] = dfd22_f3_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f3_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a3_ACQRET_count = pd.DataFrame(filter_3_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f3_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f3.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f3_ACQRET_count['Percent-2023'] = (dfd23_f3_ACQRET_count['ACQ-2023'] / dfd23_f3_Registrations_count['Total-2023'].sum()) * 100
dfd23_f3_ACQRET_count['Percent-2023'] = dfd23_f3_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f3_ACQRET_count['RET-2023'] = dfd23_a3_ACQRET_count['Total-2023'] - dfd23_f3_ACQRET_count['ACQ-2023']
dfd23_f3_ACQRET_count['Percnt-2023'] = (dfd23_f3_ACQRET_count['RET-2023'] / dfd23_a3_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f3_ACQRET_count['Percnt-2023'] = dfd23_f3_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f3_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f3 = pd.DataFrame(pd.merge(dfd18_a3_ACQRET_count, dfd18_f3_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f3 = pd.DataFrame(pd.merge(dfd19_a3_ACQRET_count, dfd19_f3_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f3 = pd.DataFrame(pd.merge(dfd21_a3_ACQRET_count, dfd21_f3_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f3 = pd.DataFrame(pd.merge(dfd22_a3_ACQRET_count, dfd22_f3_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_5_f3 = pd.DataFrame(pd.merge(dfd23_a3_ACQRET_count, dfd23_f3_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_5_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f3 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f3, df_ACQRET_count_2_f3, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f3 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f3, df_ACQRET_count_3_f3, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f3 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f3, df_ACQRET_count_4_f3, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f3 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f3, df_ACQRET_count_5_f3, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f3 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3]
Concat_ACQRET_count_f1_f3 = pd.concat(ConcatFrames_ACQRET_count_f1_f3)
#print(tab(Concat_ACQRET_count_f1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f3 = Concat_ACQRET_count_f1_f3[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f3_Revenue_calc = pd.DataFrame(filter_3_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f3_Revenue_calc['Percent-2017'] = (dfd17_f3_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f3_Revenue_calc['Percent-2017'] = dfd17_f3_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f3_Revenue_calc['7DEvolution-2017'] = dfd17_f3_Revenue_calc['Total-2017'] - dfd17_f2_Revenue_calc['Total-2017']
#print(tab(dfd17_f3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f3_Revenue_calc = pd.DataFrame(filter_3_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f3_Revenue_calc['Percent-2018'] = (dfd18_f3_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f3_Revenue_calc['Percent-2018'] = dfd18_f3_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f3_Revenue_calc['7DEvolution-2018'] = dfd18_f3_Revenue_calc['Total-2018'] - dfd18_f2_Revenue_calc['Total-2018']
#print(tab(dfd18_f3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f3_Revenue_calc = pd.DataFrame(filter_3_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f3_Revenue_calc['Percent-2019'] = (dfd19_f3_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f3_Revenue_calc['Percent-2019'] = dfd19_f3_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f3_Revenue_calc['7DEvolution-2019'] = dfd19_f3_Revenue_calc['Total-2019'] - dfd19_f2_Revenue_calc['Total-2019']
#print(tab(dfd19_f3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f3_Revenue_calc = pd.DataFrame(filter_3_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f3_Revenue_calc['Percent-2021'] = (dfd21_f3_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f3_Revenue_calc['Percent-2021'] = dfd21_f3_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f3_Revenue_calc['7DEvolution-2021'] = dfd21_f3_Revenue_calc['Total-2021'] - dfd21_f2_Revenue_calc['Total-2021']
#print(tab(dfd21_f3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f3_Revenue_calc = pd.DataFrame(filter_3_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f3_Revenue_calc['Percent-2022'] = (dfd22_f3_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f3_Revenue_calc['Percent-2022'] = dfd22_f3_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f3_Revenue_calc['7DEvolution-2022'] = dfd22_f3_Revenue_calc['Total-2022'] - dfd22_f2_Revenue_calc['Total-2022']
#print(tab(dfd22_f3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_Revenue_calc = pd.DataFrame(filter_3_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f3_Revenue_calc['Percent-2023'] = (dfd23_f3_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f3_Revenue_calc['Percent-2023'] = dfd23_f3_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f3_Revenue_calc['7DEvolution-2023'] = dfd23_f3_Revenue_calc['Total-2023'] - dfd23_f2_Revenue_calc['Total-2023']
#print(tab(dfd23_f3_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f3_RevenueEvolution_calc = pd.DataFrame(filter_3_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f3_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f3_Revenue_calc['Total-2023'] - dfd19_f3_Revenue_calc['Total-2019'])/ dfd19_f3_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f3_RevenueEvolution_calc['Evolution-2023'] = dfd23_f3_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f3_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f3 = pd.DataFrame(pd.merge(dfd17_f3_Revenue_calc, dfd18_f3_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f3 = pd.DataFrame(pd.merge(dfd19_f3_Revenue_calc, dfd21_f3_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f3 = pd.DataFrame(pd.merge(dfd22_f3_Revenue_calc, dfd23_f3_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f3_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f3, df_Revenue_calc_2_f3, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f3Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f3_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f3_Evolution, df_Revenue_calc_3_f3, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f3Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f3 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f3_Evolution, dfd23_f3_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f3 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3]
Concat_REV_count_f1_f3 = pd.concat(ConcatFrames_REV_count_f1_f3)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2
#unit 2!!!!!!!!!!!!!!!!!!!!!!!!
#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f3_Registrations_GRDel = pd.DataFrame(filtr_3_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f3_Registrations_GRDel = dfd17_f3_Registrations_GRDel.fillna('Unknown')
dfd17_f3_Registrations_GRDel['Percent-2017'] = (dfd17_f3_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f3_Registrations_GRDel['Percent-2017'] = dfd17_f3_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f3_Registrations_GRDel['7DEvolution-2017'] = dfd17_f3_Registrations_GRDel['Total-2017'] - dfd17_f2_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f3_Registrations_GRDel = pd.DataFrame(filtr_3_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f3_Registrations_GRDel = dfd18_f3_Registrations_GRDel.fillna('Unknown')
dfd18_f3_Registrations_GRDel['Percent-2018'] = (dfd18_f3_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f3_Registrations_GRDel['Percent-2018'] = dfd18_f3_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f3_Registrations_GRDel['7DEvolution-2018'] = dfd18_f3_Registrations_GRDel['Total-2018'] - dfd18_f2_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f3_Registrations_GRDel = pd.DataFrame(filtr_3_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f3_Registrations_GRDel = dfd19_f3_Registrations_GRDel.fillna('Unknown')
dfd19_f3_Registrations_GRDel['Percent-2019'] = (dfd19_f3_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f3_Registrations_GRDel['Percent-2019'] = dfd19_f3_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f3_Registrations_GRDel['7DEvolution-2019'] = dfd19_f3_Registrations_GRDel['Total-2019'] - dfd19_f2_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f3_Registrations_GRDel = pd.DataFrame(filtr_3_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f3_Registrations_GRDel = dfd21_f3_Registrations_GRDel.fillna('Unknown')
dfd21_f3_Registrations_GRDel['Percent-2021'] = (dfd21_f3_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f3_Registrations_GRDel['Percent-2021'] = dfd21_f3_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f3_Registrations_GRDel['7DEvolution-2021'] = dfd21_f3_Registrations_GRDel['Total-2021'] - dfd21_f2_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f3_Registrations_GRDel = pd.DataFrame(filtr_3_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f3_Registrations_GRDel = dfd22_f3_Registrations_GRDel.fillna('Unknown')
dfd22_f3_Registrations_GRDel['Percent-2022'] = (dfd22_f3_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f3_Registrations_GRDel['Percent-2022'] = dfd22_f3_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f3_Registrations_GRDel['7DEvolution-2022'] = dfd22_f3_Registrations_GRDel['Total-2022'] - dfd22_f2_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_Registrations_GRDel = pd.DataFrame(filtr_3_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f3_Registrations_GRDel = dfd23_f3_Registrations_GRDel.fillna('Unknown')
dfd23_f3_Registrations_GRDel['Percent-2023'] = (dfd23_f3_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f3_Registrations_GRDel['Percent-2023'] = dfd23_f3_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f3_Registrations_GRDel['7DEvolution-2023'] = dfd23_f3_Registrations_GRDel['Total-2023'] - dfd23_f2_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f3_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f3_Registrations_Evol_GRDel = pd.DataFrame(filtr_3_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f3_Registrations_Evol_GRDel = dfd23_f3_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f3_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f3_Registrations_GRDel['Total-2023'] - dfd19_f3_Registrations_GRDel['Total-2019'])/ dfd19_f3_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f3_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f3 = pd.concat([dfd17_f3_Registrations_GRDel, dfd18_f3_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f3 = pd.DataFrame(pd.merge(dfd17_f3_Registrations_GRDel, dfd18_f3_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f3 = pd.DataFrame(pd.merge(dfd19_f3_Registrations_GRDel, dfd21_f3_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f3 = pd.DataFrame(pd.merge(dfd22_f3_Registrations_GRDel, dfd23_f3_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f3 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f3, df_Registrations_GRDel_2_f3, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_5_f3 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f3, df_Registrations_GRDel_3_f3, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f3 = pd.DataFrame(pd.merge(df_Registrations_GRDel_5_f3, dfd23_f3_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f3 = df_Registrations_GRDel_f3[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f3 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3]
Concat_RegGRDel_count_f1_f3 = pd.concat(ConcatFrames_RegGRDel_count_f1_f3)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f3 = filtr_3_df18_GRdel[filtr_3_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f3 = filtr_3_df19_GRdel[filtr_3_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f3 = filtr_3_df21_GRdel[filtr_3_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f3 = filtr_3_df22_GRdel[filtr_3_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f3 = filtr_3_df23_GRdel[filtr_3_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f3.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f3.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a3_AC_RT_GRDel = pd.DataFrame(filtr_3_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f3_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f3.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f3_AC_RT_GRDel['Percent-2018'] = (dfd18_f3_AC_RT_GRDel['ACQ-2018'] / dfd18_f3_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f3_AC_RT_GRDel['Percent-2018'] = dfd18_f3_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f3_AC_RT_GRDel['RET-2018'] = dfd18_a3_AC_RT_GRDel['Total-2018'] - dfd18_f3_AC_RT_GRDel['ACQ-2018']
dfd18_f3_AC_RT_GRDel['Percnt-2018'] = (dfd18_f3_AC_RT_GRDel['RET-2018'] / dfd18_a3_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f3_AC_RT_GRDel['Percnt-2018'] = dfd18_f3_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f3_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a3_AC_RT_GRDel = pd.DataFrame(filtr_3_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f3_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f3.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f3_AC_RT_GRDel['Percent-2019'] = (dfd19_f3_AC_RT_GRDel['ACQ-2019'] / dfd19_f3_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f3_AC_RT_GRDel['Percent-2019'] = dfd19_f3_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f3_AC_RT_GRDel['RET-2019'] = dfd19_a3_AC_RT_GRDel['Total-2019'] - dfd19_f3_AC_RT_GRDel['ACQ-2019']
dfd19_f3_AC_RT_GRDel['Percnt-2019'] = (dfd19_f3_AC_RT_GRDel['RET-2019'] / dfd19_a3_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f3_AC_RT_GRDel['Percnt-2019'] = dfd19_f3_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f3_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a3_AC_RT_GRDel = pd.DataFrame(filtr_3_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f3_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f3.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f3_AC_RT_GRDel['Percent-2021'] = (dfd21_f3_AC_RT_GRDel['ACQ-2021'] / dfd21_f3_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f3_AC_RT_GRDel['Percent-2021'] = dfd21_f3_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f3_AC_RT_GRDel['RET-2021'] = dfd21_a3_AC_RT_GRDel['Total-2021'] - dfd21_f3_AC_RT_GRDel['ACQ-2021']
dfd21_f3_AC_RT_GRDel['Percnt-2021'] = (dfd21_f3_AC_RT_GRDel['RET-2021'] / dfd21_a3_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f3_AC_RT_GRDel['Percnt-2021'] = dfd21_f3_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f3_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a3_AC_RT_GRDel = pd.DataFrame(filtr_3_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f3_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f3.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f3_AC_RT_GRDel['Percent-2022'] = (dfd22_f3_AC_RT_GRDel['ACQ-2022'] / dfd22_f3_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f3_AC_RT_GRDel['Percent-2022'] = dfd22_f3_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f3_AC_RT_GRDel['RET-2022'] = dfd22_a3_AC_RT_GRDel['Total-2022'] - dfd22_f3_AC_RT_GRDel['ACQ-2022']
dfd22_f3_AC_RT_GRDel['Percnt-2022'] = (dfd22_f3_AC_RT_GRDel['RET-2022'] / dfd22_a3_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f3_AC_RT_GRDel['Percnt-2022'] = dfd22_f3_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f3_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a3_AC_RT_GRDel = pd.DataFrame(filtr_3_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f3_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f3.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f3_AC_RT_GRDel['Percent-2023'] = (dfd23_f3_AC_RT_GRDel['ACQ-2023'] / dfd23_f3_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f3_AC_RT_GRDel['Percent-2023'] = dfd23_f3_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f3_AC_RT_GRDel['RET-2023'] = dfd23_a3_AC_RT_GRDel['Total-2023'] - dfd23_f3_AC_RT_GRDel['ACQ-2023']
dfd23_f3_AC_RT_GRDel['Percnt-2023'] = (dfd23_f3_AC_RT_GRDel['RET-2023'] / dfd23_a3_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f3_AC_RT_GRDel['Percnt-2023'] = dfd23_f3_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f3_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f3 = pd.DataFrame(pd.merge_ordered(dfd18_a3_AC_RT_GRDel, dfd18_f3_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f3 = pd.DataFrame(pd.merge_ordered(dfd19_a3_AC_RT_GRDel, dfd19_f3_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f3 = pd.DataFrame(pd.merge_ordered(dfd21_a3_AC_RT_GRDel, dfd21_f3_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f3 = pd.DataFrame(pd.merge_ordered(dfd22_a3_AC_RT_GRDel, dfd22_f3_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_5_f3 = pd.DataFrame(pd.merge_ordered(dfd23_a3_AC_RT_GRDel, dfd23_f3_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f3 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f3, df_AC_ET_GRDel_2_f3, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f3 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f3, df_AC_ET_GRDel_3_f3, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f3 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f3, df_AC_ET_GRDel_4_f3, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f3 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f3, df_AC_ET_GRDel_5_f3, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f3 = df_AC_RT_GRDel_M4_f3[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f3 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3]
Conct_AC_RT_GRDel_f1_f3 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f3)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_3_df17_GRdel = filtr_3_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f3_Revenu_GRDel = pd.DataFrame(filtr_3_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f3_Revenu_GRDel['Percent-2017'] = (dfd17_f3_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f3_Revenu_GRDel['Percent-2017'] = dfd17_f3_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f3_Revenu_GRDel['7DEvolution-2017'] = dfd17_f3_Revenu_GRDel['Total-2017'] - dfd17_f2_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_3_df18_GRdel = filtr_3_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f3_Revenu_GRDel = pd.DataFrame(filtr_3_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f3_Revenu_GRDel['Percent-2018'] = (dfd18_f3_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f3_Revenu_GRDel['Percent-2018'] = dfd18_f3_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f3_Revenu_GRDel['7DEvolution-2018'] = dfd18_f3_Revenu_GRDel['Total-2018'] - dfd18_f2_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_3_df19_GRdel = filtr_3_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f3_Revenu_GRDel = pd.DataFrame(filtr_3_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f3_Revenu_GRDel['Percent-2019'] = (dfd19_f3_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f3_Revenu_GRDel['Percent-2019'] = dfd19_f3_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f3_Revenu_GRDel['7DEvolution-2019'] = dfd19_f3_Revenu_GRDel['Total-2019'] - dfd19_f2_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_3_df21_GRdel = filtr_3_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f3_Revenu_GRDel = pd.DataFrame(filtr_3_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f3_Revenu_GRDel['Percent-2021'] = (dfd21_f3_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f3_Revenu_GRDel['Percent-2021'] = dfd21_f3_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f3_Revenu_GRDel['7DEvolution-2021'] = dfd21_f3_Revenu_GRDel['Total-2021'] - dfd21_f2_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_3_df22_GRdel = filtr_3_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f3_Revenu_GRDel = pd.DataFrame(filtr_3_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f3_Revenu_GRDel['Percent-2022'] = (dfd22_f3_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f3_Revenu_GRDel['Percent-2022'] = dfd22_f3_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f3_Revenu_GRDel['7DEvolution-2022'] = dfd22_f3_Revenu_GRDel['Total-2022'] - dfd22_f2_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_3_df23_GRdel = filtr_3_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f3_Revenu_GRDel = pd.DataFrame(filtr_3_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f3_Revenu_GRDel['Percent-2023'] = (dfd23_f3_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f3_Revenu_GRDel['Percent-2023'] = dfd23_f3_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f3_Revenu_GRDel['7DEvolution-2023'] = dfd23_f3_Revenu_GRDel['Total-2023'] - dfd23_f2_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f3_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f3_Revenu_Evlt_GRDel = pd.DataFrame(filtr_3_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f3_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f3_Revenu_GRDel['Total-2023'] - dfd19_f3_Revenu_GRDel['Total-2019'])/ dfd19_f3_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f3_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f3_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f3_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f3 = pd.DataFrame(pd.merge(dfd17_f3_Revenu_GRDel, dfd18_f3_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f3 = pd.DataFrame(pd.merge(dfd19_f3_Revenu_GRDel, dfd21_f3_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f3 = pd.DataFrame(pd.merge(dfd22_f3_Revenu_GRDel, dfd23_f3_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f3 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f3, df_Revenu_GRDel_2_f3, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_5_f3 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f3, df_Revenu_GRDel_3_f3, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f3 = pd.DataFrame(pd.merge(df_Revenu_GRDel_5_f3, dfd23_f3_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f3 = df_Revenu_GRDel_f3[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f3 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3]
Conct_RV_GRDel_f1_f3 = pd.concat(ConcatFra_RV_GRDel_f1_f3)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f3_Profile_count = pd.DataFrame(filtr_3_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f3_Profile_count = dfd17_f3_Profile_count.fillna('Unknown')
dfd17_f3_Profile_count['Percent-2017'] = (dfd17_f3_Profile_count['Total-2017'] / dfd17_f3_Profile_count['Total-2017'].sum()) * 100
dfd17_f3_Profile_count['Percent-2017'] = dfd17_f3_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f3_Profile_count = pd.DataFrame(filtr_3_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f3_Profile_count = dfd18_f3_Profile_count.fillna('Unknown')
dfd18_f3_Profile_count['Percent-2018'] = (dfd18_f3_Profile_count['Total-2018'] / dfd18_f3_Profile_count['Total-2018'].sum()) * 100
dfd18_f3_Profile_count['Percent-2018'] = dfd18_f3_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f3_Profile_count = pd.DataFrame(filtr_3_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f3_Profile_count = dfd19_f3_Profile_count.fillna('Unknown')
dfd19_f3_Profile_count['Percent-2019'] = (dfd19_f3_Profile_count['Total-2019'] / dfd19_f3_Profile_count['Total-2019'].sum()) * 100
dfd19_f3_Profile_count['Percent-2019'] = dfd19_f3_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f3_Profile_count = pd.DataFrame(filtr_3_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f3_Profile_count = dfd21_f3_Profile_count.fillna('Unknown')
dfd21_f3_Profile_count['Percent-2021'] = (dfd21_f3_Profile_count['Total-2021'] / dfd21_f3_Profile_count['Total-2021'].sum()) * 100
dfd21_f3_Profile_count['Percent-2021'] = dfd21_f3_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f3_Profile_count = pd.DataFrame(filtr_3_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f3_Profile_count = dfd22_f3_Profile_count.fillna('Unknown')
dfd22_f3_Profile_count['Percent-2022'] = (dfd22_f3_Profile_count['Total-2022'] / dfd22_f3_Profile_count['Total-2022'].sum()) * 100
dfd22_f3_Profile_count['Percent-2022'] = dfd22_f3_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_Profile_count = pd.DataFrame(filtr_3_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f3_Profile_count = dfd23_f3_Profile_count.fillna('Unknown')
dfd23_f3_Profile_count['Percent-2023'] = (dfd23_f3_Profile_count['Total-2023'] / dfd23_f3_Profile_count['Total-2023'].sum()) * 100
dfd23_f3_Profile_count['Percent-2023'] = dfd23_f3_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f3_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f3 = pd.DataFrame(pd.merge(dfd17_f3_Profile_count, dfd18_f3_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f3 = pd.DataFrame(pd.merge(dfd19_f3_Profile_count, dfd21_f3_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f3 = pd.DataFrame(pd.merge(dfd22_f3_Profile_count, dfd23_f3_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f3 = pd.DataFrame(pd.merge(df_Profile_Count_1_f3, df_Profile_Count_2_f3, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f3 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f3, df_Profile_Count_3_f3, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f3 = df_Profile_Count_m2_f3.append(df_Profile_Count_m2_f3.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f3['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f3_Pass_count = pd.DataFrame(filtr_3_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f3_Pass_count = dfd17_f3_Pass_count.fillna('Unknown')
dfd17_f3_Pass_count['Percent-2017'] = (dfd17_f3_Pass_count['Total-2017'] / dfd17_f3_Pass_count['Total-2017'].sum()) * 100
dfd17_f3_Pass_count['Percent-2017'] = dfd17_f3_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f3_Pass_count = pd.DataFrame(filtr_3_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f3_Pass_count = dfd18_f3_Pass_count.fillna('Unknown')
dfd18_f3_Pass_count['Percent-2018'] = (dfd18_f3_Pass_count['Total-2018'] / dfd18_f3_Pass_count['Total-2018'].sum()) * 100
dfd18_f3_Pass_count['Percent-2018'] = dfd18_f3_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f3_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f3_Pass_count = pd.DataFrame(filtr_3_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f3_Pass_count = dfd19_f3_Pass_count.fillna('Unknown')
dfd19_f3_Pass_count['Percent-2019'] = (dfd19_f3_Pass_count['Total-2019'] / dfd19_f3_Pass_count['Total-2019'].sum()) * 100
dfd19_f3_Pass_count['Percent-2019'] = dfd19_f3_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f3_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f3_Pass_count = pd.DataFrame(filtr_3_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f3_Pass_count = dfd21_f3_Pass_count.fillna('Unknown')
dfd21_f3_Pass_count['Percent-2021'] = (dfd21_f3_Pass_count['Total-2021'] / dfd21_f3_Pass_count['Total-2021'].sum()) * 100
dfd21_f3_Pass_count['Percent-2021'] = dfd21_f3_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f3_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f3_Pass_count = pd.DataFrame(filtr_3_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f3_Pass_count = dfd22_f3_Pass_count.fillna('Unknown')
dfd22_f3_Pass_count['Percent-2022'] = (dfd22_f3_Pass_count['Total-2022'] / dfd22_f3_Pass_count['Total-2022'].sum()) * 100
dfd22_f3_Pass_count['Percent-2022'] = dfd22_f3_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f3_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_Pass_count = pd.DataFrame(filtr_3_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f3_Pass_count = dfd23_f3_Pass_count.fillna('Unknown')
dfd23_f3_Pass_count['Percent-2023'] = (dfd23_f3_Pass_count['Total-2023'] / dfd23_f3_Pass_count['Total-2023'].sum()) * 100
dfd23_f3_Pass_count['Percent-2023'] = dfd23_f3_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f3_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f3 = pd.DataFrame(pd.merge(dfd17_f3_Pass_count, dfd18_f3_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f3 = pd.DataFrame(pd.merge(dfd19_f3_Pass_count, dfd21_f3_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f3 = pd.DataFrame(pd.merge(dfd22_f3_Pass_count, dfd23_f3_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f3 = pd.DataFrame(pd.merge(df_Pass_Count_1_f3, df_Pass_Count_2_f3, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f3 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f3, df_Pass_Count_3_f3, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f3 = df_Pass_Count_m2_f3.append(df_Pass_Count_m2_f3.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f3['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f3_Attendees_Country_count = pd.DataFrame(filtr_3_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f3_Attendees_Country_count = dfd17_f3_Attendees_Country_count.fillna('Unknown')
dfd17_f3_Attendees_Country_count['Percent-2017'] = (dfd17_f3_Attendees_Country_count['Total-2017'] / dfd17_f3_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f3_Attendees_Country_count['Percent-2017'] = dfd17_f3_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f3_Attendees_Country_count = pd.DataFrame(filtr_3_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f3_Attendees_Country_count = dfd18_f3_Attendees_Country_count.fillna('Unknown')
dfd18_f3_Attendees_Country_count['Percent-2018'] = (dfd18_f3_Attendees_Country_count['Total-2018'] / dfd18_f3_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f3_Attendees_Country_count['Percent-2018'] = dfd18_f3_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f3_Attendees_Country_count = pd.DataFrame(filtr_3_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f3_Attendees_Country_count = dfd19_f3_Attendees_Country_count.fillna('Unknown')
dfd19_f3_Attendees_Country_count['Percent-2019'] = (dfd19_f3_Attendees_Country_count['Total-2019'] / dfd19_f3_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f3_Attendees_Country_count['Percent-2019'] = dfd19_f3_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f3_Attendees_Country_count = pd.DataFrame(filtr_3_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f3_Attendees_Country_count = dfd21_f3_Attendees_Country_count.fillna('Unknown')
dfd21_f3_Attendees_Country_count['Percent-2021'] = (dfd21_f3_Attendees_Country_count['Total-2021'] / dfd21_f3_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f3_Attendees_Country_count['Percent-2021'] = dfd21_f3_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f3_Attendees_Country_count = pd.DataFrame(filtr_3_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f3_Attendees_Country_count = dfd22_f3_Attendees_Country_count.fillna('Unknown')
dfd22_f3_Attendees_Country_count['Percent-2022'] = (dfd22_f3_Attendees_Country_count['Total-2022'] / dfd22_f3_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f3_Attendees_Country_count['Percent-2022'] = dfd22_f3_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_Attendees_Country_count = pd.DataFrame(filtr_3_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f3_Attendees_Country_count = dfd23_f3_Attendees_Country_count.fillna('Unknown')
dfd23_f3_Attendees_Country_count['Percent-2023'] = (dfd23_f3_Attendees_Country_count['Total-2023'] / dfd23_f3_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f3_Attendees_Country_count['Percent-2023'] = dfd23_f3_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f3_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f3 = pd.DataFrame(pd.merge(dfd17_f3_Attendees_Country_count, dfd18_f3_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f3 = pd.DataFrame(pd.merge(dfd19_f3_Attendees_Country_count, dfd21_f3_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f3 = pd.DataFrame(pd.merge(dfd22_f3_Attendees_Country_count, dfd23_f3_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f3 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f3, dfAttendees_Country_Count_2_f3, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f3.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f3 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f3, dfAttendees_Country_Count_3_f3, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f3 = dfAttendees_Country_Count_m2_f3.append(dfAttendees_Country_Count_m2_f3.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f3['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_3_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f3_ATTENDEES_AREAS_count = dfd17_f3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f3_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f3_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f3_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f3_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f3_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_3_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f3_ATTENDEES_AREAS_count = dfd18_f3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f3_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f3_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f3_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f3_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f3_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_3_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f3_ATTENDEES_AREAS_count = dfd19_f3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f3_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f3_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f3_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f3_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f3_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_3_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f3_ATTENDEES_AREAS_count = dfd21_f3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f3_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f3_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f3_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f3_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f3_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_3_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f3_ATTENDEES_AREAS_count = dfd22_f3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f3_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f3_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f3_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f3_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f3_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_ATTENDEES_AREAS_count = pd.DataFrame(filtr_3_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f3_ATTENDEES_AREAS_count = dfd23_f3_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f3_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f3_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f3_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f3_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f3_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f3_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f3 = pd.DataFrame(pd.merge(dfd17_f3_ATTENDEES_AREAS_count, dfd18_f3_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f3 = pd.DataFrame(pd.merge(dfd19_f3_ATTENDEES_AREAS_count, dfd21_f3_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f3 = pd.DataFrame(pd.merge(dfd22_f3_ATTENDEES_AREAS_count, dfd23_f3_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f3.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f3 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f3, df_ATTENDEES_AREAS_count_2_f3, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f3 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f3, df_ATTENDEES_AREAS_count_3_f3, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f3 = df_ATTENDEES_AREAS_count_m2_f3.append(df_ATTENDEES_AREAS_count_m2_f3.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f3['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f3_Attendees_Specialty_count = pd.DataFrame(filtr_3_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f3_Attendees_Specialty_count = dfd17_f3_Attendees_Specialty_count.fillna('Unknown')
dfd17_f3_Attendees_Specialty_count['Percent-2017'] = (dfd17_f3_Attendees_Specialty_count['Total-2017'] / dfd17_f3_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f3_Attendees_Specialty_count['Percent-2017'] = dfd17_f3_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f3_Attendees_Specialty_count = pd.DataFrame(filtr_3_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f3_Attendees_Specialty_count = dfd18_f3_Attendees_Specialty_count.fillna('Unknown')
dfd18_f3_Attendees_Specialty_count['Percent-2018'] = (dfd18_f3_Attendees_Specialty_count['Total-2018'] / dfd18_f3_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f3_Attendees_Specialty_count['Percent-2018'] = dfd18_f3_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f3_Attendees_Specialty_count = pd.DataFrame(filtr_3_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f3_Attendees_Specialty_count = dfd19_f3_Attendees_Specialty_count.fillna('Unknown')
dfd19_f3_Attendees_Specialty_count['Percent-2019'] = (dfd19_f3_Attendees_Specialty_count['Total-2019'] / dfd19_f3_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f3_Attendees_Specialty_count['Percent-2019'] = dfd19_f3_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f3_Attendees_Specialty_count = pd.DataFrame(filtr_3_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f3_Attendees_Specialty_count = dfd21_f3_Attendees_Specialty_count.fillna('Unknown')
dfd21_f3_Attendees_Specialty_count['Percent-2021'] = (dfd21_f3_Attendees_Specialty_count['Total-2021'] / dfd21_f3_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f3_Attendees_Specialty_count['Percent-2021'] = dfd21_f3_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f3_Attendees_Specialty_count = pd.DataFrame(filtr_3_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f3_Attendees_Specialty_count = dfd22_f3_Attendees_Specialty_count.fillna('Unknown')
dfd22_f3_Attendees_Specialty_count['Percent-2022'] = (dfd22_f3_Attendees_Specialty_count['Total-2022'] / dfd22_f3_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f3_Attendees_Specialty_count['Percent-2022'] = dfd22_f3_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f3_Attendees_Specialty_count = pd.DataFrame(filtr_3_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f3_Attendees_Specialty_count = dfd23_f3_Attendees_Specialty_count.fillna('Unknown')
dfd23_f3_Attendees_Specialty_count['Percent-2023'] = (dfd23_f3_Attendees_Specialty_count['Total-2023'] / dfd23_f3_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f3_Attendees_Specialty_count['Percent-2023'] = dfd23_f3_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f3_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f3 = pd.DataFrame(pd.merge(dfd17_f3_Attendees_Specialty_count, dfd18_f3_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f3 = pd.DataFrame(pd.merge(dfd19_f3_Attendees_Specialty_count, dfd21_f3_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f3 = pd.DataFrame(pd.merge(dfd22_f3_Attendees_Specialty_count, dfd23_f3_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f3 = pd.DataFrame(pd.merge(df_Specialty_count_1_f3, df_Specialty_count_2_f3, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f3.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f3 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f3, df_Specialty_count_3_f3, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f3 = df_Specialty_count_m2_f3.append(df_Specialty_count_m2_f3.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f3['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f3['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f3['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f3 = Concat_Registrations_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f3['Total-2017'] = Concat_Registrations_count_f1_f3['Total-2017'].astype(int)
Concat_Registrations_count_f1_f3['Percent-2017'] = Concat_Registrations_count_f1_f3['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f3['7DEvolution-2017'] = Concat_Registrations_count_f1_f3['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f3['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f3['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f3 = Concat_Registrations_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f3['Total-2018'] = Concat_Registrations_count_f1_f3['Total-2018'].astype(int)
Concat_Registrations_count_f1_f3['Percent-2018'] = Concat_Registrations_count_f1_f3['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f3['7DEvolution-2018'] = Concat_Registrations_count_f1_f3['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f3['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f3['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f3 = Concat_Registrations_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f3['Total-2019'] = Concat_Registrations_count_f1_f3['Total-2019'].astype(int)
Concat_Registrations_count_f1_f3['Percent-2019'] = Concat_Registrations_count_f1_f3['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f3['7DEvolution-2019'] = Concat_Registrations_count_f1_f3['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f3['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f3['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f3 = Concat_Registrations_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f3['Total-2021'] = Concat_Registrations_count_f1_f3['Total-2021'].astype(int)
Concat_Registrations_count_f1_f3['Percent-2021'] = Concat_Registrations_count_f1_f3['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f3['7DEvolution-2021'] = Concat_Registrations_count_f1_f3['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f3['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f3['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f3 = Concat_Registrations_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f3['Total-2022'] = Concat_Registrations_count_f1_f3['Total-2022'].astype(int)
Concat_Registrations_count_f1_f3['Percent-2022'] = Concat_Registrations_count_f1_f3['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f3['7DEvolution-2022'] = Concat_Registrations_count_f1_f3['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f3['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f3['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f3 = Concat_Registrations_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f3['Total-2023'] = Concat_Registrations_count_f1_f3['Total-2023'].astype(int)
Concat_Registrations_count_f1_f3['Percent-2023'] = Concat_Registrations_count_f1_f3['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f3['7DEvolution-2023'] = Concat_Registrations_count_f1_f3['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f3['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f3['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f3 = Concat_ACQRET_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f3['Total-2018'] = Concat_ACQRET_count_f1_f3['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f3['ACQ-2018'] = Concat_ACQRET_count_f1_f3['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f3['Percent-2018'] = Concat_ACQRET_count_f1_f3['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f3['RET-2018'] = Concat_ACQRET_count_f1_f3['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f3['Percnt-2018'] = Concat_ACQRET_count_f1_f3['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f3['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f3['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f3 = Concat_ACQRET_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f3['Total-2019'] = Concat_ACQRET_count_f1_f3['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f3['ACQ-2019'] = Concat_ACQRET_count_f1_f3['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f3['Percent-2019'] = Concat_ACQRET_count_f1_f3['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f3['RET-2019'] = Concat_ACQRET_count_f1_f3['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f3['Percnt-2019'] = Concat_ACQRET_count_f1_f3['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f3['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f3['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f3 = Concat_ACQRET_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f3['Total-2021'] = Concat_ACQRET_count_f1_f3['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f3['ACQ-2021'] = Concat_ACQRET_count_f1_f3['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f3['Percent-2021'] = Concat_ACQRET_count_f1_f3['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f3['RET-2021'] = Concat_ACQRET_count_f1_f3['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f3['Percnt-2021'] = Concat_ACQRET_count_f1_f3['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f3['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f3['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f3 = Concat_ACQRET_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f3['Total-2022'] = Concat_ACQRET_count_f1_f3['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f3['ACQ-2022'] = Concat_ACQRET_count_f1_f3['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f3['Percent-2022'] = Concat_ACQRET_count_f1_f3['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f3['RET-2022'] = Concat_ACQRET_count_f1_f3['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f3['Percnt-2022'] = Concat_ACQRET_count_f1_f3['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f3['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f3['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f3 = Concat_ACQRET_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f3['Total-2023'] = Concat_ACQRET_count_f1_f3['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f3['ACQ-2023'] = Concat_ACQRET_count_f1_f3['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f3['Percent-2023'] = Concat_ACQRET_count_f1_f3['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f3['RET-2023'] = Concat_ACQRET_count_f1_f3['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f3['Percnt-2023'] = Concat_ACQRET_count_f1_f3['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f3['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f3['Total-2017'],errors='coerce')
Concat_REV_count_f1_f3 = Concat_REV_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f3['Total-2017'] = Concat_REV_count_f1_f3['Total-2017'].astype(int)
Concat_REV_count_f1_f3['Percent-2017'] = Concat_REV_count_f1_f3['Percent-2017'].astype(float)
Concat_REV_count_f1_f3['7DEvolution-2017'] = Concat_REV_count_f1_f3['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f3['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f3['Total-2018'],errors='coerce')
Concat_REV_count_f1_f3 = Concat_REV_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f3['Total-2018'] = Concat_REV_count_f1_f3['Total-2018'].astype(int)
Concat_REV_count_f1_f3['Percent-2018'] = Concat_REV_count_f1_f3['Percent-2018'].astype(float)
Concat_REV_count_f1_f3['7DEvolution-2018'] = Concat_REV_count_f1_f3['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f3['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f3['Total-2019'],errors='coerce')
Concat_REV_count_f1_f3 = Concat_REV_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f3['Total-2019'] = Concat_REV_count_f1_f3['Total-2019'].astype(int)
Concat_REV_count_f1_f3['Percent-2019'] = Concat_REV_count_f1_f3['Percent-2019'].astype(float)
Concat_REV_count_f1_f3['7DEvolution-2019'] = Concat_REV_count_f1_f3['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f3['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f3['Total-2022'],errors='coerce')
Concat_REV_count_f1_f3 = Concat_REV_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f3['Total-2022'] = Concat_REV_count_f1_f3['Total-2022'].astype(int)
Concat_REV_count_f1_f3['Percent-2022'] = Concat_REV_count_f1_f3['Percent-2022'].astype(float)
Concat_REV_count_f1_f3['7DEvolution-2022'] = Concat_REV_count_f1_f3['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f3['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f3['Total-2023'],errors='coerce')
Concat_REV_count_f1_f3 = Concat_REV_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f3['Total-2023'] = Concat_REV_count_f1_f3['Total-2023'].astype(int)
Concat_REV_count_f1_f3['Percent-2023'] = Concat_REV_count_f1_f3['Percent-2023'].astype(float)
Concat_REV_count_f1_f3['7DEvolution-2023'] = Concat_REV_count_f1_f3['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f3['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f3['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f3 = Concat_RegGRDel_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f3['Total-2017'] = Concat_RegGRDel_count_f1_f3['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f3['Percent-2017'] = Concat_RegGRDel_count_f1_f3['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f3['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f3['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f3['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f3['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f3 = Concat_RegGRDel_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f3['Total-2018'] = Concat_RegGRDel_count_f1_f3['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f3['Percent-2018'] = Concat_RegGRDel_count_f1_f3['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f3['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f3['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f3['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f3['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f3 = Concat_RegGRDel_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f3['Total-2019'] = Concat_RegGRDel_count_f1_f3['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f3['Percent-2019'] = Concat_RegGRDel_count_f1_f3['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f3['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f3['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f3['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f3['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f3 = Concat_RegGRDel_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f3['Total-2021'] = Concat_RegGRDel_count_f1_f3['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f3['Percent-2021'] = Concat_RegGRDel_count_f1_f3['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f3['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f3['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f3['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f3['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f3 = Concat_RegGRDel_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f3['Total-2022'] = Concat_RegGRDel_count_f1_f3['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f3['Percent-2022'] = Concat_RegGRDel_count_f1_f3['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f3['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f3['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f3['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f3['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f3 = Concat_RegGRDel_count_f1_f3.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f3['Total-2023'] = Concat_RegGRDel_count_f1_f3['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f3['Percent-2023'] = Concat_RegGRDel_count_f1_f3['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f3['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f3['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f3['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f3['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f3 = Conct_AC_RT_GRDel_f1_f3.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f3['Total-2018'] = Conct_AC_RT_GRDel_f1_f3['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f3['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f3['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f3['Percent-2018'] = Conct_AC_RT_GRDel_f1_f3['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f3['RET-2018'] = Conct_AC_RT_GRDel_f1_f3['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f3['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f3['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f3['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f3['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f3 = Conct_AC_RT_GRDel_f1_f3.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f3['Total-2019'] = Conct_AC_RT_GRDel_f1_f3['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f3['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f3['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f3['Percent-2019'] = Conct_AC_RT_GRDel_f1_f3['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f3['RET-2019'] = Conct_AC_RT_GRDel_f1_f3['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f3['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f3['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f3['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f3['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f3 = Conct_AC_RT_GRDel_f1_f3.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f3['Total-2021'] = Conct_AC_RT_GRDel_f1_f3['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f3['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f3['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f3['Percent-2021'] = Conct_AC_RT_GRDel_f1_f3['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f3['RET-2021'] = Conct_AC_RT_GRDel_f1_f3['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f3['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f3['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f3['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f3['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f3 = Conct_AC_RT_GRDel_f1_f3.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f3['Total-2022'] = Conct_AC_RT_GRDel_f1_f3['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f3['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f3['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f3['Percent-2022'] = Conct_AC_RT_GRDel_f1_f3['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f3['RET-2022'] = Conct_AC_RT_GRDel_f1_f3['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f3['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f3['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f3['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f3['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f3 = Conct_AC_RT_GRDel_f1_f3.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f3['Total-2023'] = Conct_AC_RT_GRDel_f1_f3['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f3['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f3['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f3['Percent-2023'] = Conct_AC_RT_GRDel_f1_f3['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f3['RET-2023'] = Conct_AC_RT_GRDel_f1_f3['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f3['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f3['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f3['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f3['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f3 = Conct_RV_GRDel_f1_f3.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f3['Total-2017'] = Conct_RV_GRDel_f1_f3['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f3['Percent-2017'] = Conct_RV_GRDel_f1_f3['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f3['7DEvolution-2017'] = Conct_RV_GRDel_f1_f3['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f3['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f3['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f3 = Conct_RV_GRDel_f1_f3.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f3['Total-2018'] = Conct_RV_GRDel_f1_f3['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f3['Percent-2018'] = Conct_RV_GRDel_f1_f3['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f3['7DEvolution-2018'] = Conct_RV_GRDel_f1_f3['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f3['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f3['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f3 = Conct_RV_GRDel_f1_f3.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f3['Total-2019'] = Conct_RV_GRDel_f1_f3['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f3['Percent-2019'] = Conct_RV_GRDel_f1_f3['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f3['7DEvolution-2019'] = Conct_RV_GRDel_f1_f3['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f3['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f3['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f3 = Conct_RV_GRDel_f1_f3.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f3['Total-2022'] = Conct_RV_GRDel_f1_f3['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f3['Percent-2022'] = Conct_RV_GRDel_f1_f3['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f3['7DEvolution-2022'] = Conct_RV_GRDel_f1_f3['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f3['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f3['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f3 = Conct_RV_GRDel_f1_f3.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f3['Total-2023'] = Conct_RV_GRDel_f1_f3['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f3['Percent-2023'] = Conct_RV_GRDel_f1_f3['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f3['7DEvolution-2023'] = Conct_RV_GRDel_f1_f3['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f3['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f3['Total-2017'],errors='coerce')
df_Profile_Count_m2_f3 = df_Profile_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f3['Total-2017'] = df_Profile_Count_m2_f3['Total-2017'].astype(int)
df_Profile_Count_m2_f3['Percent-2017'] = df_Profile_Count_m2_f3['Percent-2017'].astype(float)

df_Profile_Count_m2_f3['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f3['Total-2018'],errors='coerce')
df_Profile_Count_m2_f3 = df_Profile_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f3['Total-2018'] = df_Profile_Count_m2_f3['Total-2018'].astype(int)
df_Profile_Count_m2_f3['Percent-2018'] = df_Profile_Count_m2_f3['Percent-2018'].astype(float)

df_Profile_Count_m2_f3['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f3['Total-2019'],errors='coerce')
df_Profile_Count_m2_f3 = df_Profile_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f3['Total-2019'] = df_Profile_Count_m2_f3['Total-2019'].astype(int)
df_Profile_Count_m2_f3['Percent-2019'] = df_Profile_Count_m2_f3['Percent-2019'].astype(float)

df_Profile_Count_m2_f3['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f3['Total-2021'],errors='coerce')
df_Profile_Count_m2_f3 = df_Profile_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f3['Total-2021'] = df_Profile_Count_m2_f3['Total-2021'].astype(int)
df_Profile_Count_m2_f3['Percent-2021'] = df_Profile_Count_m2_f3['Percent-2021'].astype(float)

df_Profile_Count_m2_f3['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f3['Total-2022'],errors='coerce')
df_Profile_Count_m2_f3 = df_Profile_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f3['Total-2022'] = df_Profile_Count_m2_f3['Total-2022'].astype(int)
df_Profile_Count_m2_f3['Percent-2022'] = df_Profile_Count_m2_f3['Percent-2022'].astype(float)

df_Profile_Count_m2_f3['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f3['Total-2023'],errors='coerce')
df_Profile_Count_m2_f3 = df_Profile_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f3['Total-2023'] = df_Profile_Count_m2_f3['Total-2023'].astype(int)
df_Profile_Count_m2_f3['Percent-2023'] = df_Profile_Count_m2_f3['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f3['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f3['Total-2017'],errors='coerce')
df_Pass_Count_m2_f3 = df_Pass_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f3['Total-2017'] = df_Pass_Count_m2_f3['Total-2017'].astype(int)
df_Pass_Count_m2_f3['Percent-2017'] = df_Pass_Count_m2_f3['Percent-2017'].astype(float)

df_Pass_Count_m2_f3['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f3['Total-2018'],errors='coerce')
df_Pass_Count_m2_f3 = df_Pass_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f3['Total-2018'] = df_Pass_Count_m2_f3['Total-2018'].astype(int)
df_Pass_Count_m2_f3['Percent-2018'] = df_Pass_Count_m2_f3['Percent-2018'].astype(float)

df_Pass_Count_m2_f3['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f3['Total-2019'],errors='coerce')
df_Pass_Count_m2_f3 = df_Pass_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f3['Total-2019'] = df_Pass_Count_m2_f3['Total-2019'].astype(int)
df_Pass_Count_m2_f3['Percent-2019'] = df_Pass_Count_m2_f3['Percent-2019'].astype(float)

df_Pass_Count_m2_f3['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f3['Total-2021'],errors='coerce')
df_Pass_Count_m2_f3 = df_Pass_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f3['Total-2021'] = df_Pass_Count_m2_f3['Total-2021'].astype(int)
df_Pass_Count_m2_f3['Percent-2021'] = df_Pass_Count_m2_f3['Percent-2021'].astype(float)

df_Pass_Count_m2_f3['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f3['Total-2022'],errors='coerce')
df_Pass_Count_m2_f3 = df_Pass_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f3['Total-2022'] = df_Pass_Count_m2_f3['Total-2022'].astype(int)
df_Pass_Count_m2_f3['Percent-2022'] = df_Pass_Count_m2_f3['Percent-2022'].astype(float)

df_Pass_Count_m2_f3['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f3['Total-2023'],errors='coerce')
df_Pass_Count_m2_f3 = df_Pass_Count_m2_f3.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f3['Total-2023'] = df_Pass_Count_m2_f3['Total-2023'].astype(int)
df_Pass_Count_m2_f3['Percent-2023'] = df_Pass_Count_m2_f3['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f3['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f3['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f3 = dfAttendees_Country_Count_m2_f3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f3['Total-2017'] = dfAttendees_Country_Count_m2_f3['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f3['Percent-2017'] = dfAttendees_Country_Count_m2_f3['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f3['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f3['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f3 = dfAttendees_Country_Count_m2_f3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f3['Total-2018'] = dfAttendees_Country_Count_m2_f3['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f3['Percent-2018'] = dfAttendees_Country_Count_m2_f3['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f3['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f3['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f3 = dfAttendees_Country_Count_m2_f3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f3['Total-2019'] = dfAttendees_Country_Count_m2_f3['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f3['Percent-2019'] = dfAttendees_Country_Count_m2_f3['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f3['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f3['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f3 = dfAttendees_Country_Count_m2_f3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f3['Total-2021'] = dfAttendees_Country_Count_m2_f3['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f3['Percent-2021'] = dfAttendees_Country_Count_m2_f3['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f3['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f3['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f3 = dfAttendees_Country_Count_m2_f3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f3['Total-2022'] = dfAttendees_Country_Count_m2_f3['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f3['Percent-2022'] = dfAttendees_Country_Count_m2_f3['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f3['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f3['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f3 = dfAttendees_Country_Count_m2_f3.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f3['Total-2023'] = dfAttendees_Country_Count_m2_f3['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f3['Percent-2023'] = dfAttendees_Country_Count_m2_f3['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f3['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f3['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f3 = df_ATTENDEES_AREAS_count_m2_f3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f3['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f3['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f3['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f3['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f3['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f3['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f3 = df_ATTENDEES_AREAS_count_m2_f3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f3['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f3['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f3['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f3['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f3['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f3['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f3 = df_ATTENDEES_AREAS_count_m2_f3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f3['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f3['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f3['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f3['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f3['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f3['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f3 = df_ATTENDEES_AREAS_count_m2_f3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f3['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f3['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f3['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f3['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f3['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f3['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f3 = df_ATTENDEES_AREAS_count_m2_f3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f3['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f3['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f3['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f3['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f3['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f3['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f3 = df_ATTENDEES_AREAS_count_m2_f3.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f3['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f3['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f3['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f3['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f3['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f3['Total-2017'],errors='coerce')
df_Specialty_count_m2_f3 = df_Specialty_count_m2_f3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f3['Total-2017'] = df_Specialty_count_m2_f3['Total-2017'].astype(int)
df_Specialty_count_m2_f3['Percent-2017'] = df_Specialty_count_m2_f3['Percent-2017'].astype(float)

df_Specialty_count_m2_f3['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f3['Total-2018'],errors='coerce')
df_Specialty_count_m2_f3 = df_Specialty_count_m2_f3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f3['Total-2018'] = df_Specialty_count_m2_f3['Total-2018'].astype(int)
df_Specialty_count_m2_f3['Percent-2018'] = df_Specialty_count_m2_f3['Percent-2018'].astype(float)

df_Specialty_count_m2_f3['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f3['Total-2019'],errors='coerce')
df_Specialty_count_m2_f3 = df_Specialty_count_m2_f3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f3['Total-2019'] = df_Specialty_count_m2_f3['Total-2019'].astype(int)
df_Specialty_count_m2_f3['Percent-2019'] = df_Specialty_count_m2_f3['Percent-2019'].astype(float)

df_Specialty_count_m2_f3['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f3['Total-2021'],errors='coerce')
df_Specialty_count_m2_f3 = df_Specialty_count_m2_f3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f3['Total-2021'] = df_Specialty_count_m2_f3['Total-2021'].astype(int)
df_Specialty_count_m2_f3['Percent-2021'] = df_Specialty_count_m2_f3['Percent-2021'].astype(float)

df_Specialty_count_m2_f3['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f3['Total-2022'],errors='coerce')
df_Specialty_count_m2_f3 = df_Specialty_count_m2_f3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f3['Total-2022'] = df_Specialty_count_m2_f3['Total-2022'].astype(int)
df_Specialty_count_m2_f3['Percent-2022'] = df_Specialty_count_m2_f3['Percent-2022'].astype(float)

df_Specialty_count_m2_f3['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f3['Total-2023'],errors='coerce')
df_Specialty_count_m2_f3 = df_Specialty_count_m2_f3.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f3['Total-2023'] = df_Specialty_count_m2_f3['Total-2023'].astype(int)
df_Specialty_count_m2_f3['Percent-2023'] = df_Specialty_count_m2_f3['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f3.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f3.dtypes)
#print(df_Specialty_count_m2_f3.dtypes)

#print(dfAttendees_Country_Count_m2_f3.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f3.dtypes)
#print(df_Specialty_count_m2_f3.dtypes)

# EXCEL FILE
writerf3 = pd.ExcelWriter(outputExcelFile_f3, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f3.to_excel\
    (writerf3, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f3.to_excel\
    (writerf3, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f3.to_excel\
    (writerf3, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f3.to_excel\
    (writerf3, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f3.to_excel\
    (writerf3, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f3.to_excel\
    (writerf3, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f3.to_excel\
    (writerf3, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f3.to_excel\
    (writerf3, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f3.to_excel\
    (writerf3, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f3.to_excel\
    (writerf3, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f3.to_excel\
    (writerf3, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf3.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f3)

workbook.save(outputExcelFile_f3)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 175 days**********************************************')
print('************************************End of 175 days**********************************************')
print('************************************End of 175 days**********************************************')
print('************************************End of 175 days**********************************************')
print('************************************End of 175 days**********************************************')
print('************************************End of 175 days**********************************************')
print('************************************End of 175 days**********************************************')
print('************************************End of 175 days**********************************************')
print('************************************End of 175 days**********************************************')

#unit 1
#Total Number of Registrations
dfd17_f4_Registrations_count = pd.DataFrame(filter_4_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f4_Registrations_count = dfd17_f4_Registrations_count.fillna('Unknown')
dfd17_f4_Registrations_count['Percent-2017'] = (dfd17_f4_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f4_Registrations_count['Percent-2017'] = dfd17_f4_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f4_Registrations_count['7DEvolution-2017'] = dfd17_f4_Registrations_count['Total-2017'] - dfd17_f3_Registrations_count['Total-2017']
#print(tab(dfd17_f4_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f4_Registrations_count = pd.DataFrame(filter_4_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f4_Registrations_count = dfd18_f4_Registrations_count.fillna('Unknown')
dfd18_f4_Registrations_count['Percent-2018'] = (dfd18_f4_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f4_Registrations_count['Percent-2018'] = dfd18_f4_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f4_Registrations_count['7DEvolution-2018'] = dfd18_f4_Registrations_count['Total-2018'] - dfd18_f3_Registrations_count['Total-2018']
#print(tab(dfd18_f4_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f4_Registrations_count = pd.DataFrame(filter_4_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f4_Registrations_count = dfd19_f4_Registrations_count.fillna('Unknown')
dfd19_f4_Registrations_count['Percent-2019'] = (dfd19_f4_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f4_Registrations_count['Percent-2019'] = dfd19_f4_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f4_Registrations_count['7DEvolution-2019'] = dfd19_f4_Registrations_count['Total-2019'] - dfd19_f3_Registrations_count['Total-2019']
#print(tab(dfd19_f4_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f4_Registrations_count = pd.DataFrame(filter_4_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f4_Registrations_count = dfd21_f4_Registrations_count.fillna('Unknown')
dfd21_f4_Registrations_count['Percent-2021'] = (dfd21_f4_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f4_Registrations_count['Percent-2021'] = dfd21_f4_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f4_Registrations_count['7DEvolution-2021'] = dfd21_f4_Registrations_count['Total-2021'] - dfd21_f3_Registrations_count['Total-2021']
#print(tab(dfd21_f4_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f4_Registrations_count = pd.DataFrame(filter_4_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f4_Registrations_count = dfd22_f4_Registrations_count.fillna('Unknown')
dfd22_f4_Registrations_count['Percent-2022'] = (dfd22_f4_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f4_Registrations_count['Percent-2022'] = dfd22_f4_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f4_Registrations_count['7DEvolution-2022'] = dfd22_f4_Registrations_count['Total-2022'] - dfd22_f3_Registrations_count['Total-2022']
print(tab(dfd22_f4_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_Registrations_count = pd.DataFrame(filter_4_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f4_Registrations_count = dfd23_f4_Registrations_count.fillna('Unknown')
dfd23_f4_Registrations_count['Percent-2023'] = (dfd23_f4_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f4_Registrations_count['Percent-2023'] = dfd23_f4_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f4_Registrations_count['7DEvolution-2023'] = dfd23_f4_Registrations_count['Total-2023'] - dfd23_f3_Registrations_count['Total-2023']
#print(tab(dfd23_f4_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f4_RegistrationsEvolution_count = pd.DataFrame(filter_4_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f4_RegistrationsEvolution_count = dfd23_f4_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f4_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f4_Registrations_count['Total-2023'] - dfd19_f4_Registrations_count['Total-2019'])/ dfd19_f4_Registrations_count['Total-2019'].sum()) * 100
dfd23_f4_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f4_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f4_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f4 = pd.DataFrame(pd.merge(dfd17_f4_Registrations_count, dfd18_f4_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f4 = pd.DataFrame(pd.merge(dfd19_f4_Registrations_count, dfd21_f4_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f4 = pd.DataFrame(pd.merge(dfd22_f4_Registrations_count, dfd23_f4_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f4 = pd.DataFrame(pd.merge(df_Registrations_count_1_f4, df_Registrations_count_2_f4, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f4 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f4, df_Registrations_count_3_f4, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f4 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f4, dfd23_f4_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f4 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4]
Concat_Registrations_count_f1_f4 = pd.concat(ConcatFrames_Registrations_count_f1_f4)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f4  = ConcatFrames_Registrations_count_f1_f4.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f4.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f4 = filter_4_df18[filter_4_df18['New customer'] == 1]
df_NewCustomer_df19_f4 = filter_4_df19[filter_4_df19['New customer'] == 1]
df_NewCustomer_df21_f4 = filter_4_df21[filter_4_df21['New customer'] == 1]
df_NewCustomer_df22_f4 = filter_4_df22[filter_4_df22['New customer'] == 1]
df_NewCustomer_df23_f4 = filter_4_df23[filter_4_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f4.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f4.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f4.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a4_ACQRET_count = pd.DataFrame(filter_4_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f4_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f4.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f4_ACQRET_count['Percent-2018'] = (dfd18_f4_ACQRET_count['ACQ-2018'] / dfd18_f4_Registrations_count['Total-2018'].sum()) * 100
dfd18_f4_ACQRET_count['Percent-2018'] = dfd18_f4_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f4_ACQRET_count['RET-2018'] = dfd18_a4_ACQRET_count['Total-2018'] - dfd18_f4_ACQRET_count['ACQ-2018']
dfd18_f4_ACQRET_count['Percnt-2018'] = (dfd18_f4_ACQRET_count['RET-2018'] / dfd18_a4_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f4_ACQRET_count['Percnt-2018'] = dfd18_f4_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f4_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a4_ACQRET_count = pd.DataFrame(filter_4_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f4_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f4.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f4_ACQRET_count['Percent-2019'] = (dfd19_f4_ACQRET_count['ACQ-2019'] / dfd19_f4_Registrations_count['Total-2019'].sum()) * 100
dfd19_f4_ACQRET_count['Percent-2019'] = dfd19_f4_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f4_ACQRET_count['RET-2019'] = dfd19_a4_ACQRET_count['Total-2019'] - dfd19_f4_ACQRET_count['ACQ-2019']
dfd19_f4_ACQRET_count['Percnt-2019'] = (dfd19_f4_ACQRET_count['RET-2019'] / dfd19_a4_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f4_ACQRET_count['Percnt-2019'] = dfd19_f4_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f4_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a4_ACQRET_count = pd.DataFrame(filter_4_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f4_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f4.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f4_ACQRET_count['Percent-2021'] = (dfd21_f4_ACQRET_count['ACQ-2021'] / dfd21_f4_Registrations_count['Total-2021'].sum()) * 100
dfd21_f4_ACQRET_count['Percent-2021'] = dfd21_f4_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f4_ACQRET_count['RET-2021'] = dfd21_a4_ACQRET_count['Total-2021'] - dfd21_f4_ACQRET_count['ACQ-2021']
dfd21_f4_ACQRET_count['Percnt-2021'] = (dfd21_f4_ACQRET_count['RET-2021'] / dfd21_a4_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f4_ACQRET_count['Percnt-2021'] = dfd21_f4_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f4_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a4_ACQRET_count = pd.DataFrame(filter_4_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f4_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f4.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f4_ACQRET_count['Percent-2022'] = (dfd22_f4_ACQRET_count['ACQ-2022'] / dfd22_f4_Registrations_count['Total-2022'].sum()) * 100
dfd22_f4_ACQRET_count['Percent-2022'] = dfd22_f4_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f4_ACQRET_count['RET-2022'] = dfd22_a4_ACQRET_count['Total-2022'] - dfd22_f4_ACQRET_count['ACQ-2022']
dfd22_f4_ACQRET_count['Percnt-2022'] = (dfd22_f4_ACQRET_count['RET-2022'] / dfd22_a4_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f4_ACQRET_count['Percnt-2022'] = dfd22_f4_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f4_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a4_ACQRET_count = pd.DataFrame(filter_4_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f4_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f4.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f4_ACQRET_count['Percent-2023'] = (dfd23_f4_ACQRET_count['ACQ-2023'] / dfd23_f4_Registrations_count['Total-2023'].sum()) * 100
dfd23_f4_ACQRET_count['Percent-2023'] = dfd23_f4_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f4_ACQRET_count['RET-2023'] = dfd23_a4_ACQRET_count['Total-2023'] - dfd23_f4_ACQRET_count['ACQ-2023']
dfd23_f4_ACQRET_count['Percnt-2023'] = (dfd23_f4_ACQRET_count['RET-2023'] / dfd23_a4_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f4_ACQRET_count['Percnt-2023'] = dfd23_f4_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f4_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f4 = pd.DataFrame(pd.merge(dfd18_a4_ACQRET_count, dfd18_f4_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f4 = pd.DataFrame(pd.merge(dfd19_a4_ACQRET_count, dfd19_f4_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f4 = pd.DataFrame(pd.merge(dfd21_a4_ACQRET_count, dfd21_f4_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f4 = pd.DataFrame(pd.merge(dfd22_a4_ACQRET_count, dfd22_f4_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_5_f4 = pd.DataFrame(pd.merge(dfd23_a4_ACQRET_count, dfd23_f4_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_5_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f4 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f4, df_ACQRET_count_2_f4, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f4 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f4, df_ACQRET_count_3_f4, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f4 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f4, df_ACQRET_count_4_f4, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f4 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f4, df_ACQRET_count_5_f4, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f4 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4]
Concat_ACQRET_count_f1_f4 = pd.concat(ConcatFrames_ACQRET_count_f1_f4)
#print(tab(Concat_ACQRET_count_f1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f4 = Concat_ACQRET_count_f1_f4[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f4_Revenue_calc = pd.DataFrame(filter_4_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f4_Revenue_calc['Percent-2017'] = (dfd17_f4_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f4_Revenue_calc['Percent-2017'] = dfd17_f4_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f4_Revenue_calc['7DEvolution-2017'] = dfd17_f4_Revenue_calc['Total-2017'] - dfd17_f3_Revenue_calc['Total-2017']
#print(tab(dfd17_f4_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f4_Revenue_calc = pd.DataFrame(filter_4_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f4_Revenue_calc['Percent-2018'] = (dfd18_f4_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f4_Revenue_calc['Percent-2018'] = dfd18_f4_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f4_Revenue_calc['7DEvolution-2018'] = dfd18_f4_Revenue_calc['Total-2018'] - dfd18_f3_Revenue_calc['Total-2018']
#print(tab(dfd18_f4_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f4_Revenue_calc = pd.DataFrame(filter_4_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f4_Revenue_calc['Percent-2019'] = (dfd19_f4_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f4_Revenue_calc['Percent-2019'] = dfd19_f4_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f4_Revenue_calc['7DEvolution-2019'] = dfd19_f4_Revenue_calc['Total-2019'] - dfd19_f3_Revenue_calc['Total-2019']
#print(tab(dfd19_f4_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f4_Revenue_calc = pd.DataFrame(filter_4_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f4_Revenue_calc['Percent-2021'] = (dfd21_f4_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f4_Revenue_calc['Percent-2021'] = dfd21_f4_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f4_Revenue_calc['7DEvolution-2021'] = dfd21_f4_Revenue_calc['Total-2021'] - dfd21_f3_Revenue_calc['Total-2021']
#print(tab(dfd21_f4_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f4_Revenue_calc = pd.DataFrame(filter_4_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f4_Revenue_calc['Percent-2022'] = (dfd22_f4_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f4_Revenue_calc['Percent-2022'] = dfd22_f4_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f4_Revenue_calc['7DEvolution-2022'] = dfd22_f4_Revenue_calc['Total-2022'] - dfd22_f3_Revenue_calc['Total-2022']
#print(tab(dfd22_f4_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_Revenue_calc = pd.DataFrame(filter_4_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f4_Revenue_calc['Percent-2023'] = (dfd23_f4_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f4_Revenue_calc['Percent-2023'] = dfd23_f4_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f4_Revenue_calc['7DEvolution-2023'] = dfd23_f4_Revenue_calc['Total-2023'] - dfd23_f3_Revenue_calc['Total-2023']
#print(tab(dfd23_f4_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f4_RevenueEvolution_calc = pd.DataFrame(filter_4_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f4_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f4_Revenue_calc['Total-2023'] - dfd19_f4_Revenue_calc['Total-2019'])/ dfd19_f4_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f4_RevenueEvolution_calc['Evolution-2023'] = dfd23_f4_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f4_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f4 = pd.DataFrame(pd.merge(dfd17_f4_Revenue_calc, dfd18_f4_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f4 = pd.DataFrame(pd.merge(dfd19_f4_Revenue_calc, dfd21_f4_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f4 = pd.DataFrame(pd.merge(dfd22_f4_Revenue_calc, dfd23_f4_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f4_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f4, df_Revenue_calc_2_f4, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f4Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f4_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f4_Evolution, df_Revenue_calc_3_f4, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f4Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f4 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f4_Evolution, dfd23_f4_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f4 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4]
Concat_REV_count_f1_f4 = pd.concat(ConcatFrames_REV_count_f1_f4)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2
#unit 2!!!!!!!!!!!!!!!!!!!!!!!!
#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f4_Registrations_GRDel = pd.DataFrame(filtr_4_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f4_Registrations_GRDel = dfd17_f4_Registrations_GRDel.fillna('Unknown')
dfd17_f4_Registrations_GRDel['Percent-2017'] = (dfd17_f4_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f4_Registrations_GRDel['Percent-2017'] = dfd17_f4_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f4_Registrations_GRDel['7DEvolution-2017'] = dfd17_f4_Registrations_GRDel['Total-2017'] - dfd17_f3_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f4_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f4_Registrations_GRDel = pd.DataFrame(filtr_4_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f4_Registrations_GRDel = dfd18_f4_Registrations_GRDel.fillna('Unknown')
dfd18_f4_Registrations_GRDel['Percent-2018'] = (dfd18_f4_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f4_Registrations_GRDel['Percent-2018'] = dfd18_f4_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f4_Registrations_GRDel['7DEvolution-2018'] = dfd18_f4_Registrations_GRDel['Total-2018'] - dfd18_f3_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f4_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f4_Registrations_GRDel = pd.DataFrame(filtr_4_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f4_Registrations_GRDel = dfd19_f4_Registrations_GRDel.fillna('Unknown')
dfd19_f4_Registrations_GRDel['Percent-2019'] = (dfd19_f4_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f4_Registrations_GRDel['Percent-2019'] = dfd19_f4_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f4_Registrations_GRDel['7DEvolution-2019'] = dfd19_f4_Registrations_GRDel['Total-2019'] - dfd19_f3_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f4_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f4_Registrations_GRDel = pd.DataFrame(filtr_4_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f4_Registrations_GRDel = dfd21_f4_Registrations_GRDel.fillna('Unknown')
dfd21_f4_Registrations_GRDel['Percent-2021'] = (dfd21_f4_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f4_Registrations_GRDel['Percent-2021'] = dfd21_f4_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f4_Registrations_GRDel['7DEvolution-2021'] = dfd21_f4_Registrations_GRDel['Total-2021'] - dfd21_f3_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f4_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f4_Registrations_GRDel = pd.DataFrame(filtr_4_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f4_Registrations_GRDel = dfd22_f4_Registrations_GRDel.fillna('Unknown')
dfd22_f4_Registrations_GRDel['Percent-2022'] = (dfd22_f4_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f4_Registrations_GRDel['Percent-2022'] = dfd22_f4_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f4_Registrations_GRDel['7DEvolution-2022'] = dfd22_f4_Registrations_GRDel['Total-2022'] - dfd22_f3_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f4_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_Registrations_GRDel = pd.DataFrame(filtr_4_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f4_Registrations_GRDel = dfd23_f4_Registrations_GRDel.fillna('Unknown')
dfd23_f4_Registrations_GRDel['Percent-2023'] = (dfd23_f4_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f4_Registrations_GRDel['Percent-2023'] = dfd23_f4_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f4_Registrations_GRDel['7DEvolution-2023'] = dfd23_f4_Registrations_GRDel['Total-2023'] - dfd23_f3_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f4_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f4_Registrations_Evol_GRDel = pd.DataFrame(filtr_4_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f4_Registrations_Evol_GRDel = dfd23_f4_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f4_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f4_Registrations_GRDel['Total-2023'] - dfd19_f4_Registrations_GRDel['Total-2019'])/ dfd19_f4_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f4_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f4 = pd.concat([dfd17_f4_Registrations_GRDel, dfd18_f4_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f4 = pd.DataFrame(pd.merge(dfd17_f4_Registrations_GRDel, dfd18_f4_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f4 = pd.DataFrame(pd.merge(dfd19_f4_Registrations_GRDel, dfd21_f4_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f4 = pd.DataFrame(pd.merge(dfd22_f4_Registrations_GRDel, dfd23_f4_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f4 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f4, df_Registrations_GRDel_2_f4, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_5_f4 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f4, df_Registrations_GRDel_3_f4, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f4 = pd.DataFrame(pd.merge(df_Registrations_GRDel_5_f4, dfd23_f4_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f4 = df_Registrations_GRDel_f4[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f4 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4]
Concat_RegGRDel_count_f1_f4 = pd.concat(ConcatFrames_RegGRDel_count_f1_f4)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f4 = filtr_4_df18_GRdel[filtr_4_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f4 = filtr_4_df19_GRdel[filtr_4_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f4 = filtr_4_df21_GRdel[filtr_4_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f4 = filtr_4_df22_GRdel[filtr_4_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f4 = filtr_4_df23_GRdel[filtr_4_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f4.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f4.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a4_AC_RT_GRDel = pd.DataFrame(filtr_4_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f4_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f4.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f4_AC_RT_GRDel['Percent-2018'] = (dfd18_f4_AC_RT_GRDel['ACQ-2018'] / dfd18_f4_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f4_AC_RT_GRDel['Percent-2018'] = dfd18_f4_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f4_AC_RT_GRDel['RET-2018'] = dfd18_a4_AC_RT_GRDel['Total-2018'] - dfd18_f4_AC_RT_GRDel['ACQ-2018']
dfd18_f4_AC_RT_GRDel['Percnt-2018'] = (dfd18_f4_AC_RT_GRDel['RET-2018'] / dfd18_a4_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f4_AC_RT_GRDel['Percnt-2018'] = dfd18_f4_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f4_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a4_AC_RT_GRDel = pd.DataFrame(filtr_4_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f4_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f4.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f4_AC_RT_GRDel['Percent-2019'] = (dfd19_f4_AC_RT_GRDel['ACQ-2019'] / dfd19_f4_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f4_AC_RT_GRDel['Percent-2019'] = dfd19_f4_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f4_AC_RT_GRDel['RET-2019'] = dfd19_a4_AC_RT_GRDel['Total-2019'] - dfd19_f4_AC_RT_GRDel['ACQ-2019']
dfd19_f4_AC_RT_GRDel['Percnt-2019'] = (dfd19_f4_AC_RT_GRDel['RET-2019'] / dfd19_a4_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f4_AC_RT_GRDel['Percnt-2019'] = dfd19_f4_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f4_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a4_AC_RT_GRDel = pd.DataFrame(filtr_4_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f4_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f4.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f4_AC_RT_GRDel['Percent-2021'] = (dfd21_f4_AC_RT_GRDel['ACQ-2021'] / dfd21_f4_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f4_AC_RT_GRDel['Percent-2021'] = dfd21_f4_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f4_AC_RT_GRDel['RET-2021'] = dfd21_a4_AC_RT_GRDel['Total-2021'] - dfd21_f4_AC_RT_GRDel['ACQ-2021']
dfd21_f4_AC_RT_GRDel['Percnt-2021'] = (dfd21_f4_AC_RT_GRDel['RET-2021'] / dfd21_a4_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f4_AC_RT_GRDel['Percnt-2021'] = dfd21_f4_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f4_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a4_AC_RT_GRDel = pd.DataFrame(filtr_4_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f4_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f4.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f4_AC_RT_GRDel['Percent-2022'] = (dfd22_f4_AC_RT_GRDel['ACQ-2022'] / dfd22_f4_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f4_AC_RT_GRDel['Percent-2022'] = dfd22_f4_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f4_AC_RT_GRDel['RET-2022'] = dfd22_a4_AC_RT_GRDel['Total-2022'] - dfd22_f4_AC_RT_GRDel['ACQ-2022']
dfd22_f4_AC_RT_GRDel['Percnt-2022'] = (dfd22_f4_AC_RT_GRDel['RET-2022'] / dfd22_a4_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f4_AC_RT_GRDel['Percnt-2022'] = dfd22_f4_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f4_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a4_AC_RT_GRDel = pd.DataFrame(filtr_4_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f4_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f4.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f4_AC_RT_GRDel['Percent-2023'] = (dfd23_f4_AC_RT_GRDel['ACQ-2023'] / dfd23_f4_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f4_AC_RT_GRDel['Percent-2023'] = dfd23_f4_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f4_AC_RT_GRDel['RET-2023'] = dfd23_a4_AC_RT_GRDel['Total-2023'] - dfd23_f4_AC_RT_GRDel['ACQ-2023']
dfd23_f4_AC_RT_GRDel['Percnt-2023'] = (dfd23_f4_AC_RT_GRDel['RET-2023'] / dfd23_a4_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f4_AC_RT_GRDel['Percnt-2023'] = dfd23_f4_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f4_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f4 = pd.DataFrame(pd.merge_ordered(dfd18_a4_AC_RT_GRDel, dfd18_f4_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f4 = pd.DataFrame(pd.merge_ordered(dfd19_a4_AC_RT_GRDel, dfd19_f4_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f4 = pd.DataFrame(pd.merge_ordered(dfd21_a4_AC_RT_GRDel, dfd21_f4_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f4 = pd.DataFrame(pd.merge_ordered(dfd22_a4_AC_RT_GRDel, dfd22_f4_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_5_f4 = pd.DataFrame(pd.merge_ordered(dfd23_a4_AC_RT_GRDel, dfd23_f4_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f4 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f4, df_AC_ET_GRDel_2_f4, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f4 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f4, df_AC_ET_GRDel_3_f4, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f4 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f4, df_AC_ET_GRDel_4_f4, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f4 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f4, df_AC_ET_GRDel_5_f4, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f4 = df_AC_RT_GRDel_M4_f4[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f4 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4]
Conct_AC_RT_GRDel_f1_f4 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f4)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_4_df17_GRdel = filtr_4_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f4_Revenu_GRDel = pd.DataFrame(filtr_4_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f4_Revenu_GRDel['Percent-2017'] = (dfd17_f4_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f4_Revenu_GRDel['Percent-2017'] = dfd17_f4_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f4_Revenu_GRDel['7DEvolution-2017'] = dfd17_f4_Revenu_GRDel['Total-2017'] - dfd17_f3_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f4_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_4_df18_GRdel = filtr_4_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f4_Revenu_GRDel = pd.DataFrame(filtr_4_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f4_Revenu_GRDel['Percent-2018'] = (dfd18_f4_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f4_Revenu_GRDel['Percent-2018'] = dfd18_f4_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f4_Revenu_GRDel['7DEvolution-2018'] = dfd18_f4_Revenu_GRDel['Total-2018'] - dfd18_f3_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f4_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_4_df19_GRdel = filtr_4_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f4_Revenu_GRDel = pd.DataFrame(filtr_4_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f4_Revenu_GRDel['Percent-2019'] = (dfd19_f4_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f4_Revenu_GRDel['Percent-2019'] = dfd19_f4_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f4_Revenu_GRDel['7DEvolution-2019'] = dfd19_f4_Revenu_GRDel['Total-2019'] - dfd19_f3_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f4_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_4_df21_GRdel = filtr_4_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f4_Revenu_GRDel = pd.DataFrame(filtr_4_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f4_Revenu_GRDel['Percent-2021'] = (dfd21_f4_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f4_Revenu_GRDel['Percent-2021'] = dfd21_f4_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f4_Revenu_GRDel['7DEvolution-2021'] = dfd21_f4_Revenu_GRDel['Total-2021'] - dfd21_f3_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f4_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_4_df22_GRdel = filtr_4_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f4_Revenu_GRDel = pd.DataFrame(filtr_4_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f4_Revenu_GRDel['Percent-2022'] = (dfd22_f4_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f4_Revenu_GRDel['Percent-2022'] = dfd22_f4_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f4_Revenu_GRDel['7DEvolution-2022'] = dfd22_f4_Revenu_GRDel['Total-2022'] - dfd22_f3_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f4_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_4_df23_GRdel = filtr_4_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f4_Revenu_GRDel = pd.DataFrame(filtr_4_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f4_Revenu_GRDel['Percent-2023'] = (dfd23_f4_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f4_Revenu_GRDel['Percent-2023'] = dfd23_f4_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f4_Revenu_GRDel['7DEvolution-2023'] = dfd23_f4_Revenu_GRDel['Total-2023'] - dfd23_f3_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f4_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f4_Revenu_Evlt_GRDel = pd.DataFrame(filtr_4_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f4_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f4_Revenu_GRDel['Total-2023'] - dfd19_f4_Revenu_GRDel['Total-2019'])/ dfd19_f4_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f4_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f4_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f4_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f4 = pd.DataFrame(pd.merge(dfd17_f4_Revenu_GRDel, dfd18_f4_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f4 = pd.DataFrame(pd.merge(dfd19_f4_Revenu_GRDel, dfd21_f4_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f4 = pd.DataFrame(pd.merge(dfd22_f4_Revenu_GRDel, dfd23_f4_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f4 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f4, df_Revenu_GRDel_2_f4, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_5_f4 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f4, df_Revenu_GRDel_3_f4, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f4 = pd.DataFrame(pd.merge(df_Revenu_GRDel_5_f4, dfd23_f4_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f4 = df_Revenu_GRDel_f4[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f4 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4]
Conct_RV_GRDel_f1_f4 = pd.concat(ConcatFra_RV_GRDel_f1_f4)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f4_Profile_count = pd.DataFrame(filtr_4_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f4_Profile_count = dfd17_f4_Profile_count.fillna('Unknown')
dfd17_f4_Profile_count['Percent-2017'] = (dfd17_f4_Profile_count['Total-2017'] / dfd17_f4_Profile_count['Total-2017'].sum()) * 100
dfd17_f4_Profile_count['Percent-2017'] = dfd17_f4_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f4_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f4_Profile_count = pd.DataFrame(filtr_4_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f4_Profile_count = dfd18_f4_Profile_count.fillna('Unknown')
dfd18_f4_Profile_count['Percent-2018'] = (dfd18_f4_Profile_count['Total-2018'] / dfd18_f4_Profile_count['Total-2018'].sum()) * 100
dfd18_f4_Profile_count['Percent-2018'] = dfd18_f4_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f4_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f4_Profile_count = pd.DataFrame(filtr_4_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f4_Profile_count = dfd19_f4_Profile_count.fillna('Unknown')
dfd19_f4_Profile_count['Percent-2019'] = (dfd19_f4_Profile_count['Total-2019'] / dfd19_f4_Profile_count['Total-2019'].sum()) * 100
dfd19_f4_Profile_count['Percent-2019'] = dfd19_f4_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f4_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f4_Profile_count = pd.DataFrame(filtr_4_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f4_Profile_count = dfd21_f4_Profile_count.fillna('Unknown')
dfd21_f4_Profile_count['Percent-2021'] = (dfd21_f4_Profile_count['Total-2021'] / dfd21_f4_Profile_count['Total-2021'].sum()) * 100
dfd21_f4_Profile_count['Percent-2021'] = dfd21_f4_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f4_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f4_Profile_count = pd.DataFrame(filtr_4_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f4_Profile_count = dfd22_f4_Profile_count.fillna('Unknown')
dfd22_f4_Profile_count['Percent-2022'] = (dfd22_f4_Profile_count['Total-2022'] / dfd22_f4_Profile_count['Total-2022'].sum()) * 100
dfd22_f4_Profile_count['Percent-2022'] = dfd22_f4_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f4_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_Profile_count = pd.DataFrame(filtr_4_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f4_Profile_count = dfd23_f4_Profile_count.fillna('Unknown')
dfd23_f4_Profile_count['Percent-2023'] = (dfd23_f4_Profile_count['Total-2023'] / dfd23_f4_Profile_count['Total-2023'].sum()) * 100
dfd23_f4_Profile_count['Percent-2023'] = dfd23_f4_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f4_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f4 = pd.DataFrame(pd.merge(dfd17_f4_Profile_count, dfd18_f4_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f4 = pd.DataFrame(pd.merge(dfd19_f4_Profile_count, dfd21_f4_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f4 = pd.DataFrame(pd.merge(dfd22_f4_Profile_count, dfd23_f4_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f4 = pd.DataFrame(pd.merge(df_Profile_Count_1_f4, df_Profile_Count_2_f4, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f4 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f4, df_Profile_Count_3_f4, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f4 = df_Profile_Count_m2_f4.append(df_Profile_Count_m2_f4.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f4['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f4_Pass_count = pd.DataFrame(filtr_4_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f4_Pass_count = dfd17_f4_Pass_count.fillna('Unknown')
dfd17_f4_Pass_count['Percent-2017'] = (dfd17_f4_Pass_count['Total-2017'] / dfd17_f4_Pass_count['Total-2017'].sum()) * 100
dfd17_f4_Pass_count['Percent-2017'] = dfd17_f4_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f4_Pass_count = pd.DataFrame(filtr_4_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f4_Pass_count = dfd18_f4_Pass_count.fillna('Unknown')
dfd18_f4_Pass_count['Percent-2018'] = (dfd18_f4_Pass_count['Total-2018'] / dfd18_f4_Pass_count['Total-2018'].sum()) * 100
dfd18_f4_Pass_count['Percent-2018'] = dfd18_f4_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f4_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f4_Pass_count = pd.DataFrame(filtr_4_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f4_Pass_count = dfd19_f4_Pass_count.fillna('Unknown')
dfd19_f4_Pass_count['Percent-2019'] = (dfd19_f4_Pass_count['Total-2019'] / dfd19_f4_Pass_count['Total-2019'].sum()) * 100
dfd19_f4_Pass_count['Percent-2019'] = dfd19_f4_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f4_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f4_Pass_count = pd.DataFrame(filtr_4_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f4_Pass_count = dfd21_f4_Pass_count.fillna('Unknown')
dfd21_f4_Pass_count['Percent-2021'] = (dfd21_f4_Pass_count['Total-2021'] / dfd21_f4_Pass_count['Total-2021'].sum()) * 100
dfd21_f4_Pass_count['Percent-2021'] = dfd21_f4_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f4_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f4_Pass_count = pd.DataFrame(filtr_4_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f4_Pass_count = dfd22_f4_Pass_count.fillna('Unknown')
dfd22_f4_Pass_count['Percent-2022'] = (dfd22_f4_Pass_count['Total-2022'] / dfd22_f4_Pass_count['Total-2022'].sum()) * 100
dfd22_f4_Pass_count['Percent-2022'] = dfd22_f4_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f4_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_Pass_count = pd.DataFrame(filtr_4_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f4_Pass_count = dfd23_f4_Pass_count.fillna('Unknown')
dfd23_f4_Pass_count['Percent-2023'] = (dfd23_f4_Pass_count['Total-2023'] / dfd23_f4_Pass_count['Total-2023'].sum()) * 100
dfd23_f4_Pass_count['Percent-2023'] = dfd23_f4_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f4_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f4 = pd.DataFrame(pd.merge(dfd17_f4_Pass_count, dfd18_f4_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f4 = pd.DataFrame(pd.merge(dfd19_f4_Pass_count, dfd21_f4_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f4 = pd.DataFrame(pd.merge(dfd22_f4_Pass_count, dfd23_f4_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f4 = pd.DataFrame(pd.merge(df_Pass_Count_1_f4, df_Pass_Count_2_f4, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f4 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f4, df_Pass_Count_3_f4, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f4 = df_Pass_Count_m2_f4.append(df_Pass_Count_m2_f4.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f4['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f4_Attendees_Country_count = pd.DataFrame(filtr_4_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f4_Attendees_Country_count = dfd17_f4_Attendees_Country_count.fillna('Unknown')
dfd17_f4_Attendees_Country_count['Percent-2017'] = (dfd17_f4_Attendees_Country_count['Total-2017'] / dfd17_f4_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f4_Attendees_Country_count['Percent-2017'] = dfd17_f4_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f4_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f4_Attendees_Country_count = pd.DataFrame(filtr_4_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f4_Attendees_Country_count = dfd18_f4_Attendees_Country_count.fillna('Unknown')
dfd18_f4_Attendees_Country_count['Percent-2018'] = (dfd18_f4_Attendees_Country_count['Total-2018'] / dfd18_f4_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f4_Attendees_Country_count['Percent-2018'] = dfd18_f4_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f4_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f4_Attendees_Country_count = pd.DataFrame(filtr_4_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f4_Attendees_Country_count = dfd19_f4_Attendees_Country_count.fillna('Unknown')
dfd19_f4_Attendees_Country_count['Percent-2019'] = (dfd19_f4_Attendees_Country_count['Total-2019'] / dfd19_f4_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f4_Attendees_Country_count['Percent-2019'] = dfd19_f4_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f4_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f4_Attendees_Country_count = pd.DataFrame(filtr_4_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f4_Attendees_Country_count = dfd21_f4_Attendees_Country_count.fillna('Unknown')
dfd21_f4_Attendees_Country_count['Percent-2021'] = (dfd21_f4_Attendees_Country_count['Total-2021'] / dfd21_f4_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f4_Attendees_Country_count['Percent-2021'] = dfd21_f4_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f4_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f4_Attendees_Country_count = pd.DataFrame(filtr_4_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f4_Attendees_Country_count = dfd22_f4_Attendees_Country_count.fillna('Unknown')
dfd22_f4_Attendees_Country_count['Percent-2022'] = (dfd22_f4_Attendees_Country_count['Total-2022'] / dfd22_f4_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f4_Attendees_Country_count['Percent-2022'] = dfd22_f4_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f4_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_Attendees_Country_count = pd.DataFrame(filtr_4_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f4_Attendees_Country_count = dfd23_f4_Attendees_Country_count.fillna('Unknown')
dfd23_f4_Attendees_Country_count['Percent-2023'] = (dfd23_f4_Attendees_Country_count['Total-2023'] / dfd23_f4_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f4_Attendees_Country_count['Percent-2023'] = dfd23_f4_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f4_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f4 = pd.DataFrame(pd.merge(dfd17_f4_Attendees_Country_count, dfd18_f4_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f4 = pd.DataFrame(pd.merge(dfd19_f4_Attendees_Country_count, dfd21_f4_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f4 = pd.DataFrame(pd.merge(dfd22_f4_Attendees_Country_count, dfd23_f4_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f4 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f4, dfAttendees_Country_Count_2_f4, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f4.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f4 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f4, dfAttendees_Country_Count_3_f4, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f4 = dfAttendees_Country_Count_m2_f4.append(dfAttendees_Country_Count_m2_f4.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f4['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f4_ATTENDEES_AREAS_count = pd.DataFrame(filtr_4_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f4_ATTENDEES_AREAS_count = dfd17_f4_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f4_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f4_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f4_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f4_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f4_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f4_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f4_ATTENDEES_AREAS_count = pd.DataFrame(filtr_4_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f4_ATTENDEES_AREAS_count = dfd18_f4_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f4_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f4_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f4_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f4_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f4_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f4_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f4_ATTENDEES_AREAS_count = pd.DataFrame(filtr_4_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f4_ATTENDEES_AREAS_count = dfd19_f4_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f4_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f4_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f4_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f4_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f4_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f4_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f4_ATTENDEES_AREAS_count = pd.DataFrame(filtr_4_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f4_ATTENDEES_AREAS_count = dfd21_f4_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f4_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f4_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f4_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f4_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f4_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f4_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f4_ATTENDEES_AREAS_count = pd.DataFrame(filtr_4_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f4_ATTENDEES_AREAS_count = dfd22_f4_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f4_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f4_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f4_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f4_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f4_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f4_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_ATTENDEES_AREAS_count = pd.DataFrame(filtr_4_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f4_ATTENDEES_AREAS_count = dfd23_f4_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f4_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f4_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f4_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f4_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f4_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f4_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f4 = pd.DataFrame(pd.merge(dfd17_f4_ATTENDEES_AREAS_count, dfd18_f4_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f4 = pd.DataFrame(pd.merge(dfd19_f4_ATTENDEES_AREAS_count, dfd21_f4_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f4 = pd.DataFrame(pd.merge(dfd22_f4_ATTENDEES_AREAS_count, dfd23_f4_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f4.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f4 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f4, df_ATTENDEES_AREAS_count_2_f4, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f4 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f4, df_ATTENDEES_AREAS_count_3_f4, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f4 = df_ATTENDEES_AREAS_count_m2_f4.append(df_ATTENDEES_AREAS_count_m2_f4.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f4['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f4_Attendees_Specialty_count = pd.DataFrame(filtr_4_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f4_Attendees_Specialty_count = dfd17_f4_Attendees_Specialty_count.fillna('Unknown')
dfd17_f4_Attendees_Specialty_count['Percent-2017'] = (dfd17_f4_Attendees_Specialty_count['Total-2017'] / dfd17_f4_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f4_Attendees_Specialty_count['Percent-2017'] = dfd17_f4_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f4_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f4_Attendees_Specialty_count = pd.DataFrame(filtr_4_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f4_Attendees_Specialty_count = dfd18_f4_Attendees_Specialty_count.fillna('Unknown')
dfd18_f4_Attendees_Specialty_count['Percent-2018'] = (dfd18_f4_Attendees_Specialty_count['Total-2018'] / dfd18_f4_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f4_Attendees_Specialty_count['Percent-2018'] = dfd18_f4_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f4_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f4_Attendees_Specialty_count = pd.DataFrame(filtr_4_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f4_Attendees_Specialty_count = dfd19_f4_Attendees_Specialty_count.fillna('Unknown')
dfd19_f4_Attendees_Specialty_count['Percent-2019'] = (dfd19_f4_Attendees_Specialty_count['Total-2019'] / dfd19_f4_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f4_Attendees_Specialty_count['Percent-2019'] = dfd19_f4_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f4_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f4_Attendees_Specialty_count = pd.DataFrame(filtr_4_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f4_Attendees_Specialty_count = dfd21_f4_Attendees_Specialty_count.fillna('Unknown')
dfd21_f4_Attendees_Specialty_count['Percent-2021'] = (dfd21_f4_Attendees_Specialty_count['Total-2021'] / dfd21_f4_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f4_Attendees_Specialty_count['Percent-2021'] = dfd21_f4_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f4_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f4_Attendees_Specialty_count = pd.DataFrame(filtr_4_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f4_Attendees_Specialty_count = dfd22_f4_Attendees_Specialty_count.fillna('Unknown')
dfd22_f4_Attendees_Specialty_count['Percent-2022'] = (dfd22_f4_Attendees_Specialty_count['Total-2022'] / dfd22_f4_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f4_Attendees_Specialty_count['Percent-2022'] = dfd22_f4_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f4_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f4_Attendees_Specialty_count = pd.DataFrame(filtr_4_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f4_Attendees_Specialty_count = dfd23_f4_Attendees_Specialty_count.fillna('Unknown')
dfd23_f4_Attendees_Specialty_count['Percent-2023'] = (dfd23_f4_Attendees_Specialty_count['Total-2023'] / dfd23_f4_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f4_Attendees_Specialty_count['Percent-2023'] = dfd23_f4_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f4_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f4 = pd.DataFrame(pd.merge(dfd17_f4_Attendees_Specialty_count, dfd18_f4_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f4 = pd.DataFrame(pd.merge(dfd19_f4_Attendees_Specialty_count, dfd21_f4_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f4 = pd.DataFrame(pd.merge(dfd22_f4_Attendees_Specialty_count, dfd23_f4_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f4 = pd.DataFrame(pd.merge(df_Specialty_count_1_f4, df_Specialty_count_2_f4, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f4.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f4 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f4, df_Specialty_count_3_f4, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f4 = df_Specialty_count_m2_f4.append(df_Specialty_count_m2_f4.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f4['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f4['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f4['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f4 = Concat_Registrations_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f4['Total-2017'] = Concat_Registrations_count_f1_f4['Total-2017'].astype(int)
Concat_Registrations_count_f1_f4['Percent-2017'] = Concat_Registrations_count_f1_f4['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f4['7DEvolution-2017'] = Concat_Registrations_count_f1_f4['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f4['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f4['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f4 = Concat_Registrations_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f4['Total-2018'] = Concat_Registrations_count_f1_f4['Total-2018'].astype(int)
Concat_Registrations_count_f1_f4['Percent-2018'] = Concat_Registrations_count_f1_f4['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f4['7DEvolution-2018'] = Concat_Registrations_count_f1_f4['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f4['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f4['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f4 = Concat_Registrations_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f4['Total-2019'] = Concat_Registrations_count_f1_f4['Total-2019'].astype(int)
Concat_Registrations_count_f1_f4['Percent-2019'] = Concat_Registrations_count_f1_f4['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f4['7DEvolution-2019'] = Concat_Registrations_count_f1_f4['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f4['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f4['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f4 = Concat_Registrations_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f4['Total-2021'] = Concat_Registrations_count_f1_f4['Total-2021'].astype(int)
Concat_Registrations_count_f1_f4['Percent-2021'] = Concat_Registrations_count_f1_f4['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f4['7DEvolution-2021'] = Concat_Registrations_count_f1_f4['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f4['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f4['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f4 = Concat_Registrations_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f4['Total-2022'] = Concat_Registrations_count_f1_f4['Total-2022'].astype(int)
Concat_Registrations_count_f1_f4['Percent-2022'] = Concat_Registrations_count_f1_f4['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f4['7DEvolution-2022'] = Concat_Registrations_count_f1_f4['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f4['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f4['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f4 = Concat_Registrations_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f4['Total-2023'] = Concat_Registrations_count_f1_f4['Total-2023'].astype(int)
Concat_Registrations_count_f1_f4['Percent-2023'] = Concat_Registrations_count_f1_f4['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f4['7DEvolution-2023'] = Concat_Registrations_count_f1_f4['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f4['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f4['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f4 = Concat_ACQRET_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f4['Total-2018'] = Concat_ACQRET_count_f1_f4['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f4['ACQ-2018'] = Concat_ACQRET_count_f1_f4['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f4['Percent-2018'] = Concat_ACQRET_count_f1_f4['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f4['RET-2018'] = Concat_ACQRET_count_f1_f4['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f4['Percnt-2018'] = Concat_ACQRET_count_f1_f4['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f4['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f4['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f4 = Concat_ACQRET_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f4['Total-2019'] = Concat_ACQRET_count_f1_f4['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f4['ACQ-2019'] = Concat_ACQRET_count_f1_f4['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f4['Percent-2019'] = Concat_ACQRET_count_f1_f4['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f4['RET-2019'] = Concat_ACQRET_count_f1_f4['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f4['Percnt-2019'] = Concat_ACQRET_count_f1_f4['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f4['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f4['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f4 = Concat_ACQRET_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f4['Total-2021'] = Concat_ACQRET_count_f1_f4['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f4['ACQ-2021'] = Concat_ACQRET_count_f1_f4['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f4['Percent-2021'] = Concat_ACQRET_count_f1_f4['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f4['RET-2021'] = Concat_ACQRET_count_f1_f4['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f4['Percnt-2021'] = Concat_ACQRET_count_f1_f4['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f4['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f4['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f4 = Concat_ACQRET_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f4['Total-2022'] = Concat_ACQRET_count_f1_f4['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f4['ACQ-2022'] = Concat_ACQRET_count_f1_f4['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f4['Percent-2022'] = Concat_ACQRET_count_f1_f4['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f4['RET-2022'] = Concat_ACQRET_count_f1_f4['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f4['Percnt-2022'] = Concat_ACQRET_count_f1_f4['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f4['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f4['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f4 = Concat_ACQRET_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f4['Total-2023'] = Concat_ACQRET_count_f1_f4['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f4['ACQ-2023'] = Concat_ACQRET_count_f1_f4['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f4['Percent-2023'] = Concat_ACQRET_count_f1_f4['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f4['RET-2023'] = Concat_ACQRET_count_f1_f4['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f4['Percnt-2023'] = Concat_ACQRET_count_f1_f4['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f4['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f4['Total-2017'],errors='coerce')
Concat_REV_count_f1_f4 = Concat_REV_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f4['Total-2017'] = Concat_REV_count_f1_f4['Total-2017'].astype(int)
Concat_REV_count_f1_f4['Percent-2017'] = Concat_REV_count_f1_f4['Percent-2017'].astype(float)
Concat_REV_count_f1_f4['7DEvolution-2017'] = Concat_REV_count_f1_f4['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f4['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f4['Total-2018'],errors='coerce')
Concat_REV_count_f1_f4 = Concat_REV_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f4['Total-2018'] = Concat_REV_count_f1_f4['Total-2018'].astype(int)
Concat_REV_count_f1_f4['Percent-2018'] = Concat_REV_count_f1_f4['Percent-2018'].astype(float)
Concat_REV_count_f1_f4['7DEvolution-2018'] = Concat_REV_count_f1_f4['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f4['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f4['Total-2019'],errors='coerce')
Concat_REV_count_f1_f4 = Concat_REV_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f4['Total-2019'] = Concat_REV_count_f1_f4['Total-2019'].astype(int)
Concat_REV_count_f1_f4['Percent-2019'] = Concat_REV_count_f1_f4['Percent-2019'].astype(float)
Concat_REV_count_f1_f4['7DEvolution-2019'] = Concat_REV_count_f1_f4['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f4['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f4['Total-2022'],errors='coerce')
Concat_REV_count_f1_f4 = Concat_REV_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f4['Total-2022'] = Concat_REV_count_f1_f4['Total-2022'].astype(int)
Concat_REV_count_f1_f4['Percent-2022'] = Concat_REV_count_f1_f4['Percent-2022'].astype(float)
Concat_REV_count_f1_f4['7DEvolution-2022'] = Concat_REV_count_f1_f4['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f4['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f4['Total-2023'],errors='coerce')
Concat_REV_count_f1_f4 = Concat_REV_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f4['Total-2023'] = Concat_REV_count_f1_f4['Total-2023'].astype(int)
Concat_REV_count_f1_f4['Percent-2023'] = Concat_REV_count_f1_f4['Percent-2023'].astype(float)
Concat_REV_count_f1_f4['7DEvolution-2023'] = Concat_REV_count_f1_f4['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f4['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f4['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f4 = Concat_RegGRDel_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f4['Total-2017'] = Concat_RegGRDel_count_f1_f4['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f4['Percent-2017'] = Concat_RegGRDel_count_f1_f4['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f4['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f4['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f4['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f4['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f4 = Concat_RegGRDel_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f4['Total-2018'] = Concat_RegGRDel_count_f1_f4['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f4['Percent-2018'] = Concat_RegGRDel_count_f1_f4['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f4['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f4['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f4['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f4['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f4 = Concat_RegGRDel_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f4['Total-2019'] = Concat_RegGRDel_count_f1_f4['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f4['Percent-2019'] = Concat_RegGRDel_count_f1_f4['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f4['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f4['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f4['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f4['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f4 = Concat_RegGRDel_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f4['Total-2021'] = Concat_RegGRDel_count_f1_f4['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f4['Percent-2021'] = Concat_RegGRDel_count_f1_f4['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f4['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f4['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f4['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f4['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f4 = Concat_RegGRDel_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f4['Total-2022'] = Concat_RegGRDel_count_f1_f4['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f4['Percent-2022'] = Concat_RegGRDel_count_f1_f4['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f4['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f4['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f4['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f4['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f4 = Concat_RegGRDel_count_f1_f4.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f4['Total-2023'] = Concat_RegGRDel_count_f1_f4['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f4['Percent-2023'] = Concat_RegGRDel_count_f1_f4['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f4['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f4['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f4['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f4['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f4 = Conct_AC_RT_GRDel_f1_f4.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f4['Total-2018'] = Conct_AC_RT_GRDel_f1_f4['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f4['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f4['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f4['Percent-2018'] = Conct_AC_RT_GRDel_f1_f4['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f4['RET-2018'] = Conct_AC_RT_GRDel_f1_f4['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f4['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f4['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f4['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f4['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f4 = Conct_AC_RT_GRDel_f1_f4.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f4['Total-2019'] = Conct_AC_RT_GRDel_f1_f4['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f4['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f4['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f4['Percent-2019'] = Conct_AC_RT_GRDel_f1_f4['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f4['RET-2019'] = Conct_AC_RT_GRDel_f1_f4['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f4['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f4['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f4['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f4['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f4 = Conct_AC_RT_GRDel_f1_f4.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f4['Total-2021'] = Conct_AC_RT_GRDel_f1_f4['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f4['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f4['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f4['Percent-2021'] = Conct_AC_RT_GRDel_f1_f4['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f4['RET-2021'] = Conct_AC_RT_GRDel_f1_f4['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f4['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f4['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f4['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f4['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f4 = Conct_AC_RT_GRDel_f1_f4.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f4['Total-2022'] = Conct_AC_RT_GRDel_f1_f4['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f4['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f4['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f4['Percent-2022'] = Conct_AC_RT_GRDel_f1_f4['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f4['RET-2022'] = Conct_AC_RT_GRDel_f1_f4['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f4['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f4['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f4['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f4['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f4 = Conct_AC_RT_GRDel_f1_f4.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f4['Total-2023'] = Conct_AC_RT_GRDel_f1_f4['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f4['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f4['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f4['Percent-2023'] = Conct_AC_RT_GRDel_f1_f4['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f4['RET-2023'] = Conct_AC_RT_GRDel_f1_f4['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f4['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f4['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f4['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f4['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f4 = Conct_RV_GRDel_f1_f4.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f4['Total-2017'] = Conct_RV_GRDel_f1_f4['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f4['Percent-2017'] = Conct_RV_GRDel_f1_f4['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f4['7DEvolution-2017'] = Conct_RV_GRDel_f1_f4['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f4['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f4['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f4 = Conct_RV_GRDel_f1_f4.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f4['Total-2018'] = Conct_RV_GRDel_f1_f4['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f4['Percent-2018'] = Conct_RV_GRDel_f1_f4['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f4['7DEvolution-2018'] = Conct_RV_GRDel_f1_f4['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f4['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f4['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f4 = Conct_RV_GRDel_f1_f4.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f4['Total-2019'] = Conct_RV_GRDel_f1_f4['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f4['Percent-2019'] = Conct_RV_GRDel_f1_f4['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f4['7DEvolution-2019'] = Conct_RV_GRDel_f1_f4['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f4['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f4['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f4 = Conct_RV_GRDel_f1_f4.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f4['Total-2022'] = Conct_RV_GRDel_f1_f4['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f4['Percent-2022'] = Conct_RV_GRDel_f1_f4['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f4['7DEvolution-2022'] = Conct_RV_GRDel_f1_f4['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f4['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f4['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f4 = Conct_RV_GRDel_f1_f4.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f4['Total-2023'] = Conct_RV_GRDel_f1_f4['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f4['Percent-2023'] = Conct_RV_GRDel_f1_f4['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f4['7DEvolution-2023'] = Conct_RV_GRDel_f1_f4['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f4['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f4['Total-2017'],errors='coerce')
df_Profile_Count_m2_f4 = df_Profile_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f4['Total-2017'] = df_Profile_Count_m2_f4['Total-2017'].astype(int)
df_Profile_Count_m2_f4['Percent-2017'] = df_Profile_Count_m2_f4['Percent-2017'].astype(float)

df_Profile_Count_m2_f4['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f4['Total-2018'],errors='coerce')
df_Profile_Count_m2_f4 = df_Profile_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f4['Total-2018'] = df_Profile_Count_m2_f4['Total-2018'].astype(int)
df_Profile_Count_m2_f4['Percent-2018'] = df_Profile_Count_m2_f4['Percent-2018'].astype(float)

df_Profile_Count_m2_f4['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f4['Total-2019'],errors='coerce')
df_Profile_Count_m2_f4 = df_Profile_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f4['Total-2019'] = df_Profile_Count_m2_f4['Total-2019'].astype(int)
df_Profile_Count_m2_f4['Percent-2019'] = df_Profile_Count_m2_f4['Percent-2019'].astype(float)

df_Profile_Count_m2_f4['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f4['Total-2021'],errors='coerce')
df_Profile_Count_m2_f4 = df_Profile_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f4['Total-2021'] = df_Profile_Count_m2_f4['Total-2021'].astype(int)
df_Profile_Count_m2_f4['Percent-2021'] = df_Profile_Count_m2_f4['Percent-2021'].astype(float)

df_Profile_Count_m2_f4['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f4['Total-2022'],errors='coerce')
df_Profile_Count_m2_f4 = df_Profile_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f4['Total-2022'] = df_Profile_Count_m2_f4['Total-2022'].astype(int)
df_Profile_Count_m2_f4['Percent-2022'] = df_Profile_Count_m2_f4['Percent-2022'].astype(float)

df_Profile_Count_m2_f4['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f4['Total-2023'],errors='coerce')
df_Profile_Count_m2_f4 = df_Profile_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f4['Total-2023'] = df_Profile_Count_m2_f4['Total-2023'].astype(int)
df_Profile_Count_m2_f4['Percent-2023'] = df_Profile_Count_m2_f4['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f4['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f4['Total-2017'],errors='coerce')
df_Pass_Count_m2_f4 = df_Pass_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f4['Total-2017'] = df_Pass_Count_m2_f4['Total-2017'].astype(int)
df_Pass_Count_m2_f4['Percent-2017'] = df_Pass_Count_m2_f4['Percent-2017'].astype(float)

df_Pass_Count_m2_f4['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f4['Total-2018'],errors='coerce')
df_Pass_Count_m2_f4 = df_Pass_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f4['Total-2018'] = df_Pass_Count_m2_f4['Total-2018'].astype(int)
df_Pass_Count_m2_f4['Percent-2018'] = df_Pass_Count_m2_f4['Percent-2018'].astype(float)

df_Pass_Count_m2_f4['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f4['Total-2019'],errors='coerce')
df_Pass_Count_m2_f4 = df_Pass_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f4['Total-2019'] = df_Pass_Count_m2_f4['Total-2019'].astype(int)
df_Pass_Count_m2_f4['Percent-2019'] = df_Pass_Count_m2_f4['Percent-2019'].astype(float)

df_Pass_Count_m2_f4['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f4['Total-2021'],errors='coerce')
df_Pass_Count_m2_f4 = df_Pass_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f4['Total-2021'] = df_Pass_Count_m2_f4['Total-2021'].astype(int)
df_Pass_Count_m2_f4['Percent-2021'] = df_Pass_Count_m2_f4['Percent-2021'].astype(float)

df_Pass_Count_m2_f4['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f4['Total-2022'],errors='coerce')
df_Pass_Count_m2_f4 = df_Pass_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f4['Total-2022'] = df_Pass_Count_m2_f4['Total-2022'].astype(int)
df_Pass_Count_m2_f4['Percent-2022'] = df_Pass_Count_m2_f4['Percent-2022'].astype(float)

df_Pass_Count_m2_f4['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f4['Total-2023'],errors='coerce')
df_Pass_Count_m2_f4 = df_Pass_Count_m2_f4.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f4['Total-2023'] = df_Pass_Count_m2_f4['Total-2023'].astype(int)
df_Pass_Count_m2_f4['Percent-2023'] = df_Pass_Count_m2_f4['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f4['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f4['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f4 = dfAttendees_Country_Count_m2_f4.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f4['Total-2017'] = dfAttendees_Country_Count_m2_f4['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f4['Percent-2017'] = dfAttendees_Country_Count_m2_f4['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f4['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f4['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f4 = dfAttendees_Country_Count_m2_f4.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f4['Total-2018'] = dfAttendees_Country_Count_m2_f4['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f4['Percent-2018'] = dfAttendees_Country_Count_m2_f4['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f4['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f4['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f4 = dfAttendees_Country_Count_m2_f4.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f4['Total-2019'] = dfAttendees_Country_Count_m2_f4['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f4['Percent-2019'] = dfAttendees_Country_Count_m2_f4['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f4['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f4['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f4 = dfAttendees_Country_Count_m2_f4.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f4['Total-2021'] = dfAttendees_Country_Count_m2_f4['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f4['Percent-2021'] = dfAttendees_Country_Count_m2_f4['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f4['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f4['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f4 = dfAttendees_Country_Count_m2_f4.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f4['Total-2022'] = dfAttendees_Country_Count_m2_f4['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f4['Percent-2022'] = dfAttendees_Country_Count_m2_f4['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f4['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f4['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f4 = dfAttendees_Country_Count_m2_f4.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f4['Total-2023'] = dfAttendees_Country_Count_m2_f4['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f4['Percent-2023'] = dfAttendees_Country_Count_m2_f4['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f4['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f4['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f4 = df_ATTENDEES_AREAS_count_m2_f4.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f4['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f4['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f4['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f4['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f4['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f4['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f4 = df_ATTENDEES_AREAS_count_m2_f4.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f4['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f4['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f4['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f4['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f4['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f4['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f4 = df_ATTENDEES_AREAS_count_m2_f4.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f4['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f4['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f4['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f4['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f4['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f4['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f4 = df_ATTENDEES_AREAS_count_m2_f4.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f4['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f4['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f4['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f4['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f4['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f4['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f4 = df_ATTENDEES_AREAS_count_m2_f4.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f4['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f4['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f4['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f4['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f4['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f4['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f4 = df_ATTENDEES_AREAS_count_m2_f4.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f4['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f4['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f4['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f4['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f4['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f4['Total-2017'],errors='coerce')
df_Specialty_count_m2_f4 = df_Specialty_count_m2_f4.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f4['Total-2017'] = df_Specialty_count_m2_f4['Total-2017'].astype(int)
df_Specialty_count_m2_f4['Percent-2017'] = df_Specialty_count_m2_f4['Percent-2017'].astype(float)

df_Specialty_count_m2_f4['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f4['Total-2018'],errors='coerce')
df_Specialty_count_m2_f4 = df_Specialty_count_m2_f4.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f4['Total-2018'] = df_Specialty_count_m2_f4['Total-2018'].astype(int)
df_Specialty_count_m2_f4['Percent-2018'] = df_Specialty_count_m2_f4['Percent-2018'].astype(float)

df_Specialty_count_m2_f4['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f4['Total-2019'],errors='coerce')
df_Specialty_count_m2_f4 = df_Specialty_count_m2_f4.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f4['Total-2019'] = df_Specialty_count_m2_f4['Total-2019'].astype(int)
df_Specialty_count_m2_f4['Percent-2019'] = df_Specialty_count_m2_f4['Percent-2019'].astype(float)

df_Specialty_count_m2_f4['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f4['Total-2021'],errors='coerce')
df_Specialty_count_m2_f4 = df_Specialty_count_m2_f4.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f4['Total-2021'] = df_Specialty_count_m2_f4['Total-2021'].astype(int)
df_Specialty_count_m2_f4['Percent-2021'] = df_Specialty_count_m2_f4['Percent-2021'].astype(float)

df_Specialty_count_m2_f4['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f4['Total-2022'],errors='coerce')
df_Specialty_count_m2_f4 = df_Specialty_count_m2_f4.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f4['Total-2022'] = df_Specialty_count_m2_f4['Total-2022'].astype(int)
df_Specialty_count_m2_f4['Percent-2022'] = df_Specialty_count_m2_f4['Percent-2022'].astype(float)

df_Specialty_count_m2_f4['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f4['Total-2023'],errors='coerce')
df_Specialty_count_m2_f4 = df_Specialty_count_m2_f4.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f4['Total-2023'] = df_Specialty_count_m2_f4['Total-2023'].astype(int)
df_Specialty_count_m2_f4['Percent-2023'] = df_Specialty_count_m2_f4['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f4.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f4.dtypes)
#print(df_Specialty_count_m2_f4.dtypes)

#print(dfAttendees_Country_Count_m2_f4.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f4.dtypes)
#print(df_Specialty_count_m2_f4.dtypes)

# EXCEL FILE
writerf4 = pd.ExcelWriter(outputExcelFile_f4, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f4.to_excel\
    (writerf4, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f4.to_excel\
    (writerf4, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f4.to_excel\
    (writerf4, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f4.to_excel\
    (writerf4, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f4.to_excel\
    (writerf4, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f4.to_excel\
    (writerf4, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f4.to_excel\
    (writerf4, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f4.to_excel\
    (writerf4, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f4.to_excel\
    (writerf4, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f4.to_excel\
    (writerf4, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f4.to_excel\
    (writerf4, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf4.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f4)

workbook.save(outputExcelFile_f4)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 168 days**********************************************')
print('************************************End of 168 days**********************************************')
print('************************************End of 168 days**********************************************')
print('************************************End of 168 days**********************************************')
print('************************************End of 168 days**********************************************')
print('************************************End of 168 days**********************************************')
print('************************************End of 168 days**********************************************')
print('************************************End of 168 days**********************************************')
print('************************************End of 168 days**********************************************')

#unit 1
#Total Number of Registrations
dfd17_f5_Registrations_count = pd.DataFrame(filter_5_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f5_Registrations_count = dfd17_f5_Registrations_count.fillna('Unknown')
dfd17_f5_Registrations_count['Percent-2017'] = (dfd17_f5_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f5_Registrations_count['Percent-2017'] = dfd17_f5_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f5_Registrations_count['7DEvolution-2017'] = dfd17_f5_Registrations_count['Total-2017'] - dfd17_f4_Registrations_count['Total-2017']
#print(tab(dfd17_f5_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f5_Registrations_count = pd.DataFrame(filter_5_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f5_Registrations_count = dfd18_f5_Registrations_count.fillna('Unknown')
dfd18_f5_Registrations_count['Percent-2018'] = (dfd18_f5_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f5_Registrations_count['Percent-2018'] = dfd18_f5_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f5_Registrations_count['7DEvolution-2018'] = dfd18_f5_Registrations_count['Total-2018'] - dfd18_f4_Registrations_count['Total-2018']
#print(tab(dfd18_f5_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f5_Registrations_count = pd.DataFrame(filter_5_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f5_Registrations_count = dfd19_f5_Registrations_count.fillna('Unknown')
dfd19_f5_Registrations_count['Percent-2019'] = (dfd19_f5_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f5_Registrations_count['Percent-2019'] = dfd19_f5_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f5_Registrations_count['7DEvolution-2019'] = dfd19_f5_Registrations_count['Total-2019'] - dfd19_f4_Registrations_count['Total-2019']
#print(tab(dfd19_f5_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f5_Registrations_count = pd.DataFrame(filter_5_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f5_Registrations_count = dfd21_f5_Registrations_count.fillna('Unknown')
dfd21_f5_Registrations_count['Percent-2021'] = (dfd21_f5_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f5_Registrations_count['Percent-2021'] = dfd21_f5_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f5_Registrations_count['7DEvolution-2021'] = dfd21_f5_Registrations_count['Total-2021'] - dfd21_f4_Registrations_count['Total-2021']
#print(tab(dfd21_f5_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f5_Registrations_count = pd.DataFrame(filter_5_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f5_Registrations_count = dfd22_f5_Registrations_count.fillna('Unknown')
dfd22_f5_Registrations_count['Percent-2022'] = (dfd22_f5_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f5_Registrations_count['Percent-2022'] = dfd22_f5_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f5_Registrations_count['7DEvolution-2022'] = dfd22_f5_Registrations_count['Total-2022'] - dfd22_f4_Registrations_count['Total-2022']
print(tab(dfd22_f5_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_Registrations_count = pd.DataFrame(filter_5_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f5_Registrations_count = dfd23_f5_Registrations_count.fillna('Unknown')
dfd23_f5_Registrations_count['Percent-2023'] = (dfd23_f5_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f5_Registrations_count['Percent-2023'] = dfd23_f5_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f5_Registrations_count['7DEvolution-2023'] = dfd23_f5_Registrations_count['Total-2023'] - dfd23_f4_Registrations_count['Total-2023']
#print(tab(dfd23_f5_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f5_RegistrationsEvolution_count = pd.DataFrame(filter_5_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f5_RegistrationsEvolution_count = dfd23_f5_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f5_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f5_Registrations_count['Total-2023'] - dfd19_f5_Registrations_count['Total-2019'])/ dfd19_f5_Registrations_count['Total-2019'].sum()) * 100
dfd23_f5_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f5_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f5_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f5 = pd.DataFrame(pd.merge(dfd17_f5_Registrations_count, dfd18_f5_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f5 = pd.DataFrame(pd.merge(dfd19_f5_Registrations_count, dfd21_f5_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f5 = pd.DataFrame(pd.merge(dfd22_f5_Registrations_count, dfd23_f5_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f5 = pd.DataFrame(pd.merge(df_Registrations_count_1_f5, df_Registrations_count_2_f5, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f5 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f5, df_Registrations_count_3_f5, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f5 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f5, dfd23_f5_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f5 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5]
Concat_Registrations_count_f1_f5 = pd.concat(ConcatFrames_Registrations_count_f1_f5)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f5  = ConcatFrames_Registrations_count_f1_f5.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f5.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f5 = filter_5_df18[filter_5_df18['New customer'] == 1]
df_NewCustomer_df19_f5 = filter_5_df19[filter_5_df19['New customer'] == 1]
df_NewCustomer_df21_f5 = filter_5_df21[filter_5_df21['New customer'] == 1]
df_NewCustomer_df22_f5 = filter_5_df22[filter_5_df22['New customer'] == 1]
df_NewCustomer_df23_f5 = filter_5_df23[filter_5_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f5.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f5.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f5.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a5_ACQRET_count = pd.DataFrame(filter_5_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f5_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f5.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f5_ACQRET_count['Percent-2018'] = (dfd18_f5_ACQRET_count['ACQ-2018'] / dfd18_f5_Registrations_count['Total-2018'].sum()) * 100
dfd18_f5_ACQRET_count['Percent-2018'] = dfd18_f5_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f5_ACQRET_count['RET-2018'] = dfd18_a5_ACQRET_count['Total-2018'] - dfd18_f5_ACQRET_count['ACQ-2018']
dfd18_f5_ACQRET_count['Percnt-2018'] = (dfd18_f5_ACQRET_count['RET-2018'] / dfd18_a5_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f5_ACQRET_count['Percnt-2018'] = dfd18_f5_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f5_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a5_ACQRET_count = pd.DataFrame(filter_5_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f5_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f5.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f5_ACQRET_count['Percent-2019'] = (dfd19_f5_ACQRET_count['ACQ-2019'] / dfd19_f5_Registrations_count['Total-2019'].sum()) * 100
dfd19_f5_ACQRET_count['Percent-2019'] = dfd19_f5_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f5_ACQRET_count['RET-2019'] = dfd19_a5_ACQRET_count['Total-2019'] - dfd19_f5_ACQRET_count['ACQ-2019']
dfd19_f5_ACQRET_count['Percnt-2019'] = (dfd19_f5_ACQRET_count['RET-2019'] / dfd19_a5_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f5_ACQRET_count['Percnt-2019'] = dfd19_f5_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f5_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a5_ACQRET_count = pd.DataFrame(filter_5_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f5_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f5.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f5_ACQRET_count['Percent-2021'] = (dfd21_f5_ACQRET_count['ACQ-2021'] / dfd21_f5_Registrations_count['Total-2021'].sum()) * 100
dfd21_f5_ACQRET_count['Percent-2021'] = dfd21_f5_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f5_ACQRET_count['RET-2021'] = dfd21_a5_ACQRET_count['Total-2021'] - dfd21_f5_ACQRET_count['ACQ-2021']
dfd21_f5_ACQRET_count['Percnt-2021'] = (dfd21_f5_ACQRET_count['RET-2021'] / dfd21_a5_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f5_ACQRET_count['Percnt-2021'] = dfd21_f5_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f5_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a5_ACQRET_count = pd.DataFrame(filter_5_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f5_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f5.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f5_ACQRET_count['Percent-2022'] = (dfd22_f5_ACQRET_count['ACQ-2022'] / dfd22_f5_Registrations_count['Total-2022'].sum()) * 100
dfd22_f5_ACQRET_count['Percent-2022'] = dfd22_f5_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f5_ACQRET_count['RET-2022'] = dfd22_a5_ACQRET_count['Total-2022'] - dfd22_f5_ACQRET_count['ACQ-2022']
dfd22_f5_ACQRET_count['Percnt-2022'] = (dfd22_f5_ACQRET_count['RET-2022'] / dfd22_a5_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f5_ACQRET_count['Percnt-2022'] = dfd22_f5_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f5_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a5_ACQRET_count = pd.DataFrame(filter_5_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f5_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f5.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f5_ACQRET_count['Percent-2023'] = (dfd23_f5_ACQRET_count['ACQ-2023'] / dfd23_f5_Registrations_count['Total-2023'].sum()) * 100
dfd23_f5_ACQRET_count['Percent-2023'] = dfd23_f5_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f5_ACQRET_count['RET-2023'] = dfd23_a5_ACQRET_count['Total-2023'] - dfd23_f5_ACQRET_count['ACQ-2023']
dfd23_f5_ACQRET_count['Percnt-2023'] = (dfd23_f5_ACQRET_count['RET-2023'] / dfd23_a5_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f5_ACQRET_count['Percnt-2023'] = dfd23_f5_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f5_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f5 = pd.DataFrame(pd.merge(dfd18_a5_ACQRET_count, dfd18_f5_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f5 = pd.DataFrame(pd.merge(dfd19_a5_ACQRET_count, dfd19_f5_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f5 = pd.DataFrame(pd.merge(dfd21_a5_ACQRET_count, dfd21_f5_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f5 = pd.DataFrame(pd.merge(dfd22_a5_ACQRET_count, dfd22_f5_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_5_f5 = pd.DataFrame(pd.merge(dfd23_a5_ACQRET_count, dfd23_f5_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_5_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f5 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f5, df_ACQRET_count_2_f5, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f5 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f5, df_ACQRET_count_3_f5, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f5 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f5, df_ACQRET_count_4_f5, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f5 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f5, df_ACQRET_count_5_f5, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f5 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5]
Concat_ACQRET_count_f1_f5 = pd.concat(ConcatFrames_ACQRET_count_f1_f5)
#print(tab(Concat_ACQRET_count_f1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f5 = Concat_ACQRET_count_f1_f5[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f5_Revenue_calc = pd.DataFrame(filter_5_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f5_Revenue_calc['Percent-2017'] = (dfd17_f5_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f5_Revenue_calc['Percent-2017'] = dfd17_f5_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f5_Revenue_calc['7DEvolution-2017'] = dfd17_f5_Revenue_calc['Total-2017'] - dfd17_f4_Revenue_calc['Total-2017']
#print(tab(dfd17_f5_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f5_Revenue_calc = pd.DataFrame(filter_5_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f5_Revenue_calc['Percent-2018'] = (dfd18_f5_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f5_Revenue_calc['Percent-2018'] = dfd18_f5_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f5_Revenue_calc['7DEvolution-2018'] = dfd18_f5_Revenue_calc['Total-2018'] - dfd18_f4_Revenue_calc['Total-2018']
#print(tab(dfd18_f5_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f5_Revenue_calc = pd.DataFrame(filter_5_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f5_Revenue_calc['Percent-2019'] = (dfd19_f5_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f5_Revenue_calc['Percent-2019'] = dfd19_f5_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f5_Revenue_calc['7DEvolution-2019'] = dfd19_f5_Revenue_calc['Total-2019'] - dfd19_f4_Revenue_calc['Total-2019']
#print(tab(dfd19_f5_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f5_Revenue_calc = pd.DataFrame(filter_5_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f5_Revenue_calc['Percent-2021'] = (dfd21_f5_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f5_Revenue_calc['Percent-2021'] = dfd21_f5_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f5_Revenue_calc['7DEvolution-2021'] = dfd21_f5_Revenue_calc['Total-2021'] - dfd21_f4_Revenue_calc['Total-2021']
#print(tab(dfd21_f5_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f5_Revenue_calc = pd.DataFrame(filter_5_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f5_Revenue_calc['Percent-2022'] = (dfd22_f5_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f5_Revenue_calc['Percent-2022'] = dfd22_f5_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f5_Revenue_calc['7DEvolution-2022'] = dfd22_f5_Revenue_calc['Total-2022'] - dfd22_f4_Revenue_calc['Total-2022']
#print(tab(dfd22_f5_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_Revenue_calc = pd.DataFrame(filter_5_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f5_Revenue_calc['Percent-2023'] = (dfd23_f5_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f5_Revenue_calc['Percent-2023'] = dfd23_f5_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f5_Revenue_calc['7DEvolution-2023'] = dfd23_f5_Revenue_calc['Total-2023'] - dfd23_f4_Revenue_calc['Total-2023']
#print(tab(dfd23_f5_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f5_RevenueEvolution_calc = pd.DataFrame(filter_5_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f5_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f5_Revenue_calc['Total-2023'] - dfd19_f5_Revenue_calc['Total-2019'])/ dfd19_f5_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f5_RevenueEvolution_calc['Evolution-2023'] = dfd23_f5_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f5_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f5 = pd.DataFrame(pd.merge(dfd17_f5_Revenue_calc, dfd18_f5_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f5 = pd.DataFrame(pd.merge(dfd19_f5_Revenue_calc, dfd21_f5_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f5 = pd.DataFrame(pd.merge(dfd22_f5_Revenue_calc, dfd23_f5_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f5_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f5, df_Revenue_calc_2_f5, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f5Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f5_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f5_Evolution, df_Revenue_calc_3_f5, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f5Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f5 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f5_Evolution, dfd23_f5_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f5 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5]
Concat_REV_count_f1_f5 = pd.concat(ConcatFrames_REV_count_f1_f5)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2
#unit 2!!!!!!!!!!!!!!!!!!!!!!!!
#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f5_Registrations_GRDel = pd.DataFrame(filtr_5_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f5_Registrations_GRDel = dfd17_f5_Registrations_GRDel.fillna('Unknown')
dfd17_f5_Registrations_GRDel['Percent-2017'] = (dfd17_f5_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f5_Registrations_GRDel['Percent-2017'] = dfd17_f5_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f5_Registrations_GRDel['7DEvolution-2017'] = dfd17_f5_Registrations_GRDel['Total-2017'] - dfd17_f4_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f5_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f5_Registrations_GRDel = pd.DataFrame(filtr_5_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f5_Registrations_GRDel = dfd18_f5_Registrations_GRDel.fillna('Unknown')
dfd18_f5_Registrations_GRDel['Percent-2018'] = (dfd18_f5_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f5_Registrations_GRDel['Percent-2018'] = dfd18_f5_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f5_Registrations_GRDel['7DEvolution-2018'] = dfd18_f5_Registrations_GRDel['Total-2018'] - dfd18_f4_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f5_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f5_Registrations_GRDel = pd.DataFrame(filtr_5_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f5_Registrations_GRDel = dfd19_f5_Registrations_GRDel.fillna('Unknown')
dfd19_f5_Registrations_GRDel['Percent-2019'] = (dfd19_f5_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f5_Registrations_GRDel['Percent-2019'] = dfd19_f5_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f5_Registrations_GRDel['7DEvolution-2019'] = dfd19_f5_Registrations_GRDel['Total-2019'] - dfd19_f4_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f5_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f5_Registrations_GRDel = pd.DataFrame(filtr_5_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f5_Registrations_GRDel = dfd21_f5_Registrations_GRDel.fillna('Unknown')
dfd21_f5_Registrations_GRDel['Percent-2021'] = (dfd21_f5_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f5_Registrations_GRDel['Percent-2021'] = dfd21_f5_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f5_Registrations_GRDel['7DEvolution-2021'] = dfd21_f5_Registrations_GRDel['Total-2021'] - dfd21_f4_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f5_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f5_Registrations_GRDel = pd.DataFrame(filtr_5_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f5_Registrations_GRDel = dfd22_f5_Registrations_GRDel.fillna('Unknown')
dfd22_f5_Registrations_GRDel['Percent-2022'] = (dfd22_f5_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f5_Registrations_GRDel['Percent-2022'] = dfd22_f5_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f5_Registrations_GRDel['7DEvolution-2022'] = dfd22_f5_Registrations_GRDel['Total-2022'] - dfd22_f4_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f5_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_Registrations_GRDel = pd.DataFrame(filtr_5_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f5_Registrations_GRDel = dfd23_f5_Registrations_GRDel.fillna('Unknown')
dfd23_f5_Registrations_GRDel['Percent-2023'] = (dfd23_f5_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f5_Registrations_GRDel['Percent-2023'] = dfd23_f5_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f5_Registrations_GRDel['7DEvolution-2023'] = dfd23_f5_Registrations_GRDel['Total-2023'] - dfd23_f4_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f5_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f5_Registrations_Evol_GRDel = pd.DataFrame(filtr_5_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f5_Registrations_Evol_GRDel = dfd23_f5_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f5_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f5_Registrations_GRDel['Total-2023'] - dfd22_f5_Registrations_GRDel['Total-2022'])/ dfd22_f5_Registrations_GRDel['Total-2022'].sum()) * 100
#print(tab(dfd23_f5_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f5 = pd.concat([dfd17_f5_Registrations_GRDel, dfd18_f5_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f5 = pd.DataFrame(pd.merge(dfd17_f5_Registrations_GRDel, dfd18_f5_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f5 = pd.DataFrame(pd.merge(dfd19_f5_Registrations_GRDel, dfd21_f5_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f5 = pd.DataFrame(pd.merge(dfd22_f5_Registrations_GRDel, dfd23_f5_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f5 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f5, df_Registrations_GRDel_2_f5, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_5_f5 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f5, df_Registrations_GRDel_3_f5, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f5 = pd.DataFrame(pd.merge(df_Registrations_GRDel_5_f5, dfd23_f5_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f5 = df_Registrations_GRDel_f5[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f5 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5]
Concat_RegGRDel_count_f1_f5 = pd.concat(ConcatFrames_RegGRDel_count_f1_f5)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f5 = filtr_5_df18_GRdel[filtr_5_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f5 = filtr_5_df19_GRdel[filtr_5_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f5 = filtr_5_df21_GRdel[filtr_5_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f5 = filtr_5_df22_GRdel[filtr_5_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f5 = filtr_5_df23_GRdel[filtr_5_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f5.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f5.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a5_AC_RT_GRDel = pd.DataFrame(filtr_5_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f5_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f5.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f5_AC_RT_GRDel['Percent-2018'] = (dfd18_f5_AC_RT_GRDel['ACQ-2018'] / dfd18_f5_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f5_AC_RT_GRDel['Percent-2018'] = dfd18_f5_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f5_AC_RT_GRDel['RET-2018'] = dfd18_a5_AC_RT_GRDel['Total-2018'] - dfd18_f5_AC_RT_GRDel['ACQ-2018']
dfd18_f5_AC_RT_GRDel['Percnt-2018'] = (dfd18_f5_AC_RT_GRDel['RET-2018'] / dfd18_a5_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f5_AC_RT_GRDel['Percnt-2018'] = dfd18_f5_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f5_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a5_AC_RT_GRDel = pd.DataFrame(filtr_5_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f5_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f5.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f5_AC_RT_GRDel['Percent-2019'] = (dfd19_f5_AC_RT_GRDel['ACQ-2019'] / dfd19_f5_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f5_AC_RT_GRDel['Percent-2019'] = dfd19_f5_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f5_AC_RT_GRDel['RET-2019'] = dfd19_a5_AC_RT_GRDel['Total-2019'] - dfd19_f5_AC_RT_GRDel['ACQ-2019']
dfd19_f5_AC_RT_GRDel['Percnt-2019'] = (dfd19_f5_AC_RT_GRDel['RET-2019'] / dfd19_a5_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f5_AC_RT_GRDel['Percnt-2019'] = dfd19_f5_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f5_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a5_AC_RT_GRDel = pd.DataFrame(filtr_5_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f5_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f5.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f5_AC_RT_GRDel['Percent-2021'] = (dfd21_f5_AC_RT_GRDel['ACQ-2021'] / dfd21_f5_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f5_AC_RT_GRDel['Percent-2021'] = dfd21_f5_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f5_AC_RT_GRDel['RET-2021'] = dfd21_a5_AC_RT_GRDel['Total-2021'] - dfd21_f5_AC_RT_GRDel['ACQ-2021']
dfd21_f5_AC_RT_GRDel['Percnt-2021'] = (dfd21_f5_AC_RT_GRDel['RET-2021'] / dfd21_a5_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f5_AC_RT_GRDel['Percnt-2021'] = dfd21_f5_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f5_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a5_AC_RT_GRDel = pd.DataFrame(filtr_5_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f5_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f5.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f5_AC_RT_GRDel['Percent-2022'] = (dfd22_f5_AC_RT_GRDel['ACQ-2022'] / dfd22_f5_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f5_AC_RT_GRDel['Percent-2022'] = dfd22_f5_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f5_AC_RT_GRDel['RET-2022'] = dfd22_a5_AC_RT_GRDel['Total-2022'] - dfd22_f5_AC_RT_GRDel['ACQ-2022']
dfd22_f5_AC_RT_GRDel['Percnt-2022'] = (dfd22_f5_AC_RT_GRDel['RET-2022'] / dfd22_a5_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f5_AC_RT_GRDel['Percnt-2022'] = dfd22_f5_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f5_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a5_AC_RT_GRDel = pd.DataFrame(filtr_5_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f5_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f5.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f5_AC_RT_GRDel['Percent-2023'] = (dfd23_f5_AC_RT_GRDel['ACQ-2023'] / dfd23_f5_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f5_AC_RT_GRDel['Percent-2023'] = dfd23_f5_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f5_AC_RT_GRDel['RET-2023'] = dfd23_a5_AC_RT_GRDel['Total-2023'] - dfd23_f5_AC_RT_GRDel['ACQ-2023']
dfd23_f5_AC_RT_GRDel['Percnt-2023'] = (dfd23_f5_AC_RT_GRDel['RET-2023'] / dfd23_a5_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f5_AC_RT_GRDel['Percnt-2023'] = dfd23_f5_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f5_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f5 = pd.DataFrame(pd.merge_ordered(dfd18_a5_AC_RT_GRDel, dfd18_f5_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f5 = pd.DataFrame(pd.merge_ordered(dfd19_a5_AC_RT_GRDel, dfd19_f5_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f5 = pd.DataFrame(pd.merge_ordered(dfd21_a5_AC_RT_GRDel, dfd21_f5_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f5 = pd.DataFrame(pd.merge_ordered(dfd22_a5_AC_RT_GRDel, dfd22_f5_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_5_f5 = pd.DataFrame(pd.merge_ordered(dfd23_a5_AC_RT_GRDel, dfd23_f5_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f5 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f5, df_AC_ET_GRDel_2_f5, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f5 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f5, df_AC_ET_GRDel_3_f5, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f5 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f5, df_AC_ET_GRDel_4_f5, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f5 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f5, df_AC_ET_GRDel_5_f5, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f5 = df_AC_RT_GRDel_M4_f5[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f5 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5]
Conct_AC_RT_GRDel_f1_f5 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f5)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_5_df17_GRdel = filtr_5_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f5_Revenu_GRDel = pd.DataFrame(filtr_5_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f5_Revenu_GRDel['Percent-2017'] = (dfd17_f5_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f5_Revenu_GRDel['Percent-2017'] = dfd17_f5_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f5_Revenu_GRDel['7DEvolution-2017'] = dfd17_f5_Revenu_GRDel['Total-2017'] - dfd17_f4_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f5_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_5_df18_GRdel = filtr_5_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f5_Revenu_GRDel = pd.DataFrame(filtr_5_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f5_Revenu_GRDel['Percent-2018'] = (dfd18_f5_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f5_Revenu_GRDel['Percent-2018'] = dfd18_f5_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f5_Revenu_GRDel['7DEvolution-2018'] = dfd18_f5_Revenu_GRDel['Total-2018'] - dfd18_f4_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f5_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_5_df19_GRdel = filtr_5_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f5_Revenu_GRDel = pd.DataFrame(filtr_5_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f5_Revenu_GRDel['Percent-2019'] = (dfd19_f5_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f5_Revenu_GRDel['Percent-2019'] = dfd19_f5_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f5_Revenu_GRDel['7DEvolution-2019'] = dfd19_f5_Revenu_GRDel['Total-2019'] - dfd19_f4_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f5_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_5_df21_GRdel = filtr_5_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f5_Revenu_GRDel = pd.DataFrame(filtr_5_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f5_Revenu_GRDel['Percent-2021'] = (dfd21_f5_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f5_Revenu_GRDel['Percent-2021'] = dfd21_f5_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f5_Revenu_GRDel['7DEvolution-2021'] = dfd21_f5_Revenu_GRDel['Total-2021'] - dfd21_f4_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f5_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_5_df22_GRdel = filtr_5_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f5_Revenu_GRDel = pd.DataFrame(filtr_5_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f5_Revenu_GRDel['Percent-2022'] = (dfd22_f5_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f5_Revenu_GRDel['Percent-2022'] = dfd22_f5_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f5_Revenu_GRDel['7DEvolution-2022'] = dfd22_f5_Revenu_GRDel['Total-2022'] - dfd22_f4_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f5_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_5_df23_GRdel = filtr_5_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f5_Revenu_GRDel = pd.DataFrame(filtr_5_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f5_Revenu_GRDel['Percent-2023'] = (dfd23_f5_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f5_Revenu_GRDel['Percent-2023'] = dfd23_f5_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f5_Revenu_GRDel['7DEvolution-2023'] = dfd23_f5_Revenu_GRDel['Total-2023'] - dfd23_f4_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f5_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f5_Revenu_Evlt_GRDel = pd.DataFrame(filtr_5_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f5_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f5_Revenu_GRDel['Total-2023'] - dfd19_f5_Revenu_GRDel['Total-2019'])/ dfd19_f5_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f5_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f5_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f5_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f5 = pd.DataFrame(pd.merge(dfd17_f5_Revenu_GRDel, dfd18_f5_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f5 = pd.DataFrame(pd.merge(dfd19_f5_Revenu_GRDel, dfd21_f5_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f5 = pd.DataFrame(pd.merge(dfd22_f5_Revenu_GRDel, dfd23_f5_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f5 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f5, df_Revenu_GRDel_2_f5, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_5_f5 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f5, df_Revenu_GRDel_3_f5, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f5 = pd.DataFrame(pd.merge(df_Revenu_GRDel_5_f5, dfd23_f5_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f5 = df_Revenu_GRDel_f5[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f5 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5]
Conct_RV_GRDel_f1_f5 = pd.concat(ConcatFra_RV_GRDel_f1_f5)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f5_Profile_count = pd.DataFrame(filtr_5_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f5_Profile_count = dfd17_f5_Profile_count.fillna('Unknown')
dfd17_f5_Profile_count['Percent-2017'] = (dfd17_f5_Profile_count['Total-2017'] / dfd17_f5_Profile_count['Total-2017'].sum()) * 100
dfd17_f5_Profile_count['Percent-2017'] = dfd17_f5_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f5_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f5_Profile_count = pd.DataFrame(filtr_5_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f5_Profile_count = dfd18_f5_Profile_count.fillna('Unknown')
dfd18_f5_Profile_count['Percent-2018'] = (dfd18_f5_Profile_count['Total-2018'] / dfd18_f5_Profile_count['Total-2018'].sum()) * 100
dfd18_f5_Profile_count['Percent-2018'] = dfd18_f5_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f5_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f5_Profile_count = pd.DataFrame(filtr_5_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f5_Profile_count = dfd19_f5_Profile_count.fillna('Unknown')
dfd19_f5_Profile_count['Percent-2019'] = (dfd19_f5_Profile_count['Total-2019'] / dfd19_f5_Profile_count['Total-2019'].sum()) * 100
dfd19_f5_Profile_count['Percent-2019'] = dfd19_f5_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f5_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f5_Profile_count = pd.DataFrame(filtr_5_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f5_Profile_count = dfd21_f5_Profile_count.fillna('Unknown')
dfd21_f5_Profile_count['Percent-2021'] = (dfd21_f5_Profile_count['Total-2021'] / dfd21_f5_Profile_count['Total-2021'].sum()) * 100
dfd21_f5_Profile_count['Percent-2021'] = dfd21_f5_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f5_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f5_Profile_count = pd.DataFrame(filtr_5_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f5_Profile_count = dfd22_f5_Profile_count.fillna('Unknown')
dfd22_f5_Profile_count['Percent-2022'] = (dfd22_f5_Profile_count['Total-2022'] / dfd22_f5_Profile_count['Total-2022'].sum()) * 100
dfd22_f5_Profile_count['Percent-2022'] = dfd22_f5_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f5_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_Profile_count = pd.DataFrame(filtr_5_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f5_Profile_count = dfd23_f5_Profile_count.fillna('Unknown')
dfd23_f5_Profile_count['Percent-2023'] = (dfd23_f5_Profile_count['Total-2023'] / dfd23_f5_Profile_count['Total-2023'].sum()) * 100
dfd23_f5_Profile_count['Percent-2023'] = dfd23_f5_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f5_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f5 = pd.DataFrame(pd.merge(dfd17_f5_Profile_count, dfd18_f5_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f5 = pd.DataFrame(pd.merge(dfd19_f5_Profile_count, dfd21_f5_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f5 = pd.DataFrame(pd.merge(dfd22_f5_Profile_count, dfd23_f5_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f5 = pd.DataFrame(pd.merge(df_Profile_Count_1_f5, df_Profile_Count_2_f5, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f5 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f5, df_Profile_Count_3_f5, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f5 = df_Profile_Count_m2_f5.append(df_Profile_Count_m2_f5.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f5['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f5_Pass_count = pd.DataFrame(filtr_5_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f5_Pass_count = dfd17_f5_Pass_count.fillna('Unknown')
dfd17_f5_Pass_count['Percent-2017'] = (dfd17_f5_Pass_count['Total-2017'] / dfd17_f5_Pass_count['Total-2017'].sum()) * 100
dfd17_f5_Pass_count['Percent-2017'] = dfd17_f5_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f5_Pass_count = pd.DataFrame(filtr_5_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f5_Pass_count = dfd18_f5_Pass_count.fillna('Unknown')
dfd18_f5_Pass_count['Percent-2018'] = (dfd18_f5_Pass_count['Total-2018'] / dfd18_f5_Pass_count['Total-2018'].sum()) * 100
dfd18_f5_Pass_count['Percent-2018'] = dfd18_f5_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f5_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f5_Pass_count = pd.DataFrame(filtr_5_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f5_Pass_count = dfd19_f5_Pass_count.fillna('Unknown')
dfd19_f5_Pass_count['Percent-2019'] = (dfd19_f5_Pass_count['Total-2019'] / dfd19_f5_Pass_count['Total-2019'].sum()) * 100
dfd19_f5_Pass_count['Percent-2019'] = dfd19_f5_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f5_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f5_Pass_count = pd.DataFrame(filtr_5_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f5_Pass_count = dfd21_f5_Pass_count.fillna('Unknown')
dfd21_f5_Pass_count['Percent-2021'] = (dfd21_f5_Pass_count['Total-2021'] / dfd21_f5_Pass_count['Total-2021'].sum()) * 100
dfd21_f5_Pass_count['Percent-2021'] = dfd21_f5_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f5_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f5_Pass_count = pd.DataFrame(filtr_5_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f5_Pass_count = dfd22_f5_Pass_count.fillna('Unknown')
dfd22_f5_Pass_count['Percent-2022'] = (dfd22_f5_Pass_count['Total-2022'] / dfd22_f5_Pass_count['Total-2022'].sum()) * 100
dfd22_f5_Pass_count['Percent-2022'] = dfd22_f5_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f5_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_Pass_count = pd.DataFrame(filtr_5_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f5_Pass_count = dfd23_f5_Pass_count.fillna('Unknown')
dfd23_f5_Pass_count['Percent-2023'] = (dfd23_f5_Pass_count['Total-2023'] / dfd23_f5_Pass_count['Total-2023'].sum()) * 100
dfd23_f5_Pass_count['Percent-2023'] = dfd23_f5_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f5_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f5 = pd.DataFrame(pd.merge(dfd17_f5_Pass_count, dfd18_f5_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f5 = pd.DataFrame(pd.merge(dfd19_f5_Pass_count, dfd21_f5_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f5 = pd.DataFrame(pd.merge(dfd22_f5_Pass_count, dfd23_f5_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f5 = pd.DataFrame(pd.merge(df_Pass_Count_1_f5, df_Pass_Count_2_f5, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f5 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f5, df_Pass_Count_3_f5, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f5 = df_Pass_Count_m2_f5.append(df_Pass_Count_m2_f5.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f5['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f5_Attendees_Country_count = pd.DataFrame(filtr_5_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f5_Attendees_Country_count = dfd17_f5_Attendees_Country_count.fillna('Unknown')
dfd17_f5_Attendees_Country_count['Percent-2017'] = (dfd17_f5_Attendees_Country_count['Total-2017'] / dfd17_f5_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f5_Attendees_Country_count['Percent-2017'] = dfd17_f5_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f5_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f5_Attendees_Country_count = pd.DataFrame(filtr_5_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f5_Attendees_Country_count = dfd18_f5_Attendees_Country_count.fillna('Unknown')
dfd18_f5_Attendees_Country_count['Percent-2018'] = (dfd18_f5_Attendees_Country_count['Total-2018'] / dfd18_f5_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f5_Attendees_Country_count['Percent-2018'] = dfd18_f5_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f5_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f5_Attendees_Country_count = pd.DataFrame(filtr_5_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f5_Attendees_Country_count = dfd19_f5_Attendees_Country_count.fillna('Unknown')
dfd19_f5_Attendees_Country_count['Percent-2019'] = (dfd19_f5_Attendees_Country_count['Total-2019'] / dfd19_f5_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f5_Attendees_Country_count['Percent-2019'] = dfd19_f5_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f5_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f5_Attendees_Country_count = pd.DataFrame(filtr_5_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f5_Attendees_Country_count = dfd21_f5_Attendees_Country_count.fillna('Unknown')
dfd21_f5_Attendees_Country_count['Percent-2021'] = (dfd21_f5_Attendees_Country_count['Total-2021'] / dfd21_f5_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f5_Attendees_Country_count['Percent-2021'] = dfd21_f5_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f5_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f5_Attendees_Country_count = pd.DataFrame(filtr_5_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f5_Attendees_Country_count = dfd22_f5_Attendees_Country_count.fillna('Unknown')
dfd22_f5_Attendees_Country_count['Percent-2022'] = (dfd22_f5_Attendees_Country_count['Total-2022'] / dfd22_f5_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f5_Attendees_Country_count['Percent-2022'] = dfd22_f5_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f5_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_Attendees_Country_count = pd.DataFrame(filtr_5_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f5_Attendees_Country_count = dfd23_f5_Attendees_Country_count.fillna('Unknown')
dfd23_f5_Attendees_Country_count['Percent-2023'] = (dfd23_f5_Attendees_Country_count['Total-2023'] / dfd23_f5_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f5_Attendees_Country_count['Percent-2023'] = dfd23_f5_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f5_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f5 = pd.DataFrame(pd.merge(dfd17_f5_Attendees_Country_count, dfd18_f5_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f5 = pd.DataFrame(pd.merge(dfd19_f5_Attendees_Country_count, dfd21_f5_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f5 = pd.DataFrame(pd.merge(dfd22_f5_Attendees_Country_count, dfd23_f5_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f5 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f5, dfAttendees_Country_Count_2_f5, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f5.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f5 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f5, dfAttendees_Country_Count_3_f5, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f5 = dfAttendees_Country_Count_m2_f5.append(dfAttendees_Country_Count_m2_f5.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f5['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f5_ATTENDEES_AREAS_count = pd.DataFrame(filtr_5_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f5_ATTENDEES_AREAS_count = dfd17_f5_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f5_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f5_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f5_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f5_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f5_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f5_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f5_ATTENDEES_AREAS_count = pd.DataFrame(filtr_5_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f5_ATTENDEES_AREAS_count = dfd18_f5_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f5_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f5_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f5_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f5_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f5_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f5_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f5_ATTENDEES_AREAS_count = pd.DataFrame(filtr_5_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f5_ATTENDEES_AREAS_count = dfd19_f5_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f5_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f5_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f5_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f5_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f5_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f5_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f5_ATTENDEES_AREAS_count = pd.DataFrame(filtr_5_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f5_ATTENDEES_AREAS_count = dfd21_f5_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f5_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f5_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f5_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f5_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f5_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f5_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f5_ATTENDEES_AREAS_count = pd.DataFrame(filtr_5_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f5_ATTENDEES_AREAS_count = dfd22_f5_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f5_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f5_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f5_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f5_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f5_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f5_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_ATTENDEES_AREAS_count = pd.DataFrame(filtr_5_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f5_ATTENDEES_AREAS_count = dfd23_f5_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f5_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f5_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f5_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f5_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f5_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f5_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f5 = pd.DataFrame(pd.merge(dfd17_f5_ATTENDEES_AREAS_count, dfd18_f5_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f5 = pd.DataFrame(pd.merge(dfd19_f5_ATTENDEES_AREAS_count, dfd21_f5_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f5 = pd.DataFrame(pd.merge(dfd22_f5_ATTENDEES_AREAS_count, dfd23_f5_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f5.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f5 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f5, df_ATTENDEES_AREAS_count_2_f5, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f5 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f5, df_ATTENDEES_AREAS_count_3_f5, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f5 = df_ATTENDEES_AREAS_count_m2_f5.append(df_ATTENDEES_AREAS_count_m2_f5.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f5['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f5_Attendees_Specialty_count = pd.DataFrame(filtr_5_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f5_Attendees_Specialty_count = dfd17_f5_Attendees_Specialty_count.fillna('Unknown')
dfd17_f5_Attendees_Specialty_count['Percent-2017'] = (dfd17_f5_Attendees_Specialty_count['Total-2017'] / dfd17_f5_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f5_Attendees_Specialty_count['Percent-2017'] = dfd17_f5_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f5_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f5_Attendees_Specialty_count = pd.DataFrame(filtr_5_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f5_Attendees_Specialty_count = dfd18_f5_Attendees_Specialty_count.fillna('Unknown')
dfd18_f5_Attendees_Specialty_count['Percent-2018'] = (dfd18_f5_Attendees_Specialty_count['Total-2018'] / dfd18_f5_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f5_Attendees_Specialty_count['Percent-2018'] = dfd18_f5_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f5_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f5_Attendees_Specialty_count = pd.DataFrame(filtr_5_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f5_Attendees_Specialty_count = dfd19_f5_Attendees_Specialty_count.fillna('Unknown')
dfd19_f5_Attendees_Specialty_count['Percent-2019'] = (dfd19_f5_Attendees_Specialty_count['Total-2019'] / dfd19_f5_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f5_Attendees_Specialty_count['Percent-2019'] = dfd19_f5_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f5_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f5_Attendees_Specialty_count = pd.DataFrame(filtr_5_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f5_Attendees_Specialty_count = dfd21_f5_Attendees_Specialty_count.fillna('Unknown')
dfd21_f5_Attendees_Specialty_count['Percent-2021'] = (dfd21_f5_Attendees_Specialty_count['Total-2021'] / dfd21_f5_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f5_Attendees_Specialty_count['Percent-2021'] = dfd21_f5_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f5_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f5_Attendees_Specialty_count = pd.DataFrame(filtr_5_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f5_Attendees_Specialty_count = dfd22_f5_Attendees_Specialty_count.fillna('Unknown')
dfd22_f5_Attendees_Specialty_count['Percent-2022'] = (dfd22_f5_Attendees_Specialty_count['Total-2022'] / dfd22_f5_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f5_Attendees_Specialty_count['Percent-2022'] = dfd22_f5_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f5_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f5_Attendees_Specialty_count = pd.DataFrame(filtr_5_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f5_Attendees_Specialty_count = dfd23_f5_Attendees_Specialty_count.fillna('Unknown')
dfd23_f5_Attendees_Specialty_count['Percent-2023'] = (dfd23_f5_Attendees_Specialty_count['Total-2023'] / dfd23_f5_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f5_Attendees_Specialty_count['Percent-2023'] = dfd23_f5_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f5_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f5 = pd.DataFrame(pd.merge(dfd17_f5_Attendees_Specialty_count, dfd18_f5_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f5 = pd.DataFrame(pd.merge(dfd19_f5_Attendees_Specialty_count, dfd21_f5_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f5 = pd.DataFrame(pd.merge(dfd22_f5_Attendees_Specialty_count, dfd23_f5_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f5 = pd.DataFrame(pd.merge(df_Specialty_count_1_f5, df_Specialty_count_2_f5, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f5.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f5 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f5, df_Specialty_count_3_f5, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f5 = df_Specialty_count_m2_f5.append(df_Specialty_count_m2_f5.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f5['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f5['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f5['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f5 = Concat_Registrations_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f5['Total-2017'] = Concat_Registrations_count_f1_f5['Total-2017'].astype(int)
Concat_Registrations_count_f1_f5['Percent-2017'] = Concat_Registrations_count_f1_f5['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f5['7DEvolution-2017'] = Concat_Registrations_count_f1_f5['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f5['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f5['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f5 = Concat_Registrations_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f5['Total-2018'] = Concat_Registrations_count_f1_f5['Total-2018'].astype(int)
Concat_Registrations_count_f1_f5['Percent-2018'] = Concat_Registrations_count_f1_f5['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f5['7DEvolution-2018'] = Concat_Registrations_count_f1_f5['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f5['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f5['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f5 = Concat_Registrations_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f5['Total-2019'] = Concat_Registrations_count_f1_f5['Total-2019'].astype(int)
Concat_Registrations_count_f1_f5['Percent-2019'] = Concat_Registrations_count_f1_f5['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f5['7DEvolution-2019'] = Concat_Registrations_count_f1_f5['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f5['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f5['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f5 = Concat_Registrations_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f5['Total-2021'] = Concat_Registrations_count_f1_f5['Total-2021'].astype(int)
Concat_Registrations_count_f1_f5['Percent-2021'] = Concat_Registrations_count_f1_f5['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f5['7DEvolution-2021'] = Concat_Registrations_count_f1_f5['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f5['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f5['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f5 = Concat_Registrations_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f5['Total-2022'] = Concat_Registrations_count_f1_f5['Total-2022'].astype(int)
Concat_Registrations_count_f1_f5['Percent-2022'] = Concat_Registrations_count_f1_f5['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f5['7DEvolution-2022'] = Concat_Registrations_count_f1_f5['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f5['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f5['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f5 = Concat_Registrations_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f5['Total-2023'] = Concat_Registrations_count_f1_f5['Total-2023'].astype(int)
Concat_Registrations_count_f1_f5['Percent-2023'] = Concat_Registrations_count_f1_f5['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f5['7DEvolution-2023'] = Concat_Registrations_count_f1_f5['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f5['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f5['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f5 = Concat_ACQRET_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f5['Total-2018'] = Concat_ACQRET_count_f1_f5['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f5['ACQ-2018'] = Concat_ACQRET_count_f1_f5['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f5['Percent-2018'] = Concat_ACQRET_count_f1_f5['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f5['RET-2018'] = Concat_ACQRET_count_f1_f5['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f5['Percnt-2018'] = Concat_ACQRET_count_f1_f5['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f5['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f5['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f5 = Concat_ACQRET_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f5['Total-2019'] = Concat_ACQRET_count_f1_f5['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f5['ACQ-2019'] = Concat_ACQRET_count_f1_f5['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f5['Percent-2019'] = Concat_ACQRET_count_f1_f5['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f5['RET-2019'] = Concat_ACQRET_count_f1_f5['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f5['Percnt-2019'] = Concat_ACQRET_count_f1_f5['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f5['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f5['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f5 = Concat_ACQRET_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f5['Total-2021'] = Concat_ACQRET_count_f1_f5['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f5['ACQ-2021'] = Concat_ACQRET_count_f1_f5['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f5['Percent-2021'] = Concat_ACQRET_count_f1_f5['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f5['RET-2021'] = Concat_ACQRET_count_f1_f5['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f5['Percnt-2021'] = Concat_ACQRET_count_f1_f5['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f5['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f5['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f5 = Concat_ACQRET_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f5['Total-2022'] = Concat_ACQRET_count_f1_f5['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f5['ACQ-2022'] = Concat_ACQRET_count_f1_f5['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f5['Percent-2022'] = Concat_ACQRET_count_f1_f5['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f5['RET-2022'] = Concat_ACQRET_count_f1_f5['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f5['Percnt-2022'] = Concat_ACQRET_count_f1_f5['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f5['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f5['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f5 = Concat_ACQRET_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f5['Total-2023'] = Concat_ACQRET_count_f1_f5['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f5['ACQ-2023'] = Concat_ACQRET_count_f1_f5['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f5['Percent-2023'] = Concat_ACQRET_count_f1_f5['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f5['RET-2023'] = Concat_ACQRET_count_f1_f5['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f5['Percnt-2023'] = Concat_ACQRET_count_f1_f5['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f5['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f5['Total-2017'],errors='coerce')
Concat_REV_count_f1_f5 = Concat_REV_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f5['Total-2017'] = Concat_REV_count_f1_f5['Total-2017'].astype(int)
Concat_REV_count_f1_f5['Percent-2017'] = Concat_REV_count_f1_f5['Percent-2017'].astype(float)
Concat_REV_count_f1_f5['7DEvolution-2017'] = Concat_REV_count_f1_f5['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f5['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f5['Total-2018'],errors='coerce')
Concat_REV_count_f1_f5 = Concat_REV_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f5['Total-2018'] = Concat_REV_count_f1_f5['Total-2018'].astype(int)
Concat_REV_count_f1_f5['Percent-2018'] = Concat_REV_count_f1_f5['Percent-2018'].astype(float)
Concat_REV_count_f1_f5['7DEvolution-2018'] = Concat_REV_count_f1_f5['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f5['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f5['Total-2019'],errors='coerce')
Concat_REV_count_f1_f5 = Concat_REV_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f5['Total-2019'] = Concat_REV_count_f1_f5['Total-2019'].astype(int)
Concat_REV_count_f1_f5['Percent-2019'] = Concat_REV_count_f1_f5['Percent-2019'].astype(float)
Concat_REV_count_f1_f5['7DEvolution-2019'] = Concat_REV_count_f1_f5['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f5['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f5['Total-2022'],errors='coerce')
Concat_REV_count_f1_f5 = Concat_REV_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f5['Total-2022'] = Concat_REV_count_f1_f5['Total-2022'].astype(int)
Concat_REV_count_f1_f5['Percent-2022'] = Concat_REV_count_f1_f5['Percent-2022'].astype(float)
Concat_REV_count_f1_f5['7DEvolution-2022'] = Concat_REV_count_f1_f5['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f5['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f5['Total-2023'],errors='coerce')
Concat_REV_count_f1_f5 = Concat_REV_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f5['Total-2023'] = Concat_REV_count_f1_f5['Total-2023'].astype(int)
Concat_REV_count_f1_f5['Percent-2023'] = Concat_REV_count_f1_f5['Percent-2023'].astype(float)
Concat_REV_count_f1_f5['7DEvolution-2023'] = Concat_REV_count_f1_f5['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f5['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f5['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f5 = Concat_RegGRDel_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f5['Total-2017'] = Concat_RegGRDel_count_f1_f5['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f5['Percent-2017'] = Concat_RegGRDel_count_f1_f5['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f5['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f5['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f5['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f5['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f5 = Concat_RegGRDel_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f5['Total-2018'] = Concat_RegGRDel_count_f1_f5['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f5['Percent-2018'] = Concat_RegGRDel_count_f1_f5['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f5['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f5['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f5['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f5['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f5 = Concat_RegGRDel_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f5['Total-2019'] = Concat_RegGRDel_count_f1_f5['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f5['Percent-2019'] = Concat_RegGRDel_count_f1_f5['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f5['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f5['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f5['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f5['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f5 = Concat_RegGRDel_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f5['Total-2021'] = Concat_RegGRDel_count_f1_f5['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f5['Percent-2021'] = Concat_RegGRDel_count_f1_f5['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f5['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f5['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f5['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f5['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f5 = Concat_RegGRDel_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f5['Total-2022'] = Concat_RegGRDel_count_f1_f5['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f5['Percent-2022'] = Concat_RegGRDel_count_f1_f5['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f5['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f5['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f5['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f5['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f5 = Concat_RegGRDel_count_f1_f5.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f5['Total-2023'] = Concat_RegGRDel_count_f1_f5['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f5['Percent-2023'] = Concat_RegGRDel_count_f1_f5['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f5['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f5['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f5['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f5['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f5 = Conct_AC_RT_GRDel_f1_f5.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f5['Total-2018'] = Conct_AC_RT_GRDel_f1_f5['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f5['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f5['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f5['Percent-2018'] = Conct_AC_RT_GRDel_f1_f5['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f5['RET-2018'] = Conct_AC_RT_GRDel_f1_f5['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f5['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f5['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f5['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f5['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f5 = Conct_AC_RT_GRDel_f1_f5.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f5['Total-2019'] = Conct_AC_RT_GRDel_f1_f5['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f5['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f5['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f5['Percent-2019'] = Conct_AC_RT_GRDel_f1_f5['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f5['RET-2019'] = Conct_AC_RT_GRDel_f1_f5['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f5['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f5['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f5['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f5['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f5 = Conct_AC_RT_GRDel_f1_f5.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f5['Total-2021'] = Conct_AC_RT_GRDel_f1_f5['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f5['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f5['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f5['Percent-2021'] = Conct_AC_RT_GRDel_f1_f5['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f5['RET-2021'] = Conct_AC_RT_GRDel_f1_f5['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f5['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f5['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f5['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f5['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f5 = Conct_AC_RT_GRDel_f1_f5.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f5['Total-2022'] = Conct_AC_RT_GRDel_f1_f5['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f5['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f5['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f5['Percent-2022'] = Conct_AC_RT_GRDel_f1_f5['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f5['RET-2022'] = Conct_AC_RT_GRDel_f1_f5['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f5['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f5['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f5['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f5['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f5 = Conct_AC_RT_GRDel_f1_f5.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f5['Total-2023'] = Conct_AC_RT_GRDel_f1_f5['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f5['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f5['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f5['Percent-2023'] = Conct_AC_RT_GRDel_f1_f5['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f5['RET-2023'] = Conct_AC_RT_GRDel_f1_f5['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f5['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f5['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f5['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f5['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f5 = Conct_RV_GRDel_f1_f5.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f5['Total-2017'] = Conct_RV_GRDel_f1_f5['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f5['Percent-2017'] = Conct_RV_GRDel_f1_f5['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f5['7DEvolution-2017'] = Conct_RV_GRDel_f1_f5['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f5['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f5['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f5 = Conct_RV_GRDel_f1_f5.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f5['Total-2018'] = Conct_RV_GRDel_f1_f5['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f5['Percent-2018'] = Conct_RV_GRDel_f1_f5['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f5['7DEvolution-2018'] = Conct_RV_GRDel_f1_f5['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f5['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f5['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f5 = Conct_RV_GRDel_f1_f5.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f5['Total-2019'] = Conct_RV_GRDel_f1_f5['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f5['Percent-2019'] = Conct_RV_GRDel_f1_f5['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f5['7DEvolution-2019'] = Conct_RV_GRDel_f1_f5['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f5['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f5['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f5 = Conct_RV_GRDel_f1_f5.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f5['Total-2022'] = Conct_RV_GRDel_f1_f5['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f5['Percent-2022'] = Conct_RV_GRDel_f1_f5['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f5['7DEvolution-2022'] = Conct_RV_GRDel_f1_f5['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f5['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f5['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f5 = Conct_RV_GRDel_f1_f5.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f5['Total-2023'] = Conct_RV_GRDel_f1_f5['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f5['Percent-2023'] = Conct_RV_GRDel_f1_f5['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f5['7DEvolution-2023'] = Conct_RV_GRDel_f1_f5['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f5['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f5['Total-2017'],errors='coerce')
df_Profile_Count_m2_f5 = df_Profile_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f5['Total-2017'] = df_Profile_Count_m2_f5['Total-2017'].astype(int)
df_Profile_Count_m2_f5['Percent-2017'] = df_Profile_Count_m2_f5['Percent-2017'].astype(float)

df_Profile_Count_m2_f5['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f5['Total-2018'],errors='coerce')
df_Profile_Count_m2_f5 = df_Profile_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f5['Total-2018'] = df_Profile_Count_m2_f5['Total-2018'].astype(int)
df_Profile_Count_m2_f5['Percent-2018'] = df_Profile_Count_m2_f5['Percent-2018'].astype(float)

df_Profile_Count_m2_f5['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f5['Total-2019'],errors='coerce')
df_Profile_Count_m2_f5 = df_Profile_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f5['Total-2019'] = df_Profile_Count_m2_f5['Total-2019'].astype(int)
df_Profile_Count_m2_f5['Percent-2019'] = df_Profile_Count_m2_f5['Percent-2019'].astype(float)

df_Profile_Count_m2_f5['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f5['Total-2021'],errors='coerce')
df_Profile_Count_m2_f5 = df_Profile_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f5['Total-2021'] = df_Profile_Count_m2_f5['Total-2021'].astype(int)
df_Profile_Count_m2_f5['Percent-2021'] = df_Profile_Count_m2_f5['Percent-2021'].astype(float)

df_Profile_Count_m2_f5['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f5['Total-2022'],errors='coerce')
df_Profile_Count_m2_f5 = df_Profile_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f5['Total-2022'] = df_Profile_Count_m2_f5['Total-2022'].astype(int)
df_Profile_Count_m2_f5['Percent-2022'] = df_Profile_Count_m2_f5['Percent-2022'].astype(float)

df_Profile_Count_m2_f5['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f5['Total-2023'],errors='coerce')
df_Profile_Count_m2_f5 = df_Profile_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f5['Total-2023'] = df_Profile_Count_m2_f5['Total-2023'].astype(int)
df_Profile_Count_m2_f5['Percent-2023'] = df_Profile_Count_m2_f5['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f5['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f5['Total-2017'],errors='coerce')
df_Pass_Count_m2_f5 = df_Pass_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f5['Total-2017'] = df_Pass_Count_m2_f5['Total-2017'].astype(int)
df_Pass_Count_m2_f5['Percent-2017'] = df_Pass_Count_m2_f5['Percent-2017'].astype(float)

df_Pass_Count_m2_f5['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f5['Total-2018'],errors='coerce')
df_Pass_Count_m2_f5 = df_Pass_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f5['Total-2018'] = df_Pass_Count_m2_f5['Total-2018'].astype(int)
df_Pass_Count_m2_f5['Percent-2018'] = df_Pass_Count_m2_f5['Percent-2018'].astype(float)

df_Pass_Count_m2_f5['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f5['Total-2019'],errors='coerce')
df_Pass_Count_m2_f5 = df_Pass_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f5['Total-2019'] = df_Pass_Count_m2_f5['Total-2019'].astype(int)
df_Pass_Count_m2_f5['Percent-2019'] = df_Pass_Count_m2_f5['Percent-2019'].astype(float)

df_Pass_Count_m2_f5['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f5['Total-2021'],errors='coerce')
df_Pass_Count_m2_f5 = df_Pass_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f5['Total-2021'] = df_Pass_Count_m2_f5['Total-2021'].astype(int)
df_Pass_Count_m2_f5['Percent-2021'] = df_Pass_Count_m2_f5['Percent-2021'].astype(float)

df_Pass_Count_m2_f5['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f5['Total-2022'],errors='coerce')
df_Pass_Count_m2_f5 = df_Pass_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f5['Total-2022'] = df_Pass_Count_m2_f5['Total-2022'].astype(int)
df_Pass_Count_m2_f5['Percent-2022'] = df_Pass_Count_m2_f5['Percent-2022'].astype(float)

df_Pass_Count_m2_f5['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f5['Total-2023'],errors='coerce')
df_Pass_Count_m2_f5 = df_Pass_Count_m2_f5.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f5['Total-2023'] = df_Pass_Count_m2_f5['Total-2023'].astype(int)
df_Pass_Count_m2_f5['Percent-2023'] = df_Pass_Count_m2_f5['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f5['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f5['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f5 = dfAttendees_Country_Count_m2_f5.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f5['Total-2017'] = dfAttendees_Country_Count_m2_f5['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f5['Percent-2017'] = dfAttendees_Country_Count_m2_f5['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f5['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f5['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f5 = dfAttendees_Country_Count_m2_f5.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f5['Total-2018'] = dfAttendees_Country_Count_m2_f5['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f5['Percent-2018'] = dfAttendees_Country_Count_m2_f5['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f5['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f5['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f5 = dfAttendees_Country_Count_m2_f5.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f5['Total-2019'] = dfAttendees_Country_Count_m2_f5['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f5['Percent-2019'] = dfAttendees_Country_Count_m2_f5['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f5['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f5['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f5 = dfAttendees_Country_Count_m2_f5.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f5['Total-2021'] = dfAttendees_Country_Count_m2_f5['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f5['Percent-2021'] = dfAttendees_Country_Count_m2_f5['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f5['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f5['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f5 = dfAttendees_Country_Count_m2_f5.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f5['Total-2022'] = dfAttendees_Country_Count_m2_f5['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f5['Percent-2022'] = dfAttendees_Country_Count_m2_f5['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f5['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f5['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f5 = dfAttendees_Country_Count_m2_f5.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f5['Total-2023'] = dfAttendees_Country_Count_m2_f5['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f5['Percent-2023'] = dfAttendees_Country_Count_m2_f5['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f5['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f5['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f5 = df_ATTENDEES_AREAS_count_m2_f5.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f5['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f5['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f5['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f5['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f5['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f5['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f5 = df_ATTENDEES_AREAS_count_m2_f5.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f5['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f5['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f5['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f5['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f5['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f5['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f5 = df_ATTENDEES_AREAS_count_m2_f5.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f5['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f5['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f5['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f5['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f5['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f5['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f5 = df_ATTENDEES_AREAS_count_m2_f5.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f5['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f5['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f5['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f5['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f5['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f5['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f5 = df_ATTENDEES_AREAS_count_m2_f5.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f5['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f5['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f5['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f5['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f5['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f5['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f5 = df_ATTENDEES_AREAS_count_m2_f5.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f5['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f5['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f5['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f5['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f5['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f5['Total-2017'],errors='coerce')
df_Specialty_count_m2_f5 = df_Specialty_count_m2_f5.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f5['Total-2017'] = df_Specialty_count_m2_f5['Total-2017'].astype(int)
df_Specialty_count_m2_f5['Percent-2017'] = df_Specialty_count_m2_f5['Percent-2017'].astype(float)

df_Specialty_count_m2_f5['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f5['Total-2018'],errors='coerce')
df_Specialty_count_m2_f5 = df_Specialty_count_m2_f5.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f5['Total-2018'] = df_Specialty_count_m2_f5['Total-2018'].astype(int)
df_Specialty_count_m2_f5['Percent-2018'] = df_Specialty_count_m2_f5['Percent-2018'].astype(float)

df_Specialty_count_m2_f5['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f5['Total-2019'],errors='coerce')
df_Specialty_count_m2_f5 = df_Specialty_count_m2_f5.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f5['Total-2019'] = df_Specialty_count_m2_f5['Total-2019'].astype(int)
df_Specialty_count_m2_f5['Percent-2019'] = df_Specialty_count_m2_f5['Percent-2019'].astype(float)

df_Specialty_count_m2_f5['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f5['Total-2021'],errors='coerce')
df_Specialty_count_m2_f5 = df_Specialty_count_m2_f5.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f5['Total-2021'] = df_Specialty_count_m2_f5['Total-2021'].astype(int)
df_Specialty_count_m2_f5['Percent-2021'] = df_Specialty_count_m2_f5['Percent-2021'].astype(float)

df_Specialty_count_m2_f5['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f5['Total-2022'],errors='coerce')
df_Specialty_count_m2_f5 = df_Specialty_count_m2_f5.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f5['Total-2022'] = df_Specialty_count_m2_f5['Total-2022'].astype(int)
df_Specialty_count_m2_f5['Percent-2022'] = df_Specialty_count_m2_f5['Percent-2022'].astype(float)

df_Specialty_count_m2_f5['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f5['Total-2023'],errors='coerce')
df_Specialty_count_m2_f5 = df_Specialty_count_m2_f5.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f5['Total-2023'] = df_Specialty_count_m2_f5['Total-2023'].astype(int)
df_Specialty_count_m2_f5['Percent-2023'] = df_Specialty_count_m2_f5['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f5.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f5.dtypes)
#print(df_Specialty_count_m2_f5.dtypes)

#print(dfAttendees_Country_Count_m2_f5.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f5.dtypes)
#print(df_Specialty_count_m2_f5.dtypes)

# EXCEL FILE
writerf5 = pd.ExcelWriter(outputExcelFile_f5, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f5.to_excel\
    (writerf5, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f5.to_excel\
    (writerf5, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f5.to_excel\
    (writerf5, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f5.to_excel\
    (writerf5, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f5.to_excel\
    (writerf5, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f5.to_excel\
    (writerf5, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f5.to_excel\
    (writerf5, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f5.to_excel\
    (writerf5, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f5.to_excel\
    (writerf5, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f5.to_excel\
    (writerf5, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f5.to_excel\
    (writerf5, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf5.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f5)

workbook.save(outputExcelFile_f5)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 161 days**********************************************')
print('************************************End of 161 days**********************************************')
print('************************************End of 161 days**********************************************')
print('************************************End of 161 days**********************************************')
print('************************************End of 161 days**********************************************')
print('************************************End of 161 days**********************************************')
print('************************************End of 161 days**********************************************')
print('************************************End of 161 days**********************************************')
print('************************************End of 161 days**********************************************')

#unit 1
#Total Number of Registrations
dfd17_f6_Registrations_count = pd.DataFrame(filter_6_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f6_Registrations_count = dfd17_f6_Registrations_count.fillna('Unknown')
dfd17_f6_Registrations_count['Percent-2017'] = (dfd17_f6_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f6_Registrations_count['Percent-2017'] = dfd17_f6_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f6_Registrations_count['7DEvolution-2017'] = dfd17_f6_Registrations_count['Total-2017'] - dfd17_f5_Registrations_count['Total-2017']
#print(tab(dfd17_f6_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f6_Registrations_count = pd.DataFrame(filter_6_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f6_Registrations_count = dfd18_f6_Registrations_count.fillna('Unknown')
dfd18_f6_Registrations_count['Percent-2018'] = (dfd18_f6_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f6_Registrations_count['Percent-2018'] = dfd18_f6_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f6_Registrations_count['7DEvolution-2018'] = dfd18_f6_Registrations_count['Total-2018'] - dfd18_f5_Registrations_count['Total-2018']
#print(tab(dfd18_f6_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f6_Registrations_count = pd.DataFrame(filter_6_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f6_Registrations_count = dfd19_f6_Registrations_count.fillna('Unknown')
dfd19_f6_Registrations_count['Percent-2019'] = (dfd19_f6_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f6_Registrations_count['Percent-2019'] = dfd19_f6_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f6_Registrations_count['7DEvolution-2019'] = dfd19_f6_Registrations_count['Total-2019'] - dfd19_f5_Registrations_count['Total-2019']
#print(tab(dfd19_f6_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f6_Registrations_count = pd.DataFrame(filter_6_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f6_Registrations_count = dfd21_f6_Registrations_count.fillna('Unknown')
dfd21_f6_Registrations_count['Percent-2021'] = (dfd21_f6_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f6_Registrations_count['Percent-2021'] = dfd21_f6_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f6_Registrations_count['7DEvolution-2021'] = dfd21_f6_Registrations_count['Total-2021'] - dfd21_f5_Registrations_count['Total-2021']
#print(tab(dfd21_f6_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f6_Registrations_count = pd.DataFrame(filter_6_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f6_Registrations_count = dfd22_f6_Registrations_count.fillna('Unknown')
dfd22_f6_Registrations_count['Percent-2022'] = (dfd22_f6_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f6_Registrations_count['Percent-2022'] = dfd22_f6_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f6_Registrations_count['7DEvolution-2022'] = dfd22_f6_Registrations_count['Total-2022'] - dfd22_f4_Registrations_count['Total-2022']
#print(tab(dfd22_f6_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_Registrations_count = pd.DataFrame(filter_6_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f6_Registrations_count = dfd23_f6_Registrations_count.fillna('Unknown')
dfd23_f6_Registrations_count['Percent-2023'] = (dfd23_f6_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f6_Registrations_count['Percent-2023'] = dfd23_f6_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f6_Registrations_count['7DEvolution-2023'] = dfd23_f6_Registrations_count['Total-2023'] - dfd23_f5_Registrations_count['Total-2023']
#print(tab(dfd23_f6_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f6_RegistrationsEvolution_count = pd.DataFrame(filter_6_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f6_RegistrationsEvolution_count = dfd23_f6_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f6_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f6_Registrations_count['Total-2023'] - dfd19_f6_Registrations_count['Total-2019'])/ dfd19_f6_Registrations_count['Total-2019'].sum()) * 100
dfd23_f6_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f6_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f6_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f6 = pd.DataFrame(pd.merge(dfd17_f6_Registrations_count, dfd18_f6_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f6 = pd.DataFrame(pd.merge(dfd19_f6_Registrations_count, dfd21_f6_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f6 = pd.DataFrame(pd.merge(dfd22_f6_Registrations_count, dfd23_f6_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f6 = pd.DataFrame(pd.merge(df_Registrations_count_1_f6, df_Registrations_count_2_f6, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f6 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f6, df_Registrations_count_3_f6, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f6 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f6, dfd23_f6_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f6 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6]
Concat_Registrations_count_f1_f6 = pd.concat(ConcatFrames_Registrations_count_f1_f6)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f6  = ConcatFrames_Registrations_count_f1_f6.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f6.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f6 = filter_6_df18[filter_6_df18['New customer'] == 1]
df_NewCustomer_df19_f6 = filter_6_df19[filter_6_df19['New customer'] == 1]
df_NewCustomer_df21_f6 = filter_6_df21[filter_6_df21['New customer'] == 1]
df_NewCustomer_df22_f6 = filter_6_df22[filter_6_df22['New customer'] == 1]
df_NewCustomer_df23_f6 = filter_6_df23[filter_6_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f6.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f6.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f6.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a6_ACQRET_count = pd.DataFrame(filter_6_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f6_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f6.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f6_ACQRET_count['Percent-2018'] = (dfd18_f6_ACQRET_count['ACQ-2018'] / dfd18_f6_Registrations_count['Total-2018'].sum()) * 100
dfd18_f6_ACQRET_count['Percent-2018'] = dfd18_f6_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f6_ACQRET_count['RET-2018'] = dfd18_a6_ACQRET_count['Total-2018'] - dfd18_f6_ACQRET_count['ACQ-2018']
dfd18_f6_ACQRET_count['Percnt-2018'] = (dfd18_f6_ACQRET_count['RET-2018'] / dfd18_a6_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f6_ACQRET_count['Percnt-2018'] = dfd18_f6_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f6_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a6_ACQRET_count = pd.DataFrame(filter_6_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f6_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f6.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f6_ACQRET_count['Percent-2019'] = (dfd19_f6_ACQRET_count['ACQ-2019'] / dfd19_f6_Registrations_count['Total-2019'].sum()) * 100
dfd19_f6_ACQRET_count['Percent-2019'] = dfd19_f6_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f6_ACQRET_count['RET-2019'] = dfd19_a6_ACQRET_count['Total-2019'] - dfd19_f6_ACQRET_count['ACQ-2019']
dfd19_f6_ACQRET_count['Percnt-2019'] = (dfd19_f6_ACQRET_count['RET-2019'] / dfd19_a6_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f6_ACQRET_count['Percnt-2019'] = dfd19_f6_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f6_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a6_ACQRET_count = pd.DataFrame(filter_6_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f6_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f6.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f6_ACQRET_count['Percent-2021'] = (dfd21_f6_ACQRET_count['ACQ-2021'] / dfd21_f6_Registrations_count['Total-2021'].sum()) * 100
dfd21_f6_ACQRET_count['Percent-2021'] = dfd21_f6_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f6_ACQRET_count['RET-2021'] = dfd21_a6_ACQRET_count['Total-2021'] - dfd21_f6_ACQRET_count['ACQ-2021']
dfd21_f6_ACQRET_count['Percnt-2021'] = (dfd21_f6_ACQRET_count['RET-2021'] / dfd21_a6_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f6_ACQRET_count['Percnt-2021'] = dfd21_f6_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f6_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a6_ACQRET_count = pd.DataFrame(filter_6_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f6_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f6.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f6_ACQRET_count['Percent-2022'] = (dfd22_f6_ACQRET_count['ACQ-2022'] / dfd22_f6_Registrations_count['Total-2022'].sum()) * 100
dfd22_f6_ACQRET_count['Percent-2022'] = dfd22_f6_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f6_ACQRET_count['RET-2022'] = dfd22_a6_ACQRET_count['Total-2022'] - dfd22_f6_ACQRET_count['ACQ-2022']
dfd22_f6_ACQRET_count['Percnt-2022'] = (dfd22_f6_ACQRET_count['RET-2022'] / dfd22_a6_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f6_ACQRET_count['Percnt-2022'] = dfd22_f6_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f6_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a6_ACQRET_count = pd.DataFrame(filter_6_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f6_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f6.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f6_ACQRET_count['Percent-2023'] = (dfd23_f6_ACQRET_count['ACQ-2023'] / dfd23_f6_Registrations_count['Total-2023'].sum()) * 100
dfd23_f6_ACQRET_count['Percent-2023'] = dfd23_f6_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f6_ACQRET_count['RET-2023'] = dfd23_a6_ACQRET_count['Total-2023'] - dfd23_f6_ACQRET_count['ACQ-2023']
dfd23_f6_ACQRET_count['Percnt-2023'] = (dfd23_f6_ACQRET_count['RET-2023'] / dfd23_a6_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f6_ACQRET_count['Percnt-2023'] = dfd23_f6_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f6_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f6 = pd.DataFrame(pd.merge(dfd18_a6_ACQRET_count, dfd18_f6_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f6 = pd.DataFrame(pd.merge(dfd19_a6_ACQRET_count, dfd19_f6_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f6 = pd.DataFrame(pd.merge(dfd21_a6_ACQRET_count, dfd21_f6_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f6 = pd.DataFrame(pd.merge(dfd22_a6_ACQRET_count, dfd22_f6_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_6_f6 = pd.DataFrame(pd.merge(dfd23_a6_ACQRET_count, dfd23_f6_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_6_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f6 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f6, df_ACQRET_count_2_f6, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f6 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f6, df_ACQRET_count_3_f6, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f6 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f6, df_ACQRET_count_4_f6, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f6 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f6, df_ACQRET_count_6_f6, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f6 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6]
Concat_ACQRET_count_f1_f6 = pd.concat(ConcatFrames_ACQRET_count_f1_f6)
#print(tab(Concat_ACQRET_count_f1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f6 = Concat_ACQRET_count_f1_f6[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f6_Revenue_calc = pd.DataFrame(filter_6_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f6_Revenue_calc['Percent-2017'] = (dfd17_f6_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f6_Revenue_calc['Percent-2017'] = dfd17_f6_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f6_Revenue_calc['7DEvolution-2017'] = dfd17_f6_Revenue_calc['Total-2017'] - dfd17_f5_Revenue_calc['Total-2017']
#print(tab(dfd17_f6_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f6_Revenue_calc = pd.DataFrame(filter_6_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f6_Revenue_calc['Percent-2018'] = (dfd18_f6_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f6_Revenue_calc['Percent-2018'] = dfd18_f6_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f6_Revenue_calc['7DEvolution-2018'] = dfd18_f6_Revenue_calc['Total-2018'] - dfd18_f5_Revenue_calc['Total-2018']
#print(tab(dfd18_f6_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f6_Revenue_calc = pd.DataFrame(filter_6_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f6_Revenue_calc['Percent-2019'] = (dfd19_f6_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f6_Revenue_calc['Percent-2019'] = dfd19_f6_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f6_Revenue_calc['7DEvolution-2019'] = dfd19_f6_Revenue_calc['Total-2019'] - dfd19_f5_Revenue_calc['Total-2019']
#print(tab(dfd19_f6_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f6_Revenue_calc = pd.DataFrame(filter_6_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f6_Revenue_calc['Percent-2021'] = (dfd21_f6_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f6_Revenue_calc['Percent-2021'] = dfd21_f6_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f6_Revenue_calc['7DEvolution-2021'] = dfd21_f6_Revenue_calc['Total-2021'] - dfd21_f5_Revenue_calc['Total-2021']
#print(tab(dfd21_f6_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f6_Revenue_calc = pd.DataFrame(filter_6_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f6_Revenue_calc['Percent-2022'] = (dfd22_f6_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f6_Revenue_calc['Percent-2022'] = dfd22_f6_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f6_Revenue_calc['7DEvolution-2022'] = dfd22_f6_Revenue_calc['Total-2022'] - dfd22_f5_Revenue_calc['Total-2022']
#print(tab(dfd22_f6_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_Revenue_calc = pd.DataFrame(filter_6_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f6_Revenue_calc['Percent-2023'] = (dfd23_f6_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f6_Revenue_calc['Percent-2023'] = dfd23_f6_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f6_Revenue_calc['7DEvolution-2023'] = dfd23_f6_Revenue_calc['Total-2023'] - dfd23_f5_Revenue_calc['Total-2023']
#print(tab(dfd23_f6_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f6_RevenueEvolution_calc = pd.DataFrame(filter_6_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f6_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f6_Revenue_calc['Total-2023'] - dfd19_f6_Revenue_calc['Total-2019'])/ dfd19_f6_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f6_RevenueEvolution_calc['Evolution-2023'] = dfd23_f6_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f6_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f6 = pd.DataFrame(pd.merge(dfd17_f6_Revenue_calc, dfd18_f6_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f6 = pd.DataFrame(pd.merge(dfd19_f6_Revenue_calc, dfd21_f6_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f6 = pd.DataFrame(pd.merge(dfd22_f6_Revenue_calc, dfd23_f6_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f6_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f6, df_Revenue_calc_2_f6, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f6Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f6_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f6_Evolution, df_Revenue_calc_3_f6, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f6Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f6 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f6_Evolution, dfd23_f6_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f6 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6]
Concat_REV_count_f1_f6 = pd.concat(ConcatFrames_REV_count_f1_f6)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f6_Registrations_GRDel = pd.DataFrame(filtr_6_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f6_Registrations_GRDel = dfd17_f6_Registrations_GRDel.fillna('Unknown')
dfd17_f6_Registrations_GRDel['Percent-2017'] = (dfd17_f6_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f6_Registrations_GRDel['Percent-2017'] = dfd17_f6_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f6_Registrations_GRDel['7DEvolution-2017'] = dfd17_f6_Registrations_GRDel['Total-2017'] - dfd17_f5_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f6_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f6_Registrations_GRDel = pd.DataFrame(filtr_6_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f6_Registrations_GRDel = dfd18_f6_Registrations_GRDel.fillna('Unknown')
dfd18_f6_Registrations_GRDel['Percent-2018'] = (dfd18_f6_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f6_Registrations_GRDel['Percent-2018'] = dfd18_f6_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f6_Registrations_GRDel['7DEvolution-2018'] = dfd18_f6_Registrations_GRDel['Total-2018'] - dfd18_f5_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f6_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f6_Registrations_GRDel = pd.DataFrame(filtr_6_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f6_Registrations_GRDel = dfd19_f6_Registrations_GRDel.fillna('Unknown')
dfd19_f6_Registrations_GRDel['Percent-2019'] = (dfd19_f6_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f6_Registrations_GRDel['Percent-2019'] = dfd19_f6_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f6_Registrations_GRDel['7DEvolution-2019'] = dfd19_f6_Registrations_GRDel['Total-2019'] - dfd19_f5_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f6_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f6_Registrations_GRDel = pd.DataFrame(filtr_6_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f6_Registrations_GRDel = dfd21_f6_Registrations_GRDel.fillna('Unknown')
dfd21_f6_Registrations_GRDel['Percent-2021'] = (dfd21_f6_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f6_Registrations_GRDel['Percent-2021'] = dfd21_f6_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f6_Registrations_GRDel['7DEvolution-2021'] = dfd21_f6_Registrations_GRDel['Total-2021'] - dfd21_f5_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f6_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f6_Registrations_GRDel = pd.DataFrame(filtr_6_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f6_Registrations_GRDel = dfd22_f6_Registrations_GRDel.fillna('Unknown')
dfd22_f6_Registrations_GRDel['Percent-2022'] = (dfd22_f6_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f6_Registrations_GRDel['Percent-2022'] = dfd22_f6_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f6_Registrations_GRDel['7DEvolution-2022'] = dfd22_f6_Registrations_GRDel['Total-2022'] - dfd22_f5_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f6_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_Registrations_GRDel = pd.DataFrame(filtr_6_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f6_Registrations_GRDel = dfd23_f6_Registrations_GRDel.fillna('Unknown')
dfd23_f6_Registrations_GRDel['Percent-2023'] = (dfd23_f6_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f6_Registrations_GRDel['Percent-2023'] = dfd23_f6_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f6_Registrations_GRDel['7DEvolution-2023'] = dfd23_f6_Registrations_GRDel['Total-2023'] - dfd23_f5_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f6_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f6_Registrations_Evol_GRDel = pd.DataFrame(filtr_6_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f6_Registrations_Evol_GRDel = dfd23_f6_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f6_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f6_Registrations_GRDel['Total-2023'] - dfd19_f6_Registrations_GRDel['Total-2019'])/ dfd19_f6_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f6_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f6 = pd.concat([dfd17_f6_Registrations_GRDel, dfd18_f6_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f6 = pd.DataFrame(pd.merge(dfd17_f6_Registrations_GRDel, dfd18_f6_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f6 = pd.DataFrame(pd.merge(dfd19_f6_Registrations_GRDel, dfd21_f6_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f6 = pd.DataFrame(pd.merge(dfd22_f6_Registrations_GRDel, dfd23_f6_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f6 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f6, df_Registrations_GRDel_2_f6, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_6_f6 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f6, df_Registrations_GRDel_3_f6, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f6 = pd.DataFrame(pd.merge(df_Registrations_GRDel_6_f6, dfd23_f6_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f6 = df_Registrations_GRDel_f6[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f6 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6]
Concat_RegGRDel_count_f1_f6 = pd.concat(ConcatFrames_RegGRDel_count_f1_f6)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f6 = filtr_6_df18_GRdel[filtr_6_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f6 = filtr_6_df19_GRdel[filtr_6_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f6 = filtr_6_df21_GRdel[filtr_6_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f6 = filtr_6_df22_GRdel[filtr_6_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f6 = filtr_6_df23_GRdel[filtr_6_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f6.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f6.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a6_AC_RT_GRDel = pd.DataFrame(filtr_6_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f6_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f6.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f6_AC_RT_GRDel['Percent-2018'] = (dfd18_f6_AC_RT_GRDel['ACQ-2018'] / dfd18_f6_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f6_AC_RT_GRDel['Percent-2018'] = dfd18_f6_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f6_AC_RT_GRDel['RET-2018'] = dfd18_a6_AC_RT_GRDel['Total-2018'] - dfd18_f6_AC_RT_GRDel['ACQ-2018']
dfd18_f6_AC_RT_GRDel['Percnt-2018'] = (dfd18_f6_AC_RT_GRDel['RET-2018'] / dfd18_a6_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f6_AC_RT_GRDel['Percnt-2018'] = dfd18_f6_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f6_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a6_AC_RT_GRDel = pd.DataFrame(filtr_6_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f6_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f6.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f6_AC_RT_GRDel['Percent-2019'] = (dfd19_f6_AC_RT_GRDel['ACQ-2019'] / dfd19_f6_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f6_AC_RT_GRDel['Percent-2019'] = dfd19_f6_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f6_AC_RT_GRDel['RET-2019'] = dfd19_a6_AC_RT_GRDel['Total-2019'] - dfd19_f6_AC_RT_GRDel['ACQ-2019']
dfd19_f6_AC_RT_GRDel['Percnt-2019'] = (dfd19_f6_AC_RT_GRDel['RET-2019'] / dfd19_a6_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f6_AC_RT_GRDel['Percnt-2019'] = dfd19_f6_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f6_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a6_AC_RT_GRDel = pd.DataFrame(filtr_6_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f6_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f6.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f6_AC_RT_GRDel['Percent-2021'] = (dfd21_f6_AC_RT_GRDel['ACQ-2021'] / dfd21_f6_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f6_AC_RT_GRDel['Percent-2021'] = dfd21_f6_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f6_AC_RT_GRDel['RET-2021'] = dfd21_a6_AC_RT_GRDel['Total-2021'] - dfd21_f6_AC_RT_GRDel['ACQ-2021']
dfd21_f6_AC_RT_GRDel['Percnt-2021'] = (dfd21_f6_AC_RT_GRDel['RET-2021'] / dfd21_a6_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f6_AC_RT_GRDel['Percnt-2021'] = dfd21_f6_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f6_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a6_AC_RT_GRDel = pd.DataFrame(filtr_6_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f6_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f6.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f6_AC_RT_GRDel['Percent-2022'] = (dfd22_f6_AC_RT_GRDel['ACQ-2022'] / dfd22_f6_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f6_AC_RT_GRDel['Percent-2022'] = dfd22_f6_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f6_AC_RT_GRDel['RET-2022'] = dfd22_a6_AC_RT_GRDel['Total-2022'] - dfd22_f6_AC_RT_GRDel['ACQ-2022']
dfd22_f6_AC_RT_GRDel['Percnt-2022'] = (dfd22_f6_AC_RT_GRDel['RET-2022'] / dfd22_a6_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f6_AC_RT_GRDel['Percnt-2022'] = dfd22_f6_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f6_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a6_AC_RT_GRDel = pd.DataFrame(filtr_6_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f6_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f6.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f6_AC_RT_GRDel['Percent-2023'] = (dfd23_f6_AC_RT_GRDel['ACQ-2023'] / dfd23_f6_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f6_AC_RT_GRDel['Percent-2023'] = dfd23_f6_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f6_AC_RT_GRDel['RET-2023'] = dfd23_a6_AC_RT_GRDel['Total-2023'] - dfd23_f6_AC_RT_GRDel['ACQ-2023']
dfd23_f6_AC_RT_GRDel['Percnt-2023'] = (dfd23_f6_AC_RT_GRDel['RET-2023'] / dfd23_a6_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f6_AC_RT_GRDel['Percnt-2023'] = dfd23_f6_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f6_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f6 = pd.DataFrame(pd.merge_ordered(dfd18_a6_AC_RT_GRDel, dfd18_f6_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f6 = pd.DataFrame(pd.merge_ordered(dfd19_a6_AC_RT_GRDel, dfd19_f6_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f6 = pd.DataFrame(pd.merge_ordered(dfd21_a6_AC_RT_GRDel, dfd21_f6_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f6 = pd.DataFrame(pd.merge_ordered(dfd22_a6_AC_RT_GRDel, dfd22_f6_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_6_f6 = pd.DataFrame(pd.merge_ordered(dfd23_a6_AC_RT_GRDel, dfd23_f6_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f6 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f6, df_AC_ET_GRDel_2_f6, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f6 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f6, df_AC_ET_GRDel_3_f6, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f6 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f6, df_AC_ET_GRDel_4_f6, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f6 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f6, df_AC_ET_GRDel_6_f6, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f6 = df_AC_RT_GRDel_M4_f6[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f6 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6]
Conct_AC_RT_GRDel_f1_f6 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f6)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_6_df17_GRdel = filtr_6_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f6_Revenu_GRDel = pd.DataFrame(filtr_6_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f6_Revenu_GRDel['Percent-2017'] = (dfd17_f6_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f6_Revenu_GRDel['Percent-2017'] = dfd17_f6_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f6_Revenu_GRDel['7DEvolution-2017'] = dfd17_f6_Revenu_GRDel['Total-2017'] - dfd17_f5_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f6_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_6_df18_GRdel = filtr_6_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f6_Revenu_GRDel = pd.DataFrame(filtr_6_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f6_Revenu_GRDel['Percent-2018'] = (dfd18_f6_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f6_Revenu_GRDel['Percent-2018'] = dfd18_f6_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f6_Revenu_GRDel['7DEvolution-2018'] = dfd18_f6_Revenu_GRDel['Total-2018'] - dfd18_f5_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f6_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_6_df19_GRdel = filtr_6_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f6_Revenu_GRDel = pd.DataFrame(filtr_6_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f6_Revenu_GRDel['Percent-2019'] = (dfd19_f6_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f6_Revenu_GRDel['Percent-2019'] = dfd19_f6_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f6_Revenu_GRDel['7DEvolution-2019'] = dfd19_f6_Revenu_GRDel['Total-2019'] - dfd19_f5_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f6_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_6_df21_GRdel = filtr_6_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f6_Revenu_GRDel = pd.DataFrame(filtr_6_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f6_Revenu_GRDel['Percent-2021'] = (dfd21_f6_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f6_Revenu_GRDel['Percent-2021'] = dfd21_f6_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f6_Revenu_GRDel['7DEvolution-2021'] = dfd21_f6_Revenu_GRDel['Total-2021'] - dfd21_f5_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f6_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_6_df22_GRdel = filtr_6_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f6_Revenu_GRDel = pd.DataFrame(filtr_6_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f6_Revenu_GRDel['Percent-2022'] = (dfd22_f6_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f6_Revenu_GRDel['Percent-2022'] = dfd22_f6_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f6_Revenu_GRDel['7DEvolution-2022'] = dfd22_f6_Revenu_GRDel['Total-2022'] - dfd22_f5_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f6_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_6_df23_GRdel = filtr_6_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f6_Revenu_GRDel = pd.DataFrame(filtr_6_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f6_Revenu_GRDel['Percent-2023'] = (dfd23_f6_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f6_Revenu_GRDel['Percent-2023'] = dfd23_f6_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f6_Revenu_GRDel['7DEvolution-2023'] = dfd23_f6_Revenu_GRDel['Total-2023'] - dfd23_f5_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f6_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f6_Revenu_Evlt_GRDel = pd.DataFrame(filtr_6_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f6_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f6_Revenu_GRDel['Total-2023'] - dfd19_f6_Revenu_GRDel['Total-2019'])/ dfd19_f6_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f6_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f6_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f6_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f6 = pd.DataFrame(pd.merge(dfd17_f6_Revenu_GRDel, dfd18_f6_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f6 = pd.DataFrame(pd.merge(dfd19_f6_Revenu_GRDel, dfd21_f6_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f6 = pd.DataFrame(pd.merge(dfd22_f6_Revenu_GRDel, dfd23_f6_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f6 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f6, df_Revenu_GRDel_2_f6, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_6_f6 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f6, df_Revenu_GRDel_3_f6, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f6 = pd.DataFrame(pd.merge(df_Revenu_GRDel_6_f6, dfd23_f6_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f6 = df_Revenu_GRDel_f6[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f6 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6]
Conct_RV_GRDel_f1_f6 = pd.concat(ConcatFra_RV_GRDel_f1_f6)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f6_Profile_count = pd.DataFrame(filtr_6_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f6_Profile_count = dfd17_f6_Profile_count.fillna('Unknown')
dfd17_f6_Profile_count['Percent-2017'] = (dfd17_f6_Profile_count['Total-2017'] / dfd17_f6_Profile_count['Total-2017'].sum()) * 100
dfd17_f6_Profile_count['Percent-2017'] = dfd17_f6_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f6_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f6_Profile_count = pd.DataFrame(filtr_6_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f6_Profile_count = dfd18_f6_Profile_count.fillna('Unknown')
dfd18_f6_Profile_count['Percent-2018'] = (dfd18_f6_Profile_count['Total-2018'] / dfd18_f6_Profile_count['Total-2018'].sum()) * 100
dfd18_f6_Profile_count['Percent-2018'] = dfd18_f6_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f6_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f6_Profile_count = pd.DataFrame(filtr_6_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f6_Profile_count = dfd19_f6_Profile_count.fillna('Unknown')
dfd19_f6_Profile_count['Percent-2019'] = (dfd19_f6_Profile_count['Total-2019'] / dfd19_f6_Profile_count['Total-2019'].sum()) * 100
dfd19_f6_Profile_count['Percent-2019'] = dfd19_f6_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f6_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f6_Profile_count = pd.DataFrame(filtr_6_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f6_Profile_count = dfd21_f6_Profile_count.fillna('Unknown')
dfd21_f6_Profile_count['Percent-2021'] = (dfd21_f6_Profile_count['Total-2021'] / dfd21_f6_Profile_count['Total-2021'].sum()) * 100
dfd21_f6_Profile_count['Percent-2021'] = dfd21_f6_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f6_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f6_Profile_count = pd.DataFrame(filtr_6_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f6_Profile_count = dfd22_f6_Profile_count.fillna('Unknown')
dfd22_f6_Profile_count['Percent-2022'] = (dfd22_f6_Profile_count['Total-2022'] / dfd22_f6_Profile_count['Total-2022'].sum()) * 100
dfd22_f6_Profile_count['Percent-2022'] = dfd22_f6_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f6_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_Profile_count = pd.DataFrame(filtr_6_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f6_Profile_count = dfd23_f6_Profile_count.fillna('Unknown')
dfd23_f6_Profile_count['Percent-2023'] = (dfd23_f6_Profile_count['Total-2023'] / dfd23_f6_Profile_count['Total-2023'].sum()) * 100
dfd23_f6_Profile_count['Percent-2023'] = dfd23_f6_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f6_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f6 = pd.DataFrame(pd.merge(dfd17_f6_Profile_count, dfd18_f6_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f6 = pd.DataFrame(pd.merge(dfd19_f6_Profile_count, dfd21_f6_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f6 = pd.DataFrame(pd.merge(dfd22_f6_Profile_count, dfd23_f6_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f6 = pd.DataFrame(pd.merge(df_Profile_Count_1_f6, df_Profile_Count_2_f6, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f6 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f6, df_Profile_Count_3_f6, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f6 = df_Profile_Count_m2_f6.append(df_Profile_Count_m2_f6.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f6['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f6_Pass_count = pd.DataFrame(filtr_6_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f6_Pass_count = dfd17_f6_Pass_count.fillna('Unknown')
dfd17_f6_Pass_count['Percent-2017'] = (dfd17_f6_Pass_count['Total-2017'] / dfd17_f6_Pass_count['Total-2017'].sum()) * 100
dfd17_f6_Pass_count['Percent-2017'] = dfd17_f6_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f6_Pass_count = pd.DataFrame(filtr_6_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f6_Pass_count = dfd18_f6_Pass_count.fillna('Unknown')
dfd18_f6_Pass_count['Percent-2018'] = (dfd18_f6_Pass_count['Total-2018'] / dfd18_f6_Pass_count['Total-2018'].sum()) * 100
dfd18_f6_Pass_count['Percent-2018'] = dfd18_f6_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f6_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f6_Pass_count = pd.DataFrame(filtr_6_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f6_Pass_count = dfd19_f6_Pass_count.fillna('Unknown')
dfd19_f6_Pass_count['Percent-2019'] = (dfd19_f6_Pass_count['Total-2019'] / dfd19_f6_Pass_count['Total-2019'].sum()) * 100
dfd19_f6_Pass_count['Percent-2019'] = dfd19_f6_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f6_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f6_Pass_count = pd.DataFrame(filtr_6_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f6_Pass_count = dfd21_f6_Pass_count.fillna('Unknown')
dfd21_f6_Pass_count['Percent-2021'] = (dfd21_f6_Pass_count['Total-2021'] / dfd21_f6_Pass_count['Total-2021'].sum()) * 100
dfd21_f6_Pass_count['Percent-2021'] = dfd21_f6_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f6_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f6_Pass_count = pd.DataFrame(filtr_6_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f6_Pass_count = dfd22_f6_Pass_count.fillna('Unknown')
dfd22_f6_Pass_count['Percent-2022'] = (dfd22_f6_Pass_count['Total-2022'] / dfd22_f6_Pass_count['Total-2022'].sum()) * 100
dfd22_f6_Pass_count['Percent-2022'] = dfd22_f6_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f6_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_Pass_count = pd.DataFrame(filtr_6_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f6_Pass_count = dfd23_f6_Pass_count.fillna('Unknown')
dfd23_f6_Pass_count['Percent-2023'] = (dfd23_f6_Pass_count['Total-2023'] / dfd23_f6_Pass_count['Total-2023'].sum()) * 100
dfd23_f6_Pass_count['Percent-2023'] = dfd23_f6_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f6_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f6 = pd.DataFrame(pd.merge(dfd17_f6_Pass_count, dfd18_f6_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f6 = pd.DataFrame(pd.merge(dfd19_f6_Pass_count, dfd21_f6_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f6 = pd.DataFrame(pd.merge(dfd22_f6_Pass_count, dfd23_f6_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f6 = pd.DataFrame(pd.merge(df_Pass_Count_1_f6, df_Pass_Count_2_f6, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f6 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f6, df_Pass_Count_3_f6, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f6 = df_Pass_Count_m2_f6.append(df_Pass_Count_m2_f6.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f6['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f6_Attendees_Country_count = pd.DataFrame(filtr_6_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f6_Attendees_Country_count = dfd17_f6_Attendees_Country_count.fillna('Unknown')
dfd17_f6_Attendees_Country_count['Percent-2017'] = (dfd17_f6_Attendees_Country_count['Total-2017'] / dfd17_f6_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f6_Attendees_Country_count['Percent-2017'] = dfd17_f6_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f6_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f6_Attendees_Country_count = pd.DataFrame(filtr_6_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f6_Attendees_Country_count = dfd18_f6_Attendees_Country_count.fillna('Unknown')
dfd18_f6_Attendees_Country_count['Percent-2018'] = (dfd18_f6_Attendees_Country_count['Total-2018'] / dfd18_f6_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f6_Attendees_Country_count['Percent-2018'] = dfd18_f6_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f6_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f6_Attendees_Country_count = pd.DataFrame(filtr_6_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f6_Attendees_Country_count = dfd19_f6_Attendees_Country_count.fillna('Unknown')
dfd19_f6_Attendees_Country_count['Percent-2019'] = (dfd19_f6_Attendees_Country_count['Total-2019'] / dfd19_f6_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f6_Attendees_Country_count['Percent-2019'] = dfd19_f6_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f6_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f6_Attendees_Country_count = pd.DataFrame(filtr_6_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f6_Attendees_Country_count = dfd21_f6_Attendees_Country_count.fillna('Unknown')
dfd21_f6_Attendees_Country_count['Percent-2021'] = (dfd21_f6_Attendees_Country_count['Total-2021'] / dfd21_f6_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f6_Attendees_Country_count['Percent-2021'] = dfd21_f6_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f6_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f6_Attendees_Country_count = pd.DataFrame(filtr_6_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f6_Attendees_Country_count = dfd22_f6_Attendees_Country_count.fillna('Unknown')
dfd22_f6_Attendees_Country_count['Percent-2022'] = (dfd22_f6_Attendees_Country_count['Total-2022'] / dfd22_f6_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f6_Attendees_Country_count['Percent-2022'] = dfd22_f6_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f6_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_Attendees_Country_count = pd.DataFrame(filtr_6_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f6_Attendees_Country_count = dfd23_f6_Attendees_Country_count.fillna('Unknown')
dfd23_f6_Attendees_Country_count['Percent-2023'] = (dfd23_f6_Attendees_Country_count['Total-2023'] / dfd23_f6_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f6_Attendees_Country_count['Percent-2023'] = dfd23_f6_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f6_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f6 = pd.DataFrame(pd.merge(dfd17_f6_Attendees_Country_count, dfd18_f6_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f6 = pd.DataFrame(pd.merge(dfd19_f6_Attendees_Country_count, dfd21_f6_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f6 = pd.DataFrame(pd.merge(dfd22_f6_Attendees_Country_count, dfd23_f6_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f6 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f6, dfAttendees_Country_Count_2_f6, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f6.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f6 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f6, dfAttendees_Country_Count_3_f6, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f6 = dfAttendees_Country_Count_m2_f6.append(dfAttendees_Country_Count_m2_f6.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f6['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f6_ATTENDEES_AREAS_count = pd.DataFrame(filtr_6_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f6_ATTENDEES_AREAS_count = dfd17_f6_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f6_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f6_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f6_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f6_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f6_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f6_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f6_ATTENDEES_AREAS_count = pd.DataFrame(filtr_6_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f6_ATTENDEES_AREAS_count = dfd18_f6_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f6_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f6_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f6_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f6_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f6_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f6_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f6_ATTENDEES_AREAS_count = pd.DataFrame(filtr_6_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f6_ATTENDEES_AREAS_count = dfd19_f6_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f6_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f6_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f6_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f6_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f6_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f6_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f6_ATTENDEES_AREAS_count = pd.DataFrame(filtr_6_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f6_ATTENDEES_AREAS_count = dfd21_f6_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f6_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f6_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f6_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f6_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f6_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f6_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f6_ATTENDEES_AREAS_count = pd.DataFrame(filtr_6_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f6_ATTENDEES_AREAS_count = dfd22_f6_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f6_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f6_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f6_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f6_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f6_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f6_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_ATTENDEES_AREAS_count = pd.DataFrame(filtr_6_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f6_ATTENDEES_AREAS_count = dfd23_f6_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f6_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f6_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f6_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f6_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f6_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f6_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f6 = pd.DataFrame(pd.merge(dfd17_f6_ATTENDEES_AREAS_count, dfd18_f6_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f6 = pd.DataFrame(pd.merge(dfd19_f6_ATTENDEES_AREAS_count, dfd21_f6_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f6 = pd.DataFrame(pd.merge(dfd22_f6_ATTENDEES_AREAS_count, dfd23_f6_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f6.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f6 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f6, df_ATTENDEES_AREAS_count_2_f6, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f6 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f6, df_ATTENDEES_AREAS_count_3_f6, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f6 = df_ATTENDEES_AREAS_count_m2_f6.append(df_ATTENDEES_AREAS_count_m2_f6.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f6['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f6_Attendees_Specialty_count = pd.DataFrame(filtr_6_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f6_Attendees_Specialty_count = dfd17_f6_Attendees_Specialty_count.fillna('Unknown')
dfd17_f6_Attendees_Specialty_count['Percent-2017'] = (dfd17_f6_Attendees_Specialty_count['Total-2017'] / dfd17_f6_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f6_Attendees_Specialty_count['Percent-2017'] = dfd17_f6_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f6_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f6_Attendees_Specialty_count = pd.DataFrame(filtr_6_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f6_Attendees_Specialty_count = dfd18_f6_Attendees_Specialty_count.fillna('Unknown')
dfd18_f6_Attendees_Specialty_count['Percent-2018'] = (dfd18_f6_Attendees_Specialty_count['Total-2018'] / dfd18_f6_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f6_Attendees_Specialty_count['Percent-2018'] = dfd18_f6_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f6_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f6_Attendees_Specialty_count = pd.DataFrame(filtr_6_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f6_Attendees_Specialty_count = dfd19_f6_Attendees_Specialty_count.fillna('Unknown')
dfd19_f6_Attendees_Specialty_count['Percent-2019'] = (dfd19_f6_Attendees_Specialty_count['Total-2019'] / dfd19_f6_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f6_Attendees_Specialty_count['Percent-2019'] = dfd19_f6_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f6_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f6_Attendees_Specialty_count = pd.DataFrame(filtr_6_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f6_Attendees_Specialty_count = dfd21_f6_Attendees_Specialty_count.fillna('Unknown')
dfd21_f6_Attendees_Specialty_count['Percent-2021'] = (dfd21_f6_Attendees_Specialty_count['Total-2021'] / dfd21_f6_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f6_Attendees_Specialty_count['Percent-2021'] = dfd21_f6_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f6_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f6_Attendees_Specialty_count = pd.DataFrame(filtr_6_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f6_Attendees_Specialty_count = dfd22_f6_Attendees_Specialty_count.fillna('Unknown')
dfd22_f6_Attendees_Specialty_count['Percent-2022'] = (dfd22_f6_Attendees_Specialty_count['Total-2022'] / dfd22_f6_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f6_Attendees_Specialty_count['Percent-2022'] = dfd22_f6_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f6_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f6_Attendees_Specialty_count = pd.DataFrame(filtr_6_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f6_Attendees_Specialty_count = dfd23_f6_Attendees_Specialty_count.fillna('Unknown')
dfd23_f6_Attendees_Specialty_count['Percent-2023'] = (dfd23_f6_Attendees_Specialty_count['Total-2023'] / dfd23_f6_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f6_Attendees_Specialty_count['Percent-2023'] = dfd23_f6_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f6_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f6 = pd.DataFrame(pd.merge(dfd17_f6_Attendees_Specialty_count, dfd18_f6_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f6 = pd.DataFrame(pd.merge(dfd19_f6_Attendees_Specialty_count, dfd21_f6_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f6 = pd.DataFrame(pd.merge(dfd22_f6_Attendees_Specialty_count, dfd23_f6_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f6 = pd.DataFrame(pd.merge(df_Specialty_count_1_f6, df_Specialty_count_2_f6, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f6.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f6 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f6, df_Specialty_count_3_f6, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f6 = df_Specialty_count_m2_f6.append(df_Specialty_count_m2_f6.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f6['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f6['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f6['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f6 = Concat_Registrations_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f6['Total-2017'] = Concat_Registrations_count_f1_f6['Total-2017'].astype(int)
Concat_Registrations_count_f1_f6['Percent-2017'] = Concat_Registrations_count_f1_f6['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f6['7DEvolution-2017'] = Concat_Registrations_count_f1_f6['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f6['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f6['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f6 = Concat_Registrations_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f6['Total-2018'] = Concat_Registrations_count_f1_f6['Total-2018'].astype(int)
Concat_Registrations_count_f1_f6['Percent-2018'] = Concat_Registrations_count_f1_f6['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f6['7DEvolution-2018'] = Concat_Registrations_count_f1_f6['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f6['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f6['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f6 = Concat_Registrations_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f6['Total-2019'] = Concat_Registrations_count_f1_f6['Total-2019'].astype(int)
Concat_Registrations_count_f1_f6['Percent-2019'] = Concat_Registrations_count_f1_f6['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f6['7DEvolution-2019'] = Concat_Registrations_count_f1_f6['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f6['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f6['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f6 = Concat_Registrations_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f6['Total-2021'] = Concat_Registrations_count_f1_f6['Total-2021'].astype(int)
Concat_Registrations_count_f1_f6['Percent-2021'] = Concat_Registrations_count_f1_f6['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f6['7DEvolution-2021'] = Concat_Registrations_count_f1_f6['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f6['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f6['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f6 = Concat_Registrations_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f6['Total-2022'] = Concat_Registrations_count_f1_f6['Total-2022'].astype(int)
Concat_Registrations_count_f1_f6['Percent-2022'] = Concat_Registrations_count_f1_f6['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f6['7DEvolution-2022'] = Concat_Registrations_count_f1_f6['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f6['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f6['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f6 = Concat_Registrations_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f6['Total-2023'] = Concat_Registrations_count_f1_f6['Total-2023'].astype(int)
Concat_Registrations_count_f1_f6['Percent-2023'] = Concat_Registrations_count_f1_f6['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f6['7DEvolution-2023'] = Concat_Registrations_count_f1_f6['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f6['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f6['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f6 = Concat_ACQRET_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f6['Total-2018'] = Concat_ACQRET_count_f1_f6['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f6['ACQ-2018'] = Concat_ACQRET_count_f1_f6['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f6['Percent-2018'] = Concat_ACQRET_count_f1_f6['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f6['RET-2018'] = Concat_ACQRET_count_f1_f6['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f6['Percnt-2018'] = Concat_ACQRET_count_f1_f6['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f6['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f6['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f6 = Concat_ACQRET_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f6['Total-2019'] = Concat_ACQRET_count_f1_f6['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f6['ACQ-2019'] = Concat_ACQRET_count_f1_f6['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f6['Percent-2019'] = Concat_ACQRET_count_f1_f6['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f6['RET-2019'] = Concat_ACQRET_count_f1_f6['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f6['Percnt-2019'] = Concat_ACQRET_count_f1_f6['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f6['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f6['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f6 = Concat_ACQRET_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f6['Total-2021'] = Concat_ACQRET_count_f1_f6['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f6['ACQ-2021'] = Concat_ACQRET_count_f1_f6['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f6['Percent-2021'] = Concat_ACQRET_count_f1_f6['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f6['RET-2021'] = Concat_ACQRET_count_f1_f6['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f6['Percnt-2021'] = Concat_ACQRET_count_f1_f6['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f6['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f6['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f6 = Concat_ACQRET_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f6['Total-2022'] = Concat_ACQRET_count_f1_f6['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f6['ACQ-2022'] = Concat_ACQRET_count_f1_f6['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f6['Percent-2022'] = Concat_ACQRET_count_f1_f6['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f6['RET-2022'] = Concat_ACQRET_count_f1_f6['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f6['Percnt-2022'] = Concat_ACQRET_count_f1_f6['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f6['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f6['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f6 = Concat_ACQRET_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f6['Total-2023'] = Concat_ACQRET_count_f1_f6['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f6['ACQ-2023'] = Concat_ACQRET_count_f1_f6['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f6['Percent-2023'] = Concat_ACQRET_count_f1_f6['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f6['RET-2023'] = Concat_ACQRET_count_f1_f6['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f6['Percnt-2023'] = Concat_ACQRET_count_f1_f6['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f6['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f6['Total-2017'],errors='coerce')
Concat_REV_count_f1_f6 = Concat_REV_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f6['Total-2017'] = Concat_REV_count_f1_f6['Total-2017'].astype(int)
Concat_REV_count_f1_f6['Percent-2017'] = Concat_REV_count_f1_f6['Percent-2017'].astype(float)
Concat_REV_count_f1_f6['7DEvolution-2017'] = Concat_REV_count_f1_f6['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f6['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f6['Total-2018'],errors='coerce')
Concat_REV_count_f1_f6 = Concat_REV_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f6['Total-2018'] = Concat_REV_count_f1_f6['Total-2018'].astype(int)
Concat_REV_count_f1_f6['Percent-2018'] = Concat_REV_count_f1_f6['Percent-2018'].astype(float)
Concat_REV_count_f1_f6['7DEvolution-2018'] = Concat_REV_count_f1_f6['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f6['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f6['Total-2019'],errors='coerce')
Concat_REV_count_f1_f6 = Concat_REV_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f6['Total-2019'] = Concat_REV_count_f1_f6['Total-2019'].astype(int)
Concat_REV_count_f1_f6['Percent-2019'] = Concat_REV_count_f1_f6['Percent-2019'].astype(float)
Concat_REV_count_f1_f6['7DEvolution-2019'] = Concat_REV_count_f1_f6['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f6['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f6['Total-2022'],errors='coerce')
Concat_REV_count_f1_f6 = Concat_REV_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f6['Total-2022'] = Concat_REV_count_f1_f6['Total-2022'].astype(int)
Concat_REV_count_f1_f6['Percent-2022'] = Concat_REV_count_f1_f6['Percent-2022'].astype(float)
Concat_REV_count_f1_f6['7DEvolution-2022'] = Concat_REV_count_f1_f6['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f6['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f6['Total-2023'],errors='coerce')
Concat_REV_count_f1_f6 = Concat_REV_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f6['Total-2023'] = Concat_REV_count_f1_f6['Total-2023'].astype(int)
Concat_REV_count_f1_f6['Percent-2023'] = Concat_REV_count_f1_f6['Percent-2023'].astype(float)
Concat_REV_count_f1_f6['7DEvolution-2023'] = Concat_REV_count_f1_f6['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f6['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f6['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f6 = Concat_RegGRDel_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f6['Total-2017'] = Concat_RegGRDel_count_f1_f6['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f6['Percent-2017'] = Concat_RegGRDel_count_f1_f6['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f6['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f6['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f6['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f6['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f6 = Concat_RegGRDel_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f6['Total-2018'] = Concat_RegGRDel_count_f1_f6['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f6['Percent-2018'] = Concat_RegGRDel_count_f1_f6['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f6['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f6['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f6['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f6['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f6 = Concat_RegGRDel_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f6['Total-2019'] = Concat_RegGRDel_count_f1_f6['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f6['Percent-2019'] = Concat_RegGRDel_count_f1_f6['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f6['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f6['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f6['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f6['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f6 = Concat_RegGRDel_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f6['Total-2021'] = Concat_RegGRDel_count_f1_f6['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f6['Percent-2021'] = Concat_RegGRDel_count_f1_f6['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f6['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f6['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f6['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f6['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f6 = Concat_RegGRDel_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f6['Total-2022'] = Concat_RegGRDel_count_f1_f6['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f6['Percent-2022'] = Concat_RegGRDel_count_f1_f6['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f6['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f6['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f6['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f6['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f6 = Concat_RegGRDel_count_f1_f6.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f6['Total-2023'] = Concat_RegGRDel_count_f1_f6['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f6['Percent-2023'] = Concat_RegGRDel_count_f1_f6['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f6['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f6['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f6['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f6['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f6 = Conct_AC_RT_GRDel_f1_f6.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f6['Total-2018'] = Conct_AC_RT_GRDel_f1_f6['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f6['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f6['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f6['Percent-2018'] = Conct_AC_RT_GRDel_f1_f6['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f6['RET-2018'] = Conct_AC_RT_GRDel_f1_f6['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f6['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f6['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f6['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f6['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f6 = Conct_AC_RT_GRDel_f1_f6.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f6['Total-2019'] = Conct_AC_RT_GRDel_f1_f6['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f6['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f6['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f6['Percent-2019'] = Conct_AC_RT_GRDel_f1_f6['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f6['RET-2019'] = Conct_AC_RT_GRDel_f1_f6['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f6['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f6['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f6['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f6['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f6 = Conct_AC_RT_GRDel_f1_f6.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f6['Total-2021'] = Conct_AC_RT_GRDel_f1_f6['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f6['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f6['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f6['Percent-2021'] = Conct_AC_RT_GRDel_f1_f6['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f6['RET-2021'] = Conct_AC_RT_GRDel_f1_f6['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f6['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f6['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f6['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f6['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f6 = Conct_AC_RT_GRDel_f1_f6.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f6['Total-2022'] = Conct_AC_RT_GRDel_f1_f6['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f6['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f6['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f6['Percent-2022'] = Conct_AC_RT_GRDel_f1_f6['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f6['RET-2022'] = Conct_AC_RT_GRDel_f1_f6['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f6['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f6['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f6['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f6['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f6 = Conct_AC_RT_GRDel_f1_f6.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f6['Total-2023'] = Conct_AC_RT_GRDel_f1_f6['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f6['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f6['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f6['Percent-2023'] = Conct_AC_RT_GRDel_f1_f6['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f6['RET-2023'] = Conct_AC_RT_GRDel_f1_f6['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f6['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f6['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f6['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f6['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f6 = Conct_RV_GRDel_f1_f6.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f6['Total-2017'] = Conct_RV_GRDel_f1_f6['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f6['Percent-2017'] = Conct_RV_GRDel_f1_f6['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f6['7DEvolution-2017'] = Conct_RV_GRDel_f1_f6['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f6['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f6['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f6 = Conct_RV_GRDel_f1_f6.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f6['Total-2018'] = Conct_RV_GRDel_f1_f6['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f6['Percent-2018'] = Conct_RV_GRDel_f1_f6['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f6['7DEvolution-2018'] = Conct_RV_GRDel_f1_f6['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f6['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f6['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f6 = Conct_RV_GRDel_f1_f6.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f6['Total-2019'] = Conct_RV_GRDel_f1_f6['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f6['Percent-2019'] = Conct_RV_GRDel_f1_f6['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f6['7DEvolution-2019'] = Conct_RV_GRDel_f1_f6['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f6['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f6['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f6 = Conct_RV_GRDel_f1_f6.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f6['Total-2022'] = Conct_RV_GRDel_f1_f6['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f6['Percent-2022'] = Conct_RV_GRDel_f1_f6['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f6['7DEvolution-2022'] = Conct_RV_GRDel_f1_f6['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f6['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f6['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f6 = Conct_RV_GRDel_f1_f6.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f6['Total-2023'] = Conct_RV_GRDel_f1_f6['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f6['Percent-2023'] = Conct_RV_GRDel_f1_f6['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f6['7DEvolution-2023'] = Conct_RV_GRDel_f1_f6['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f6['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f6['Total-2017'],errors='coerce')
df_Profile_Count_m2_f6 = df_Profile_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f6['Total-2017'] = df_Profile_Count_m2_f6['Total-2017'].astype(int)
df_Profile_Count_m2_f6['Percent-2017'] = df_Profile_Count_m2_f6['Percent-2017'].astype(float)

df_Profile_Count_m2_f6['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f6['Total-2018'],errors='coerce')
df_Profile_Count_m2_f6 = df_Profile_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f6['Total-2018'] = df_Profile_Count_m2_f6['Total-2018'].astype(int)
df_Profile_Count_m2_f6['Percent-2018'] = df_Profile_Count_m2_f6['Percent-2018'].astype(float)

df_Profile_Count_m2_f6['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f6['Total-2019'],errors='coerce')
df_Profile_Count_m2_f6 = df_Profile_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f6['Total-2019'] = df_Profile_Count_m2_f6['Total-2019'].astype(int)
df_Profile_Count_m2_f6['Percent-2019'] = df_Profile_Count_m2_f6['Percent-2019'].astype(float)

df_Profile_Count_m2_f6['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f6['Total-2021'],errors='coerce')
df_Profile_Count_m2_f6 = df_Profile_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f6['Total-2021'] = df_Profile_Count_m2_f6['Total-2021'].astype(int)
df_Profile_Count_m2_f6['Percent-2021'] = df_Profile_Count_m2_f6['Percent-2021'].astype(float)

df_Profile_Count_m2_f6['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f6['Total-2022'],errors='coerce')
df_Profile_Count_m2_f6 = df_Profile_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f6['Total-2022'] = df_Profile_Count_m2_f6['Total-2022'].astype(int)
df_Profile_Count_m2_f6['Percent-2022'] = df_Profile_Count_m2_f6['Percent-2022'].astype(float)

df_Profile_Count_m2_f6['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f6['Total-2023'],errors='coerce')
df_Profile_Count_m2_f6 = df_Profile_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f6['Total-2023'] = df_Profile_Count_m2_f6['Total-2023'].astype(int)
df_Profile_Count_m2_f6['Percent-2023'] = df_Profile_Count_m2_f6['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f6['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f6['Total-2017'],errors='coerce')
df_Pass_Count_m2_f6 = df_Pass_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f6['Total-2017'] = df_Pass_Count_m2_f6['Total-2017'].astype(int)
df_Pass_Count_m2_f6['Percent-2017'] = df_Pass_Count_m2_f6['Percent-2017'].astype(float)

df_Pass_Count_m2_f6['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f6['Total-2018'],errors='coerce')
df_Pass_Count_m2_f6 = df_Pass_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f6['Total-2018'] = df_Pass_Count_m2_f6['Total-2018'].astype(int)
df_Pass_Count_m2_f6['Percent-2018'] = df_Pass_Count_m2_f6['Percent-2018'].astype(float)

df_Pass_Count_m2_f6['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f6['Total-2019'],errors='coerce')
df_Pass_Count_m2_f6 = df_Pass_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f6['Total-2019'] = df_Pass_Count_m2_f6['Total-2019'].astype(int)
df_Pass_Count_m2_f6['Percent-2019'] = df_Pass_Count_m2_f6['Percent-2019'].astype(float)

df_Pass_Count_m2_f6['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f6['Total-2021'],errors='coerce')
df_Pass_Count_m2_f6 = df_Pass_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f6['Total-2021'] = df_Pass_Count_m2_f6['Total-2021'].astype(int)
df_Pass_Count_m2_f6['Percent-2021'] = df_Pass_Count_m2_f6['Percent-2021'].astype(float)

df_Pass_Count_m2_f6['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f6['Total-2022'],errors='coerce')
df_Pass_Count_m2_f6 = df_Pass_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f6['Total-2022'] = df_Pass_Count_m2_f6['Total-2022'].astype(int)
df_Pass_Count_m2_f6['Percent-2022'] = df_Pass_Count_m2_f6['Percent-2022'].astype(float)

df_Pass_Count_m2_f6['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f6['Total-2023'],errors='coerce')
df_Pass_Count_m2_f6 = df_Pass_Count_m2_f6.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f6['Total-2023'] = df_Pass_Count_m2_f6['Total-2023'].astype(int)
df_Pass_Count_m2_f6['Percent-2023'] = df_Pass_Count_m2_f6['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f6['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f6['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f6 = dfAttendees_Country_Count_m2_f6.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f6['Total-2017'] = dfAttendees_Country_Count_m2_f6['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f6['Percent-2017'] = dfAttendees_Country_Count_m2_f6['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f6['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f6['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f6 = dfAttendees_Country_Count_m2_f6.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f6['Total-2018'] = dfAttendees_Country_Count_m2_f6['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f6['Percent-2018'] = dfAttendees_Country_Count_m2_f6['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f6['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f6['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f6 = dfAttendees_Country_Count_m2_f6.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f6['Total-2019'] = dfAttendees_Country_Count_m2_f6['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f6['Percent-2019'] = dfAttendees_Country_Count_m2_f6['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f6['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f6['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f6 = dfAttendees_Country_Count_m2_f6.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f6['Total-2021'] = dfAttendees_Country_Count_m2_f6['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f6['Percent-2021'] = dfAttendees_Country_Count_m2_f6['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f6['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f6['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f6 = dfAttendees_Country_Count_m2_f6.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f6['Total-2022'] = dfAttendees_Country_Count_m2_f6['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f6['Percent-2022'] = dfAttendees_Country_Count_m2_f6['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f6['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f6['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f6 = dfAttendees_Country_Count_m2_f6.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f6['Total-2023'] = dfAttendees_Country_Count_m2_f6['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f6['Percent-2023'] = dfAttendees_Country_Count_m2_f6['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f6['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f6['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f6 = df_ATTENDEES_AREAS_count_m2_f6.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f6['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f6['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f6['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f6['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f6['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f6['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f6 = df_ATTENDEES_AREAS_count_m2_f6.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f6['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f6['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f6['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f6['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f6['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f6['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f6 = df_ATTENDEES_AREAS_count_m2_f6.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f6['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f6['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f6['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f6['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f6['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f6['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f6 = df_ATTENDEES_AREAS_count_m2_f6.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f6['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f6['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f6['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f6['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f6['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f6['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f6 = df_ATTENDEES_AREAS_count_m2_f6.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f6['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f6['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f6['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f6['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f6['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f6['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f6 = df_ATTENDEES_AREAS_count_m2_f6.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f6['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f6['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f6['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f6['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f6['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f6['Total-2017'],errors='coerce')
df_Specialty_count_m2_f6 = df_Specialty_count_m2_f6.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f6['Total-2017'] = df_Specialty_count_m2_f6['Total-2017'].astype(int)
df_Specialty_count_m2_f6['Percent-2017'] = df_Specialty_count_m2_f6['Percent-2017'].astype(float)

df_Specialty_count_m2_f6['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f6['Total-2018'],errors='coerce')
df_Specialty_count_m2_f6 = df_Specialty_count_m2_f6.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f6['Total-2018'] = df_Specialty_count_m2_f6['Total-2018'].astype(int)
df_Specialty_count_m2_f6['Percent-2018'] = df_Specialty_count_m2_f6['Percent-2018'].astype(float)

df_Specialty_count_m2_f6['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f6['Total-2019'],errors='coerce')
df_Specialty_count_m2_f6 = df_Specialty_count_m2_f6.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f6['Total-2019'] = df_Specialty_count_m2_f6['Total-2019'].astype(int)
df_Specialty_count_m2_f6['Percent-2019'] = df_Specialty_count_m2_f6['Percent-2019'].astype(float)

df_Specialty_count_m2_f6['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f6['Total-2021'],errors='coerce')
df_Specialty_count_m2_f6 = df_Specialty_count_m2_f6.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f6['Total-2021'] = df_Specialty_count_m2_f6['Total-2021'].astype(int)
df_Specialty_count_m2_f6['Percent-2021'] = df_Specialty_count_m2_f6['Percent-2021'].astype(float)

df_Specialty_count_m2_f6['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f6['Total-2022'],errors='coerce')
df_Specialty_count_m2_f6 = df_Specialty_count_m2_f6.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f6['Total-2022'] = df_Specialty_count_m2_f6['Total-2022'].astype(int)
df_Specialty_count_m2_f6['Percent-2022'] = df_Specialty_count_m2_f6['Percent-2022'].astype(float)

df_Specialty_count_m2_f6['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f6['Total-2023'],errors='coerce')
df_Specialty_count_m2_f6 = df_Specialty_count_m2_f6.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f6['Total-2023'] = df_Specialty_count_m2_f6['Total-2023'].astype(int)
df_Specialty_count_m2_f6['Percent-2023'] = df_Specialty_count_m2_f6['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f6.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f6.dtypes)
#print(df_Specialty_count_m2_f6.dtypes)

#print(dfAttendees_Country_Count_m2_f6.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f6.dtypes)
#print(df_Specialty_count_m2_f6.dtypes)

# EXCEL FILE
writerf6 = pd.ExcelWriter(outputExcelFile_f6, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f6.to_excel\
    (writerf6, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f6.to_excel\
    (writerf6, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f6.to_excel\
    (writerf6, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f6.to_excel\
    (writerf6, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f6.to_excel\
    (writerf6, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f6.to_excel\
    (writerf6, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f6.to_excel\
    (writerf6, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f6.to_excel\
    (writerf6, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f6.to_excel\
    (writerf6, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f6.to_excel\
    (writerf6, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f6.to_excel\
    (writerf6, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf6.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f6)

workbook.save(outputExcelFile_f6)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 154 days**********************************************')
print('************************************End of 154 days**********************************************')
print('************************************End of 154 days**********************************************')
print('************************************End of 154 days**********************************************')
print('************************************End of 154 days**********************************************')
print('************************************End of 154 days**********************************************')
print('************************************End of 154 days**********************************************')
print('************************************End of 154 days**********************************************')
print('************************************End of 154 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f7_Registrations_count = pd.DataFrame(filter_7_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f7_Registrations_count = dfd17_f7_Registrations_count.fillna('Unknown')
dfd17_f7_Registrations_count['Percent-2017'] = (dfd17_f7_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f7_Registrations_count['Percent-2017'] = dfd17_f7_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f7_Registrations_count['7DEvolution-2017'] = dfd17_f7_Registrations_count['Total-2017'] - dfd17_f6_Registrations_count['Total-2017']
#print(tab(dfd17_f7_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f7_Registrations_count = pd.DataFrame(filter_7_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f7_Registrations_count = dfd18_f7_Registrations_count.fillna('Unknown')
dfd18_f7_Registrations_count['Percent-2018'] = (dfd18_f7_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f7_Registrations_count['Percent-2018'] = dfd18_f7_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f7_Registrations_count['7DEvolution-2018'] = dfd18_f7_Registrations_count['Total-2018'] - dfd18_f6_Registrations_count['Total-2018']
#print(tab(dfd18_f7_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f7_Registrations_count = pd.DataFrame(filter_7_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f7_Registrations_count = dfd19_f7_Registrations_count.fillna('Unknown')
dfd19_f7_Registrations_count['Percent-2019'] = (dfd19_f7_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f7_Registrations_count['Percent-2019'] = dfd19_f7_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f7_Registrations_count['7DEvolution-2019'] = dfd19_f7_Registrations_count['Total-2019'] - dfd19_f6_Registrations_count['Total-2019']
#print(tab(dfd19_f7_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f7_Registrations_count = pd.DataFrame(filter_7_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f7_Registrations_count = dfd21_f7_Registrations_count.fillna('Unknown')
dfd21_f7_Registrations_count['Percent-2021'] = (dfd21_f7_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f7_Registrations_count['Percent-2021'] = dfd21_f7_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f7_Registrations_count['7DEvolution-2021'] = dfd21_f7_Registrations_count['Total-2021'] - dfd21_f6_Registrations_count['Total-2021']
#print(tab(dfd21_f7_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f7_Registrations_count = pd.DataFrame(filter_7_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f7_Registrations_count = dfd22_f7_Registrations_count.fillna('Unknown')
dfd22_f7_Registrations_count['Percent-2022'] = (dfd22_f7_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f7_Registrations_count['Percent-2022'] = dfd22_f7_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f7_Registrations_count['7DEvolution-2022'] = dfd22_f7_Registrations_count['Total-2022'] - dfd22_f6_Registrations_count['Total-2022']
#print(tab(dfd22_f7_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_Registrations_count = pd.DataFrame(filter_7_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f7_Registrations_count = dfd23_f7_Registrations_count.fillna('Unknown')
dfd23_f7_Registrations_count['Percent-2023'] = (dfd23_f7_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f7_Registrations_count['Percent-2023'] = dfd23_f7_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f7_Registrations_count['7DEvolution-2023'] = dfd23_f7_Registrations_count['Total-2023'] - dfd23_f6_Registrations_count['Total-2023']
#print(tab(dfd23_f7_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f7_RegistrationsEvolution_count = pd.DataFrame(filter_7_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f7_RegistrationsEvolution_count = dfd23_f7_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f7_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f7_Registrations_count['Total-2023'] - dfd19_f7_Registrations_count['Total-2019'])/ dfd19_f7_Registrations_count['Total-2019'].sum()) * 100
dfd23_f7_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f7_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f7_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f7 = pd.DataFrame(pd.merge(dfd17_f7_Registrations_count, dfd18_f7_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f7 = pd.DataFrame(pd.merge(dfd19_f7_Registrations_count, dfd21_f7_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f7 = pd.DataFrame(pd.merge(dfd22_f7_Registrations_count, dfd23_f7_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f7 = pd.DataFrame(pd.merge(df_Registrations_count_1_f7, df_Registrations_count_2_f7, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f7 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f7, df_Registrations_count_3_f7, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f7 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f7, dfd23_f7_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f7 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7]
Concat_Registrations_count_f1_f7 = pd.concat(ConcatFrames_Registrations_count_f1_f7)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f7  = ConcatFrames_Registrations_count_f1_f7.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f7.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f7 = filter_7_df18[filter_7_df18['New customer'] == 1]
df_NewCustomer_df19_f7 = filter_7_df19[filter_7_df19['New customer'] == 1]
df_NewCustomer_df21_f7 = filter_7_df21[filter_7_df21['New customer'] == 1]
df_NewCustomer_df22_f7 = filter_7_df22[filter_7_df22['New customer'] == 1]
df_NewCustomer_df23_f7 = filter_7_df23[filter_7_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f7.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f7.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f7.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a7_ACQRET_count = pd.DataFrame(filter_7_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f7_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f7.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f7_ACQRET_count['Percent-2018'] = (dfd18_f7_ACQRET_count['ACQ-2018'] / dfd18_f7_Registrations_count['Total-2018'].sum()) * 100
dfd18_f7_ACQRET_count['Percent-2018'] = dfd18_f7_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f7_ACQRET_count['RET-2018'] = dfd18_a7_ACQRET_count['Total-2018'] - dfd18_f7_ACQRET_count['ACQ-2018']
dfd18_f7_ACQRET_count['Percnt-2018'] = (dfd18_f7_ACQRET_count['RET-2018'] / dfd18_a7_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f7_ACQRET_count['Percnt-2018'] = dfd18_f7_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f7_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a7_ACQRET_count = pd.DataFrame(filter_7_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f7_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f7.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f7_ACQRET_count['Percent-2019'] = (dfd19_f7_ACQRET_count['ACQ-2019'] / dfd19_f7_Registrations_count['Total-2019'].sum()) * 100
dfd19_f7_ACQRET_count['Percent-2019'] = dfd19_f7_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f7_ACQRET_count['RET-2019'] = dfd19_a7_ACQRET_count['Total-2019'] - dfd19_f7_ACQRET_count['ACQ-2019']
dfd19_f7_ACQRET_count['Percnt-2019'] = (dfd19_f7_ACQRET_count['RET-2019'] / dfd19_a7_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f7_ACQRET_count['Percnt-2019'] = dfd19_f7_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f7_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a7_ACQRET_count = pd.DataFrame(filter_7_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f7_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f7.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f7_ACQRET_count['Percent-2021'] = (dfd21_f7_ACQRET_count['ACQ-2021'] / dfd21_f7_Registrations_count['Total-2021'].sum()) * 100
dfd21_f7_ACQRET_count['Percent-2021'] = dfd21_f7_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f7_ACQRET_count['RET-2021'] = dfd21_a7_ACQRET_count['Total-2021'] - dfd21_f7_ACQRET_count['ACQ-2021']
dfd21_f7_ACQRET_count['Percnt-2021'] = (dfd21_f7_ACQRET_count['RET-2021'] / dfd21_a7_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f7_ACQRET_count['Percnt-2021'] = dfd21_f7_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f7_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a7_ACQRET_count = pd.DataFrame(filter_7_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f7_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f7.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f7_ACQRET_count['Percent-2022'] = (dfd22_f7_ACQRET_count['ACQ-2022'] / dfd22_f7_Registrations_count['Total-2022'].sum()) * 100
dfd22_f7_ACQRET_count['Percent-2022'] = dfd22_f7_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f7_ACQRET_count['RET-2022'] = dfd22_a7_ACQRET_count['Total-2022'] - dfd22_f7_ACQRET_count['ACQ-2022']
dfd22_f7_ACQRET_count['Percnt-2022'] = (dfd22_f7_ACQRET_count['RET-2022'] / dfd22_a7_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f7_ACQRET_count['Percnt-2022'] = dfd22_f7_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f7_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a7_ACQRET_count = pd.DataFrame(filter_7_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f7_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f7.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f7_ACQRET_count['Percent-2023'] = (dfd23_f7_ACQRET_count['ACQ-2023'] / dfd23_f7_Registrations_count['Total-2023'].sum()) * 100
dfd23_f7_ACQRET_count['Percent-2023'] = dfd23_f7_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f7_ACQRET_count['RET-2023'] = dfd23_a7_ACQRET_count['Total-2023'] - dfd23_f7_ACQRET_count['ACQ-2023']
dfd23_f7_ACQRET_count['Percnt-2023'] = (dfd23_f7_ACQRET_count['RET-2023'] / dfd23_a7_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f7_ACQRET_count['Percnt-2023'] = dfd23_f7_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f7_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f7 = pd.DataFrame(pd.merge(dfd18_a7_ACQRET_count, dfd18_f7_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f7 = pd.DataFrame(pd.merge(dfd19_a7_ACQRET_count, dfd19_f7_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f7 = pd.DataFrame(pd.merge(dfd21_a7_ACQRET_count, dfd21_f7_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f7 = pd.DataFrame(pd.merge(dfd22_a7_ACQRET_count, dfd22_f7_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_7_f7 = pd.DataFrame(pd.merge(dfd23_a7_ACQRET_count, dfd23_f7_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_7_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f7 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f7, df_ACQRET_count_2_f7, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f7 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f7, df_ACQRET_count_3_f7, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f7 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f7, df_ACQRET_count_4_f7, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f7 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f7, df_ACQRET_count_7_f7, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f7 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7]
Concat_ACQRET_count_f1_f7 = pd.concat(ConcatFrames_ACQRET_count_f1_f7)
#print(tab(Concat_ACQRET_count_f1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f7 = Concat_ACQRET_count_f1_f7[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f7_Revenue_calc = pd.DataFrame(filter_7_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f7_Revenue_calc['Percent-2017'] = (dfd17_f7_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f7_Revenue_calc['Percent-2017'] = dfd17_f7_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f7_Revenue_calc['7DEvolution-2017'] = dfd17_f7_Revenue_calc['Total-2017'] - dfd17_f6_Revenue_calc['Total-2017']
#print(tab(dfd17_f7_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f7_Revenue_calc = pd.DataFrame(filter_7_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f7_Revenue_calc['Percent-2018'] = (dfd18_f7_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f7_Revenue_calc['Percent-2018'] = dfd18_f7_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f7_Revenue_calc['7DEvolution-2018'] = dfd18_f7_Revenue_calc['Total-2018'] - dfd18_f6_Revenue_calc['Total-2018']
#print(tab(dfd18_f7_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f7_Revenue_calc = pd.DataFrame(filter_7_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f7_Revenue_calc['Percent-2019'] = (dfd19_f7_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f7_Revenue_calc['Percent-2019'] = dfd19_f7_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f7_Revenue_calc['7DEvolution-2019'] = dfd19_f7_Revenue_calc['Total-2019'] - dfd19_f6_Revenue_calc['Total-2019']
#print(tab(dfd19_f7_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f7_Revenue_calc = pd.DataFrame(filter_7_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f7_Revenue_calc['Percent-2021'] = (dfd21_f7_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f7_Revenue_calc['Percent-2021'] = dfd21_f7_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f7_Revenue_calc['7DEvolution-2021'] = dfd21_f7_Revenue_calc['Total-2021'] - dfd21_f6_Revenue_calc['Total-2021']
#print(tab(dfd21_f7_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f7_Revenue_calc = pd.DataFrame(filter_7_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f7_Revenue_calc['Percent-2022'] = (dfd22_f7_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f7_Revenue_calc['Percent-2022'] = dfd22_f7_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f7_Revenue_calc['7DEvolution-2022'] = dfd22_f7_Revenue_calc['Total-2022'] - dfd22_f6_Revenue_calc['Total-2022']
#print(tab(dfd22_f7_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_Revenue_calc = pd.DataFrame(filter_7_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f7_Revenue_calc['Percent-2023'] = (dfd23_f7_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f7_Revenue_calc['Percent-2023'] = dfd23_f7_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f7_Revenue_calc['7DEvolution-2023'] = dfd23_f7_Revenue_calc['Total-2023'] - dfd23_f6_Revenue_calc['Total-2023']
#print(tab(dfd23_f7_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f7_RevenueEvolution_calc = pd.DataFrame(filter_7_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f7_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f7_Revenue_calc['Total-2023'] - dfd19_f7_Revenue_calc['Total-2019'])/ dfd19_f7_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f7_RevenueEvolution_calc['Evolution-2023'] = dfd23_f7_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f7_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f7 = pd.DataFrame(pd.merge(dfd17_f7_Revenue_calc, dfd18_f7_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f7 = pd.DataFrame(pd.merge(dfd19_f7_Revenue_calc, dfd21_f7_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f7 = pd.DataFrame(pd.merge(dfd22_f7_Revenue_calc, dfd23_f7_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f7_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f7, df_Revenue_calc_2_f7, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f7Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f7_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f7_Evolution, df_Revenue_calc_3_f7, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f7Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f7 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f7_Evolution, dfd23_f7_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f7 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7]
Concat_REV_count_f1_f7 = pd.concat(ConcatFrames_REV_count_f1_f7)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f7_Registrations_GRDel = pd.DataFrame(filtr_7_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f7_Registrations_GRDel = dfd17_f7_Registrations_GRDel.fillna('Unknown')
dfd17_f7_Registrations_GRDel['Percent-2017'] = (dfd17_f7_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f7_Registrations_GRDel['Percent-2017'] = dfd17_f7_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f7_Registrations_GRDel['7DEvolution-2017'] = dfd17_f7_Registrations_GRDel['Total-2017'] - dfd17_f6_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f7_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f7_Registrations_GRDel = pd.DataFrame(filtr_7_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f7_Registrations_GRDel = dfd18_f7_Registrations_GRDel.fillna('Unknown')
dfd18_f7_Registrations_GRDel['Percent-2018'] = (dfd18_f7_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f7_Registrations_GRDel['Percent-2018'] = dfd18_f7_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f7_Registrations_GRDel['7DEvolution-2018'] = dfd18_f7_Registrations_GRDel['Total-2018'] - dfd18_f6_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f7_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f7_Registrations_GRDel = pd.DataFrame(filtr_7_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f7_Registrations_GRDel = dfd19_f7_Registrations_GRDel.fillna('Unknown')
dfd19_f7_Registrations_GRDel['Percent-2019'] = (dfd19_f7_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f7_Registrations_GRDel['Percent-2019'] = dfd19_f7_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f7_Registrations_GRDel['7DEvolution-2019'] = dfd19_f7_Registrations_GRDel['Total-2019'] - dfd19_f6_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f7_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f7_Registrations_GRDel = pd.DataFrame(filtr_7_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f7_Registrations_GRDel = dfd21_f7_Registrations_GRDel.fillna('Unknown')
dfd21_f7_Registrations_GRDel['Percent-2021'] = (dfd21_f7_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f7_Registrations_GRDel['Percent-2021'] = dfd21_f7_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f7_Registrations_GRDel['7DEvolution-2021'] = dfd21_f7_Registrations_GRDel['Total-2021'] - dfd21_f6_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f7_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f7_Registrations_GRDel = pd.DataFrame(filtr_7_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f7_Registrations_GRDel = dfd22_f7_Registrations_GRDel.fillna('Unknown')
dfd22_f7_Registrations_GRDel['Percent-2022'] = (dfd22_f7_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f7_Registrations_GRDel['Percent-2022'] = dfd22_f7_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f7_Registrations_GRDel['7DEvolution-2022'] = dfd22_f7_Registrations_GRDel['Total-2022'] - dfd22_f6_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f7_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_Registrations_GRDel = pd.DataFrame(filtr_7_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f7_Registrations_GRDel = dfd23_f7_Registrations_GRDel.fillna('Unknown')
dfd23_f7_Registrations_GRDel['Percent-2023'] = (dfd23_f7_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f7_Registrations_GRDel['Percent-2023'] = dfd23_f7_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f7_Registrations_GRDel['7DEvolution-2023'] = dfd23_f7_Registrations_GRDel['Total-2023'] - dfd23_f6_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f7_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f7_Registrations_Evol_GRDel = pd.DataFrame(filtr_7_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f7_Registrations_Evol_GRDel = dfd23_f7_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f7_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f7_Registrations_GRDel['Total-2023'] - dfd19_f7_Registrations_GRDel['Total-2019'])/ dfd19_f7_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f7_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f7 = pd.concat([dfd17_f7_Registrations_GRDel, dfd18_f7_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f7 = pd.DataFrame(pd.merge(dfd17_f7_Registrations_GRDel, dfd18_f7_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f7 = pd.DataFrame(pd.merge(dfd19_f7_Registrations_GRDel, dfd21_f7_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f7 = pd.DataFrame(pd.merge(dfd22_f7_Registrations_GRDel, dfd23_f7_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f7 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f7, df_Registrations_GRDel_2_f7, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_7_f7 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f7, df_Registrations_GRDel_3_f7, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f7 = pd.DataFrame(pd.merge(df_Registrations_GRDel_7_f7, dfd23_f7_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f7 = df_Registrations_GRDel_f7[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f7 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7]
Concat_RegGRDel_count_f1_f7 = pd.concat(ConcatFrames_RegGRDel_count_f1_f7)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f7 = filtr_7_df18_GRdel[filtr_7_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f7 = filtr_7_df19_GRdel[filtr_7_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f7 = filtr_7_df21_GRdel[filtr_7_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f7 = filtr_7_df22_GRdel[filtr_7_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f7 = filtr_7_df23_GRdel[filtr_7_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f7.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f7.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a7_AC_RT_GRDel = pd.DataFrame(filtr_7_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f7_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f7.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f7_AC_RT_GRDel['Percent-2018'] = (dfd18_f7_AC_RT_GRDel['ACQ-2018'] / dfd18_f7_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f7_AC_RT_GRDel['Percent-2018'] = dfd18_f7_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f7_AC_RT_GRDel['RET-2018'] = dfd18_a7_AC_RT_GRDel['Total-2018'] - dfd18_f7_AC_RT_GRDel['ACQ-2018']
dfd18_f7_AC_RT_GRDel['Percnt-2018'] = (dfd18_f7_AC_RT_GRDel['RET-2018'] / dfd18_a7_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f7_AC_RT_GRDel['Percnt-2018'] = dfd18_f7_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f7_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a7_AC_RT_GRDel = pd.DataFrame(filtr_7_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f7_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f7.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f7_AC_RT_GRDel['Percent-2019'] = (dfd19_f7_AC_RT_GRDel['ACQ-2019'] / dfd19_f7_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f7_AC_RT_GRDel['Percent-2019'] = dfd19_f7_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f7_AC_RT_GRDel['RET-2019'] = dfd19_a7_AC_RT_GRDel['Total-2019'] - dfd19_f7_AC_RT_GRDel['ACQ-2019']
dfd19_f7_AC_RT_GRDel['Percnt-2019'] = (dfd19_f7_AC_RT_GRDel['RET-2019'] / dfd19_a7_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f7_AC_RT_GRDel['Percnt-2019'] = dfd19_f7_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f7_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a7_AC_RT_GRDel = pd.DataFrame(filtr_7_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f7_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f7.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f7_AC_RT_GRDel['Percent-2021'] = (dfd21_f7_AC_RT_GRDel['ACQ-2021'] / dfd21_f7_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f7_AC_RT_GRDel['Percent-2021'] = dfd21_f7_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f7_AC_RT_GRDel['RET-2021'] = dfd21_a7_AC_RT_GRDel['Total-2021'] - dfd21_f7_AC_RT_GRDel['ACQ-2021']
dfd21_f7_AC_RT_GRDel['Percnt-2021'] = (dfd21_f7_AC_RT_GRDel['RET-2021'] / dfd21_a7_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f7_AC_RT_GRDel['Percnt-2021'] = dfd21_f7_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f7_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a7_AC_RT_GRDel = pd.DataFrame(filtr_7_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f7_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f7.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f7_AC_RT_GRDel['Percent-2022'] = (dfd22_f7_AC_RT_GRDel['ACQ-2022'] / dfd22_f7_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f7_AC_RT_GRDel['Percent-2022'] = dfd22_f7_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f7_AC_RT_GRDel['RET-2022'] = dfd22_a7_AC_RT_GRDel['Total-2022'] - dfd22_f7_AC_RT_GRDel['ACQ-2022']
dfd22_f7_AC_RT_GRDel['Percnt-2022'] = (dfd22_f7_AC_RT_GRDel['RET-2022'] / dfd22_a7_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f7_AC_RT_GRDel['Percnt-2022'] = dfd22_f7_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f7_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a7_AC_RT_GRDel = pd.DataFrame(filtr_7_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f7_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f7.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f7_AC_RT_GRDel['Percent-2023'] = (dfd23_f7_AC_RT_GRDel['ACQ-2023'] / dfd23_f7_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f7_AC_RT_GRDel['Percent-2023'] = dfd23_f7_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f7_AC_RT_GRDel['RET-2023'] = dfd23_a7_AC_RT_GRDel['Total-2023'] - dfd23_f7_AC_RT_GRDel['ACQ-2023']
dfd23_f7_AC_RT_GRDel['Percnt-2023'] = (dfd23_f7_AC_RT_GRDel['RET-2023'] / dfd23_a7_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f7_AC_RT_GRDel['Percnt-2023'] = dfd23_f7_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f7_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f7 = pd.DataFrame(pd.merge_ordered(dfd18_a7_AC_RT_GRDel, dfd18_f7_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f7 = pd.DataFrame(pd.merge_ordered(dfd19_a7_AC_RT_GRDel, dfd19_f7_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f7 = pd.DataFrame(pd.merge_ordered(dfd21_a7_AC_RT_GRDel, dfd21_f7_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f7 = pd.DataFrame(pd.merge_ordered(dfd22_a7_AC_RT_GRDel, dfd22_f7_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_7_f7 = pd.DataFrame(pd.merge_ordered(dfd23_a7_AC_RT_GRDel, dfd23_f7_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f7 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f7, df_AC_ET_GRDel_2_f7, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f7 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f7, df_AC_ET_GRDel_3_f7, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f7 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f7, df_AC_ET_GRDel_4_f7, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f7 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f7, df_AC_ET_GRDel_7_f7, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f7 = df_AC_RT_GRDel_M4_f7[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f7 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7]
Conct_AC_RT_GRDel_f1_f7 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f7)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_7_df17_GRdel = filtr_7_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f7_Revenu_GRDel = pd.DataFrame(filtr_7_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f7_Revenu_GRDel['Percent-2017'] = (dfd17_f7_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f7_Revenu_GRDel['Percent-2017'] = dfd17_f7_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f7_Revenu_GRDel['7DEvolution-2017'] = dfd17_f7_Revenu_GRDel['Total-2017'] - dfd17_f6_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f7_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_7_df18_GRdel = filtr_7_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f7_Revenu_GRDel = pd.DataFrame(filtr_7_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f7_Revenu_GRDel['Percent-2018'] = (dfd18_f7_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f7_Revenu_GRDel['Percent-2018'] = dfd18_f7_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f7_Revenu_GRDel['7DEvolution-2018'] = dfd18_f7_Revenu_GRDel['Total-2018'] - dfd18_f6_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f7_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_7_df19_GRdel = filtr_7_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f7_Revenu_GRDel = pd.DataFrame(filtr_7_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f7_Revenu_GRDel['Percent-2019'] = (dfd19_f7_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f7_Revenu_GRDel['Percent-2019'] = dfd19_f7_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f7_Revenu_GRDel['7DEvolution-2019'] = dfd19_f7_Revenu_GRDel['Total-2019'] - dfd19_f6_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f7_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_7_df21_GRdel = filtr_7_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f7_Revenu_GRDel = pd.DataFrame(filtr_7_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f7_Revenu_GRDel['Percent-2021'] = (dfd21_f7_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f7_Revenu_GRDel['Percent-2021'] = dfd21_f7_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f7_Revenu_GRDel['7DEvolution-2021'] = dfd21_f7_Revenu_GRDel['Total-2021'] - dfd21_f6_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f7_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_7_df22_GRdel = filtr_7_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f7_Revenu_GRDel = pd.DataFrame(filtr_7_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f7_Revenu_GRDel['Percent-2022'] = (dfd22_f7_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f7_Revenu_GRDel['Percent-2022'] = dfd22_f7_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f7_Revenu_GRDel['7DEvolution-2022'] = dfd22_f7_Revenu_GRDel['Total-2022'] - dfd22_f6_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f7_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_7_df23_GRdel = filtr_7_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f7_Revenu_GRDel = pd.DataFrame(filtr_7_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f7_Revenu_GRDel['Percent-2023'] = (dfd23_f7_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f7_Revenu_GRDel['Percent-2023'] = dfd23_f7_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f7_Revenu_GRDel['7DEvolution-2023'] = dfd23_f7_Revenu_GRDel['Total-2023'] - dfd23_f6_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f7_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f7_Revenu_Evlt_GRDel = pd.DataFrame(filtr_7_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f7_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f7_Revenu_GRDel['Total-2023'] - dfd19_f7_Revenu_GRDel['Total-2019'])/ dfd19_f7_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f7_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f7_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f7_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f7 = pd.DataFrame(pd.merge(dfd17_f7_Revenu_GRDel, dfd18_f7_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f7 = pd.DataFrame(pd.merge(dfd19_f7_Revenu_GRDel, dfd21_f7_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f7 = pd.DataFrame(pd.merge(dfd22_f7_Revenu_GRDel, dfd23_f7_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f7 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f7, df_Revenu_GRDel_2_f7, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_7_f7 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f7, df_Revenu_GRDel_3_f7, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f7 = pd.DataFrame(pd.merge(df_Revenu_GRDel_7_f7, dfd23_f7_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f7 = df_Revenu_GRDel_f7[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f7 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7]
Conct_RV_GRDel_f1_f7 = pd.concat(ConcatFra_RV_GRDel_f1_f7)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f7_Profile_count = pd.DataFrame(filtr_7_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f7_Profile_count = dfd17_f7_Profile_count.fillna('Unknown')
dfd17_f7_Profile_count['Percent-2017'] = (dfd17_f7_Profile_count['Total-2017'] / dfd17_f7_Profile_count['Total-2017'].sum()) * 100
dfd17_f7_Profile_count['Percent-2017'] = dfd17_f7_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f7_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f7_Profile_count = pd.DataFrame(filtr_7_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f7_Profile_count = dfd18_f7_Profile_count.fillna('Unknown')
dfd18_f7_Profile_count['Percent-2018'] = (dfd18_f7_Profile_count['Total-2018'] / dfd18_f7_Profile_count['Total-2018'].sum()) * 100
dfd18_f7_Profile_count['Percent-2018'] = dfd18_f7_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f7_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f7_Profile_count = pd.DataFrame(filtr_7_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f7_Profile_count = dfd19_f7_Profile_count.fillna('Unknown')
dfd19_f7_Profile_count['Percent-2019'] = (dfd19_f7_Profile_count['Total-2019'] / dfd19_f7_Profile_count['Total-2019'].sum()) * 100
dfd19_f7_Profile_count['Percent-2019'] = dfd19_f7_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f7_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f7_Profile_count = pd.DataFrame(filtr_7_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f7_Profile_count = dfd21_f7_Profile_count.fillna('Unknown')
dfd21_f7_Profile_count['Percent-2021'] = (dfd21_f7_Profile_count['Total-2021'] / dfd21_f7_Profile_count['Total-2021'].sum()) * 100
dfd21_f7_Profile_count['Percent-2021'] = dfd21_f7_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f7_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f7_Profile_count = pd.DataFrame(filtr_7_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f7_Profile_count = dfd22_f7_Profile_count.fillna('Unknown')
dfd22_f7_Profile_count['Percent-2022'] = (dfd22_f7_Profile_count['Total-2022'] / dfd22_f7_Profile_count['Total-2022'].sum()) * 100
dfd22_f7_Profile_count['Percent-2022'] = dfd22_f7_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f7_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_Profile_count = pd.DataFrame(filtr_7_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f7_Profile_count = dfd23_f7_Profile_count.fillna('Unknown')
dfd23_f7_Profile_count['Percent-2023'] = (dfd23_f7_Profile_count['Total-2023'] / dfd23_f7_Profile_count['Total-2023'].sum()) * 100
dfd23_f7_Profile_count['Percent-2023'] = dfd23_f7_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f7_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f7 = pd.DataFrame(pd.merge(dfd17_f7_Profile_count, dfd18_f7_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f7 = pd.DataFrame(pd.merge(dfd19_f7_Profile_count, dfd21_f7_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f7 = pd.DataFrame(pd.merge(dfd22_f7_Profile_count, dfd23_f7_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f7 = pd.DataFrame(pd.merge(df_Profile_Count_1_f7, df_Profile_Count_2_f7, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f7 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f7, df_Profile_Count_3_f7, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f7 = df_Profile_Count_m2_f7.append(df_Profile_Count_m2_f7.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f7['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f7_Pass_count = pd.DataFrame(filtr_7_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f7_Pass_count = dfd17_f7_Pass_count.fillna('Unknown')
dfd17_f7_Pass_count['Percent-2017'] = (dfd17_f7_Pass_count['Total-2017'] / dfd17_f7_Pass_count['Total-2017'].sum()) * 100
dfd17_f7_Pass_count['Percent-2017'] = dfd17_f7_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f7_Pass_count = pd.DataFrame(filtr_7_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f7_Pass_count = dfd18_f7_Pass_count.fillna('Unknown')
dfd18_f7_Pass_count['Percent-2018'] = (dfd18_f7_Pass_count['Total-2018'] / dfd18_f7_Pass_count['Total-2018'].sum()) * 100
dfd18_f7_Pass_count['Percent-2018'] = dfd18_f7_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f7_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f7_Pass_count = pd.DataFrame(filtr_7_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f7_Pass_count = dfd19_f7_Pass_count.fillna('Unknown')
dfd19_f7_Pass_count['Percent-2019'] = (dfd19_f7_Pass_count['Total-2019'] / dfd19_f7_Pass_count['Total-2019'].sum()) * 100
dfd19_f7_Pass_count['Percent-2019'] = dfd19_f7_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f7_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f7_Pass_count = pd.DataFrame(filtr_7_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f7_Pass_count = dfd21_f7_Pass_count.fillna('Unknown')
dfd21_f7_Pass_count['Percent-2021'] = (dfd21_f7_Pass_count['Total-2021'] / dfd21_f7_Pass_count['Total-2021'].sum()) * 100
dfd21_f7_Pass_count['Percent-2021'] = dfd21_f7_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f7_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f7_Pass_count = pd.DataFrame(filtr_7_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f7_Pass_count = dfd22_f7_Pass_count.fillna('Unknown')
dfd22_f7_Pass_count['Percent-2022'] = (dfd22_f7_Pass_count['Total-2022'] / dfd22_f7_Pass_count['Total-2022'].sum()) * 100
dfd22_f7_Pass_count['Percent-2022'] = dfd22_f7_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f7_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_Pass_count = pd.DataFrame(filtr_7_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f7_Pass_count = dfd23_f7_Pass_count.fillna('Unknown')
dfd23_f7_Pass_count['Percent-2023'] = (dfd23_f7_Pass_count['Total-2023'] / dfd23_f7_Pass_count['Total-2023'].sum()) * 100
dfd23_f7_Pass_count['Percent-2023'] = dfd23_f7_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f7_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f7 = pd.DataFrame(pd.merge(dfd17_f7_Pass_count, dfd18_f7_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f7 = pd.DataFrame(pd.merge(dfd19_f7_Pass_count, dfd21_f7_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f7 = pd.DataFrame(pd.merge(dfd22_f7_Pass_count, dfd23_f7_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f7 = pd.DataFrame(pd.merge(df_Pass_Count_1_f7, df_Pass_Count_2_f7, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f7 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f7, df_Pass_Count_3_f7, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f7 = df_Pass_Count_m2_f7.append(df_Pass_Count_m2_f7.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f7['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f7_Attendees_Country_count = pd.DataFrame(filtr_7_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f7_Attendees_Country_count = dfd17_f7_Attendees_Country_count.fillna('Unknown')
dfd17_f7_Attendees_Country_count['Percent-2017'] = (dfd17_f7_Attendees_Country_count['Total-2017'] / dfd17_f7_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f7_Attendees_Country_count['Percent-2017'] = dfd17_f7_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f7_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f7_Attendees_Country_count = pd.DataFrame(filtr_7_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f7_Attendees_Country_count = dfd18_f7_Attendees_Country_count.fillna('Unknown')
dfd18_f7_Attendees_Country_count['Percent-2018'] = (dfd18_f7_Attendees_Country_count['Total-2018'] / dfd18_f7_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f7_Attendees_Country_count['Percent-2018'] = dfd18_f7_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f7_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f7_Attendees_Country_count = pd.DataFrame(filtr_7_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f7_Attendees_Country_count = dfd19_f7_Attendees_Country_count.fillna('Unknown')
dfd19_f7_Attendees_Country_count['Percent-2019'] = (dfd19_f7_Attendees_Country_count['Total-2019'] / dfd19_f7_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f7_Attendees_Country_count['Percent-2019'] = dfd19_f7_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f7_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f7_Attendees_Country_count = pd.DataFrame(filtr_7_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f7_Attendees_Country_count = dfd21_f7_Attendees_Country_count.fillna('Unknown')
dfd21_f7_Attendees_Country_count['Percent-2021'] = (dfd21_f7_Attendees_Country_count['Total-2021'] / dfd21_f7_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f7_Attendees_Country_count['Percent-2021'] = dfd21_f7_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f7_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f7_Attendees_Country_count = pd.DataFrame(filtr_7_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f7_Attendees_Country_count = dfd22_f7_Attendees_Country_count.fillna('Unknown')
dfd22_f7_Attendees_Country_count['Percent-2022'] = (dfd22_f7_Attendees_Country_count['Total-2022'] / dfd22_f7_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f7_Attendees_Country_count['Percent-2022'] = dfd22_f7_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f7_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_Attendees_Country_count = pd.DataFrame(filtr_7_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f7_Attendees_Country_count = dfd23_f7_Attendees_Country_count.fillna('Unknown')
dfd23_f7_Attendees_Country_count['Percent-2023'] = (dfd23_f7_Attendees_Country_count['Total-2023'] / dfd23_f7_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f7_Attendees_Country_count['Percent-2023'] = dfd23_f7_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f7_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f7 = pd.DataFrame(pd.merge(dfd17_f7_Attendees_Country_count, dfd18_f7_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f7 = pd.DataFrame(pd.merge(dfd19_f7_Attendees_Country_count, dfd21_f7_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f7 = pd.DataFrame(pd.merge(dfd22_f7_Attendees_Country_count, dfd23_f7_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f7 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f7, dfAttendees_Country_Count_2_f7, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f7.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f7 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f7, dfAttendees_Country_Count_3_f7, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f7 = dfAttendees_Country_Count_m2_f7.append(dfAttendees_Country_Count_m2_f7.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f7['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f7_ATTENDEES_AREAS_count = pd.DataFrame(filtr_7_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f7_ATTENDEES_AREAS_count = dfd17_f7_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f7_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f7_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f7_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f7_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f7_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f7_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f7_ATTENDEES_AREAS_count = pd.DataFrame(filtr_7_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f7_ATTENDEES_AREAS_count = dfd18_f7_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f7_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f7_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f7_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f7_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f7_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f7_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f7_ATTENDEES_AREAS_count = pd.DataFrame(filtr_7_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f7_ATTENDEES_AREAS_count = dfd19_f7_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f7_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f7_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f7_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f7_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f7_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f7_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f7_ATTENDEES_AREAS_count = pd.DataFrame(filtr_7_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f7_ATTENDEES_AREAS_count = dfd21_f7_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f7_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f7_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f7_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f7_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f7_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f7_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f7_ATTENDEES_AREAS_count = pd.DataFrame(filtr_7_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f7_ATTENDEES_AREAS_count = dfd22_f7_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f7_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f7_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f7_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f7_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f7_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f7_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_ATTENDEES_AREAS_count = pd.DataFrame(filtr_7_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f7_ATTENDEES_AREAS_count = dfd23_f7_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f7_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f7_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f7_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f7_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f7_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f7_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f7 = pd.DataFrame(pd.merge(dfd17_f7_ATTENDEES_AREAS_count, dfd18_f7_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f7 = pd.DataFrame(pd.merge(dfd19_f7_ATTENDEES_AREAS_count, dfd21_f7_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f7 = pd.DataFrame(pd.merge(dfd22_f7_ATTENDEES_AREAS_count, dfd23_f7_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f7.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f7 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f7, df_ATTENDEES_AREAS_count_2_f7, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f7 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f7, df_ATTENDEES_AREAS_count_3_f7, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f7 = df_ATTENDEES_AREAS_count_m2_f7.append(df_ATTENDEES_AREAS_count_m2_f7.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f7['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f7_Attendees_Specialty_count = pd.DataFrame(filtr_7_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f7_Attendees_Specialty_count = dfd17_f7_Attendees_Specialty_count.fillna('Unknown')
dfd17_f7_Attendees_Specialty_count['Percent-2017'] = (dfd17_f7_Attendees_Specialty_count['Total-2017'] / dfd17_f7_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f7_Attendees_Specialty_count['Percent-2017'] = dfd17_f7_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f7_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f7_Attendees_Specialty_count = pd.DataFrame(filtr_7_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f7_Attendees_Specialty_count = dfd18_f7_Attendees_Specialty_count.fillna('Unknown')
dfd18_f7_Attendees_Specialty_count['Percent-2018'] = (dfd18_f7_Attendees_Specialty_count['Total-2018'] / dfd18_f7_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f7_Attendees_Specialty_count['Percent-2018'] = dfd18_f7_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f7_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f7_Attendees_Specialty_count = pd.DataFrame(filtr_7_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f7_Attendees_Specialty_count = dfd19_f7_Attendees_Specialty_count.fillna('Unknown')
dfd19_f7_Attendees_Specialty_count['Percent-2019'] = (dfd19_f7_Attendees_Specialty_count['Total-2019'] / dfd19_f7_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f7_Attendees_Specialty_count['Percent-2019'] = dfd19_f7_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f7_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f7_Attendees_Specialty_count = pd.DataFrame(filtr_7_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f7_Attendees_Specialty_count = dfd21_f7_Attendees_Specialty_count.fillna('Unknown')
dfd21_f7_Attendees_Specialty_count['Percent-2021'] = (dfd21_f7_Attendees_Specialty_count['Total-2021'] / dfd21_f7_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f7_Attendees_Specialty_count['Percent-2021'] = dfd21_f7_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f7_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f7_Attendees_Specialty_count = pd.DataFrame(filtr_7_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f7_Attendees_Specialty_count = dfd22_f7_Attendees_Specialty_count.fillna('Unknown')
dfd22_f7_Attendees_Specialty_count['Percent-2022'] = (dfd22_f7_Attendees_Specialty_count['Total-2022'] / dfd22_f7_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f7_Attendees_Specialty_count['Percent-2022'] = dfd22_f7_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f7_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f7_Attendees_Specialty_count = pd.DataFrame(filtr_7_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f7_Attendees_Specialty_count = dfd23_f7_Attendees_Specialty_count.fillna('Unknown')
dfd23_f7_Attendees_Specialty_count['Percent-2023'] = (dfd23_f7_Attendees_Specialty_count['Total-2023'] / dfd23_f7_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f7_Attendees_Specialty_count['Percent-2023'] = dfd23_f7_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f7_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f7 = pd.DataFrame(pd.merge(dfd17_f7_Attendees_Specialty_count, dfd18_f7_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f7 = pd.DataFrame(pd.merge(dfd19_f7_Attendees_Specialty_count, dfd21_f7_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f7 = pd.DataFrame(pd.merge(dfd22_f7_Attendees_Specialty_count, dfd23_f7_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f7 = pd.DataFrame(pd.merge(df_Specialty_count_1_f7, df_Specialty_count_2_f7, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f7.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f7 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f7, df_Specialty_count_3_f7, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f7 = df_Specialty_count_m2_f7.append(df_Specialty_count_m2_f7.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f7['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f7['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f7['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f7 = Concat_Registrations_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f7['Total-2017'] = Concat_Registrations_count_f1_f7['Total-2017'].astype(int)
Concat_Registrations_count_f1_f7['Percent-2017'] = Concat_Registrations_count_f1_f7['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f7['7DEvolution-2017'] = Concat_Registrations_count_f1_f7['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f7['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f7['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f7 = Concat_Registrations_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f7['Total-2018'] = Concat_Registrations_count_f1_f7['Total-2018'].astype(int)
Concat_Registrations_count_f1_f7['Percent-2018'] = Concat_Registrations_count_f1_f7['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f7['7DEvolution-2018'] = Concat_Registrations_count_f1_f7['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f7['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f7['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f7 = Concat_Registrations_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f7['Total-2019'] = Concat_Registrations_count_f1_f7['Total-2019'].astype(int)
Concat_Registrations_count_f1_f7['Percent-2019'] = Concat_Registrations_count_f1_f7['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f7['7DEvolution-2019'] = Concat_Registrations_count_f1_f7['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f7['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f7['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f7 = Concat_Registrations_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f7['Total-2021'] = Concat_Registrations_count_f1_f7['Total-2021'].astype(int)
Concat_Registrations_count_f1_f7['Percent-2021'] = Concat_Registrations_count_f1_f7['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f7['7DEvolution-2021'] = Concat_Registrations_count_f1_f7['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f7['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f7['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f7 = Concat_Registrations_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f7['Total-2022'] = Concat_Registrations_count_f1_f7['Total-2022'].astype(int)
Concat_Registrations_count_f1_f7['Percent-2022'] = Concat_Registrations_count_f1_f7['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f7['7DEvolution-2022'] = Concat_Registrations_count_f1_f7['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f7['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f7['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f7 = Concat_Registrations_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f7['Total-2023'] = Concat_Registrations_count_f1_f7['Total-2023'].astype(int)
Concat_Registrations_count_f1_f7['Percent-2023'] = Concat_Registrations_count_f1_f7['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f7['7DEvolution-2023'] = Concat_Registrations_count_f1_f7['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f7['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f7['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f7 = Concat_ACQRET_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f7['Total-2018'] = Concat_ACQRET_count_f1_f7['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f7['ACQ-2018'] = Concat_ACQRET_count_f1_f7['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f7['Percent-2018'] = Concat_ACQRET_count_f1_f7['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f7['RET-2018'] = Concat_ACQRET_count_f1_f7['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f7['Percnt-2018'] = Concat_ACQRET_count_f1_f7['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f7['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f7['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f7 = Concat_ACQRET_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f7['Total-2019'] = Concat_ACQRET_count_f1_f7['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f7['ACQ-2019'] = Concat_ACQRET_count_f1_f7['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f7['Percent-2019'] = Concat_ACQRET_count_f1_f7['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f7['RET-2019'] = Concat_ACQRET_count_f1_f7['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f7['Percnt-2019'] = Concat_ACQRET_count_f1_f7['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f7['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f7['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f7 = Concat_ACQRET_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f7['Total-2021'] = Concat_ACQRET_count_f1_f7['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f7['ACQ-2021'] = Concat_ACQRET_count_f1_f7['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f7['Percent-2021'] = Concat_ACQRET_count_f1_f7['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f7['RET-2021'] = Concat_ACQRET_count_f1_f7['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f7['Percnt-2021'] = Concat_ACQRET_count_f1_f7['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f7['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f7['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f7 = Concat_ACQRET_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f7['Total-2022'] = Concat_ACQRET_count_f1_f7['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f7['ACQ-2022'] = Concat_ACQRET_count_f1_f7['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f7['Percent-2022'] = Concat_ACQRET_count_f1_f7['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f7['RET-2022'] = Concat_ACQRET_count_f1_f7['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f7['Percnt-2022'] = Concat_ACQRET_count_f1_f7['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f7['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f7['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f7 = Concat_ACQRET_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f7['Total-2023'] = Concat_ACQRET_count_f1_f7['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f7['ACQ-2023'] = Concat_ACQRET_count_f1_f7['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f7['Percent-2023'] = Concat_ACQRET_count_f1_f7['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f7['RET-2023'] = Concat_ACQRET_count_f1_f7['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f7['Percnt-2023'] = Concat_ACQRET_count_f1_f7['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f7['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f7['Total-2017'],errors='coerce')
Concat_REV_count_f1_f7 = Concat_REV_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f7['Total-2017'] = Concat_REV_count_f1_f7['Total-2017'].astype(int)
Concat_REV_count_f1_f7['Percent-2017'] = Concat_REV_count_f1_f7['Percent-2017'].astype(float)
Concat_REV_count_f1_f7['7DEvolution-2017'] = Concat_REV_count_f1_f7['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f7['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f7['Total-2018'],errors='coerce')
Concat_REV_count_f1_f7 = Concat_REV_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f7['Total-2018'] = Concat_REV_count_f1_f7['Total-2018'].astype(int)
Concat_REV_count_f1_f7['Percent-2018'] = Concat_REV_count_f1_f7['Percent-2018'].astype(float)
Concat_REV_count_f1_f7['7DEvolution-2018'] = Concat_REV_count_f1_f7['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f7['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f7['Total-2019'],errors='coerce')
Concat_REV_count_f1_f7 = Concat_REV_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f7['Total-2019'] = Concat_REV_count_f1_f7['Total-2019'].astype(int)
Concat_REV_count_f1_f7['Percent-2019'] = Concat_REV_count_f1_f7['Percent-2019'].astype(float)
Concat_REV_count_f1_f7['7DEvolution-2019'] = Concat_REV_count_f1_f7['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f7['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f7['Total-2022'],errors='coerce')
Concat_REV_count_f1_f7 = Concat_REV_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f7['Total-2022'] = Concat_REV_count_f1_f7['Total-2022'].astype(int)
Concat_REV_count_f1_f7['Percent-2022'] = Concat_REV_count_f1_f7['Percent-2022'].astype(float)
Concat_REV_count_f1_f7['7DEvolution-2022'] = Concat_REV_count_f1_f7['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f7['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f7['Total-2023'],errors='coerce')
Concat_REV_count_f1_f7 = Concat_REV_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f7['Total-2023'] = Concat_REV_count_f1_f7['Total-2023'].astype(int)
Concat_REV_count_f1_f7['Percent-2023'] = Concat_REV_count_f1_f7['Percent-2023'].astype(float)
Concat_REV_count_f1_f7['7DEvolution-2023'] = Concat_REV_count_f1_f7['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f7['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f7['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f7 = Concat_RegGRDel_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f7['Total-2017'] = Concat_RegGRDel_count_f1_f7['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f7['Percent-2017'] = Concat_RegGRDel_count_f1_f7['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f7['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f7['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f7['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f7['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f7 = Concat_RegGRDel_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f7['Total-2018'] = Concat_RegGRDel_count_f1_f7['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f7['Percent-2018'] = Concat_RegGRDel_count_f1_f7['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f7['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f7['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f7['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f7['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f7 = Concat_RegGRDel_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f7['Total-2019'] = Concat_RegGRDel_count_f1_f7['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f7['Percent-2019'] = Concat_RegGRDel_count_f1_f7['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f7['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f7['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f7['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f7['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f7 = Concat_RegGRDel_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f7['Total-2021'] = Concat_RegGRDel_count_f1_f7['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f7['Percent-2021'] = Concat_RegGRDel_count_f1_f7['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f7['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f7['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f7['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f7['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f7 = Concat_RegGRDel_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f7['Total-2022'] = Concat_RegGRDel_count_f1_f7['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f7['Percent-2022'] = Concat_RegGRDel_count_f1_f7['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f7['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f7['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f7['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f7['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f7 = Concat_RegGRDel_count_f1_f7.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f7['Total-2023'] = Concat_RegGRDel_count_f1_f7['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f7['Percent-2023'] = Concat_RegGRDel_count_f1_f7['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f7['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f7['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f7['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f7['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f7 = Conct_AC_RT_GRDel_f1_f7.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f7['Total-2018'] = Conct_AC_RT_GRDel_f1_f7['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f7['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f7['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f7['Percent-2018'] = Conct_AC_RT_GRDel_f1_f7['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f7['RET-2018'] = Conct_AC_RT_GRDel_f1_f7['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f7['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f7['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f7['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f7['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f7 = Conct_AC_RT_GRDel_f1_f7.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f7['Total-2019'] = Conct_AC_RT_GRDel_f1_f7['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f7['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f7['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f7['Percent-2019'] = Conct_AC_RT_GRDel_f1_f7['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f7['RET-2019'] = Conct_AC_RT_GRDel_f1_f7['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f7['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f7['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f7['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f7['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f7 = Conct_AC_RT_GRDel_f1_f7.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f7['Total-2021'] = Conct_AC_RT_GRDel_f1_f7['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f7['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f7['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f7['Percent-2021'] = Conct_AC_RT_GRDel_f1_f7['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f7['RET-2021'] = Conct_AC_RT_GRDel_f1_f7['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f7['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f7['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f7['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f7['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f7 = Conct_AC_RT_GRDel_f1_f7.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f7['Total-2022'] = Conct_AC_RT_GRDel_f1_f7['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f7['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f7['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f7['Percent-2022'] = Conct_AC_RT_GRDel_f1_f7['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f7['RET-2022'] = Conct_AC_RT_GRDel_f1_f7['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f7['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f7['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f7['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f7['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f7 = Conct_AC_RT_GRDel_f1_f7.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f7['Total-2023'] = Conct_AC_RT_GRDel_f1_f7['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f7['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f7['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f7['Percent-2023'] = Conct_AC_RT_GRDel_f1_f7['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f7['RET-2023'] = Conct_AC_RT_GRDel_f1_f7['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f7['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f7['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f7['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f7['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f7 = Conct_RV_GRDel_f1_f7.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f7['Total-2017'] = Conct_RV_GRDel_f1_f7['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f7['Percent-2017'] = Conct_RV_GRDel_f1_f7['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f7['7DEvolution-2017'] = Conct_RV_GRDel_f1_f7['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f7['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f7['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f7 = Conct_RV_GRDel_f1_f7.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f7['Total-2018'] = Conct_RV_GRDel_f1_f7['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f7['Percent-2018'] = Conct_RV_GRDel_f1_f7['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f7['7DEvolution-2018'] = Conct_RV_GRDel_f1_f7['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f7['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f7['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f7 = Conct_RV_GRDel_f1_f7.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f7['Total-2019'] = Conct_RV_GRDel_f1_f7['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f7['Percent-2019'] = Conct_RV_GRDel_f1_f7['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f7['7DEvolution-2019'] = Conct_RV_GRDel_f1_f7['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f7['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f7['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f7 = Conct_RV_GRDel_f1_f7.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f7['Total-2022'] = Conct_RV_GRDel_f1_f7['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f7['Percent-2022'] = Conct_RV_GRDel_f1_f7['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f7['7DEvolution-2022'] = Conct_RV_GRDel_f1_f7['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f7['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f7['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f7 = Conct_RV_GRDel_f1_f7.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f7['Total-2023'] = Conct_RV_GRDel_f1_f7['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f7['Percent-2023'] = Conct_RV_GRDel_f1_f7['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f7['7DEvolution-2023'] = Conct_RV_GRDel_f1_f7['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f7['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f7['Total-2017'],errors='coerce')
df_Profile_Count_m2_f7 = df_Profile_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f7['Total-2017'] = df_Profile_Count_m2_f7['Total-2017'].astype(int)
df_Profile_Count_m2_f7['Percent-2017'] = df_Profile_Count_m2_f7['Percent-2017'].astype(float)

df_Profile_Count_m2_f7['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f7['Total-2018'],errors='coerce')
df_Profile_Count_m2_f7 = df_Profile_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f7['Total-2018'] = df_Profile_Count_m2_f7['Total-2018'].astype(int)
df_Profile_Count_m2_f7['Percent-2018'] = df_Profile_Count_m2_f7['Percent-2018'].astype(float)

df_Profile_Count_m2_f7['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f7['Total-2019'],errors='coerce')
df_Profile_Count_m2_f7 = df_Profile_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f7['Total-2019'] = df_Profile_Count_m2_f7['Total-2019'].astype(int)
df_Profile_Count_m2_f7['Percent-2019'] = df_Profile_Count_m2_f7['Percent-2019'].astype(float)

df_Profile_Count_m2_f7['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f7['Total-2021'],errors='coerce')
df_Profile_Count_m2_f7 = df_Profile_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f7['Total-2021'] = df_Profile_Count_m2_f7['Total-2021'].astype(int)
df_Profile_Count_m2_f7['Percent-2021'] = df_Profile_Count_m2_f7['Percent-2021'].astype(float)

df_Profile_Count_m2_f7['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f7['Total-2022'],errors='coerce')
df_Profile_Count_m2_f7 = df_Profile_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f7['Total-2022'] = df_Profile_Count_m2_f7['Total-2022'].astype(int)
df_Profile_Count_m2_f7['Percent-2022'] = df_Profile_Count_m2_f7['Percent-2022'].astype(float)

df_Profile_Count_m2_f7['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f7['Total-2023'],errors='coerce')
df_Profile_Count_m2_f7 = df_Profile_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f7['Total-2023'] = df_Profile_Count_m2_f7['Total-2023'].astype(int)
df_Profile_Count_m2_f7['Percent-2023'] = df_Profile_Count_m2_f7['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f7['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f7['Total-2017'],errors='coerce')
df_Pass_Count_m2_f7 = df_Pass_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f7['Total-2017'] = df_Pass_Count_m2_f7['Total-2017'].astype(int)
df_Pass_Count_m2_f7['Percent-2017'] = df_Pass_Count_m2_f7['Percent-2017'].astype(float)

df_Pass_Count_m2_f7['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f7['Total-2018'],errors='coerce')
df_Pass_Count_m2_f7 = df_Pass_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f7['Total-2018'] = df_Pass_Count_m2_f7['Total-2018'].astype(int)
df_Pass_Count_m2_f7['Percent-2018'] = df_Pass_Count_m2_f7['Percent-2018'].astype(float)

df_Pass_Count_m2_f7['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f7['Total-2019'],errors='coerce')
df_Pass_Count_m2_f7 = df_Pass_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f7['Total-2019'] = df_Pass_Count_m2_f7['Total-2019'].astype(int)
df_Pass_Count_m2_f7['Percent-2019'] = df_Pass_Count_m2_f7['Percent-2019'].astype(float)

df_Pass_Count_m2_f7['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f7['Total-2021'],errors='coerce')
df_Pass_Count_m2_f7 = df_Pass_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f7['Total-2021'] = df_Pass_Count_m2_f7['Total-2021'].astype(int)
df_Pass_Count_m2_f7['Percent-2021'] = df_Pass_Count_m2_f7['Percent-2021'].astype(float)

df_Pass_Count_m2_f7['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f7['Total-2022'],errors='coerce')
df_Pass_Count_m2_f7 = df_Pass_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f7['Total-2022'] = df_Pass_Count_m2_f7['Total-2022'].astype(int)
df_Pass_Count_m2_f7['Percent-2022'] = df_Pass_Count_m2_f7['Percent-2022'].astype(float)

df_Pass_Count_m2_f7['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f7['Total-2023'],errors='coerce')
df_Pass_Count_m2_f7 = df_Pass_Count_m2_f7.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f7['Total-2023'] = df_Pass_Count_m2_f7['Total-2023'].astype(int)
df_Pass_Count_m2_f7['Percent-2023'] = df_Pass_Count_m2_f7['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f7['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f7['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f7 = dfAttendees_Country_Count_m2_f7.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f7['Total-2017'] = dfAttendees_Country_Count_m2_f7['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f7['Percent-2017'] = dfAttendees_Country_Count_m2_f7['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f7['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f7['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f7 = dfAttendees_Country_Count_m2_f7.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f7['Total-2018'] = dfAttendees_Country_Count_m2_f7['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f7['Percent-2018'] = dfAttendees_Country_Count_m2_f7['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f7['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f7['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f7 = dfAttendees_Country_Count_m2_f7.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f7['Total-2019'] = dfAttendees_Country_Count_m2_f7['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f7['Percent-2019'] = dfAttendees_Country_Count_m2_f7['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f7['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f7['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f7 = dfAttendees_Country_Count_m2_f7.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f7['Total-2021'] = dfAttendees_Country_Count_m2_f7['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f7['Percent-2021'] = dfAttendees_Country_Count_m2_f7['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f7['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f7['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f7 = dfAttendees_Country_Count_m2_f7.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f7['Total-2022'] = dfAttendees_Country_Count_m2_f7['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f7['Percent-2022'] = dfAttendees_Country_Count_m2_f7['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f7['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f7['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f7 = dfAttendees_Country_Count_m2_f7.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f7['Total-2023'] = dfAttendees_Country_Count_m2_f7['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f7['Percent-2023'] = dfAttendees_Country_Count_m2_f7['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f7['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f7['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f7 = df_ATTENDEES_AREAS_count_m2_f7.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f7['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f7['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f7['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f7['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f7['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f7['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f7 = df_ATTENDEES_AREAS_count_m2_f7.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f7['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f7['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f7['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f7['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f7['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f7['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f7 = df_ATTENDEES_AREAS_count_m2_f7.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f7['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f7['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f7['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f7['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f7['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f7['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f7 = df_ATTENDEES_AREAS_count_m2_f7.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f7['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f7['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f7['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f7['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f7['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f7['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f7 = df_ATTENDEES_AREAS_count_m2_f7.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f7['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f7['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f7['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f7['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f7['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f7['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f7 = df_ATTENDEES_AREAS_count_m2_f7.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f7['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f7['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f7['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f7['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f7['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f7['Total-2017'],errors='coerce')
df_Specialty_count_m2_f7 = df_Specialty_count_m2_f7.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f7['Total-2017'] = df_Specialty_count_m2_f7['Total-2017'].astype(int)
df_Specialty_count_m2_f7['Percent-2017'] = df_Specialty_count_m2_f7['Percent-2017'].astype(float)

df_Specialty_count_m2_f7['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f7['Total-2018'],errors='coerce')
df_Specialty_count_m2_f7 = df_Specialty_count_m2_f7.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f7['Total-2018'] = df_Specialty_count_m2_f7['Total-2018'].astype(int)
df_Specialty_count_m2_f7['Percent-2018'] = df_Specialty_count_m2_f7['Percent-2018'].astype(float)

df_Specialty_count_m2_f7['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f7['Total-2019'],errors='coerce')
df_Specialty_count_m2_f7 = df_Specialty_count_m2_f7.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f7['Total-2019'] = df_Specialty_count_m2_f7['Total-2019'].astype(int)
df_Specialty_count_m2_f7['Percent-2019'] = df_Specialty_count_m2_f7['Percent-2019'].astype(float)

df_Specialty_count_m2_f7['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f7['Total-2021'],errors='coerce')
df_Specialty_count_m2_f7 = df_Specialty_count_m2_f7.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f7['Total-2021'] = df_Specialty_count_m2_f7['Total-2021'].astype(int)
df_Specialty_count_m2_f7['Percent-2021'] = df_Specialty_count_m2_f7['Percent-2021'].astype(float)

df_Specialty_count_m2_f7['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f7['Total-2022'],errors='coerce')
df_Specialty_count_m2_f7 = df_Specialty_count_m2_f7.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f7['Total-2022'] = df_Specialty_count_m2_f7['Total-2022'].astype(int)
df_Specialty_count_m2_f7['Percent-2022'] = df_Specialty_count_m2_f7['Percent-2022'].astype(float)

df_Specialty_count_m2_f7['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f7['Total-2023'],errors='coerce')
df_Specialty_count_m2_f7 = df_Specialty_count_m2_f7.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f7['Total-2023'] = df_Specialty_count_m2_f7['Total-2023'].astype(int)
df_Specialty_count_m2_f7['Percent-2023'] = df_Specialty_count_m2_f7['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f7.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f7.dtypes)
#print(df_Specialty_count_m2_f7.dtypes)

#print(dfAttendees_Country_Count_m2_f7.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f7.dtypes)
#print(df_Specialty_count_m2_f7.dtypes)

# EXCEL FILE
writerf7 = pd.ExcelWriter(outputExcelFile_f7, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f7.to_excel\
    (writerf7, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f7.to_excel\
    (writerf7, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f7.to_excel\
    (writerf7, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f7.to_excel\
    (writerf7, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f7.to_excel\
    (writerf7, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f7.to_excel\
    (writerf7, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f7.to_excel\
    (writerf7, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f7.to_excel\
    (writerf7, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f7.to_excel\
    (writerf7, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f7.to_excel\
    (writerf7, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f7.to_excel\
    (writerf7, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf7.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f7)

workbook.save(outputExcelFile_f7)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 147 days**********************************************')
print('************************************End of 147 days**********************************************')
print('************************************End of 147 days**********************************************')
print('************************************End of 147 days**********************************************')
print('************************************End of 147 days**********************************************')
print('************************************End of 147 days**********************************************')
print('************************************End of 147 days**********************************************')
print('************************************End of 147 days**********************************************')
print('************************************End of 147 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f8_Registrations_count = pd.DataFrame(filter_8_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f8_Registrations_count = dfd17_f8_Registrations_count.fillna('Unknown')
dfd17_f8_Registrations_count['Percent-2017'] = (dfd17_f8_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f8_Registrations_count['Percent-2017'] = dfd17_f8_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f8_Registrations_count['7DEvolution-2017'] = dfd17_f8_Registrations_count['Total-2017'] - dfd17_f7_Registrations_count['Total-2017']
#print(tab(dfd17_f8_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f8_Registrations_count = pd.DataFrame(filter_8_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f8_Registrations_count = dfd18_f8_Registrations_count.fillna('Unknown')
dfd18_f8_Registrations_count['Percent-2018'] = (dfd18_f8_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f8_Registrations_count['Percent-2018'] = dfd18_f8_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f8_Registrations_count['7DEvolution-2018'] = dfd18_f8_Registrations_count['Total-2018'] - dfd18_f7_Registrations_count['Total-2018']
#print(tab(dfd18_f8_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f8_Registrations_count = pd.DataFrame(filter_8_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f8_Registrations_count = dfd19_f8_Registrations_count.fillna('Unknown')
dfd19_f8_Registrations_count['Percent-2019'] = (dfd19_f8_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f8_Registrations_count['Percent-2019'] = dfd19_f8_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f8_Registrations_count['7DEvolution-2019'] = dfd19_f8_Registrations_count['Total-2019'] - dfd19_f7_Registrations_count['Total-2019']
#print(tab(dfd19_f8_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f8_Registrations_count = pd.DataFrame(filter_8_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f8_Registrations_count = dfd21_f8_Registrations_count.fillna('Unknown')
dfd21_f8_Registrations_count['Percent-2021'] = (dfd21_f8_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f8_Registrations_count['Percent-2021'] = dfd21_f8_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f8_Registrations_count['7DEvolution-2021'] = dfd21_f8_Registrations_count['Total-2021'] - dfd21_f7_Registrations_count['Total-2021']
#print(tab(dfd21_f8_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f8_Registrations_count = pd.DataFrame(filter_8_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f8_Registrations_count = dfd22_f8_Registrations_count.fillna('Unknown')
dfd22_f8_Registrations_count['Percent-2022'] = (dfd22_f8_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f8_Registrations_count['Percent-2022'] = dfd22_f8_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f8_Registrations_count['7DEvolution-2022'] = dfd22_f8_Registrations_count['Total-2022'] - dfd22_f7_Registrations_count['Total-2022']
#print(tab(dfd22_f8_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_Registrations_count = pd.DataFrame(filter_8_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f8_Registrations_count = dfd23_f8_Registrations_count.fillna('Unknown')
dfd23_f8_Registrations_count['Percent-2023'] = (dfd23_f8_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f8_Registrations_count['Percent-2023'] = dfd23_f8_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f8_Registrations_count['7DEvolution-2023'] = dfd23_f8_Registrations_count['Total-2023'] - dfd23_f7_Registrations_count['Total-2023']
#print(tab(dfd23_f8_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f8_RegistrationsEvolution_count = pd.DataFrame(filter_8_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f8_RegistrationsEvolution_count = dfd23_f8_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f8_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f8_Registrations_count['Total-2023'] - dfd19_f8_Registrations_count['Total-2019'])/ dfd19_f8_Registrations_count['Total-2019'].sum()) * 100
dfd23_f8_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f8_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f8_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f8 = pd.DataFrame(pd.merge(dfd17_f8_Registrations_count, dfd18_f8_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f8 = pd.DataFrame(pd.merge(dfd19_f8_Registrations_count, dfd21_f8_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f8 = pd.DataFrame(pd.merge(dfd22_f8_Registrations_count, dfd23_f8_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f8 = pd.DataFrame(pd.merge(df_Registrations_count_1_f8, df_Registrations_count_2_f8, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f8 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f8, df_Registrations_count_3_f8, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f8 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f8, dfd23_f8_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f8 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8]
Concat_Registrations_count_f1_f8 = pd.concat(ConcatFrames_Registrations_count_f1_f8)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f8  = ConcatFrames_Registrations_count_f1_f8.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f8.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f8 = filter_8_df18[filter_8_df18['New customer'] == 1]
df_NewCustomer_df19_f8 = filter_8_df19[filter_8_df19['New customer'] == 1]
df_NewCustomer_df21_f8 = filter_8_df21[filter_8_df21['New customer'] == 1]
df_NewCustomer_df22_f8 = filter_8_df22[filter_8_df22['New customer'] == 1]
df_NewCustomer_df23_f8 = filter_8_df23[filter_8_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f8.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f8.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f8.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a8_ACQRET_count = pd.DataFrame(filter_8_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f8_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f8.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f8_ACQRET_count['Percent-2018'] = (dfd18_f8_ACQRET_count['ACQ-2018'] / dfd18_f8_Registrations_count['Total-2018'].sum()) * 100
dfd18_f8_ACQRET_count['Percent-2018'] = dfd18_f8_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f8_ACQRET_count['RET-2018'] = dfd18_a8_ACQRET_count['Total-2018'] - dfd18_f8_ACQRET_count['ACQ-2018']
dfd18_f8_ACQRET_count['Percnt-2018'] = (dfd18_f8_ACQRET_count['RET-2018'] / dfd18_a8_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f8_ACQRET_count['Percnt-2018'] = dfd18_f8_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f8_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a8_ACQRET_count = pd.DataFrame(filter_8_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f8_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f8.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f8_ACQRET_count['Percent-2019'] = (dfd19_f8_ACQRET_count['ACQ-2019'] / dfd19_f8_Registrations_count['Total-2019'].sum()) * 100
dfd19_f8_ACQRET_count['Percent-2019'] = dfd19_f8_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f8_ACQRET_count['RET-2019'] = dfd19_a8_ACQRET_count['Total-2019'] - dfd19_f8_ACQRET_count['ACQ-2019']
dfd19_f8_ACQRET_count['Percnt-2019'] = (dfd19_f8_ACQRET_count['RET-2019'] / dfd19_a8_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f8_ACQRET_count['Percnt-2019'] = dfd19_f8_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f8_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a8_ACQRET_count = pd.DataFrame(filter_8_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f8_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f8.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f8_ACQRET_count['Percent-2021'] = (dfd21_f8_ACQRET_count['ACQ-2021'] / dfd21_f8_Registrations_count['Total-2021'].sum()) * 100
dfd21_f8_ACQRET_count['Percent-2021'] = dfd21_f8_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f8_ACQRET_count['RET-2021'] = dfd21_a8_ACQRET_count['Total-2021'] - dfd21_f8_ACQRET_count['ACQ-2021']
dfd21_f8_ACQRET_count['Percnt-2021'] = (dfd21_f8_ACQRET_count['RET-2021'] / dfd21_a8_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f8_ACQRET_count['Percnt-2021'] = dfd21_f8_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f8_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a8_ACQRET_count = pd.DataFrame(filter_8_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f8_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f8.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f8_ACQRET_count['Percent-2022'] = (dfd22_f8_ACQRET_count['ACQ-2022'] / dfd22_f8_Registrations_count['Total-2022'].sum()) * 100
dfd22_f8_ACQRET_count['Percent-2022'] = dfd22_f8_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f8_ACQRET_count['RET-2022'] = dfd22_a8_ACQRET_count['Total-2022'] - dfd22_f8_ACQRET_count['ACQ-2022']
dfd22_f8_ACQRET_count['Percnt-2022'] = (dfd22_f8_ACQRET_count['RET-2022'] / dfd22_a8_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f8_ACQRET_count['Percnt-2022'] = dfd22_f8_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f8_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a8_ACQRET_count = pd.DataFrame(filter_8_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f8_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f8.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f8_ACQRET_count['Percent-2023'] = (dfd23_f8_ACQRET_count['ACQ-2023'] / dfd23_f8_Registrations_count['Total-2023'].sum()) * 100
dfd23_f8_ACQRET_count['Percent-2023'] = dfd23_f8_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f8_ACQRET_count['RET-2023'] = dfd23_a8_ACQRET_count['Total-2023'] - dfd23_f8_ACQRET_count['ACQ-2023']
dfd23_f8_ACQRET_count['Percnt-2023'] = (dfd23_f8_ACQRET_count['RET-2023'] / dfd23_a8_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f8_ACQRET_count['Percnt-2023'] = dfd23_f8_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f8_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f8 = pd.DataFrame(pd.merge(dfd18_a8_ACQRET_count, dfd18_f8_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f8 = pd.DataFrame(pd.merge(dfd19_a8_ACQRET_count, dfd19_f8_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f8 = pd.DataFrame(pd.merge(dfd21_a8_ACQRET_count, dfd21_f8_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f8 = pd.DataFrame(pd.merge(dfd22_a8_ACQRET_count, dfd22_f8_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_8_f8 = pd.DataFrame(pd.merge(dfd23_a8_ACQRET_count, dfd23_f8_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_8_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f8 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f8, df_ACQRET_count_2_f8, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f8 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f8, df_ACQRET_count_3_f8, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f8 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f8, df_ACQRET_count_4_f8, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f8 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f8, df_ACQRET_count_8_f8, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f8 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8]
Concat_ACQRET_count_f1_f8 = pd.concat(ConcatFrames_ACQRET_count_f1_f8)
#print(tab(Concat_ACQRET_count_f1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f8 = Concat_ACQRET_count_f1_f8[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f8_Revenue_calc = pd.DataFrame(filter_8_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f8_Revenue_calc['Percent-2017'] = (dfd17_f8_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f8_Revenue_calc['Percent-2017'] = dfd17_f8_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f8_Revenue_calc['7DEvolution-2017'] = dfd17_f8_Revenue_calc['Total-2017'] - dfd17_f7_Revenue_calc['Total-2017']
#print(tab(dfd17_f8_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f8_Revenue_calc = pd.DataFrame(filter_8_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f8_Revenue_calc['Percent-2018'] = (dfd18_f8_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f8_Revenue_calc['Percent-2018'] = dfd18_f8_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f8_Revenue_calc['7DEvolution-2018'] = dfd18_f8_Revenue_calc['Total-2018'] - dfd18_f7_Revenue_calc['Total-2018']
#print(tab(dfd18_f8_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f8_Revenue_calc = pd.DataFrame(filter_8_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f8_Revenue_calc['Percent-2019'] = (dfd19_f8_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f8_Revenue_calc['Percent-2019'] = dfd19_f8_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f8_Revenue_calc['7DEvolution-2019'] = dfd19_f8_Revenue_calc['Total-2019'] - dfd19_f7_Revenue_calc['Total-2019']
#print(tab(dfd19_f8_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f8_Revenue_calc = pd.DataFrame(filter_8_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f8_Revenue_calc['Percent-2021'] = (dfd21_f8_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f8_Revenue_calc['Percent-2021'] = dfd21_f8_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f8_Revenue_calc['7DEvolution-2021'] = dfd21_f8_Revenue_calc['Total-2021'] - dfd21_f7_Revenue_calc['Total-2021']
#print(tab(dfd21_f8_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f8_Revenue_calc = pd.DataFrame(filter_8_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f8_Revenue_calc['Percent-2022'] = (dfd22_f8_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f8_Revenue_calc['Percent-2022'] = dfd22_f8_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f8_Revenue_calc['7DEvolution-2022'] = dfd22_f8_Revenue_calc['Total-2022'] - dfd22_f7_Revenue_calc['Total-2022']
#print(tab(dfd22_f8_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_Revenue_calc = pd.DataFrame(filter_8_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f8_Revenue_calc['Percent-2023'] = (dfd23_f8_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f8_Revenue_calc['Percent-2023'] = dfd23_f8_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f8_Revenue_calc['7DEvolution-2023'] = dfd23_f8_Revenue_calc['Total-2023'] - dfd23_f7_Revenue_calc['Total-2023']
#print(tab(dfd23_f8_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f8_RevenueEvolution_calc = pd.DataFrame(filter_8_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f8_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f8_Revenue_calc['Total-2023'] - dfd19_f8_Revenue_calc['Total-2019'])/ dfd19_f8_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f8_RevenueEvolution_calc['Evolution-2023'] = dfd23_f8_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f8_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f8 = pd.DataFrame(pd.merge(dfd17_f8_Revenue_calc, dfd18_f8_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f8 = pd.DataFrame(pd.merge(dfd19_f8_Revenue_calc, dfd21_f8_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f8 = pd.DataFrame(pd.merge(dfd22_f8_Revenue_calc, dfd23_f8_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f8_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f8, df_Revenue_calc_2_f8, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f8Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f8_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f8_Evolution, df_Revenue_calc_3_f8, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f8Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f8 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f8_Evolution, dfd23_f8_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f8 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8]
Concat_REV_count_f1_f8 = pd.concat(ConcatFrames_REV_count_f1_f8)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f8_Registrations_GRDel = pd.DataFrame(filtr_8_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f8_Registrations_GRDel = dfd17_f8_Registrations_GRDel.fillna('Unknown')
dfd17_f8_Registrations_GRDel['Percent-2017'] = (dfd17_f8_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f8_Registrations_GRDel['Percent-2017'] = dfd17_f8_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f8_Registrations_GRDel['7DEvolution-2017'] = dfd17_f8_Registrations_GRDel['Total-2017'] - dfd17_f7_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f8_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f8_Registrations_GRDel = pd.DataFrame(filtr_8_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f8_Registrations_GRDel = dfd18_f8_Registrations_GRDel.fillna('Unknown')
dfd18_f8_Registrations_GRDel['Percent-2018'] = (dfd18_f8_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f8_Registrations_GRDel['Percent-2018'] = dfd18_f8_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f8_Registrations_GRDel['7DEvolution-2018'] = dfd18_f8_Registrations_GRDel['Total-2018'] - dfd18_f7_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f8_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f8_Registrations_GRDel = pd.DataFrame(filtr_8_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f8_Registrations_GRDel = dfd19_f8_Registrations_GRDel.fillna('Unknown')
dfd19_f8_Registrations_GRDel['Percent-2019'] = (dfd19_f8_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f8_Registrations_GRDel['Percent-2019'] = dfd19_f8_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f8_Registrations_GRDel['7DEvolution-2019'] = dfd19_f8_Registrations_GRDel['Total-2019'] - dfd19_f7_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f8_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f8_Registrations_GRDel = pd.DataFrame(filtr_8_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f8_Registrations_GRDel = dfd21_f8_Registrations_GRDel.fillna('Unknown')
dfd21_f8_Registrations_GRDel['Percent-2021'] = (dfd21_f8_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f8_Registrations_GRDel['Percent-2021'] = dfd21_f8_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f8_Registrations_GRDel['7DEvolution-2021'] = dfd21_f8_Registrations_GRDel['Total-2021'] - dfd21_f7_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f8_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f8_Registrations_GRDel = pd.DataFrame(filtr_8_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f8_Registrations_GRDel = dfd22_f8_Registrations_GRDel.fillna('Unknown')
dfd22_f8_Registrations_GRDel['Percent-2022'] = (dfd22_f8_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f8_Registrations_GRDel['Percent-2022'] = dfd22_f8_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f8_Registrations_GRDel['7DEvolution-2022'] = dfd22_f8_Registrations_GRDel['Total-2022'] - dfd22_f7_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f8_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_Registrations_GRDel = pd.DataFrame(filtr_8_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f8_Registrations_GRDel = dfd23_f8_Registrations_GRDel.fillna('Unknown')
dfd23_f8_Registrations_GRDel['Percent-2023'] = (dfd23_f8_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f8_Registrations_GRDel['Percent-2023'] = dfd23_f8_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f8_Registrations_GRDel['7DEvolution-2023'] = dfd23_f8_Registrations_GRDel['Total-2023'] - dfd23_f7_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f8_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f8_Registrations_Evol_GRDel = pd.DataFrame(filtr_8_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f8_Registrations_Evol_GRDel = dfd23_f8_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f8_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f8_Registrations_GRDel['Total-2023'] - dfd19_f8_Registrations_GRDel['Total-2019'])/ dfd19_f8_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f8_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f8 = pd.concat([dfd17_f8_Registrations_GRDel, dfd18_f8_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f8 = pd.DataFrame(pd.merge(dfd17_f8_Registrations_GRDel, dfd18_f8_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f8 = pd.DataFrame(pd.merge(dfd19_f8_Registrations_GRDel, dfd21_f8_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f8 = pd.DataFrame(pd.merge(dfd22_f8_Registrations_GRDel, dfd23_f8_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f8 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f8, df_Registrations_GRDel_2_f8, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_8_f8 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f8, df_Registrations_GRDel_3_f8, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f8 = pd.DataFrame(pd.merge(df_Registrations_GRDel_8_f8, dfd23_f8_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f8 = df_Registrations_GRDel_f8[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f8 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8]
Concat_RegGRDel_count_f1_f8 = pd.concat(ConcatFrames_RegGRDel_count_f1_f8)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f8 = filtr_8_df18_GRdel[filtr_8_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f8 = filtr_8_df19_GRdel[filtr_8_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f8 = filtr_8_df21_GRdel[filtr_8_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f8 = filtr_8_df22_GRdel[filtr_8_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f8 = filtr_8_df23_GRdel[filtr_8_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f8.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f8.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a8_AC_RT_GRDel = pd.DataFrame(filtr_8_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f8_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f8.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f8_AC_RT_GRDel['Percent-2018'] = (dfd18_f8_AC_RT_GRDel['ACQ-2018'] / dfd18_f8_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f8_AC_RT_GRDel['Percent-2018'] = dfd18_f8_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f8_AC_RT_GRDel['RET-2018'] = dfd18_a8_AC_RT_GRDel['Total-2018'] - dfd18_f8_AC_RT_GRDel['ACQ-2018']
dfd18_f8_AC_RT_GRDel['Percnt-2018'] = (dfd18_f8_AC_RT_GRDel['RET-2018'] / dfd18_a8_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f8_AC_RT_GRDel['Percnt-2018'] = dfd18_f8_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f8_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a8_AC_RT_GRDel = pd.DataFrame(filtr_8_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f8_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f8.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f8_AC_RT_GRDel['Percent-2019'] = (dfd19_f8_AC_RT_GRDel['ACQ-2019'] / dfd19_f8_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f8_AC_RT_GRDel['Percent-2019'] = dfd19_f8_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f8_AC_RT_GRDel['RET-2019'] = dfd19_a8_AC_RT_GRDel['Total-2019'] - dfd19_f8_AC_RT_GRDel['ACQ-2019']
dfd19_f8_AC_RT_GRDel['Percnt-2019'] = (dfd19_f8_AC_RT_GRDel['RET-2019'] / dfd19_a8_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f8_AC_RT_GRDel['Percnt-2019'] = dfd19_f8_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f8_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a8_AC_RT_GRDel = pd.DataFrame(filtr_8_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f8_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f8.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f8_AC_RT_GRDel['Percent-2021'] = (dfd21_f8_AC_RT_GRDel['ACQ-2021'] / dfd21_f8_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f8_AC_RT_GRDel['Percent-2021'] = dfd21_f8_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f8_AC_RT_GRDel['RET-2021'] = dfd21_a8_AC_RT_GRDel['Total-2021'] - dfd21_f8_AC_RT_GRDel['ACQ-2021']
dfd21_f8_AC_RT_GRDel['Percnt-2021'] = (dfd21_f8_AC_RT_GRDel['RET-2021'] / dfd21_a8_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f8_AC_RT_GRDel['Percnt-2021'] = dfd21_f8_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f8_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a8_AC_RT_GRDel = pd.DataFrame(filtr_8_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f8_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f8.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f8_AC_RT_GRDel['Percent-2022'] = (dfd22_f8_AC_RT_GRDel['ACQ-2022'] / dfd22_f8_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f8_AC_RT_GRDel['Percent-2022'] = dfd22_f8_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f8_AC_RT_GRDel['RET-2022'] = dfd22_a8_AC_RT_GRDel['Total-2022'] - dfd22_f8_AC_RT_GRDel['ACQ-2022']
dfd22_f8_AC_RT_GRDel['Percnt-2022'] = (dfd22_f8_AC_RT_GRDel['RET-2022'] / dfd22_a8_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f8_AC_RT_GRDel['Percnt-2022'] = dfd22_f8_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f8_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a8_AC_RT_GRDel = pd.DataFrame(filtr_8_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f8_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f8.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f8_AC_RT_GRDel['Percent-2023'] = (dfd23_f8_AC_RT_GRDel['ACQ-2023'] / dfd23_f8_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f8_AC_RT_GRDel['Percent-2023'] = dfd23_f8_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f8_AC_RT_GRDel['RET-2023'] = dfd23_a8_AC_RT_GRDel['Total-2023'] - dfd23_f8_AC_RT_GRDel['ACQ-2023']
dfd23_f8_AC_RT_GRDel['Percnt-2023'] = (dfd23_f8_AC_RT_GRDel['RET-2023'] / dfd23_a8_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f8_AC_RT_GRDel['Percnt-2023'] = dfd23_f8_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f8_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f8 = pd.DataFrame(pd.merge_ordered(dfd18_a8_AC_RT_GRDel, dfd18_f8_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f8 = pd.DataFrame(pd.merge_ordered(dfd19_a8_AC_RT_GRDel, dfd19_f8_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f8 = pd.DataFrame(pd.merge_ordered(dfd21_a8_AC_RT_GRDel, dfd21_f8_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f8 = pd.DataFrame(pd.merge_ordered(dfd22_a8_AC_RT_GRDel, dfd22_f8_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_8_f8 = pd.DataFrame(pd.merge_ordered(dfd23_a8_AC_RT_GRDel, dfd23_f8_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f8 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f8, df_AC_ET_GRDel_2_f8, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f8 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f8, df_AC_ET_GRDel_3_f8, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f8 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f8, df_AC_ET_GRDel_4_f8, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f8 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f8, df_AC_ET_GRDel_8_f8, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f8 = df_AC_RT_GRDel_M4_f8[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f8 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8]
Conct_AC_RT_GRDel_f1_f8 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f8)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_8_df17_GRdel = filtr_8_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f8_Revenu_GRDel = pd.DataFrame(filtr_8_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f8_Revenu_GRDel['Percent-2017'] = (dfd17_f8_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f8_Revenu_GRDel['Percent-2017'] = dfd17_f8_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f8_Revenu_GRDel['7DEvolution-2017'] = dfd17_f8_Revenu_GRDel['Total-2017'] - dfd17_f7_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f8_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_8_df18_GRdel = filtr_8_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f8_Revenu_GRDel = pd.DataFrame(filtr_8_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f8_Revenu_GRDel['Percent-2018'] = (dfd18_f8_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f8_Revenu_GRDel['Percent-2018'] = dfd18_f8_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f8_Revenu_GRDel['7DEvolution-2018'] = dfd18_f8_Revenu_GRDel['Total-2018'] - dfd18_f7_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f8_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_8_df19_GRdel = filtr_8_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f8_Revenu_GRDel = pd.DataFrame(filtr_8_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f8_Revenu_GRDel['Percent-2019'] = (dfd19_f8_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f8_Revenu_GRDel['Percent-2019'] = dfd19_f8_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f8_Revenu_GRDel['7DEvolution-2019'] = dfd19_f8_Revenu_GRDel['Total-2019'] - dfd19_f7_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f8_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_8_df21_GRdel = filtr_8_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f8_Revenu_GRDel = pd.DataFrame(filtr_8_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f8_Revenu_GRDel['Percent-2021'] = (dfd21_f8_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f8_Revenu_GRDel['Percent-2021'] = dfd21_f8_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f8_Revenu_GRDel['7DEvolution-2021'] = dfd21_f8_Revenu_GRDel['Total-2021'] - dfd21_f7_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f8_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_8_df22_GRdel = filtr_8_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f8_Revenu_GRDel = pd.DataFrame(filtr_8_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f8_Revenu_GRDel['Percent-2022'] = (dfd22_f8_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f8_Revenu_GRDel['Percent-2022'] = dfd22_f8_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f8_Revenu_GRDel['7DEvolution-2022'] = dfd22_f8_Revenu_GRDel['Total-2022'] - dfd22_f7_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f8_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_8_df23_GRdel = filtr_8_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f8_Revenu_GRDel = pd.DataFrame(filtr_8_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f8_Revenu_GRDel['Percent-2023'] = (dfd23_f8_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f8_Revenu_GRDel['Percent-2023'] = dfd23_f8_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f8_Revenu_GRDel['7DEvolution-2023'] = dfd23_f8_Revenu_GRDel['Total-2023'] - dfd23_f7_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f8_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f8_Revenu_Evlt_GRDel = pd.DataFrame(filtr_8_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f8_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f8_Revenu_GRDel['Total-2023'] - dfd19_f8_Revenu_GRDel['Total-2019'])/ dfd19_f8_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f8_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f8_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f8_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f8 = pd.DataFrame(pd.merge(dfd17_f8_Revenu_GRDel, dfd18_f8_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f8 = pd.DataFrame(pd.merge(dfd19_f8_Revenu_GRDel, dfd21_f8_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f8 = pd.DataFrame(pd.merge(dfd22_f8_Revenu_GRDel, dfd23_f8_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f8 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f8, df_Revenu_GRDel_2_f8, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_8_f8 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f8, df_Revenu_GRDel_3_f8, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f8 = pd.DataFrame(pd.merge(df_Revenu_GRDel_8_f8, dfd23_f8_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f8 = df_Revenu_GRDel_f8[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f8 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8]
Conct_RV_GRDel_f1_f8 = pd.concat(ConcatFra_RV_GRDel_f1_f8)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f8_Profile_count = pd.DataFrame(filtr_8_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f8_Profile_count = dfd17_f8_Profile_count.fillna('Unknown')
dfd17_f8_Profile_count['Percent-2017'] = (dfd17_f8_Profile_count['Total-2017'] / dfd17_f8_Profile_count['Total-2017'].sum()) * 100
dfd17_f8_Profile_count['Percent-2017'] = dfd17_f8_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f8_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f8_Profile_count = pd.DataFrame(filtr_8_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f8_Profile_count = dfd18_f8_Profile_count.fillna('Unknown')
dfd18_f8_Profile_count['Percent-2018'] = (dfd18_f8_Profile_count['Total-2018'] / dfd18_f8_Profile_count['Total-2018'].sum()) * 100
dfd18_f8_Profile_count['Percent-2018'] = dfd18_f8_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f8_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f8_Profile_count = pd.DataFrame(filtr_8_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f8_Profile_count = dfd19_f8_Profile_count.fillna('Unknown')
dfd19_f8_Profile_count['Percent-2019'] = (dfd19_f8_Profile_count['Total-2019'] / dfd19_f8_Profile_count['Total-2019'].sum()) * 100
dfd19_f8_Profile_count['Percent-2019'] = dfd19_f8_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f8_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f8_Profile_count = pd.DataFrame(filtr_8_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f8_Profile_count = dfd21_f8_Profile_count.fillna('Unknown')
dfd21_f8_Profile_count['Percent-2021'] = (dfd21_f8_Profile_count['Total-2021'] / dfd21_f8_Profile_count['Total-2021'].sum()) * 100
dfd21_f8_Profile_count['Percent-2021'] = dfd21_f8_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f8_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f8_Profile_count = pd.DataFrame(filtr_8_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f8_Profile_count = dfd22_f8_Profile_count.fillna('Unknown')
dfd22_f8_Profile_count['Percent-2022'] = (dfd22_f8_Profile_count['Total-2022'] / dfd22_f8_Profile_count['Total-2022'].sum()) * 100
dfd22_f8_Profile_count['Percent-2022'] = dfd22_f8_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f8_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_Profile_count = pd.DataFrame(filtr_8_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f8_Profile_count = dfd23_f8_Profile_count.fillna('Unknown')
dfd23_f8_Profile_count['Percent-2023'] = (dfd23_f8_Profile_count['Total-2023'] / dfd23_f8_Profile_count['Total-2023'].sum()) * 100
dfd23_f8_Profile_count['Percent-2023'] = dfd23_f8_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f8_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f8 = pd.DataFrame(pd.merge(dfd17_f8_Profile_count, dfd18_f8_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f8 = pd.DataFrame(pd.merge(dfd19_f8_Profile_count, dfd21_f8_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f8 = pd.DataFrame(pd.merge(dfd22_f8_Profile_count, dfd23_f8_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f8 = pd.DataFrame(pd.merge(df_Profile_Count_1_f8, df_Profile_Count_2_f8, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f8 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f8, df_Profile_Count_3_f8, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f8 = df_Profile_Count_m2_f8.append(df_Profile_Count_m2_f8.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f8['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f8_Pass_count = pd.DataFrame(filtr_8_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f8_Pass_count = dfd17_f8_Pass_count.fillna('Unknown')
dfd17_f8_Pass_count['Percent-2017'] = (dfd17_f8_Pass_count['Total-2017'] / dfd17_f8_Pass_count['Total-2017'].sum()) * 100
dfd17_f8_Pass_count['Percent-2017'] = dfd17_f8_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f8_Pass_count = pd.DataFrame(filtr_8_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f8_Pass_count = dfd18_f8_Pass_count.fillna('Unknown')
dfd18_f8_Pass_count['Percent-2018'] = (dfd18_f8_Pass_count['Total-2018'] / dfd18_f8_Pass_count['Total-2018'].sum()) * 100
dfd18_f8_Pass_count['Percent-2018'] = dfd18_f8_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f8_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f8_Pass_count = pd.DataFrame(filtr_8_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f8_Pass_count = dfd19_f8_Pass_count.fillna('Unknown')
dfd19_f8_Pass_count['Percent-2019'] = (dfd19_f8_Pass_count['Total-2019'] / dfd19_f8_Pass_count['Total-2019'].sum()) * 100
dfd19_f8_Pass_count['Percent-2019'] = dfd19_f8_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f8_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f8_Pass_count = pd.DataFrame(filtr_8_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f8_Pass_count = dfd21_f8_Pass_count.fillna('Unknown')
dfd21_f8_Pass_count['Percent-2021'] = (dfd21_f8_Pass_count['Total-2021'] / dfd21_f8_Pass_count['Total-2021'].sum()) * 100
dfd21_f8_Pass_count['Percent-2021'] = dfd21_f8_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f8_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f8_Pass_count = pd.DataFrame(filtr_8_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f8_Pass_count = dfd22_f8_Pass_count.fillna('Unknown')
dfd22_f8_Pass_count['Percent-2022'] = (dfd22_f8_Pass_count['Total-2022'] / dfd22_f8_Pass_count['Total-2022'].sum()) * 100
dfd22_f8_Pass_count['Percent-2022'] = dfd22_f8_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f8_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_Pass_count = pd.DataFrame(filtr_8_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f8_Pass_count = dfd23_f8_Pass_count.fillna('Unknown')
dfd23_f8_Pass_count['Percent-2023'] = (dfd23_f8_Pass_count['Total-2023'] / dfd23_f8_Pass_count['Total-2023'].sum()) * 100
dfd23_f8_Pass_count['Percent-2023'] = dfd23_f8_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f8_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f8 = pd.DataFrame(pd.merge(dfd17_f8_Pass_count, dfd18_f8_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f8 = pd.DataFrame(pd.merge(dfd19_f8_Pass_count, dfd21_f8_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f8 = pd.DataFrame(pd.merge(dfd22_f8_Pass_count, dfd23_f8_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f8 = pd.DataFrame(pd.merge(df_Pass_Count_1_f8, df_Pass_Count_2_f8, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f8 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f8, df_Pass_Count_3_f8, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f8 = df_Pass_Count_m2_f8.append(df_Pass_Count_m2_f8.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f8['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f8_Attendees_Country_count = pd.DataFrame(filtr_8_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f8_Attendees_Country_count = dfd17_f8_Attendees_Country_count.fillna('Unknown')
dfd17_f8_Attendees_Country_count['Percent-2017'] = (dfd17_f8_Attendees_Country_count['Total-2017'] / dfd17_f8_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f8_Attendees_Country_count['Percent-2017'] = dfd17_f8_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f8_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f8_Attendees_Country_count = pd.DataFrame(filtr_8_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f8_Attendees_Country_count = dfd18_f8_Attendees_Country_count.fillna('Unknown')
dfd18_f8_Attendees_Country_count['Percent-2018'] = (dfd18_f8_Attendees_Country_count['Total-2018'] / dfd18_f8_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f8_Attendees_Country_count['Percent-2018'] = dfd18_f8_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f8_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f8_Attendees_Country_count = pd.DataFrame(filtr_8_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f8_Attendees_Country_count = dfd19_f8_Attendees_Country_count.fillna('Unknown')
dfd19_f8_Attendees_Country_count['Percent-2019'] = (dfd19_f8_Attendees_Country_count['Total-2019'] / dfd19_f8_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f8_Attendees_Country_count['Percent-2019'] = dfd19_f8_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f8_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f8_Attendees_Country_count = pd.DataFrame(filtr_8_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f8_Attendees_Country_count = dfd21_f8_Attendees_Country_count.fillna('Unknown')
dfd21_f8_Attendees_Country_count['Percent-2021'] = (dfd21_f8_Attendees_Country_count['Total-2021'] / dfd21_f8_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f8_Attendees_Country_count['Percent-2021'] = dfd21_f8_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f8_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f8_Attendees_Country_count = pd.DataFrame(filtr_8_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f8_Attendees_Country_count = dfd22_f8_Attendees_Country_count.fillna('Unknown')
dfd22_f8_Attendees_Country_count['Percent-2022'] = (dfd22_f8_Attendees_Country_count['Total-2022'] / dfd22_f8_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f8_Attendees_Country_count['Percent-2022'] = dfd22_f8_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f8_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_Attendees_Country_count = pd.DataFrame(filtr_8_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f8_Attendees_Country_count = dfd23_f8_Attendees_Country_count.fillna('Unknown')
dfd23_f8_Attendees_Country_count['Percent-2023'] = (dfd23_f8_Attendees_Country_count['Total-2023'] / dfd23_f8_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f8_Attendees_Country_count['Percent-2023'] = dfd23_f8_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f8_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f8 = pd.DataFrame(pd.merge(dfd17_f8_Attendees_Country_count, dfd18_f8_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f8 = pd.DataFrame(pd.merge(dfd19_f8_Attendees_Country_count, dfd21_f8_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f8 = pd.DataFrame(pd.merge(dfd22_f8_Attendees_Country_count, dfd23_f8_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f8 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f8, dfAttendees_Country_Count_2_f8, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f8.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f8 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f8, dfAttendees_Country_Count_3_f8, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f8 = dfAttendees_Country_Count_m2_f8.append(dfAttendees_Country_Count_m2_f8.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f8['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f8_ATTENDEES_AREAS_count = pd.DataFrame(filtr_8_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f8_ATTENDEES_AREAS_count = dfd17_f8_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f8_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f8_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f8_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f8_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f8_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f8_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f8_ATTENDEES_AREAS_count = pd.DataFrame(filtr_8_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f8_ATTENDEES_AREAS_count = dfd18_f8_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f8_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f8_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f8_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f8_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f8_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f8_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f8_ATTENDEES_AREAS_count = pd.DataFrame(filtr_8_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f8_ATTENDEES_AREAS_count = dfd19_f8_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f8_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f8_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f8_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f8_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f8_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f8_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f8_ATTENDEES_AREAS_count = pd.DataFrame(filtr_8_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f8_ATTENDEES_AREAS_count = dfd21_f8_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f8_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f8_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f8_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f8_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f8_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f8_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f8_ATTENDEES_AREAS_count = pd.DataFrame(filtr_8_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f8_ATTENDEES_AREAS_count = dfd22_f8_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f8_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f8_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f8_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f8_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f8_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f8_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_ATTENDEES_AREAS_count = pd.DataFrame(filtr_8_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f8_ATTENDEES_AREAS_count = dfd23_f8_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f8_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f8_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f8_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f8_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f8_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f8_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f8 = pd.DataFrame(pd.merge(dfd17_f8_ATTENDEES_AREAS_count, dfd18_f8_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f8 = pd.DataFrame(pd.merge(dfd19_f8_ATTENDEES_AREAS_count, dfd21_f8_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f8 = pd.DataFrame(pd.merge(dfd22_f8_ATTENDEES_AREAS_count, dfd23_f8_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f8.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f8 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f8, df_ATTENDEES_AREAS_count_2_f8, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f8 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f8, df_ATTENDEES_AREAS_count_3_f8, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f8 = df_ATTENDEES_AREAS_count_m2_f8.append(df_ATTENDEES_AREAS_count_m2_f8.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f8['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f8_Attendees_Specialty_count = pd.DataFrame(filtr_8_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f8_Attendees_Specialty_count = dfd17_f8_Attendees_Specialty_count.fillna('Unknown')
dfd17_f8_Attendees_Specialty_count['Percent-2017'] = (dfd17_f8_Attendees_Specialty_count['Total-2017'] / dfd17_f8_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f8_Attendees_Specialty_count['Percent-2017'] = dfd17_f8_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f8_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f8_Attendees_Specialty_count = pd.DataFrame(filtr_8_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f8_Attendees_Specialty_count = dfd18_f8_Attendees_Specialty_count.fillna('Unknown')
dfd18_f8_Attendees_Specialty_count['Percent-2018'] = (dfd18_f8_Attendees_Specialty_count['Total-2018'] / dfd18_f8_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f8_Attendees_Specialty_count['Percent-2018'] = dfd18_f8_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f8_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f8_Attendees_Specialty_count = pd.DataFrame(filtr_8_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f8_Attendees_Specialty_count = dfd19_f8_Attendees_Specialty_count.fillna('Unknown')
dfd19_f8_Attendees_Specialty_count['Percent-2019'] = (dfd19_f8_Attendees_Specialty_count['Total-2019'] / dfd19_f8_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f8_Attendees_Specialty_count['Percent-2019'] = dfd19_f8_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f8_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f8_Attendees_Specialty_count = pd.DataFrame(filtr_8_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f8_Attendees_Specialty_count = dfd21_f8_Attendees_Specialty_count.fillna('Unknown')
dfd21_f8_Attendees_Specialty_count['Percent-2021'] = (dfd21_f8_Attendees_Specialty_count['Total-2021'] / dfd21_f8_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f8_Attendees_Specialty_count['Percent-2021'] = dfd21_f8_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f8_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f8_Attendees_Specialty_count = pd.DataFrame(filtr_8_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f8_Attendees_Specialty_count = dfd22_f8_Attendees_Specialty_count.fillna('Unknown')
dfd22_f8_Attendees_Specialty_count['Percent-2022'] = (dfd22_f8_Attendees_Specialty_count['Total-2022'] / dfd22_f8_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f8_Attendees_Specialty_count['Percent-2022'] = dfd22_f8_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f8_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f8_Attendees_Specialty_count = pd.DataFrame(filtr_8_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f8_Attendees_Specialty_count = dfd23_f8_Attendees_Specialty_count.fillna('Unknown')
dfd23_f8_Attendees_Specialty_count['Percent-2023'] = (dfd23_f8_Attendees_Specialty_count['Total-2023'] / dfd23_f8_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f8_Attendees_Specialty_count['Percent-2023'] = dfd23_f8_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f8_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f8 = pd.DataFrame(pd.merge(dfd17_f8_Attendees_Specialty_count, dfd18_f8_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f8 = pd.DataFrame(pd.merge(dfd19_f8_Attendees_Specialty_count, dfd21_f8_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f8 = pd.DataFrame(pd.merge(dfd22_f8_Attendees_Specialty_count, dfd23_f8_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f8 = pd.DataFrame(pd.merge(df_Specialty_count_1_f8, df_Specialty_count_2_f8, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f8.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f8 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f8, df_Specialty_count_3_f8, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f8 = df_Specialty_count_m2_f8.append(df_Specialty_count_m2_f8.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f8['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f8['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f8['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f8 = Concat_Registrations_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f8['Total-2017'] = Concat_Registrations_count_f1_f8['Total-2017'].astype(int)
Concat_Registrations_count_f1_f8['Percent-2017'] = Concat_Registrations_count_f1_f8['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f8['7DEvolution-2017'] = Concat_Registrations_count_f1_f8['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f8['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f8['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f8 = Concat_Registrations_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f8['Total-2018'] = Concat_Registrations_count_f1_f8['Total-2018'].astype(int)
Concat_Registrations_count_f1_f8['Percent-2018'] = Concat_Registrations_count_f1_f8['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f8['7DEvolution-2018'] = Concat_Registrations_count_f1_f8['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f8['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f8['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f8 = Concat_Registrations_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f8['Total-2019'] = Concat_Registrations_count_f1_f8['Total-2019'].astype(int)
Concat_Registrations_count_f1_f8['Percent-2019'] = Concat_Registrations_count_f1_f8['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f8['7DEvolution-2019'] = Concat_Registrations_count_f1_f8['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f8['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f8['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f8 = Concat_Registrations_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f8['Total-2021'] = Concat_Registrations_count_f1_f8['Total-2021'].astype(int)
Concat_Registrations_count_f1_f8['Percent-2021'] = Concat_Registrations_count_f1_f8['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f8['7DEvolution-2021'] = Concat_Registrations_count_f1_f8['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f8['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f8['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f8 = Concat_Registrations_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f8['Total-2022'] = Concat_Registrations_count_f1_f8['Total-2022'].astype(int)
Concat_Registrations_count_f1_f8['Percent-2022'] = Concat_Registrations_count_f1_f8['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f8['7DEvolution-2022'] = Concat_Registrations_count_f1_f8['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f8['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f8['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f8 = Concat_Registrations_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f8['Total-2023'] = Concat_Registrations_count_f1_f8['Total-2023'].astype(int)
Concat_Registrations_count_f1_f8['Percent-2023'] = Concat_Registrations_count_f1_f8['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f8['7DEvolution-2023'] = Concat_Registrations_count_f1_f8['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f8['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f8['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f8 = Concat_ACQRET_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f8['Total-2018'] = Concat_ACQRET_count_f1_f8['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f8['ACQ-2018'] = Concat_ACQRET_count_f1_f8['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f8['Percent-2018'] = Concat_ACQRET_count_f1_f8['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f8['RET-2018'] = Concat_ACQRET_count_f1_f8['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f8['Percnt-2018'] = Concat_ACQRET_count_f1_f8['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f8['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f8['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f8 = Concat_ACQRET_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f8['Total-2019'] = Concat_ACQRET_count_f1_f8['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f8['ACQ-2019'] = Concat_ACQRET_count_f1_f8['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f8['Percent-2019'] = Concat_ACQRET_count_f1_f8['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f8['RET-2019'] = Concat_ACQRET_count_f1_f8['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f8['Percnt-2019'] = Concat_ACQRET_count_f1_f8['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f8['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f8['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f8 = Concat_ACQRET_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f8['Total-2021'] = Concat_ACQRET_count_f1_f8['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f8['ACQ-2021'] = Concat_ACQRET_count_f1_f8['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f8['Percent-2021'] = Concat_ACQRET_count_f1_f8['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f8['RET-2021'] = Concat_ACQRET_count_f1_f8['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f8['Percnt-2021'] = Concat_ACQRET_count_f1_f8['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f8['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f8['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f8 = Concat_ACQRET_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f8['Total-2022'] = Concat_ACQRET_count_f1_f8['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f8['ACQ-2022'] = Concat_ACQRET_count_f1_f8['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f8['Percent-2022'] = Concat_ACQRET_count_f1_f8['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f8['RET-2022'] = Concat_ACQRET_count_f1_f8['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f8['Percnt-2022'] = Concat_ACQRET_count_f1_f8['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f8['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f8['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f8 = Concat_ACQRET_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f8['Total-2023'] = Concat_ACQRET_count_f1_f8['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f8['ACQ-2023'] = Concat_ACQRET_count_f1_f8['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f8['Percent-2023'] = Concat_ACQRET_count_f1_f8['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f8['RET-2023'] = Concat_ACQRET_count_f1_f8['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f8['Percnt-2023'] = Concat_ACQRET_count_f1_f8['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f8['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f8['Total-2017'],errors='coerce')
Concat_REV_count_f1_f8 = Concat_REV_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f8['Total-2017'] = Concat_REV_count_f1_f8['Total-2017'].astype(int)
Concat_REV_count_f1_f8['Percent-2017'] = Concat_REV_count_f1_f8['Percent-2017'].astype(float)
Concat_REV_count_f1_f8['7DEvolution-2017'] = Concat_REV_count_f1_f8['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f8['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f8['Total-2018'],errors='coerce')
Concat_REV_count_f1_f8 = Concat_REV_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f8['Total-2018'] = Concat_REV_count_f1_f8['Total-2018'].astype(int)
Concat_REV_count_f1_f8['Percent-2018'] = Concat_REV_count_f1_f8['Percent-2018'].astype(float)
Concat_REV_count_f1_f8['7DEvolution-2018'] = Concat_REV_count_f1_f8['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f8['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f8['Total-2019'],errors='coerce')
Concat_REV_count_f1_f8 = Concat_REV_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f8['Total-2019'] = Concat_REV_count_f1_f8['Total-2019'].astype(int)
Concat_REV_count_f1_f8['Percent-2019'] = Concat_REV_count_f1_f8['Percent-2019'].astype(float)
Concat_REV_count_f1_f8['7DEvolution-2019'] = Concat_REV_count_f1_f8['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f8['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f8['Total-2022'],errors='coerce')
Concat_REV_count_f1_f8 = Concat_REV_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f8['Total-2022'] = Concat_REV_count_f1_f8['Total-2022'].astype(int)
Concat_REV_count_f1_f8['Percent-2022'] = Concat_REV_count_f1_f8['Percent-2022'].astype(float)
Concat_REV_count_f1_f8['7DEvolution-2022'] = Concat_REV_count_f1_f8['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f8['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f8['Total-2023'],errors='coerce')
Concat_REV_count_f1_f8 = Concat_REV_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f8['Total-2023'] = Concat_REV_count_f1_f8['Total-2023'].astype(int)
Concat_REV_count_f1_f8['Percent-2023'] = Concat_REV_count_f1_f8['Percent-2023'].astype(float)
Concat_REV_count_f1_f8['7DEvolution-2023'] = Concat_REV_count_f1_f8['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f8['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f8['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f8 = Concat_RegGRDel_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f8['Total-2017'] = Concat_RegGRDel_count_f1_f8['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f8['Percent-2017'] = Concat_RegGRDel_count_f1_f8['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f8['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f8['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f8['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f8['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f8 = Concat_RegGRDel_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f8['Total-2018'] = Concat_RegGRDel_count_f1_f8['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f8['Percent-2018'] = Concat_RegGRDel_count_f1_f8['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f8['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f8['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f8['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f8['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f8 = Concat_RegGRDel_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f8['Total-2019'] = Concat_RegGRDel_count_f1_f8['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f8['Percent-2019'] = Concat_RegGRDel_count_f1_f8['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f8['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f8['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f8['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f8['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f8 = Concat_RegGRDel_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f8['Total-2021'] = Concat_RegGRDel_count_f1_f8['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f8['Percent-2021'] = Concat_RegGRDel_count_f1_f8['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f8['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f8['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f8['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f8['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f8 = Concat_RegGRDel_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f8['Total-2022'] = Concat_RegGRDel_count_f1_f8['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f8['Percent-2022'] = Concat_RegGRDel_count_f1_f8['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f8['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f8['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f8['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f8['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f8 = Concat_RegGRDel_count_f1_f8.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f8['Total-2023'] = Concat_RegGRDel_count_f1_f8['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f8['Percent-2023'] = Concat_RegGRDel_count_f1_f8['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f8['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f8['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f8['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f8['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f8 = Conct_AC_RT_GRDel_f1_f8.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f8['Total-2018'] = Conct_AC_RT_GRDel_f1_f8['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f8['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f8['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f8['Percent-2018'] = Conct_AC_RT_GRDel_f1_f8['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f8['RET-2018'] = Conct_AC_RT_GRDel_f1_f8['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f8['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f8['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f8['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f8['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f8 = Conct_AC_RT_GRDel_f1_f8.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f8['Total-2019'] = Conct_AC_RT_GRDel_f1_f8['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f8['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f8['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f8['Percent-2019'] = Conct_AC_RT_GRDel_f1_f8['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f8['RET-2019'] = Conct_AC_RT_GRDel_f1_f8['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f8['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f8['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f8['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f8['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f8 = Conct_AC_RT_GRDel_f1_f8.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f8['Total-2021'] = Conct_AC_RT_GRDel_f1_f8['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f8['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f8['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f8['Percent-2021'] = Conct_AC_RT_GRDel_f1_f8['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f8['RET-2021'] = Conct_AC_RT_GRDel_f1_f8['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f8['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f8['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f8['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f8['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f8 = Conct_AC_RT_GRDel_f1_f8.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f8['Total-2022'] = Conct_AC_RT_GRDel_f1_f8['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f8['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f8['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f8['Percent-2022'] = Conct_AC_RT_GRDel_f1_f8['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f8['RET-2022'] = Conct_AC_RT_GRDel_f1_f8['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f8['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f8['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f8['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f8['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f8 = Conct_AC_RT_GRDel_f1_f8.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f8['Total-2023'] = Conct_AC_RT_GRDel_f1_f8['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f8['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f8['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f8['Percent-2023'] = Conct_AC_RT_GRDel_f1_f8['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f8['RET-2023'] = Conct_AC_RT_GRDel_f1_f8['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f8['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f8['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f8['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f8['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f8 = Conct_RV_GRDel_f1_f8.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f8['Total-2017'] = Conct_RV_GRDel_f1_f8['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f8['Percent-2017'] = Conct_RV_GRDel_f1_f8['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f8['7DEvolution-2017'] = Conct_RV_GRDel_f1_f8['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f8['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f8['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f8 = Conct_RV_GRDel_f1_f8.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f8['Total-2018'] = Conct_RV_GRDel_f1_f8['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f8['Percent-2018'] = Conct_RV_GRDel_f1_f8['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f8['7DEvolution-2018'] = Conct_RV_GRDel_f1_f8['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f8['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f8['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f8 = Conct_RV_GRDel_f1_f8.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f8['Total-2019'] = Conct_RV_GRDel_f1_f8['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f8['Percent-2019'] = Conct_RV_GRDel_f1_f8['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f8['7DEvolution-2019'] = Conct_RV_GRDel_f1_f8['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f8['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f8['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f8 = Conct_RV_GRDel_f1_f8.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f8['Total-2022'] = Conct_RV_GRDel_f1_f8['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f8['Percent-2022'] = Conct_RV_GRDel_f1_f8['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f8['7DEvolution-2022'] = Conct_RV_GRDel_f1_f8['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f8['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f8['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f8 = Conct_RV_GRDel_f1_f8.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f8['Total-2023'] = Conct_RV_GRDel_f1_f8['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f8['Percent-2023'] = Conct_RV_GRDel_f1_f8['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f8['7DEvolution-2023'] = Conct_RV_GRDel_f1_f8['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f8['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f8['Total-2017'],errors='coerce')
df_Profile_Count_m2_f8 = df_Profile_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f8['Total-2017'] = df_Profile_Count_m2_f8['Total-2017'].astype(int)
df_Profile_Count_m2_f8['Percent-2017'] = df_Profile_Count_m2_f8['Percent-2017'].astype(float)

df_Profile_Count_m2_f8['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f8['Total-2018'],errors='coerce')
df_Profile_Count_m2_f8 = df_Profile_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f8['Total-2018'] = df_Profile_Count_m2_f8['Total-2018'].astype(int)
df_Profile_Count_m2_f8['Percent-2018'] = df_Profile_Count_m2_f8['Percent-2018'].astype(float)

df_Profile_Count_m2_f8['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f8['Total-2019'],errors='coerce')
df_Profile_Count_m2_f8 = df_Profile_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f8['Total-2019'] = df_Profile_Count_m2_f8['Total-2019'].astype(int)
df_Profile_Count_m2_f8['Percent-2019'] = df_Profile_Count_m2_f8['Percent-2019'].astype(float)

df_Profile_Count_m2_f8['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f8['Total-2021'],errors='coerce')
df_Profile_Count_m2_f8 = df_Profile_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f8['Total-2021'] = df_Profile_Count_m2_f8['Total-2021'].astype(int)
df_Profile_Count_m2_f8['Percent-2021'] = df_Profile_Count_m2_f8['Percent-2021'].astype(float)

df_Profile_Count_m2_f8['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f8['Total-2022'],errors='coerce')
df_Profile_Count_m2_f8 = df_Profile_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f8['Total-2022'] = df_Profile_Count_m2_f8['Total-2022'].astype(int)
df_Profile_Count_m2_f8['Percent-2022'] = df_Profile_Count_m2_f8['Percent-2022'].astype(float)

df_Profile_Count_m2_f8['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f8['Total-2023'],errors='coerce')
df_Profile_Count_m2_f8 = df_Profile_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f8['Total-2023'] = df_Profile_Count_m2_f8['Total-2023'].astype(int)
df_Profile_Count_m2_f8['Percent-2023'] = df_Profile_Count_m2_f8['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f8['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f8['Total-2017'],errors='coerce')
df_Pass_Count_m2_f8 = df_Pass_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f8['Total-2017'] = df_Pass_Count_m2_f8['Total-2017'].astype(int)
df_Pass_Count_m2_f8['Percent-2017'] = df_Pass_Count_m2_f8['Percent-2017'].astype(float)

df_Pass_Count_m2_f8['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f8['Total-2018'],errors='coerce')
df_Pass_Count_m2_f8 = df_Pass_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f8['Total-2018'] = df_Pass_Count_m2_f8['Total-2018'].astype(int)
df_Pass_Count_m2_f8['Percent-2018'] = df_Pass_Count_m2_f8['Percent-2018'].astype(float)

df_Pass_Count_m2_f8['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f8['Total-2019'],errors='coerce')
df_Pass_Count_m2_f8 = df_Pass_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f8['Total-2019'] = df_Pass_Count_m2_f8['Total-2019'].astype(int)
df_Pass_Count_m2_f8['Percent-2019'] = df_Pass_Count_m2_f8['Percent-2019'].astype(float)

df_Pass_Count_m2_f8['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f8['Total-2021'],errors='coerce')
df_Pass_Count_m2_f8 = df_Pass_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f8['Total-2021'] = df_Pass_Count_m2_f8['Total-2021'].astype(int)
df_Pass_Count_m2_f8['Percent-2021'] = df_Pass_Count_m2_f8['Percent-2021'].astype(float)

df_Pass_Count_m2_f8['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f8['Total-2022'],errors='coerce')
df_Pass_Count_m2_f8 = df_Pass_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f8['Total-2022'] = df_Pass_Count_m2_f8['Total-2022'].astype(int)
df_Pass_Count_m2_f8['Percent-2022'] = df_Pass_Count_m2_f8['Percent-2022'].astype(float)

df_Pass_Count_m2_f8['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f8['Total-2023'],errors='coerce')
df_Pass_Count_m2_f8 = df_Pass_Count_m2_f8.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f8['Total-2023'] = df_Pass_Count_m2_f8['Total-2023'].astype(int)
df_Pass_Count_m2_f8['Percent-2023'] = df_Pass_Count_m2_f8['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f8['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f8['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f8 = dfAttendees_Country_Count_m2_f8.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f8['Total-2017'] = dfAttendees_Country_Count_m2_f8['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f8['Percent-2017'] = dfAttendees_Country_Count_m2_f8['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f8['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f8['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f8 = dfAttendees_Country_Count_m2_f8.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f8['Total-2018'] = dfAttendees_Country_Count_m2_f8['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f8['Percent-2018'] = dfAttendees_Country_Count_m2_f8['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f8['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f8['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f8 = dfAttendees_Country_Count_m2_f8.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f8['Total-2019'] = dfAttendees_Country_Count_m2_f8['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f8['Percent-2019'] = dfAttendees_Country_Count_m2_f8['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f8['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f8['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f8 = dfAttendees_Country_Count_m2_f8.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f8['Total-2021'] = dfAttendees_Country_Count_m2_f8['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f8['Percent-2021'] = dfAttendees_Country_Count_m2_f8['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f8['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f8['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f8 = dfAttendees_Country_Count_m2_f8.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f8['Total-2022'] = dfAttendees_Country_Count_m2_f8['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f8['Percent-2022'] = dfAttendees_Country_Count_m2_f8['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f8['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f8['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f8 = dfAttendees_Country_Count_m2_f8.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f8['Total-2023'] = dfAttendees_Country_Count_m2_f8['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f8['Percent-2023'] = dfAttendees_Country_Count_m2_f8['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f8['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f8['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f8 = df_ATTENDEES_AREAS_count_m2_f8.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f8['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f8['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f8['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f8['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f8['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f8['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f8 = df_ATTENDEES_AREAS_count_m2_f8.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f8['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f8['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f8['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f8['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f8['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f8['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f8 = df_ATTENDEES_AREAS_count_m2_f8.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f8['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f8['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f8['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f8['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f8['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f8['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f8 = df_ATTENDEES_AREAS_count_m2_f8.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f8['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f8['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f8['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f8['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f8['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f8['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f8 = df_ATTENDEES_AREAS_count_m2_f8.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f8['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f8['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f8['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f8['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f8['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f8['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f8 = df_ATTENDEES_AREAS_count_m2_f8.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f8['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f8['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f8['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f8['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f8['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f8['Total-2017'],errors='coerce')
df_Specialty_count_m2_f8 = df_Specialty_count_m2_f8.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f8['Total-2017'] = df_Specialty_count_m2_f8['Total-2017'].astype(int)
df_Specialty_count_m2_f8['Percent-2017'] = df_Specialty_count_m2_f8['Percent-2017'].astype(float)

df_Specialty_count_m2_f8['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f8['Total-2018'],errors='coerce')
df_Specialty_count_m2_f8 = df_Specialty_count_m2_f8.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f8['Total-2018'] = df_Specialty_count_m2_f8['Total-2018'].astype(int)
df_Specialty_count_m2_f8['Percent-2018'] = df_Specialty_count_m2_f8['Percent-2018'].astype(float)

df_Specialty_count_m2_f8['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f8['Total-2019'],errors='coerce')
df_Specialty_count_m2_f8 = df_Specialty_count_m2_f8.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f8['Total-2019'] = df_Specialty_count_m2_f8['Total-2019'].astype(int)
df_Specialty_count_m2_f8['Percent-2019'] = df_Specialty_count_m2_f8['Percent-2019'].astype(float)

df_Specialty_count_m2_f8['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f8['Total-2021'],errors='coerce')
df_Specialty_count_m2_f8 = df_Specialty_count_m2_f8.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f8['Total-2021'] = df_Specialty_count_m2_f8['Total-2021'].astype(int)
df_Specialty_count_m2_f8['Percent-2021'] = df_Specialty_count_m2_f8['Percent-2021'].astype(float)

df_Specialty_count_m2_f8['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f8['Total-2022'],errors='coerce')
df_Specialty_count_m2_f8 = df_Specialty_count_m2_f8.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f8['Total-2022'] = df_Specialty_count_m2_f8['Total-2022'].astype(int)
df_Specialty_count_m2_f8['Percent-2022'] = df_Specialty_count_m2_f8['Percent-2022'].astype(float)

df_Specialty_count_m2_f8['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f8['Total-2023'],errors='coerce')
df_Specialty_count_m2_f8 = df_Specialty_count_m2_f8.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f8['Total-2023'] = df_Specialty_count_m2_f8['Total-2023'].astype(int)
df_Specialty_count_m2_f8['Percent-2023'] = df_Specialty_count_m2_f8['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f8.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f8.dtypes)
#print(df_Specialty_count_m2_f8.dtypes)

#print(dfAttendees_Country_Count_m2_f8.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f8.dtypes)
#print(df_Specialty_count_m2_f8.dtypes)

# EXCEL FILE
writerf8 = pd.ExcelWriter(outputExcelFile_f8, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f8.to_excel\
    (writerf8, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f8.to_excel\
    (writerf8, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f8.to_excel\
    (writerf8, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f8.to_excel\
    (writerf8, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f8.to_excel\
    (writerf8, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f8.to_excel\
    (writerf8, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f8.to_excel\
    (writerf8, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f8.to_excel\
    (writerf8, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f8.to_excel\
    (writerf8, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f8.to_excel\
    (writerf8, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f8.to_excel\
    (writerf8, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf8.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f8)

workbook.save(outputExcelFile_f8)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 140 days**********************************************')
print('************************************End of 140 days**********************************************')
print('************************************End of 140 days**********************************************')
print('************************************End of 140 days**********************************************')
print('************************************End of 140 days**********************************************')
print('************************************End of 140 days**********************************************')
print('************************************End of 140 days**********************************************')
print('************************************End of 140 days**********************************************')
print('************************************End of 140 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f9_Registrations_count = pd.DataFrame(filter_9_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f9_Registrations_count = dfd17_f9_Registrations_count.fillna('Unknown')
dfd17_f9_Registrations_count['Percent-2017'] = (dfd17_f9_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f9_Registrations_count['Percent-2017'] = dfd17_f9_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f9_Registrations_count['7DEvolution-2017'] = dfd17_f9_Registrations_count['Total-2017'] - dfd17_f8_Registrations_count['Total-2017']
#print(tab(dfd17_f9_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f9_Registrations_count = pd.DataFrame(filter_9_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f9_Registrations_count = dfd18_f9_Registrations_count.fillna('Unknown')
dfd18_f9_Registrations_count['Percent-2018'] = (dfd18_f9_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f9_Registrations_count['Percent-2018'] = dfd18_f9_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f9_Registrations_count['7DEvolution-2018'] = dfd18_f9_Registrations_count['Total-2018'] - dfd18_f8_Registrations_count['Total-2018']
#print(tab(dfd18_f9_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f9_Registrations_count = pd.DataFrame(filter_9_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f9_Registrations_count = dfd19_f9_Registrations_count.fillna('Unknown')
dfd19_f9_Registrations_count['Percent-2019'] = (dfd19_f9_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f9_Registrations_count['Percent-2019'] = dfd19_f9_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f9_Registrations_count['7DEvolution-2019'] = dfd19_f9_Registrations_count['Total-2019'] - dfd19_f8_Registrations_count['Total-2019']
#print(tab(dfd19_f9_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f9_Registrations_count = pd.DataFrame(filter_9_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f9_Registrations_count = dfd21_f9_Registrations_count.fillna('Unknown')
dfd21_f9_Registrations_count['Percent-2021'] = (dfd21_f9_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f9_Registrations_count['Percent-2021'] = dfd21_f9_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f9_Registrations_count['7DEvolution-2021'] = dfd21_f9_Registrations_count['Total-2021'] - dfd21_f8_Registrations_count['Total-2021']
#print(tab(dfd21_f9_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f9_Registrations_count = pd.DataFrame(filter_9_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f9_Registrations_count = dfd22_f9_Registrations_count.fillna('Unknown')
dfd22_f9_Registrations_count['Percent-2022'] = (dfd22_f9_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f9_Registrations_count['Percent-2022'] = dfd22_f9_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f9_Registrations_count['7DEvolution-2022'] = dfd22_f9_Registrations_count['Total-2022'] - dfd22_f8_Registrations_count['Total-2022']
#print(tab(dfd22_f9_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_Registrations_count = pd.DataFrame(filter_9_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f9_Registrations_count = dfd23_f9_Registrations_count.fillna('Unknown')
dfd23_f9_Registrations_count['Percent-2023'] = (dfd23_f9_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f9_Registrations_count['Percent-2023'] = dfd23_f9_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f9_Registrations_count['7DEvolution-2023'] = dfd23_f9_Registrations_count['Total-2023'] - dfd23_f8_Registrations_count['Total-2023']
#print(tab(dfd23_f9_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f9_RegistrationsEvolution_count = pd.DataFrame(filter_9_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f9_RegistrationsEvolution_count = dfd23_f9_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f9_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f9_Registrations_count['Total-2023'] - dfd19_f9_Registrations_count['Total-2019'])/ dfd19_f9_Registrations_count['Total-2019'].sum()) * 100
dfd23_f9_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f9_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f9_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f9 = pd.DataFrame(pd.merge(dfd17_f9_Registrations_count, dfd18_f9_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f9 = pd.DataFrame(pd.merge(dfd19_f9_Registrations_count, dfd21_f9_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f9 = pd.DataFrame(pd.merge(dfd22_f9_Registrations_count, dfd23_f9_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f9 = pd.DataFrame(pd.merge(df_Registrations_count_1_f9, df_Registrations_count_2_f9, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f9 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f9, df_Registrations_count_3_f9, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f9 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f9, dfd23_f9_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f9 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9]
Concat_Registrations_count_f1_f9 = pd.concat(ConcatFrames_Registrations_count_f1_f9)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f9  = ConcatFrames_Registrations_count_f1_f9.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f9.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f9 = filter_9_df18[filter_9_df18['New customer'] == 1]
df_NewCustomer_df19_f9 = filter_9_df19[filter_9_df19['New customer'] == 1]
df_NewCustomer_df21_f9 = filter_9_df21[filter_9_df21['New customer'] == 1]
df_NewCustomer_df22_f9 = filter_9_df22[filter_9_df22['New customer'] == 1]
df_NewCustomer_df23_f9 = filter_9_df23[filter_9_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f9.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f9.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f9.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a9_ACQRET_count = pd.DataFrame(filter_9_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f9_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f9.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f9_ACQRET_count['Percent-2018'] = (dfd18_f9_ACQRET_count['ACQ-2018'] / dfd18_f9_Registrations_count['Total-2018'].sum()) * 100
dfd18_f9_ACQRET_count['Percent-2018'] = dfd18_f9_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f9_ACQRET_count['RET-2018'] = dfd18_a9_ACQRET_count['Total-2018'] - dfd18_f9_ACQRET_count['ACQ-2018']
dfd18_f9_ACQRET_count['Percnt-2018'] = (dfd18_f9_ACQRET_count['RET-2018'] / dfd18_a9_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f9_ACQRET_count['Percnt-2018'] = dfd18_f9_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f9_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a9_ACQRET_count = pd.DataFrame(filter_9_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f9_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f9.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f9_ACQRET_count['Percent-2019'] = (dfd19_f9_ACQRET_count['ACQ-2019'] / dfd19_f9_Registrations_count['Total-2019'].sum()) * 100
dfd19_f9_ACQRET_count['Percent-2019'] = dfd19_f9_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f9_ACQRET_count['RET-2019'] = dfd19_a9_ACQRET_count['Total-2019'] - dfd19_f9_ACQRET_count['ACQ-2019']
dfd19_f9_ACQRET_count['Percnt-2019'] = (dfd19_f9_ACQRET_count['RET-2019'] / dfd19_a9_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f9_ACQRET_count['Percnt-2019'] = dfd19_f9_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f9_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a9_ACQRET_count = pd.DataFrame(filter_9_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f9_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f9.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f9_ACQRET_count['Percent-2021'] = (dfd21_f9_ACQRET_count['ACQ-2021'] / dfd21_f9_Registrations_count['Total-2021'].sum()) * 100
dfd21_f9_ACQRET_count['Percent-2021'] = dfd21_f9_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f9_ACQRET_count['RET-2021'] = dfd21_a9_ACQRET_count['Total-2021'] - dfd21_f9_ACQRET_count['ACQ-2021']
dfd21_f9_ACQRET_count['Percnt-2021'] = (dfd21_f9_ACQRET_count['RET-2021'] / dfd21_a9_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f9_ACQRET_count['Percnt-2021'] = dfd21_f9_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f9_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a9_ACQRET_count = pd.DataFrame(filter_9_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f9_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f9.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f9_ACQRET_count['Percent-2022'] = (dfd22_f9_ACQRET_count['ACQ-2022'] / dfd22_f9_Registrations_count['Total-2022'].sum()) * 100
dfd22_f9_ACQRET_count['Percent-2022'] = dfd22_f9_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f9_ACQRET_count['RET-2022'] = dfd22_a9_ACQRET_count['Total-2022'] - dfd22_f9_ACQRET_count['ACQ-2022']
dfd22_f9_ACQRET_count['Percnt-2022'] = (dfd22_f9_ACQRET_count['RET-2022'] / dfd22_a9_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f9_ACQRET_count['Percnt-2022'] = dfd22_f9_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f9_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a9_ACQRET_count = pd.DataFrame(filter_9_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f9_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f9.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f9_ACQRET_count['Percent-2023'] = (dfd23_f9_ACQRET_count['ACQ-2023'] / dfd23_f9_Registrations_count['Total-2023'].sum()) * 100
dfd23_f9_ACQRET_count['Percent-2023'] = dfd23_f9_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f9_ACQRET_count['RET-2023'] = dfd23_a9_ACQRET_count['Total-2023'] - dfd23_f9_ACQRET_count['ACQ-2023']
dfd23_f9_ACQRET_count['Percnt-2023'] = (dfd23_f9_ACQRET_count['RET-2023'] / dfd23_a9_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f9_ACQRET_count['Percnt-2023'] = dfd23_f9_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f9_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f9 = pd.DataFrame(pd.merge(dfd18_a9_ACQRET_count, dfd18_f9_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f9 = pd.DataFrame(pd.merge(dfd19_a9_ACQRET_count, dfd19_f9_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f9 = pd.DataFrame(pd.merge(dfd21_a9_ACQRET_count, dfd21_f9_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f9 = pd.DataFrame(pd.merge(dfd22_a9_ACQRET_count, dfd22_f9_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_9_f9 = pd.DataFrame(pd.merge(dfd23_a9_ACQRET_count, dfd23_f9_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_9_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f9 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f9, df_ACQRET_count_2_f9, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f9 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f9, df_ACQRET_count_3_f9, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f9 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f9, df_ACQRET_count_4_f9, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f9 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f9, df_ACQRET_count_9_f9, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f9 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9]
Concat_ACQRET_count_f1_f9 = pd.concat(ConcatFrames_ACQRET_count_f1_f9)
#print(tab(Concat_ACQRET_count_f1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f9 = Concat_ACQRET_count_f1_f9[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f9_Revenue_calc = pd.DataFrame(filter_9_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f9_Revenue_calc['Percent-2017'] = (dfd17_f9_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f9_Revenue_calc['Percent-2017'] = dfd17_f9_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f9_Revenue_calc['7DEvolution-2017'] = dfd17_f9_Revenue_calc['Total-2017'] - dfd17_f8_Revenue_calc['Total-2017']
#print(tab(dfd17_f9_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f9_Revenue_calc = pd.DataFrame(filter_9_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f9_Revenue_calc['Percent-2018'] = (dfd18_f9_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f9_Revenue_calc['Percent-2018'] = dfd18_f9_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f9_Revenue_calc['7DEvolution-2018'] = dfd18_f9_Revenue_calc['Total-2018'] - dfd18_f8_Revenue_calc['Total-2018']
#print(tab(dfd18_f9_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f9_Revenue_calc = pd.DataFrame(filter_9_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f9_Revenue_calc['Percent-2019'] = (dfd19_f9_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f9_Revenue_calc['Percent-2019'] = dfd19_f9_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f9_Revenue_calc['7DEvolution-2019'] = dfd19_f9_Revenue_calc['Total-2019'] - dfd19_f8_Revenue_calc['Total-2019']
#print(tab(dfd19_f9_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f9_Revenue_calc = pd.DataFrame(filter_9_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f9_Revenue_calc['Percent-2021'] = (dfd21_f9_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f9_Revenue_calc['Percent-2021'] = dfd21_f9_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f9_Revenue_calc['7DEvolution-2021'] = dfd21_f9_Revenue_calc['Total-2021'] - dfd21_f8_Revenue_calc['Total-2021']
#print(tab(dfd21_f9_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f9_Revenue_calc = pd.DataFrame(filter_9_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f9_Revenue_calc['Percent-2022'] = (dfd22_f9_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f9_Revenue_calc['Percent-2022'] = dfd22_f9_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f9_Revenue_calc['7DEvolution-2022'] = dfd22_f9_Revenue_calc['Total-2022'] - dfd22_f8_Revenue_calc['Total-2022']
#print(tab(dfd22_f9_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_Revenue_calc = pd.DataFrame(filter_9_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f9_Revenue_calc['Percent-2023'] = (dfd23_f9_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f9_Revenue_calc['Percent-2023'] = dfd23_f9_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f9_Revenue_calc['7DEvolution-2023'] = dfd23_f9_Revenue_calc['Total-2023'] - dfd23_f8_Revenue_calc['Total-2023']
#print(tab(dfd23_f9_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f9_RevenueEvolution_calc = pd.DataFrame(filter_9_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f9_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f9_Revenue_calc['Total-2023'] - dfd19_f9_Revenue_calc['Total-2019'])/ dfd19_f9_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f9_RevenueEvolution_calc['Evolution-2023'] = dfd23_f9_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f9_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f9 = pd.DataFrame(pd.merge(dfd17_f9_Revenue_calc, dfd18_f9_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f9 = pd.DataFrame(pd.merge(dfd19_f9_Revenue_calc, dfd21_f9_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f9 = pd.DataFrame(pd.merge(dfd22_f9_Revenue_calc, dfd23_f9_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f9_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f9, df_Revenue_calc_2_f9, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f9Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f9_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f9_Evolution, df_Revenue_calc_3_f9, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f9Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f9 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f9_Evolution, dfd23_f9_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f9 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9]
Concat_REV_count_f1_f9 = pd.concat(ConcatFrames_REV_count_f1_f9)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f9_Registrations_GRDel = pd.DataFrame(filtr_9_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f9_Registrations_GRDel = dfd17_f9_Registrations_GRDel.fillna('Unknown')
dfd17_f9_Registrations_GRDel['Percent-2017'] = (dfd17_f9_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f9_Registrations_GRDel['Percent-2017'] = dfd17_f9_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f9_Registrations_GRDel['7DEvolution-2017'] = dfd17_f9_Registrations_GRDel['Total-2017'] - dfd17_f8_Registrations_GRDel['Total-2017']
print(tab(dfd17_f9_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f9_Registrations_GRDel = pd.DataFrame(filtr_9_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f9_Registrations_GRDel = dfd18_f9_Registrations_GRDel.fillna('Unknown')
dfd18_f9_Registrations_GRDel['Percent-2018'] = (dfd18_f9_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f9_Registrations_GRDel['Percent-2018'] = dfd18_f9_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f9_Registrations_GRDel['7DEvolution-2018'] = dfd18_f9_Registrations_GRDel['Total-2018'] - dfd18_f8_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f9_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f9_Registrations_GRDel = pd.DataFrame(filtr_9_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f9_Registrations_GRDel = dfd19_f9_Registrations_GRDel.fillna('Unknown')
dfd19_f9_Registrations_GRDel['Percent-2019'] = (dfd19_f9_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f9_Registrations_GRDel['Percent-2019'] = dfd19_f9_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f9_Registrations_GRDel['7DEvolution-2019'] = dfd19_f9_Registrations_GRDel['Total-2019'] - dfd19_f8_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f9_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f9_Registrations_GRDel = pd.DataFrame(filtr_9_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f9_Registrations_GRDel = dfd21_f9_Registrations_GRDel.fillna('Unknown')
dfd21_f9_Registrations_GRDel['Percent-2021'] = (dfd21_f9_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f9_Registrations_GRDel['Percent-2021'] = dfd21_f9_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f9_Registrations_GRDel['7DEvolution-2021'] = dfd21_f9_Registrations_GRDel['Total-2021'] - dfd21_f8_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f9_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f9_Registrations_GRDel = pd.DataFrame(filtr_9_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f9_Registrations_GRDel = dfd22_f9_Registrations_GRDel.fillna('Unknown')
dfd22_f9_Registrations_GRDel['Percent-2022'] = (dfd22_f9_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f9_Registrations_GRDel['Percent-2022'] = dfd22_f9_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f9_Registrations_GRDel['7DEvolution-2022'] = dfd22_f9_Registrations_GRDel['Total-2022'] - dfd22_f8_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f9_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_Registrations_GRDel = pd.DataFrame(filtr_9_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f9_Registrations_GRDel = dfd23_f9_Registrations_GRDel.fillna('Unknown')
dfd23_f9_Registrations_GRDel['Percent-2023'] = (dfd23_f9_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f9_Registrations_GRDel['Percent-2023'] = dfd23_f9_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f9_Registrations_GRDel['7DEvolution-2023'] = dfd23_f9_Registrations_GRDel['Total-2023'] - dfd23_f8_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f9_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f9_Registrations_Evol_GRDel = pd.DataFrame(filtr_9_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f9_Registrations_Evol_GRDel = dfd23_f9_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f9_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f9_Registrations_GRDel['Total-2023'] - dfd19_f9_Registrations_GRDel['Total-2019'])/ dfd19_f9_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f9_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f9 = pd.concat([dfd17_f9_Registrations_GRDel, dfd18_f9_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f9 = pd.DataFrame(pd.merge(dfd17_f9_Registrations_GRDel, dfd18_f9_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f9 = pd.DataFrame(pd.merge(dfd19_f9_Registrations_GRDel, dfd21_f9_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f9 = pd.DataFrame(pd.merge(dfd22_f9_Registrations_GRDel, dfd23_f9_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f9 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f9, df_Registrations_GRDel_2_f9, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_9_f9 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f9, df_Registrations_GRDel_3_f9, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f9 = pd.DataFrame(pd.merge(df_Registrations_GRDel_9_f9, dfd23_f9_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f9 = df_Registrations_GRDel_f9[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f9 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9]
Concat_RegGRDel_count_f1_f9 = pd.concat(ConcatFrames_RegGRDel_count_f1_f9)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f9 = filtr_9_df18_GRdel[filtr_9_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f9 = filtr_9_df19_GRdel[filtr_9_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f9 = filtr_9_df21_GRdel[filtr_9_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f9 = filtr_9_df22_GRdel[filtr_9_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f9 = filtr_9_df23_GRdel[filtr_9_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f9.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f9.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a9_AC_RT_GRDel = pd.DataFrame(filtr_9_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f9_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f9.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f9_AC_RT_GRDel['Percent-2018'] = (dfd18_f9_AC_RT_GRDel['ACQ-2018'] / dfd18_f9_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f9_AC_RT_GRDel['Percent-2018'] = dfd18_f9_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f9_AC_RT_GRDel['RET-2018'] = dfd18_a9_AC_RT_GRDel['Total-2018'] - dfd18_f9_AC_RT_GRDel['ACQ-2018']
dfd18_f9_AC_RT_GRDel['Percnt-2018'] = (dfd18_f9_AC_RT_GRDel['RET-2018'] / dfd18_a9_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f9_AC_RT_GRDel['Percnt-2018'] = dfd18_f9_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f9_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a9_AC_RT_GRDel = pd.DataFrame(filtr_9_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f9_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f9.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f9_AC_RT_GRDel['Percent-2019'] = (dfd19_f9_AC_RT_GRDel['ACQ-2019'] / dfd19_f9_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f9_AC_RT_GRDel['Percent-2019'] = dfd19_f9_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f9_AC_RT_GRDel['RET-2019'] = dfd19_a9_AC_RT_GRDel['Total-2019'] - dfd19_f9_AC_RT_GRDel['ACQ-2019']
dfd19_f9_AC_RT_GRDel['Percnt-2019'] = (dfd19_f9_AC_RT_GRDel['RET-2019'] / dfd19_a9_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f9_AC_RT_GRDel['Percnt-2019'] = dfd19_f9_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f9_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a9_AC_RT_GRDel = pd.DataFrame(filtr_9_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f9_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f9.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f9_AC_RT_GRDel['Percent-2021'] = (dfd21_f9_AC_RT_GRDel['ACQ-2021'] / dfd21_f9_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f9_AC_RT_GRDel['Percent-2021'] = dfd21_f9_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f9_AC_RT_GRDel['RET-2021'] = dfd21_a9_AC_RT_GRDel['Total-2021'] - dfd21_f9_AC_RT_GRDel['ACQ-2021']
dfd21_f9_AC_RT_GRDel['Percnt-2021'] = (dfd21_f9_AC_RT_GRDel['RET-2021'] / dfd21_a9_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f9_AC_RT_GRDel['Percnt-2021'] = dfd21_f9_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f9_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a9_AC_RT_GRDel = pd.DataFrame(filtr_9_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f9_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f9.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f9_AC_RT_GRDel['Percent-2022'] = (dfd22_f9_AC_RT_GRDel['ACQ-2022'] / dfd22_f9_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f9_AC_RT_GRDel['Percent-2022'] = dfd22_f9_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f9_AC_RT_GRDel['RET-2022'] = dfd22_a9_AC_RT_GRDel['Total-2022'] - dfd22_f9_AC_RT_GRDel['ACQ-2022']
dfd22_f9_AC_RT_GRDel['Percnt-2022'] = (dfd22_f9_AC_RT_GRDel['RET-2022'] / dfd22_a9_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f9_AC_RT_GRDel['Percnt-2022'] = dfd22_f9_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f9_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a9_AC_RT_GRDel = pd.DataFrame(filtr_9_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f9_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f9.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f9_AC_RT_GRDel['Percent-2023'] = (dfd23_f9_AC_RT_GRDel['ACQ-2023'] / dfd23_f9_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f9_AC_RT_GRDel['Percent-2023'] = dfd23_f9_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f9_AC_RT_GRDel['RET-2023'] = dfd23_a9_AC_RT_GRDel['Total-2023'] - dfd23_f9_AC_RT_GRDel['ACQ-2023']
dfd23_f9_AC_RT_GRDel['Percnt-2023'] = (dfd23_f9_AC_RT_GRDel['RET-2023'] / dfd23_a9_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f9_AC_RT_GRDel['Percnt-2023'] = dfd23_f9_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f9_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f9 = pd.DataFrame(pd.merge_ordered(dfd18_a9_AC_RT_GRDel, dfd18_f9_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f9 = pd.DataFrame(pd.merge_ordered(dfd19_a9_AC_RT_GRDel, dfd19_f9_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f9 = pd.DataFrame(pd.merge_ordered(dfd21_a9_AC_RT_GRDel, dfd21_f9_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f9 = pd.DataFrame(pd.merge_ordered(dfd22_a9_AC_RT_GRDel, dfd22_f9_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_9_f9 = pd.DataFrame(pd.merge_ordered(dfd23_a9_AC_RT_GRDel, dfd23_f9_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f9 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f9, df_AC_ET_GRDel_2_f9, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f9 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f9, df_AC_ET_GRDel_3_f9, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f9 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f9, df_AC_ET_GRDel_4_f9, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f9 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f9, df_AC_ET_GRDel_9_f9, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f9 = df_AC_RT_GRDel_M4_f9[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f9 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9]
Conct_AC_RT_GRDel_f1_f9 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f9)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_9_df17_GRdel = filtr_9_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f9_Revenu_GRDel = pd.DataFrame(filtr_9_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f9_Revenu_GRDel['Percent-2017'] = (dfd17_f9_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f9_Revenu_GRDel['Percent-2017'] = dfd17_f9_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f9_Revenu_GRDel['7DEvolution-2017'] = dfd17_f9_Revenu_GRDel['Total-2017'] - dfd17_f8_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f9_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_9_df18_GRdel = filtr_9_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f9_Revenu_GRDel = pd.DataFrame(filtr_9_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f9_Revenu_GRDel['Percent-2018'] = (dfd18_f9_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f9_Revenu_GRDel['Percent-2018'] = dfd18_f9_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f9_Revenu_GRDel['7DEvolution-2018'] = dfd18_f9_Revenu_GRDel['Total-2018'] - dfd18_f8_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f9_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_9_df19_GRdel = filtr_9_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f9_Revenu_GRDel = pd.DataFrame(filtr_9_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f9_Revenu_GRDel['Percent-2019'] = (dfd19_f9_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f9_Revenu_GRDel['Percent-2019'] = dfd19_f9_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f9_Revenu_GRDel['7DEvolution-2019'] = dfd19_f9_Revenu_GRDel['Total-2019'] - dfd19_f8_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f9_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_9_df21_GRdel = filtr_9_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f9_Revenu_GRDel = pd.DataFrame(filtr_9_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f9_Revenu_GRDel['Percent-2021'] = (dfd21_f9_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f9_Revenu_GRDel['Percent-2021'] = dfd21_f9_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f9_Revenu_GRDel['7DEvolution-2021'] = dfd21_f9_Revenu_GRDel['Total-2021'] - dfd21_f8_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f9_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_9_df22_GRdel = filtr_9_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f9_Revenu_GRDel = pd.DataFrame(filtr_9_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f9_Revenu_GRDel['Percent-2022'] = (dfd22_f9_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f9_Revenu_GRDel['Percent-2022'] = dfd22_f9_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f9_Revenu_GRDel['7DEvolution-2022'] = dfd22_f9_Revenu_GRDel['Total-2022'] - dfd22_f8_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f9_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_9_df23_GRdel = filtr_9_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f9_Revenu_GRDel = pd.DataFrame(filtr_9_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f9_Revenu_GRDel['Percent-2023'] = (dfd23_f9_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f9_Revenu_GRDel['Percent-2023'] = dfd23_f9_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f9_Revenu_GRDel['7DEvolution-2023'] = dfd23_f9_Revenu_GRDel['Total-2023'] - dfd23_f8_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f9_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f9_Revenu_Evlt_GRDel = pd.DataFrame(filtr_9_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f9_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f9_Revenu_GRDel['Total-2023'] - dfd19_f9_Revenu_GRDel['Total-2019'])/ dfd19_f9_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f9_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f9_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f9_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f9 = pd.DataFrame(pd.merge(dfd17_f9_Revenu_GRDel, dfd18_f9_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f9 = pd.DataFrame(pd.merge(dfd19_f9_Revenu_GRDel, dfd21_f9_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f9 = pd.DataFrame(pd.merge(dfd22_f9_Revenu_GRDel, dfd23_f9_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f9 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f9, df_Revenu_GRDel_2_f9, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_9_f9 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f9, df_Revenu_GRDel_3_f9, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f9 = pd.DataFrame(pd.merge(df_Revenu_GRDel_9_f9, dfd23_f9_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f9 = df_Revenu_GRDel_f9[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f9 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9]
Conct_RV_GRDel_f1_f9 = pd.concat(ConcatFra_RV_GRDel_f1_f9)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f9_Profile_count = pd.DataFrame(filtr_9_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f9_Profile_count = dfd17_f9_Profile_count.fillna('Unknown')
dfd17_f9_Profile_count['Percent-2017'] = (dfd17_f9_Profile_count['Total-2017'] / dfd17_f9_Profile_count['Total-2017'].sum()) * 100
dfd17_f9_Profile_count['Percent-2017'] = dfd17_f9_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f9_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f9_Profile_count = pd.DataFrame(filtr_9_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f9_Profile_count = dfd18_f9_Profile_count.fillna('Unknown')
dfd18_f9_Profile_count['Percent-2018'] = (dfd18_f9_Profile_count['Total-2018'] / dfd18_f9_Profile_count['Total-2018'].sum()) * 100
dfd18_f9_Profile_count['Percent-2018'] = dfd18_f9_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f9_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f9_Profile_count = pd.DataFrame(filtr_9_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f9_Profile_count = dfd19_f9_Profile_count.fillna('Unknown')
dfd19_f9_Profile_count['Percent-2019'] = (dfd19_f9_Profile_count['Total-2019'] / dfd19_f9_Profile_count['Total-2019'].sum()) * 100
dfd19_f9_Profile_count['Percent-2019'] = dfd19_f9_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f9_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f9_Profile_count = pd.DataFrame(filtr_9_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f9_Profile_count = dfd21_f9_Profile_count.fillna('Unknown')
dfd21_f9_Profile_count['Percent-2021'] = (dfd21_f9_Profile_count['Total-2021'] / dfd21_f9_Profile_count['Total-2021'].sum()) * 100
dfd21_f9_Profile_count['Percent-2021'] = dfd21_f9_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f9_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f9_Profile_count = pd.DataFrame(filtr_9_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f9_Profile_count = dfd22_f9_Profile_count.fillna('Unknown')
dfd22_f9_Profile_count['Percent-2022'] = (dfd22_f9_Profile_count['Total-2022'] / dfd22_f9_Profile_count['Total-2022'].sum()) * 100
dfd22_f9_Profile_count['Percent-2022'] = dfd22_f9_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f9_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_Profile_count = pd.DataFrame(filtr_9_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f9_Profile_count = dfd23_f9_Profile_count.fillna('Unknown')
dfd23_f9_Profile_count['Percent-2023'] = (dfd23_f9_Profile_count['Total-2023'] / dfd23_f9_Profile_count['Total-2023'].sum()) * 100
dfd23_f9_Profile_count['Percent-2023'] = dfd23_f9_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f9_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f9 = pd.DataFrame(pd.merge(dfd17_f9_Profile_count, dfd18_f9_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f9 = pd.DataFrame(pd.merge(dfd19_f9_Profile_count, dfd21_f9_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f9 = pd.DataFrame(pd.merge(dfd22_f9_Profile_count, dfd23_f9_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f9 = pd.DataFrame(pd.merge(df_Profile_Count_1_f9, df_Profile_Count_2_f9, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f9 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f9, df_Profile_Count_3_f9, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f9 = df_Profile_Count_m2_f9.append(df_Profile_Count_m2_f9.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f9['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f9_Pass_count = pd.DataFrame(filtr_9_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f9_Pass_count = dfd17_f9_Pass_count.fillna('Unknown')
dfd17_f9_Pass_count['Percent-2017'] = (dfd17_f9_Pass_count['Total-2017'] / dfd17_f9_Pass_count['Total-2017'].sum()) * 100
dfd17_f9_Pass_count['Percent-2017'] = dfd17_f9_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f9_Pass_count = pd.DataFrame(filtr_9_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f9_Pass_count = dfd18_f9_Pass_count.fillna('Unknown')
dfd18_f9_Pass_count['Percent-2018'] = (dfd18_f9_Pass_count['Total-2018'] / dfd18_f9_Pass_count['Total-2018'].sum()) * 100
dfd18_f9_Pass_count['Percent-2018'] = dfd18_f9_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f9_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f9_Pass_count = pd.DataFrame(filtr_9_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f9_Pass_count = dfd19_f9_Pass_count.fillna('Unknown')
dfd19_f9_Pass_count['Percent-2019'] = (dfd19_f9_Pass_count['Total-2019'] / dfd19_f9_Pass_count['Total-2019'].sum()) * 100
dfd19_f9_Pass_count['Percent-2019'] = dfd19_f9_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f9_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f9_Pass_count = pd.DataFrame(filtr_9_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f9_Pass_count = dfd21_f9_Pass_count.fillna('Unknown')
dfd21_f9_Pass_count['Percent-2021'] = (dfd21_f9_Pass_count['Total-2021'] / dfd21_f9_Pass_count['Total-2021'].sum()) * 100
dfd21_f9_Pass_count['Percent-2021'] = dfd21_f9_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f9_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f9_Pass_count = pd.DataFrame(filtr_9_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f9_Pass_count = dfd22_f9_Pass_count.fillna('Unknown')
dfd22_f9_Pass_count['Percent-2022'] = (dfd22_f9_Pass_count['Total-2022'] / dfd22_f9_Pass_count['Total-2022'].sum()) * 100
dfd22_f9_Pass_count['Percent-2022'] = dfd22_f9_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f9_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_Pass_count = pd.DataFrame(filtr_9_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f9_Pass_count = dfd23_f9_Pass_count.fillna('Unknown')
dfd23_f9_Pass_count['Percent-2023'] = (dfd23_f9_Pass_count['Total-2023'] / dfd23_f9_Pass_count['Total-2023'].sum()) * 100
dfd23_f9_Pass_count['Percent-2023'] = dfd23_f9_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f9_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f9 = pd.DataFrame(pd.merge(dfd17_f9_Pass_count, dfd18_f9_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f9 = pd.DataFrame(pd.merge(dfd19_f9_Pass_count, dfd21_f9_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f9 = pd.DataFrame(pd.merge(dfd22_f9_Pass_count, dfd23_f9_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f9 = pd.DataFrame(pd.merge(df_Pass_Count_1_f9, df_Pass_Count_2_f9, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f9 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f9, df_Pass_Count_3_f9, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f9 = df_Pass_Count_m2_f9.append(df_Pass_Count_m2_f9.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f9['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f9_Attendees_Country_count = pd.DataFrame(filtr_9_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f9_Attendees_Country_count = dfd17_f9_Attendees_Country_count.fillna('Unknown')
dfd17_f9_Attendees_Country_count['Percent-2017'] = (dfd17_f9_Attendees_Country_count['Total-2017'] / dfd17_f9_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f9_Attendees_Country_count['Percent-2017'] = dfd17_f9_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f9_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f9_Attendees_Country_count = pd.DataFrame(filtr_9_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f9_Attendees_Country_count = dfd18_f9_Attendees_Country_count.fillna('Unknown')
dfd18_f9_Attendees_Country_count['Percent-2018'] = (dfd18_f9_Attendees_Country_count['Total-2018'] / dfd18_f9_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f9_Attendees_Country_count['Percent-2018'] = dfd18_f9_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f9_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f9_Attendees_Country_count = pd.DataFrame(filtr_9_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f9_Attendees_Country_count = dfd19_f9_Attendees_Country_count.fillna('Unknown')
dfd19_f9_Attendees_Country_count['Percent-2019'] = (dfd19_f9_Attendees_Country_count['Total-2019'] / dfd19_f9_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f9_Attendees_Country_count['Percent-2019'] = dfd19_f9_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f9_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f9_Attendees_Country_count = pd.DataFrame(filtr_9_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f9_Attendees_Country_count = dfd21_f9_Attendees_Country_count.fillna('Unknown')
dfd21_f9_Attendees_Country_count['Percent-2021'] = (dfd21_f9_Attendees_Country_count['Total-2021'] / dfd21_f9_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f9_Attendees_Country_count['Percent-2021'] = dfd21_f9_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f9_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f9_Attendees_Country_count = pd.DataFrame(filtr_9_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f9_Attendees_Country_count = dfd22_f9_Attendees_Country_count.fillna('Unknown')
dfd22_f9_Attendees_Country_count['Percent-2022'] = (dfd22_f9_Attendees_Country_count['Total-2022'] / dfd22_f9_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f9_Attendees_Country_count['Percent-2022'] = dfd22_f9_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f9_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_Attendees_Country_count = pd.DataFrame(filtr_9_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f9_Attendees_Country_count = dfd23_f9_Attendees_Country_count.fillna('Unknown')
dfd23_f9_Attendees_Country_count['Percent-2023'] = (dfd23_f9_Attendees_Country_count['Total-2023'] / dfd23_f9_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f9_Attendees_Country_count['Percent-2023'] = dfd23_f9_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f9_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f9 = pd.DataFrame(pd.merge(dfd17_f9_Attendees_Country_count, dfd18_f9_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f9 = pd.DataFrame(pd.merge(dfd19_f9_Attendees_Country_count, dfd21_f9_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f9 = pd.DataFrame(pd.merge(dfd22_f9_Attendees_Country_count, dfd23_f9_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f9 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f9, dfAttendees_Country_Count_2_f9, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f9.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f9 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f9, dfAttendees_Country_Count_3_f9, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f9 = dfAttendees_Country_Count_m2_f9.append(dfAttendees_Country_Count_m2_f9.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f9['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f9_ATTENDEES_AREAS_count = pd.DataFrame(filtr_9_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f9_ATTENDEES_AREAS_count = dfd17_f9_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f9_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f9_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f9_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f9_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f9_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f9_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f9_ATTENDEES_AREAS_count = pd.DataFrame(filtr_9_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f9_ATTENDEES_AREAS_count = dfd18_f9_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f9_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f9_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f9_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f9_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f9_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f9_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f9_ATTENDEES_AREAS_count = pd.DataFrame(filtr_9_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f9_ATTENDEES_AREAS_count = dfd19_f9_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f9_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f9_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f9_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f9_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f9_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f9_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f9_ATTENDEES_AREAS_count = pd.DataFrame(filtr_9_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f9_ATTENDEES_AREAS_count = dfd21_f9_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f9_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f9_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f9_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f9_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f9_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f9_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f9_ATTENDEES_AREAS_count = pd.DataFrame(filtr_9_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f9_ATTENDEES_AREAS_count = dfd22_f9_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f9_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f9_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f9_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f9_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f9_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f9_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_ATTENDEES_AREAS_count = pd.DataFrame(filtr_9_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f9_ATTENDEES_AREAS_count = dfd23_f9_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f9_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f9_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f9_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f9_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f9_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f9_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f9 = pd.DataFrame(pd.merge(dfd17_f9_ATTENDEES_AREAS_count, dfd18_f9_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f9 = pd.DataFrame(pd.merge(dfd19_f9_ATTENDEES_AREAS_count, dfd21_f9_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f9 = pd.DataFrame(pd.merge(dfd22_f9_ATTENDEES_AREAS_count, dfd23_f9_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f9.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f9 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f9, df_ATTENDEES_AREAS_count_2_f9, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f9 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f9, df_ATTENDEES_AREAS_count_3_f9, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f9 = df_ATTENDEES_AREAS_count_m2_f9.append(df_ATTENDEES_AREAS_count_m2_f9.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f9['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f9_Attendees_Specialty_count = pd.DataFrame(filtr_9_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f9_Attendees_Specialty_count = dfd17_f9_Attendees_Specialty_count.fillna('Unknown')
dfd17_f9_Attendees_Specialty_count['Percent-2017'] = (dfd17_f9_Attendees_Specialty_count['Total-2017'] / dfd17_f9_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f9_Attendees_Specialty_count['Percent-2017'] = dfd17_f9_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f9_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f9_Attendees_Specialty_count = pd.DataFrame(filtr_9_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f9_Attendees_Specialty_count = dfd18_f9_Attendees_Specialty_count.fillna('Unknown')
dfd18_f9_Attendees_Specialty_count['Percent-2018'] = (dfd18_f9_Attendees_Specialty_count['Total-2018'] / dfd18_f9_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f9_Attendees_Specialty_count['Percent-2018'] = dfd18_f9_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f9_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f9_Attendees_Specialty_count = pd.DataFrame(filtr_9_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f9_Attendees_Specialty_count = dfd19_f9_Attendees_Specialty_count.fillna('Unknown')
dfd19_f9_Attendees_Specialty_count['Percent-2019'] = (dfd19_f9_Attendees_Specialty_count['Total-2019'] / dfd19_f9_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f9_Attendees_Specialty_count['Percent-2019'] = dfd19_f9_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f9_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f9_Attendees_Specialty_count = pd.DataFrame(filtr_9_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f9_Attendees_Specialty_count = dfd21_f9_Attendees_Specialty_count.fillna('Unknown')
dfd21_f9_Attendees_Specialty_count['Percent-2021'] = (dfd21_f9_Attendees_Specialty_count['Total-2021'] / dfd21_f9_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f9_Attendees_Specialty_count['Percent-2021'] = dfd21_f9_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f9_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f9_Attendees_Specialty_count = pd.DataFrame(filtr_9_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f9_Attendees_Specialty_count = dfd22_f9_Attendees_Specialty_count.fillna('Unknown')
dfd22_f9_Attendees_Specialty_count['Percent-2022'] = (dfd22_f9_Attendees_Specialty_count['Total-2022'] / dfd22_f9_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f9_Attendees_Specialty_count['Percent-2022'] = dfd22_f9_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f9_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f9_Attendees_Specialty_count = pd.DataFrame(filtr_9_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f9_Attendees_Specialty_count = dfd23_f9_Attendees_Specialty_count.fillna('Unknown')
dfd23_f9_Attendees_Specialty_count['Percent-2023'] = (dfd23_f9_Attendees_Specialty_count['Total-2023'] / dfd23_f9_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f9_Attendees_Specialty_count['Percent-2023'] = dfd23_f9_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f9_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f9 = pd.DataFrame(pd.merge(dfd17_f9_Attendees_Specialty_count, dfd18_f9_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f9 = pd.DataFrame(pd.merge(dfd19_f9_Attendees_Specialty_count, dfd21_f9_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f9 = pd.DataFrame(pd.merge(dfd22_f9_Attendees_Specialty_count, dfd23_f9_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f9 = pd.DataFrame(pd.merge(df_Specialty_count_1_f9, df_Specialty_count_2_f9, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f9.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f9 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f9, df_Specialty_count_3_f9, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f9 = df_Specialty_count_m2_f9.append(df_Specialty_count_m2_f9.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f9['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f9['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f9['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f9 = Concat_Registrations_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f9['Total-2017'] = Concat_Registrations_count_f1_f9['Total-2017'].astype(int)
Concat_Registrations_count_f1_f9['Percent-2017'] = Concat_Registrations_count_f1_f9['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f9['7DEvolution-2017'] = Concat_Registrations_count_f1_f9['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f9['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f9['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f9 = Concat_Registrations_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f9['Total-2018'] = Concat_Registrations_count_f1_f9['Total-2018'].astype(int)
Concat_Registrations_count_f1_f9['Percent-2018'] = Concat_Registrations_count_f1_f9['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f9['7DEvolution-2018'] = Concat_Registrations_count_f1_f9['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f9['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f9['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f9 = Concat_Registrations_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f9['Total-2019'] = Concat_Registrations_count_f1_f9['Total-2019'].astype(int)
Concat_Registrations_count_f1_f9['Percent-2019'] = Concat_Registrations_count_f1_f9['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f9['7DEvolution-2019'] = Concat_Registrations_count_f1_f9['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f9['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f9['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f9 = Concat_Registrations_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f9['Total-2021'] = Concat_Registrations_count_f1_f9['Total-2021'].astype(int)
Concat_Registrations_count_f1_f9['Percent-2021'] = Concat_Registrations_count_f1_f9['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f9['7DEvolution-2021'] = Concat_Registrations_count_f1_f9['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f9['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f9['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f9 = Concat_Registrations_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f9['Total-2022'] = Concat_Registrations_count_f1_f9['Total-2022'].astype(int)
Concat_Registrations_count_f1_f9['Percent-2022'] = Concat_Registrations_count_f1_f9['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f9['7DEvolution-2022'] = Concat_Registrations_count_f1_f9['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f9['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f9['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f9 = Concat_Registrations_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f9['Total-2023'] = Concat_Registrations_count_f1_f9['Total-2023'].astype(int)
Concat_Registrations_count_f1_f9['Percent-2023'] = Concat_Registrations_count_f1_f9['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f9['7DEvolution-2023'] = Concat_Registrations_count_f1_f9['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f9['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f9['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f9 = Concat_ACQRET_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f9['Total-2018'] = Concat_ACQRET_count_f1_f9['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f9['ACQ-2018'] = Concat_ACQRET_count_f1_f9['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f9['Percent-2018'] = Concat_ACQRET_count_f1_f9['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f9['RET-2018'] = Concat_ACQRET_count_f1_f9['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f9['Percnt-2018'] = Concat_ACQRET_count_f1_f9['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f9['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f9['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f9 = Concat_ACQRET_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f9['Total-2019'] = Concat_ACQRET_count_f1_f9['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f9['ACQ-2019'] = Concat_ACQRET_count_f1_f9['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f9['Percent-2019'] = Concat_ACQRET_count_f1_f9['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f9['RET-2019'] = Concat_ACQRET_count_f1_f9['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f9['Percnt-2019'] = Concat_ACQRET_count_f1_f9['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f9['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f9['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f9 = Concat_ACQRET_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f9['Total-2021'] = Concat_ACQRET_count_f1_f9['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f9['ACQ-2021'] = Concat_ACQRET_count_f1_f9['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f9['Percent-2021'] = Concat_ACQRET_count_f1_f9['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f9['RET-2021'] = Concat_ACQRET_count_f1_f9['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f9['Percnt-2021'] = Concat_ACQRET_count_f1_f9['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f9['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f9['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f9 = Concat_ACQRET_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f9['Total-2022'] = Concat_ACQRET_count_f1_f9['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f9['ACQ-2022'] = Concat_ACQRET_count_f1_f9['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f9['Percent-2022'] = Concat_ACQRET_count_f1_f9['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f9['RET-2022'] = Concat_ACQRET_count_f1_f9['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f9['Percnt-2022'] = Concat_ACQRET_count_f1_f9['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f9['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f9['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f9 = Concat_ACQRET_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f9['Total-2023'] = Concat_ACQRET_count_f1_f9['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f9['ACQ-2023'] = Concat_ACQRET_count_f1_f9['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f9['Percent-2023'] = Concat_ACQRET_count_f1_f9['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f9['RET-2023'] = Concat_ACQRET_count_f1_f9['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f9['Percnt-2023'] = Concat_ACQRET_count_f1_f9['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f9['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f9['Total-2017'],errors='coerce')
Concat_REV_count_f1_f9 = Concat_REV_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f9['Total-2017'] = Concat_REV_count_f1_f9['Total-2017'].astype(int)
Concat_REV_count_f1_f9['Percent-2017'] = Concat_REV_count_f1_f9['Percent-2017'].astype(float)
Concat_REV_count_f1_f9['7DEvolution-2017'] = Concat_REV_count_f1_f9['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f9['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f9['Total-2018'],errors='coerce')
Concat_REV_count_f1_f9 = Concat_REV_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f9['Total-2018'] = Concat_REV_count_f1_f9['Total-2018'].astype(int)
Concat_REV_count_f1_f9['Percent-2018'] = Concat_REV_count_f1_f9['Percent-2018'].astype(float)
Concat_REV_count_f1_f9['7DEvolution-2018'] = Concat_REV_count_f1_f9['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f9['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f9['Total-2019'],errors='coerce')
Concat_REV_count_f1_f9 = Concat_REV_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f9['Total-2019'] = Concat_REV_count_f1_f9['Total-2019'].astype(int)
Concat_REV_count_f1_f9['Percent-2019'] = Concat_REV_count_f1_f9['Percent-2019'].astype(float)
Concat_REV_count_f1_f9['7DEvolution-2019'] = Concat_REV_count_f1_f9['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f9['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f9['Total-2022'],errors='coerce')
Concat_REV_count_f1_f9 = Concat_REV_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f9['Total-2022'] = Concat_REV_count_f1_f9['Total-2022'].astype(int)
Concat_REV_count_f1_f9['Percent-2022'] = Concat_REV_count_f1_f9['Percent-2022'].astype(float)
Concat_REV_count_f1_f9['7DEvolution-2022'] = Concat_REV_count_f1_f9['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f9['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f9['Total-2023'],errors='coerce')
Concat_REV_count_f1_f9 = Concat_REV_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f9['Total-2023'] = Concat_REV_count_f1_f9['Total-2023'].astype(int)
Concat_REV_count_f1_f9['Percent-2023'] = Concat_REV_count_f1_f9['Percent-2023'].astype(float)
Concat_REV_count_f1_f9['7DEvolution-2023'] = Concat_REV_count_f1_f9['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f9['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f9['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f9 = Concat_RegGRDel_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f9['Total-2017'] = Concat_RegGRDel_count_f1_f9['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f9['Percent-2017'] = Concat_RegGRDel_count_f1_f9['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f9['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f9['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f9['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f9['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f9 = Concat_RegGRDel_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f9['Total-2018'] = Concat_RegGRDel_count_f1_f9['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f9['Percent-2018'] = Concat_RegGRDel_count_f1_f9['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f9['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f9['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f9['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f9['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f9 = Concat_RegGRDel_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f9['Total-2019'] = Concat_RegGRDel_count_f1_f9['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f9['Percent-2019'] = Concat_RegGRDel_count_f1_f9['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f9['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f9['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f9['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f9['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f9 = Concat_RegGRDel_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f9['Total-2021'] = Concat_RegGRDel_count_f1_f9['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f9['Percent-2021'] = Concat_RegGRDel_count_f1_f9['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f9['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f9['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f9['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f9['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f9 = Concat_RegGRDel_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f9['Total-2022'] = Concat_RegGRDel_count_f1_f9['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f9['Percent-2022'] = Concat_RegGRDel_count_f1_f9['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f9['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f9['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f9['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f9['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f9 = Concat_RegGRDel_count_f1_f9.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f9['Total-2023'] = Concat_RegGRDel_count_f1_f9['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f9['Percent-2023'] = Concat_RegGRDel_count_f1_f9['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f9['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f9['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f9['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f9['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f9 = Conct_AC_RT_GRDel_f1_f9.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f9['Total-2018'] = Conct_AC_RT_GRDel_f1_f9['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f9['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f9['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f9['Percent-2018'] = Conct_AC_RT_GRDel_f1_f9['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f9['RET-2018'] = Conct_AC_RT_GRDel_f1_f9['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f9['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f9['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f9['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f9['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f9 = Conct_AC_RT_GRDel_f1_f9.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f9['Total-2019'] = Conct_AC_RT_GRDel_f1_f9['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f9['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f9['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f9['Percent-2019'] = Conct_AC_RT_GRDel_f1_f9['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f9['RET-2019'] = Conct_AC_RT_GRDel_f1_f9['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f9['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f9['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f9['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f9['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f9 = Conct_AC_RT_GRDel_f1_f9.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f9['Total-2021'] = Conct_AC_RT_GRDel_f1_f9['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f9['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f9['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f9['Percent-2021'] = Conct_AC_RT_GRDel_f1_f9['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f9['RET-2021'] = Conct_AC_RT_GRDel_f1_f9['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f9['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f9['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f9['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f9['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f9 = Conct_AC_RT_GRDel_f1_f9.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f9['Total-2022'] = Conct_AC_RT_GRDel_f1_f9['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f9['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f9['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f9['Percent-2022'] = Conct_AC_RT_GRDel_f1_f9['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f9['RET-2022'] = Conct_AC_RT_GRDel_f1_f9['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f9['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f9['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f9['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f9['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f9 = Conct_AC_RT_GRDel_f1_f9.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f9['Total-2023'] = Conct_AC_RT_GRDel_f1_f9['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f9['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f9['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f9['Percent-2023'] = Conct_AC_RT_GRDel_f1_f9['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f9['RET-2023'] = Conct_AC_RT_GRDel_f1_f9['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f9['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f9['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f9['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f9['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f9 = Conct_RV_GRDel_f1_f9.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f9['Total-2017'] = Conct_RV_GRDel_f1_f9['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f9['Percent-2017'] = Conct_RV_GRDel_f1_f9['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f9['7DEvolution-2017'] = Conct_RV_GRDel_f1_f9['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f9['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f9['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f9 = Conct_RV_GRDel_f1_f9.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f9['Total-2018'] = Conct_RV_GRDel_f1_f9['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f9['Percent-2018'] = Conct_RV_GRDel_f1_f9['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f9['7DEvolution-2018'] = Conct_RV_GRDel_f1_f9['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f9['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f9['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f9 = Conct_RV_GRDel_f1_f9.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f9['Total-2019'] = Conct_RV_GRDel_f1_f9['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f9['Percent-2019'] = Conct_RV_GRDel_f1_f9['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f9['7DEvolution-2019'] = Conct_RV_GRDel_f1_f9['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f9['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f9['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f9 = Conct_RV_GRDel_f1_f9.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f9['Total-2022'] = Conct_RV_GRDel_f1_f9['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f9['Percent-2022'] = Conct_RV_GRDel_f1_f9['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f9['7DEvolution-2022'] = Conct_RV_GRDel_f1_f9['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f9['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f9['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f9 = Conct_RV_GRDel_f1_f9.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f9['Total-2023'] = Conct_RV_GRDel_f1_f9['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f9['Percent-2023'] = Conct_RV_GRDel_f1_f9['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f9['7DEvolution-2023'] = Conct_RV_GRDel_f1_f9['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f9['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f9['Total-2017'],errors='coerce')
df_Profile_Count_m2_f9 = df_Profile_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f9['Total-2017'] = df_Profile_Count_m2_f9['Total-2017'].astype(int)
df_Profile_Count_m2_f9['Percent-2017'] = df_Profile_Count_m2_f9['Percent-2017'].astype(float)

df_Profile_Count_m2_f9['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f9['Total-2018'],errors='coerce')
df_Profile_Count_m2_f9 = df_Profile_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f9['Total-2018'] = df_Profile_Count_m2_f9['Total-2018'].astype(int)
df_Profile_Count_m2_f9['Percent-2018'] = df_Profile_Count_m2_f9['Percent-2018'].astype(float)

df_Profile_Count_m2_f9['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f9['Total-2019'],errors='coerce')
df_Profile_Count_m2_f9 = df_Profile_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f9['Total-2019'] = df_Profile_Count_m2_f9['Total-2019'].astype(int)
df_Profile_Count_m2_f9['Percent-2019'] = df_Profile_Count_m2_f9['Percent-2019'].astype(float)

df_Profile_Count_m2_f9['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f9['Total-2021'],errors='coerce')
df_Profile_Count_m2_f9 = df_Profile_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f9['Total-2021'] = df_Profile_Count_m2_f9['Total-2021'].astype(int)
df_Profile_Count_m2_f9['Percent-2021'] = df_Profile_Count_m2_f9['Percent-2021'].astype(float)

df_Profile_Count_m2_f9['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f9['Total-2022'],errors='coerce')
df_Profile_Count_m2_f9 = df_Profile_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f9['Total-2022'] = df_Profile_Count_m2_f9['Total-2022'].astype(int)
df_Profile_Count_m2_f9['Percent-2022'] = df_Profile_Count_m2_f9['Percent-2022'].astype(float)

df_Profile_Count_m2_f9['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f9['Total-2023'],errors='coerce')
df_Profile_Count_m2_f9 = df_Profile_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f9['Total-2023'] = df_Profile_Count_m2_f9['Total-2023'].astype(int)
df_Profile_Count_m2_f9['Percent-2023'] = df_Profile_Count_m2_f9['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f9['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f9['Total-2017'],errors='coerce')
df_Pass_Count_m2_f9 = df_Pass_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f9['Total-2017'] = df_Pass_Count_m2_f9['Total-2017'].astype(int)
df_Pass_Count_m2_f9['Percent-2017'] = df_Pass_Count_m2_f9['Percent-2017'].astype(float)

df_Pass_Count_m2_f9['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f9['Total-2018'],errors='coerce')
df_Pass_Count_m2_f9 = df_Pass_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f9['Total-2018'] = df_Pass_Count_m2_f9['Total-2018'].astype(int)
df_Pass_Count_m2_f9['Percent-2018'] = df_Pass_Count_m2_f9['Percent-2018'].astype(float)

df_Pass_Count_m2_f9['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f9['Total-2019'],errors='coerce')
df_Pass_Count_m2_f9 = df_Pass_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f9['Total-2019'] = df_Pass_Count_m2_f9['Total-2019'].astype(int)
df_Pass_Count_m2_f9['Percent-2019'] = df_Pass_Count_m2_f9['Percent-2019'].astype(float)

df_Pass_Count_m2_f9['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f9['Total-2021'],errors='coerce')
df_Pass_Count_m2_f9 = df_Pass_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f9['Total-2021'] = df_Pass_Count_m2_f9['Total-2021'].astype(int)
df_Pass_Count_m2_f9['Percent-2021'] = df_Pass_Count_m2_f9['Percent-2021'].astype(float)

df_Pass_Count_m2_f9['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f9['Total-2022'],errors='coerce')
df_Pass_Count_m2_f9 = df_Pass_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f9['Total-2022'] = df_Pass_Count_m2_f9['Total-2022'].astype(int)
df_Pass_Count_m2_f9['Percent-2022'] = df_Pass_Count_m2_f9['Percent-2022'].astype(float)

df_Pass_Count_m2_f9['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f9['Total-2023'],errors='coerce')
df_Pass_Count_m2_f9 = df_Pass_Count_m2_f9.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f9['Total-2023'] = df_Pass_Count_m2_f9['Total-2023'].astype(int)
df_Pass_Count_m2_f9['Percent-2023'] = df_Pass_Count_m2_f9['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f9['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f9['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f9 = dfAttendees_Country_Count_m2_f9.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f9['Total-2017'] = dfAttendees_Country_Count_m2_f9['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f9['Percent-2017'] = dfAttendees_Country_Count_m2_f9['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f9['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f9['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f9 = dfAttendees_Country_Count_m2_f9.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f9['Total-2018'] = dfAttendees_Country_Count_m2_f9['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f9['Percent-2018'] = dfAttendees_Country_Count_m2_f9['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f9['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f9['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f9 = dfAttendees_Country_Count_m2_f9.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f9['Total-2019'] = dfAttendees_Country_Count_m2_f9['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f9['Percent-2019'] = dfAttendees_Country_Count_m2_f9['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f9['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f9['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f9 = dfAttendees_Country_Count_m2_f9.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f9['Total-2021'] = dfAttendees_Country_Count_m2_f9['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f9['Percent-2021'] = dfAttendees_Country_Count_m2_f9['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f9['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f9['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f9 = dfAttendees_Country_Count_m2_f9.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f9['Total-2022'] = dfAttendees_Country_Count_m2_f9['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f9['Percent-2022'] = dfAttendees_Country_Count_m2_f9['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f9['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f9['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f9 = dfAttendees_Country_Count_m2_f9.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f9['Total-2023'] = dfAttendees_Country_Count_m2_f9['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f9['Percent-2023'] = dfAttendees_Country_Count_m2_f9['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f9['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f9['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f9 = df_ATTENDEES_AREAS_count_m2_f9.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f9['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f9['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f9['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f9['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f9['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f9['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f9 = df_ATTENDEES_AREAS_count_m2_f9.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f9['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f9['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f9['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f9['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f9['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f9['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f9 = df_ATTENDEES_AREAS_count_m2_f9.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f9['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f9['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f9['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f9['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f9['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f9['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f9 = df_ATTENDEES_AREAS_count_m2_f9.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f9['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f9['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f9['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f9['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f9['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f9['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f9 = df_ATTENDEES_AREAS_count_m2_f9.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f9['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f9['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f9['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f9['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f9['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f9['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f9 = df_ATTENDEES_AREAS_count_m2_f9.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f9['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f9['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f9['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f9['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f9['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f9['Total-2017'],errors='coerce')
df_Specialty_count_m2_f9 = df_Specialty_count_m2_f9.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f9['Total-2017'] = df_Specialty_count_m2_f9['Total-2017'].astype(int)
df_Specialty_count_m2_f9['Percent-2017'] = df_Specialty_count_m2_f9['Percent-2017'].astype(float)

df_Specialty_count_m2_f9['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f9['Total-2018'],errors='coerce')
df_Specialty_count_m2_f9 = df_Specialty_count_m2_f9.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f9['Total-2018'] = df_Specialty_count_m2_f9['Total-2018'].astype(int)
df_Specialty_count_m2_f9['Percent-2018'] = df_Specialty_count_m2_f9['Percent-2018'].astype(float)

df_Specialty_count_m2_f9['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f9['Total-2019'],errors='coerce')
df_Specialty_count_m2_f9 = df_Specialty_count_m2_f9.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f9['Total-2019'] = df_Specialty_count_m2_f9['Total-2019'].astype(int)
df_Specialty_count_m2_f9['Percent-2019'] = df_Specialty_count_m2_f9['Percent-2019'].astype(float)

df_Specialty_count_m2_f9['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f9['Total-2021'],errors='coerce')
df_Specialty_count_m2_f9 = df_Specialty_count_m2_f9.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f9['Total-2021'] = df_Specialty_count_m2_f9['Total-2021'].astype(int)
df_Specialty_count_m2_f9['Percent-2021'] = df_Specialty_count_m2_f9['Percent-2021'].astype(float)

df_Specialty_count_m2_f9['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f9['Total-2022'],errors='coerce')
df_Specialty_count_m2_f9 = df_Specialty_count_m2_f9.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f9['Total-2022'] = df_Specialty_count_m2_f9['Total-2022'].astype(int)
df_Specialty_count_m2_f9['Percent-2022'] = df_Specialty_count_m2_f9['Percent-2022'].astype(float)

df_Specialty_count_m2_f9['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f9['Total-2023'],errors='coerce')
df_Specialty_count_m2_f9 = df_Specialty_count_m2_f9.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f9['Total-2023'] = df_Specialty_count_m2_f9['Total-2023'].astype(int)
df_Specialty_count_m2_f9['Percent-2023'] = df_Specialty_count_m2_f9['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f9.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f9.dtypes)
#print(df_Specialty_count_m2_f9.dtypes)

#print(dfAttendees_Country_Count_m2_f9.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f9.dtypes)
#print(df_Specialty_count_m2_f9.dtypes)

# EXCEL FILE
writerf9 = pd.ExcelWriter(outputExcelFile_f9, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f9.to_excel\
    (writerf9, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f9.to_excel\
    (writerf9, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f9.to_excel\
    (writerf9, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f9.to_excel\
    (writerf9, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f9.to_excel\
    (writerf9, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f9.to_excel\
    (writerf9, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f9.to_excel\
    (writerf9, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f9.to_excel\
    (writerf9, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f9.to_excel\
    (writerf9, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f9.to_excel\
    (writerf9, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f9.to_excel\
    (writerf9, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf9.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f9)

workbook.save(outputExcelFile_f9)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 133 days**********************************************')
print('************************************End of 133 days**********************************************')
print('************************************End of 133 days**********************************************')
print('************************************End of 133 days**********************************************')
print('************************************End of 133 days**********************************************')
print('************************************End of 133 days**********************************************')
print('************************************End of 133 days**********************************************')
print('************************************End of 133 days**********************************************')
print('************************************End of 133 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f10_Registrations_count = pd.DataFrame(filter_10_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f10_Registrations_count = dfd17_f10_Registrations_count.fillna('Unknown')
dfd17_f10_Registrations_count['Percent-2017'] = (dfd17_f10_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f10_Registrations_count['Percent-2017'] = dfd17_f10_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f10_Registrations_count['7DEvolution-2017'] = dfd17_f10_Registrations_count['Total-2017'] - dfd17_f9_Registrations_count['Total-2017']
#print(tab(dfd17_f10_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f10_Registrations_count = pd.DataFrame(filter_10_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f10_Registrations_count = dfd18_f10_Registrations_count.fillna('Unknown')
dfd18_f10_Registrations_count['Percent-2018'] = (dfd18_f10_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f10_Registrations_count['Percent-2018'] = dfd18_f10_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f10_Registrations_count['7DEvolution-2018'] = dfd18_f10_Registrations_count['Total-2018'] - dfd18_f9_Registrations_count['Total-2018']
#print(tab(dfd18_f10_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f10_Registrations_count = pd.DataFrame(filter_10_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f10_Registrations_count = dfd19_f10_Registrations_count.fillna('Unknown')
dfd19_f10_Registrations_count['Percent-2019'] = (dfd19_f10_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f10_Registrations_count['Percent-2019'] = dfd19_f10_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f10_Registrations_count['7DEvolution-2019'] = dfd19_f10_Registrations_count['Total-2019'] - dfd19_f9_Registrations_count['Total-2019']
#print(tab(dfd19_f10_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f10_Registrations_count = pd.DataFrame(filter_10_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f10_Registrations_count = dfd21_f10_Registrations_count.fillna('Unknown')
dfd21_f10_Registrations_count['Percent-2021'] = (dfd21_f10_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f10_Registrations_count['Percent-2021'] = dfd21_f10_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f10_Registrations_count['7DEvolution-2021'] = dfd21_f10_Registrations_count['Total-2021'] - dfd21_f9_Registrations_count['Total-2021']
#print(tab(dfd21_f10_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f10_Registrations_count = pd.DataFrame(filter_10_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f10_Registrations_count = dfd22_f10_Registrations_count.fillna('Unknown')
dfd22_f10_Registrations_count['Percent-2022'] = (dfd22_f10_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f10_Registrations_count['Percent-2022'] = dfd22_f10_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f10_Registrations_count['7DEvolution-2022'] = dfd22_f10_Registrations_count['Total-2022'] - dfd22_f9_Registrations_count['Total-2022']
#print(tab(dfd22_f10_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_Registrations_count = pd.DataFrame(filter_10_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f10_Registrations_count = dfd23_f10_Registrations_count.fillna('Unknown')
dfd23_f10_Registrations_count['Percent-2023'] = (dfd23_f10_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f10_Registrations_count['Percent-2023'] = dfd23_f10_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f10_Registrations_count['7DEvolution-2023'] = dfd23_f10_Registrations_count['Total-2023'] - dfd23_f9_Registrations_count['Total-2023']
#print(tab(dfd23_f10_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f10_RegistrationsEvolution_count = pd.DataFrame(filter_10_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f10_RegistrationsEvolution_count = dfd23_f10_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f10_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f10_Registrations_count['Total-2023'] - dfd19_f10_Registrations_count['Total-2019'])/ dfd19_f10_Registrations_count['Total-2019'].sum()) * 100
dfd23_f10_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f10_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f10_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f10 = pd.DataFrame(pd.merge(dfd17_f10_Registrations_count, dfd18_f10_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f10 = pd.DataFrame(pd.merge(dfd19_f10_Registrations_count, dfd21_f10_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f10 = pd.DataFrame(pd.merge(dfd22_f10_Registrations_count, dfd23_f10_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f10 = pd.DataFrame(pd.merge(df_Registrations_count_1_f10, df_Registrations_count_2_f10, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f10 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f10, df_Registrations_count_3_f10, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f10 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f10, dfd23_f10_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f10 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10]
Concat_Registrations_count_f1_f10 = pd.concat(ConcatFrames_Registrations_count_f1_f10)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f10  = ConcatFrames_Registrations_count_f1_f10.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f10.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f10 = filter_10_df18[filter_10_df18['New customer'] == 1]
df_NewCustomer_df19_f10 = filter_10_df19[filter_10_df19['New customer'] == 1]
df_NewCustomer_df21_f10 = filter_10_df21[filter_10_df21['New customer'] == 1]
df_NewCustomer_df22_f10 = filter_10_df22[filter_10_df22['New customer'] == 1]
df_NewCustomer_df23_f10 = filter_10_df23[filter_10_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f10.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f10.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f10.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a10_ACQRET_count = pd.DataFrame(filter_10_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f10_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f10.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f10_ACQRET_count['Percent-2018'] = (dfd18_f10_ACQRET_count['ACQ-2018'] / dfd18_f10_Registrations_count['Total-2018'].sum()) * 100
dfd18_f10_ACQRET_count['Percent-2018'] = dfd18_f10_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f10_ACQRET_count['RET-2018'] = dfd18_a10_ACQRET_count['Total-2018'] - dfd18_f10_ACQRET_count['ACQ-2018']
dfd18_f10_ACQRET_count['Percnt-2018'] = (dfd18_f10_ACQRET_count['RET-2018'] / dfd18_a10_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f10_ACQRET_count['Percnt-2018'] = dfd18_f10_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f10_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a10_ACQRET_count = pd.DataFrame(filter_10_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f10_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f10.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f10_ACQRET_count['Percent-2019'] = (dfd19_f10_ACQRET_count['ACQ-2019'] / dfd19_f10_Registrations_count['Total-2019'].sum()) * 100
dfd19_f10_ACQRET_count['Percent-2019'] = dfd19_f10_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f10_ACQRET_count['RET-2019'] = dfd19_a10_ACQRET_count['Total-2019'] - dfd19_f10_ACQRET_count['ACQ-2019']
dfd19_f10_ACQRET_count['Percnt-2019'] = (dfd19_f10_ACQRET_count['RET-2019'] / dfd19_a10_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f10_ACQRET_count['Percnt-2019'] = dfd19_f10_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f10_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a10_ACQRET_count = pd.DataFrame(filter_10_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f10_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f10.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f10_ACQRET_count['Percent-2021'] = (dfd21_f10_ACQRET_count['ACQ-2021'] / dfd21_f10_Registrations_count['Total-2021'].sum()) * 100
dfd21_f10_ACQRET_count['Percent-2021'] = dfd21_f10_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f10_ACQRET_count['RET-2021'] = dfd21_a10_ACQRET_count['Total-2021'] - dfd21_f10_ACQRET_count['ACQ-2021']
dfd21_f10_ACQRET_count['Percnt-2021'] = (dfd21_f10_ACQRET_count['RET-2021'] / dfd21_a10_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f10_ACQRET_count['Percnt-2021'] = dfd21_f10_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f10_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a10_ACQRET_count = pd.DataFrame(filter_10_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f10_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f10.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f10_ACQRET_count['Percent-2022'] = (dfd22_f10_ACQRET_count['ACQ-2022'] / dfd22_f10_Registrations_count['Total-2022'].sum()) * 100
dfd22_f10_ACQRET_count['Percent-2022'] = dfd22_f10_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f10_ACQRET_count['RET-2022'] = dfd22_a10_ACQRET_count['Total-2022'] - dfd22_f10_ACQRET_count['ACQ-2022']
dfd22_f10_ACQRET_count['Percnt-2022'] = (dfd22_f10_ACQRET_count['RET-2022'] / dfd22_a10_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f10_ACQRET_count['Percnt-2022'] = dfd22_f10_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f10_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a10_ACQRET_count = pd.DataFrame(filter_10_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f10_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f10.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f10_ACQRET_count['Percent-2023'] = (dfd23_f10_ACQRET_count['ACQ-2023'] / dfd23_f10_Registrations_count['Total-2023'].sum()) * 100
dfd23_f10_ACQRET_count['Percent-2023'] = dfd23_f10_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f10_ACQRET_count['RET-2023'] = dfd23_a10_ACQRET_count['Total-2023'] - dfd23_f10_ACQRET_count['ACQ-2023']
dfd23_f10_ACQRET_count['Percnt-2023'] = (dfd23_f10_ACQRET_count['RET-2023'] / dfd23_a10_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f10_ACQRET_count['Percnt-2023'] = dfd23_f10_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f10_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f10 = pd.DataFrame(pd.merge(dfd18_a10_ACQRET_count, dfd18_f10_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f10 = pd.DataFrame(pd.merge(dfd19_a10_ACQRET_count, dfd19_f10_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f10 = pd.DataFrame(pd.merge(dfd21_a10_ACQRET_count, dfd21_f10_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f10 = pd.DataFrame(pd.merge(dfd22_a10_ACQRET_count, dfd22_f10_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_10_f10 = pd.DataFrame(pd.merge(dfd23_a10_ACQRET_count, dfd23_f10_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_10_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f10 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f10, df_ACQRET_count_2_f10, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f10 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f10, df_ACQRET_count_3_f10, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f10 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f10, df_ACQRET_count_4_f10, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f10 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f10, df_ACQRET_count_10_f10, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f10 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10]
Concat_ACQRET_count_f1_f10 = pd.concat(ConcatFrames_ACQRET_count_f1_f10)
#print(tab(Concat_ACQRET_count_f1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f10 = Concat_ACQRET_count_f1_f10[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f10_Revenue_calc = pd.DataFrame(filter_10_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f10_Revenue_calc['Percent-2017'] = (dfd17_f10_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f10_Revenue_calc['Percent-2017'] = dfd17_f10_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f10_Revenue_calc['7DEvolution-2017'] = dfd17_f10_Revenue_calc['Total-2017'] - dfd17_f9_Revenue_calc['Total-2017']
#print(tab(dfd17_f10_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f10_Revenue_calc = pd.DataFrame(filter_10_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f10_Revenue_calc['Percent-2018'] = (dfd18_f10_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f10_Revenue_calc['Percent-2018'] = dfd18_f10_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f10_Revenue_calc['7DEvolution-2018'] = dfd18_f10_Revenue_calc['Total-2018'] - dfd18_f9_Revenue_calc['Total-2018']
#print(tab(dfd18_f10_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f10_Revenue_calc = pd.DataFrame(filter_10_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f10_Revenue_calc['Percent-2019'] = (dfd19_f10_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f10_Revenue_calc['Percent-2019'] = dfd19_f10_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f10_Revenue_calc['7DEvolution-2019'] = dfd19_f10_Revenue_calc['Total-2019'] - dfd19_f9_Revenue_calc['Total-2019']
#print(tab(dfd19_f10_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f10_Revenue_calc = pd.DataFrame(filter_10_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f10_Revenue_calc['Percent-2021'] = (dfd21_f10_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f10_Revenue_calc['Percent-2021'] = dfd21_f10_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f10_Revenue_calc['7DEvolution-2021'] = dfd21_f10_Revenue_calc['Total-2021'] - dfd21_f9_Revenue_calc['Total-2021']
#print(tab(dfd21_f10_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f10_Revenue_calc = pd.DataFrame(filter_10_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f10_Revenue_calc['Percent-2022'] = (dfd22_f10_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f10_Revenue_calc['Percent-2022'] = dfd22_f10_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f10_Revenue_calc['7DEvolution-2022'] = dfd22_f10_Revenue_calc['Total-2022'] - dfd22_f9_Revenue_calc['Total-2022']
#print(tab(dfd22_f10_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_Revenue_calc = pd.DataFrame(filter_10_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f10_Revenue_calc['Percent-2023'] = (dfd23_f10_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f10_Revenue_calc['Percent-2023'] = dfd23_f10_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f10_Revenue_calc['7DEvolution-2023'] = dfd23_f10_Revenue_calc['Total-2023'] - dfd23_f9_Revenue_calc['Total-2023']
#print(tab(dfd23_f10_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f10_RevenueEvolution_calc = pd.DataFrame(filter_10_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f10_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f10_Revenue_calc['Total-2023'] - dfd19_f10_Revenue_calc['Total-2019'])/ dfd19_f10_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f10_RevenueEvolution_calc['Evolution-2023'] = dfd23_f10_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f10_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f10 = pd.DataFrame(pd.merge(dfd17_f10_Revenue_calc, dfd18_f10_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f10 = pd.DataFrame(pd.merge(dfd19_f10_Revenue_calc, dfd21_f10_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f10 = pd.DataFrame(pd.merge(dfd22_f10_Revenue_calc, dfd23_f10_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f10_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f10, df_Revenue_calc_2_f10, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f10Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f10_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f10_Evolution, df_Revenue_calc_3_f10, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f10Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f10 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f10_Evolution, dfd23_f10_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f10 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10]
Concat_REV_count_f1_f10 = pd.concat(ConcatFrames_REV_count_f1_f10)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f10_Registrations_GRDel = pd.DataFrame(filtr_10_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f10_Registrations_GRDel = dfd17_f10_Registrations_GRDel.fillna('Unknown')
dfd17_f10_Registrations_GRDel['Percent-2017'] = (dfd17_f10_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f10_Registrations_GRDel['Percent-2017'] = dfd17_f10_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f10_Registrations_GRDel['7DEvolution-2017'] = dfd17_f10_Registrations_GRDel['Total-2017'] - dfd17_f9_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f10_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f10_Registrations_GRDel = pd.DataFrame(filtr_10_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f10_Registrations_GRDel = dfd18_f10_Registrations_GRDel.fillna('Unknown')
dfd18_f10_Registrations_GRDel['Percent-2018'] = (dfd18_f10_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f10_Registrations_GRDel['Percent-2018'] = dfd18_f10_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f10_Registrations_GRDel['7DEvolution-2018'] = dfd18_f10_Registrations_GRDel['Total-2018'] - dfd18_f9_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f10_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f10_Registrations_GRDel = pd.DataFrame(filtr_10_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f10_Registrations_GRDel = dfd19_f10_Registrations_GRDel.fillna('Unknown')
dfd19_f10_Registrations_GRDel['Percent-2019'] = (dfd19_f10_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f10_Registrations_GRDel['Percent-2019'] = dfd19_f10_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f10_Registrations_GRDel['7DEvolution-2019'] = dfd19_f10_Registrations_GRDel['Total-2019'] - dfd19_f9_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f10_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f10_Registrations_GRDel = pd.DataFrame(filtr_10_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f10_Registrations_GRDel = dfd21_f10_Registrations_GRDel.fillna('Unknown')
dfd21_f10_Registrations_GRDel['Percent-2021'] = (dfd21_f10_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f10_Registrations_GRDel['Percent-2021'] = dfd21_f10_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f10_Registrations_GRDel['7DEvolution-2021'] = dfd21_f10_Registrations_GRDel['Total-2021'] - dfd21_f9_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f10_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f10_Registrations_GRDel = pd.DataFrame(filtr_10_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f10_Registrations_GRDel = dfd22_f10_Registrations_GRDel.fillna('Unknown')
dfd22_f10_Registrations_GRDel['Percent-2022'] = (dfd22_f10_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f10_Registrations_GRDel['Percent-2022'] = dfd22_f10_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f10_Registrations_GRDel['7DEvolution-2022'] = dfd22_f10_Registrations_GRDel['Total-2022'] - dfd22_f9_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f10_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_Registrations_GRDel = pd.DataFrame(filtr_10_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f10_Registrations_GRDel = dfd23_f10_Registrations_GRDel.fillna('Unknown')
dfd23_f10_Registrations_GRDel['Percent-2023'] = (dfd23_f10_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f10_Registrations_GRDel['Percent-2023'] = dfd23_f10_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f10_Registrations_GRDel['7DEvolution-2023'] = dfd23_f10_Registrations_GRDel['Total-2023'] - dfd23_f9_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f10_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f10_Registrations_Evol_GRDel = pd.DataFrame(filtr_10_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f10_Registrations_Evol_GRDel = dfd23_f10_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f10_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f10_Registrations_GRDel['Total-2023'] - dfd19_f10_Registrations_GRDel['Total-2019'])/ dfd19_f10_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f10_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f10 = pd.concat([dfd17_f10_Registrations_GRDel, dfd18_f10_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f10 = pd.DataFrame(pd.merge(dfd17_f10_Registrations_GRDel, dfd18_f10_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f10 = pd.DataFrame(pd.merge(dfd19_f10_Registrations_GRDel, dfd21_f10_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f10 = pd.DataFrame(pd.merge(dfd22_f10_Registrations_GRDel, dfd23_f10_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f10 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f10, df_Registrations_GRDel_2_f10, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_10_f10 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f10, df_Registrations_GRDel_3_f10, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f10 = pd.DataFrame(pd.merge(df_Registrations_GRDel_10_f10, dfd23_f10_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f10 = df_Registrations_GRDel_f10[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f10 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10]
Concat_RegGRDel_count_f1_f10 = pd.concat(ConcatFrames_RegGRDel_count_f1_f10)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f10 = filtr_10_df18_GRdel[filtr_10_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f10 = filtr_10_df19_GRdel[filtr_10_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f10 = filtr_10_df21_GRdel[filtr_10_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f10 = filtr_10_df22_GRdel[filtr_10_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f10 = filtr_10_df23_GRdel[filtr_10_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f10.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f10.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a10_AC_RT_GRDel = pd.DataFrame(filtr_10_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f10_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f10.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f10_AC_RT_GRDel['Percent-2018'] = (dfd18_f10_AC_RT_GRDel['ACQ-2018'] / dfd18_f10_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f10_AC_RT_GRDel['Percent-2018'] = dfd18_f10_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f10_AC_RT_GRDel['RET-2018'] = dfd18_a10_AC_RT_GRDel['Total-2018'] - dfd18_f10_AC_RT_GRDel['ACQ-2018']
dfd18_f10_AC_RT_GRDel['Percnt-2018'] = (dfd18_f10_AC_RT_GRDel['RET-2018'] / dfd18_a10_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f10_AC_RT_GRDel['Percnt-2018'] = dfd18_f10_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f10_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a10_AC_RT_GRDel = pd.DataFrame(filtr_10_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f10_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f10.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f10_AC_RT_GRDel['Percent-2019'] = (dfd19_f10_AC_RT_GRDel['ACQ-2019'] / dfd19_f10_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f10_AC_RT_GRDel['Percent-2019'] = dfd19_f10_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f10_AC_RT_GRDel['RET-2019'] = dfd19_a10_AC_RT_GRDel['Total-2019'] - dfd19_f10_AC_RT_GRDel['ACQ-2019']
dfd19_f10_AC_RT_GRDel['Percnt-2019'] = (dfd19_f10_AC_RT_GRDel['RET-2019'] / dfd19_a10_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f10_AC_RT_GRDel['Percnt-2019'] = dfd19_f10_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f10_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a10_AC_RT_GRDel = pd.DataFrame(filtr_10_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f10_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f10.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f10_AC_RT_GRDel['Percent-2021'] = (dfd21_f10_AC_RT_GRDel['ACQ-2021'] / dfd21_f10_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f10_AC_RT_GRDel['Percent-2021'] = dfd21_f10_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f10_AC_RT_GRDel['RET-2021'] = dfd21_a10_AC_RT_GRDel['Total-2021'] - dfd21_f10_AC_RT_GRDel['ACQ-2021']
dfd21_f10_AC_RT_GRDel['Percnt-2021'] = (dfd21_f10_AC_RT_GRDel['RET-2021'] / dfd21_a10_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f10_AC_RT_GRDel['Percnt-2021'] = dfd21_f10_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f10_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a10_AC_RT_GRDel = pd.DataFrame(filtr_10_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f10_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f10.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f10_AC_RT_GRDel['Percent-2022'] = (dfd22_f10_AC_RT_GRDel['ACQ-2022'] / dfd22_f10_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f10_AC_RT_GRDel['Percent-2022'] = dfd22_f10_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f10_AC_RT_GRDel['RET-2022'] = dfd22_a10_AC_RT_GRDel['Total-2022'] - dfd22_f10_AC_RT_GRDel['ACQ-2022']
dfd22_f10_AC_RT_GRDel['Percnt-2022'] = (dfd22_f10_AC_RT_GRDel['RET-2022'] / dfd22_a10_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f10_AC_RT_GRDel['Percnt-2022'] = dfd22_f10_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f10_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a10_AC_RT_GRDel = pd.DataFrame(filtr_10_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f10_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f10.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f10_AC_RT_GRDel['Percent-2023'] = (dfd23_f10_AC_RT_GRDel['ACQ-2023'] / dfd23_f10_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f10_AC_RT_GRDel['Percent-2023'] = dfd23_f10_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f10_AC_RT_GRDel['RET-2023'] = dfd23_a10_AC_RT_GRDel['Total-2023'] - dfd23_f10_AC_RT_GRDel['ACQ-2023']
dfd23_f10_AC_RT_GRDel['Percnt-2023'] = (dfd23_f10_AC_RT_GRDel['RET-2023'] / dfd23_a10_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f10_AC_RT_GRDel['Percnt-2023'] = dfd23_f10_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f10_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f10 = pd.DataFrame(pd.merge_ordered(dfd18_a10_AC_RT_GRDel, dfd18_f10_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f10 = pd.DataFrame(pd.merge_ordered(dfd19_a10_AC_RT_GRDel, dfd19_f10_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f10 = pd.DataFrame(pd.merge_ordered(dfd21_a10_AC_RT_GRDel, dfd21_f10_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f10 = pd.DataFrame(pd.merge_ordered(dfd22_a10_AC_RT_GRDel, dfd22_f10_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_10_f10 = pd.DataFrame(pd.merge_ordered(dfd23_a10_AC_RT_GRDel, dfd23_f10_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f10 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f10, df_AC_ET_GRDel_2_f10, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f10 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f10, df_AC_ET_GRDel_3_f10, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f10 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f10, df_AC_ET_GRDel_4_f10, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f10 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f10, df_AC_ET_GRDel_10_f10, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f10 = df_AC_RT_GRDel_M4_f10[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f10 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10]
Conct_AC_RT_GRDel_f1_f10 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f10)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_10_df17_GRdel = filtr_10_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f10_Revenu_GRDel = pd.DataFrame(filtr_10_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f10_Revenu_GRDel['Percent-2017'] = (dfd17_f10_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f10_Revenu_GRDel['Percent-2017'] = dfd17_f10_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f10_Revenu_GRDel['7DEvolution-2017'] = dfd17_f10_Revenu_GRDel['Total-2017'] - dfd17_f9_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f10_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_10_df18_GRdel = filtr_10_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f10_Revenu_GRDel = pd.DataFrame(filtr_10_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f10_Revenu_GRDel['Percent-2018'] = (dfd18_f10_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f10_Revenu_GRDel['Percent-2018'] = dfd18_f10_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f10_Revenu_GRDel['7DEvolution-2018'] = dfd18_f10_Revenu_GRDel['Total-2018'] - dfd18_f9_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f10_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_10_df19_GRdel = filtr_10_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f10_Revenu_GRDel = pd.DataFrame(filtr_10_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f10_Revenu_GRDel['Percent-2019'] = (dfd19_f10_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f10_Revenu_GRDel['Percent-2019'] = dfd19_f10_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f10_Revenu_GRDel['7DEvolution-2019'] = dfd19_f10_Revenu_GRDel['Total-2019'] - dfd19_f9_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f10_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_10_df21_GRdel = filtr_10_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f10_Revenu_GRDel = pd.DataFrame(filtr_10_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f10_Revenu_GRDel['Percent-2021'] = (dfd21_f10_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f10_Revenu_GRDel['Percent-2021'] = dfd21_f10_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f10_Revenu_GRDel['7DEvolution-2021'] = dfd21_f10_Revenu_GRDel['Total-2021'] - dfd21_f9_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f10_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_10_df22_GRdel = filtr_10_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f10_Revenu_GRDel = pd.DataFrame(filtr_10_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f10_Revenu_GRDel['Percent-2022'] = (dfd22_f10_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f10_Revenu_GRDel['Percent-2022'] = dfd22_f10_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f10_Revenu_GRDel['7DEvolution-2022'] = dfd22_f10_Revenu_GRDel['Total-2022'] - dfd22_f9_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f10_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_10_df23_GRdel = filtr_10_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f10_Revenu_GRDel = pd.DataFrame(filtr_10_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f10_Revenu_GRDel['Percent-2023'] = (dfd23_f10_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f10_Revenu_GRDel['Percent-2023'] = dfd23_f10_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f10_Revenu_GRDel['7DEvolution-2023'] = dfd23_f10_Revenu_GRDel['Total-2023'] - dfd23_f9_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f10_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f10_Revenu_Evlt_GRDel = pd.DataFrame(filtr_10_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f10_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f10_Revenu_GRDel['Total-2023'] - dfd19_f10_Revenu_GRDel['Total-2019'])/ dfd19_f10_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f10_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f10_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f10_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f10 = pd.DataFrame(pd.merge(dfd17_f10_Revenu_GRDel, dfd18_f10_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f10 = pd.DataFrame(pd.merge(dfd19_f10_Revenu_GRDel, dfd21_f10_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f10 = pd.DataFrame(pd.merge(dfd22_f10_Revenu_GRDel, dfd23_f10_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f10 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f10, df_Revenu_GRDel_2_f10, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_10_f10 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f10, df_Revenu_GRDel_3_f10, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f10 = pd.DataFrame(pd.merge(df_Revenu_GRDel_10_f10, dfd23_f10_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f10 = df_Revenu_GRDel_f10[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f10 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10]
Conct_RV_GRDel_f1_f10 = pd.concat(ConcatFra_RV_GRDel_f1_f10)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f10_Profile_count = pd.DataFrame(filtr_10_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f10_Profile_count = dfd17_f10_Profile_count.fillna('Unknown')
dfd17_f10_Profile_count['Percent-2017'] = (dfd17_f10_Profile_count['Total-2017'] / dfd17_f10_Profile_count['Total-2017'].sum()) * 100
dfd17_f10_Profile_count['Percent-2017'] = dfd17_f10_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f10_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f10_Profile_count = pd.DataFrame(filtr_10_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f10_Profile_count = dfd18_f10_Profile_count.fillna('Unknown')
dfd18_f10_Profile_count['Percent-2018'] = (dfd18_f10_Profile_count['Total-2018'] / dfd18_f10_Profile_count['Total-2018'].sum()) * 100
dfd18_f10_Profile_count['Percent-2018'] = dfd18_f10_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f10_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f10_Profile_count = pd.DataFrame(filtr_10_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f10_Profile_count = dfd19_f10_Profile_count.fillna('Unknown')
dfd19_f10_Profile_count['Percent-2019'] = (dfd19_f10_Profile_count['Total-2019'] / dfd19_f10_Profile_count['Total-2019'].sum()) * 100
dfd19_f10_Profile_count['Percent-2019'] = dfd19_f10_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f10_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f10_Profile_count = pd.DataFrame(filtr_10_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f10_Profile_count = dfd21_f10_Profile_count.fillna('Unknown')
dfd21_f10_Profile_count['Percent-2021'] = (dfd21_f10_Profile_count['Total-2021'] / dfd21_f10_Profile_count['Total-2021'].sum()) * 100
dfd21_f10_Profile_count['Percent-2021'] = dfd21_f10_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f10_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f10_Profile_count = pd.DataFrame(filtr_10_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f10_Profile_count = dfd22_f10_Profile_count.fillna('Unknown')
dfd22_f10_Profile_count['Percent-2022'] = (dfd22_f10_Profile_count['Total-2022'] / dfd22_f10_Profile_count['Total-2022'].sum()) * 100
dfd22_f10_Profile_count['Percent-2022'] = dfd22_f10_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f10_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_Profile_count = pd.DataFrame(filtr_10_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f10_Profile_count = dfd23_f10_Profile_count.fillna('Unknown')
dfd23_f10_Profile_count['Percent-2023'] = (dfd23_f10_Profile_count['Total-2023'] / dfd23_f10_Profile_count['Total-2023'].sum()) * 100
dfd23_f10_Profile_count['Percent-2023'] = dfd23_f10_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f10_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f10 = pd.DataFrame(pd.merge(dfd17_f10_Profile_count, dfd18_f10_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f10 = pd.DataFrame(pd.merge(dfd19_f10_Profile_count, dfd21_f10_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f10 = pd.DataFrame(pd.merge(dfd22_f10_Profile_count, dfd23_f10_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f10 = pd.DataFrame(pd.merge(df_Profile_Count_1_f10, df_Profile_Count_2_f10, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f10 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f10, df_Profile_Count_3_f10, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f10 = df_Profile_Count_m2_f10.append(df_Profile_Count_m2_f10.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f10['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f10_Pass_count = pd.DataFrame(filtr_10_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f10_Pass_count = dfd17_f10_Pass_count.fillna('Unknown')
dfd17_f10_Pass_count['Percent-2017'] = (dfd17_f10_Pass_count['Total-2017'] / dfd17_f10_Pass_count['Total-2017'].sum()) * 100
dfd17_f10_Pass_count['Percent-2017'] = dfd17_f10_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f10_Pass_count = pd.DataFrame(filtr_10_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f10_Pass_count = dfd18_f10_Pass_count.fillna('Unknown')
dfd18_f10_Pass_count['Percent-2018'] = (dfd18_f10_Pass_count['Total-2018'] / dfd18_f10_Pass_count['Total-2018'].sum()) * 100
dfd18_f10_Pass_count['Percent-2018'] = dfd18_f10_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f10_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f10_Pass_count = pd.DataFrame(filtr_10_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f10_Pass_count = dfd19_f10_Pass_count.fillna('Unknown')
dfd19_f10_Pass_count['Percent-2019'] = (dfd19_f10_Pass_count['Total-2019'] / dfd19_f10_Pass_count['Total-2019'].sum()) * 100
dfd19_f10_Pass_count['Percent-2019'] = dfd19_f10_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f10_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f10_Pass_count = pd.DataFrame(filtr_10_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f10_Pass_count = dfd21_f10_Pass_count.fillna('Unknown')
dfd21_f10_Pass_count['Percent-2021'] = (dfd21_f10_Pass_count['Total-2021'] / dfd21_f10_Pass_count['Total-2021'].sum()) * 100
dfd21_f10_Pass_count['Percent-2021'] = dfd21_f10_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f10_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f10_Pass_count = pd.DataFrame(filtr_10_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f10_Pass_count = dfd22_f10_Pass_count.fillna('Unknown')
dfd22_f10_Pass_count['Percent-2022'] = (dfd22_f10_Pass_count['Total-2022'] / dfd22_f10_Pass_count['Total-2022'].sum()) * 100
dfd22_f10_Pass_count['Percent-2022'] = dfd22_f10_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f10_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_Pass_count = pd.DataFrame(filtr_10_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f10_Pass_count = dfd23_f10_Pass_count.fillna('Unknown')
dfd23_f10_Pass_count['Percent-2023'] = (dfd23_f10_Pass_count['Total-2023'] / dfd23_f10_Pass_count['Total-2023'].sum()) * 100
dfd23_f10_Pass_count['Percent-2023'] = dfd23_f10_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f10_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f10 = pd.DataFrame(pd.merge(dfd17_f10_Pass_count, dfd18_f10_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f10 = pd.DataFrame(pd.merge(dfd19_f10_Pass_count, dfd21_f10_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f10 = pd.DataFrame(pd.merge(dfd22_f10_Pass_count, dfd23_f10_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f10 = pd.DataFrame(pd.merge(df_Pass_Count_1_f10, df_Pass_Count_2_f10, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f10 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f10, df_Pass_Count_3_f10, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f10 = df_Pass_Count_m2_f10.append(df_Pass_Count_m2_f10.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f10['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f10_Attendees_Country_count = pd.DataFrame(filtr_10_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f10_Attendees_Country_count = dfd17_f10_Attendees_Country_count.fillna('Unknown')
dfd17_f10_Attendees_Country_count['Percent-2017'] = (dfd17_f10_Attendees_Country_count['Total-2017'] / dfd17_f10_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f10_Attendees_Country_count['Percent-2017'] = dfd17_f10_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f10_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f10_Attendees_Country_count = pd.DataFrame(filtr_10_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f10_Attendees_Country_count = dfd18_f10_Attendees_Country_count.fillna('Unknown')
dfd18_f10_Attendees_Country_count['Percent-2018'] = (dfd18_f10_Attendees_Country_count['Total-2018'] / dfd18_f10_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f10_Attendees_Country_count['Percent-2018'] = dfd18_f10_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f10_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f10_Attendees_Country_count = pd.DataFrame(filtr_10_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f10_Attendees_Country_count = dfd19_f10_Attendees_Country_count.fillna('Unknown')
dfd19_f10_Attendees_Country_count['Percent-2019'] = (dfd19_f10_Attendees_Country_count['Total-2019'] / dfd19_f10_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f10_Attendees_Country_count['Percent-2019'] = dfd19_f10_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f10_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f10_Attendees_Country_count = pd.DataFrame(filtr_10_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f10_Attendees_Country_count = dfd21_f10_Attendees_Country_count.fillna('Unknown')
dfd21_f10_Attendees_Country_count['Percent-2021'] = (dfd21_f10_Attendees_Country_count['Total-2021'] / dfd21_f10_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f10_Attendees_Country_count['Percent-2021'] = dfd21_f10_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f10_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f10_Attendees_Country_count = pd.DataFrame(filtr_10_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f10_Attendees_Country_count = dfd22_f10_Attendees_Country_count.fillna('Unknown')
dfd22_f10_Attendees_Country_count['Percent-2022'] = (dfd22_f10_Attendees_Country_count['Total-2022'] / dfd22_f10_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f10_Attendees_Country_count['Percent-2022'] = dfd22_f10_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f10_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_Attendees_Country_count = pd.DataFrame(filtr_10_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f10_Attendees_Country_count = dfd23_f10_Attendees_Country_count.fillna('Unknown')
dfd23_f10_Attendees_Country_count['Percent-2023'] = (dfd23_f10_Attendees_Country_count['Total-2023'] / dfd23_f10_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f10_Attendees_Country_count['Percent-2023'] = dfd23_f10_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f10_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f10 = pd.DataFrame(pd.merge(dfd17_f10_Attendees_Country_count, dfd18_f10_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f10 = pd.DataFrame(pd.merge(dfd19_f10_Attendees_Country_count, dfd21_f10_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f10 = pd.DataFrame(pd.merge(dfd22_f10_Attendees_Country_count, dfd23_f10_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f10 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f10, dfAttendees_Country_Count_2_f10, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f10.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f10 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f10, dfAttendees_Country_Count_3_f10, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f10 = dfAttendees_Country_Count_m2_f10.append(dfAttendees_Country_Count_m2_f10.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f10['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f10_ATTENDEES_AREAS_count = pd.DataFrame(filtr_10_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f10_ATTENDEES_AREAS_count = dfd17_f10_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f10_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f10_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f10_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f10_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f10_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f10_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f10_ATTENDEES_AREAS_count = pd.DataFrame(filtr_10_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f10_ATTENDEES_AREAS_count = dfd18_f10_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f10_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f10_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f10_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f10_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f10_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f10_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f10_ATTENDEES_AREAS_count = pd.DataFrame(filtr_10_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f10_ATTENDEES_AREAS_count = dfd19_f10_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f10_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f10_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f10_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f10_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f10_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f10_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f10_ATTENDEES_AREAS_count = pd.DataFrame(filtr_10_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f10_ATTENDEES_AREAS_count = dfd21_f10_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f10_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f10_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f10_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f10_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f10_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f10_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f10_ATTENDEES_AREAS_count = pd.DataFrame(filtr_10_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f10_ATTENDEES_AREAS_count = dfd22_f10_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f10_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f10_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f10_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f10_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f10_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f10_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_ATTENDEES_AREAS_count = pd.DataFrame(filtr_10_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f10_ATTENDEES_AREAS_count = dfd23_f10_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f10_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f10_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f10_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f10_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f10_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f10_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f10 = pd.DataFrame(pd.merge(dfd17_f10_ATTENDEES_AREAS_count, dfd18_f10_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f10 = pd.DataFrame(pd.merge(dfd19_f10_ATTENDEES_AREAS_count, dfd21_f10_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f10 = pd.DataFrame(pd.merge(dfd22_f10_ATTENDEES_AREAS_count, dfd23_f10_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f10.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f10 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f10, df_ATTENDEES_AREAS_count_2_f10, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f10 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f10, df_ATTENDEES_AREAS_count_3_f10, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f10 = df_ATTENDEES_AREAS_count_m2_f10.append(df_ATTENDEES_AREAS_count_m2_f10.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f10['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f10_Attendees_Specialty_count = pd.DataFrame(filtr_10_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f10_Attendees_Specialty_count = dfd17_f10_Attendees_Specialty_count.fillna('Unknown')
dfd17_f10_Attendees_Specialty_count['Percent-2017'] = (dfd17_f10_Attendees_Specialty_count['Total-2017'] / dfd17_f10_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f10_Attendees_Specialty_count['Percent-2017'] = dfd17_f10_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f10_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f10_Attendees_Specialty_count = pd.DataFrame(filtr_10_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f10_Attendees_Specialty_count = dfd18_f10_Attendees_Specialty_count.fillna('Unknown')
dfd18_f10_Attendees_Specialty_count['Percent-2018'] = (dfd18_f10_Attendees_Specialty_count['Total-2018'] / dfd18_f10_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f10_Attendees_Specialty_count['Percent-2018'] = dfd18_f10_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f10_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f10_Attendees_Specialty_count = pd.DataFrame(filtr_10_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f10_Attendees_Specialty_count = dfd19_f10_Attendees_Specialty_count.fillna('Unknown')
dfd19_f10_Attendees_Specialty_count['Percent-2019'] = (dfd19_f10_Attendees_Specialty_count['Total-2019'] / dfd19_f10_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f10_Attendees_Specialty_count['Percent-2019'] = dfd19_f10_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f10_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f10_Attendees_Specialty_count = pd.DataFrame(filtr_10_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f10_Attendees_Specialty_count = dfd21_f10_Attendees_Specialty_count.fillna('Unknown')
dfd21_f10_Attendees_Specialty_count['Percent-2021'] = (dfd21_f10_Attendees_Specialty_count['Total-2021'] / dfd21_f10_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f10_Attendees_Specialty_count['Percent-2021'] = dfd21_f10_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f10_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f10_Attendees_Specialty_count = pd.DataFrame(filtr_10_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f10_Attendees_Specialty_count = dfd22_f10_Attendees_Specialty_count.fillna('Unknown')
dfd22_f10_Attendees_Specialty_count['Percent-2022'] = (dfd22_f10_Attendees_Specialty_count['Total-2022'] / dfd22_f10_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f10_Attendees_Specialty_count['Percent-2022'] = dfd22_f10_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f10_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f10_Attendees_Specialty_count = pd.DataFrame(filtr_10_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f10_Attendees_Specialty_count = dfd23_f10_Attendees_Specialty_count.fillna('Unknown')
dfd23_f10_Attendees_Specialty_count['Percent-2023'] = (dfd23_f10_Attendees_Specialty_count['Total-2023'] / dfd23_f10_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f10_Attendees_Specialty_count['Percent-2023'] = dfd23_f10_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f10_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f10 = pd.DataFrame(pd.merge(dfd17_f10_Attendees_Specialty_count, dfd18_f10_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f10 = pd.DataFrame(pd.merge(dfd19_f10_Attendees_Specialty_count, dfd21_f10_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f10 = pd.DataFrame(pd.merge(dfd22_f10_Attendees_Specialty_count, dfd23_f10_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f10 = pd.DataFrame(pd.merge(df_Specialty_count_1_f10, df_Specialty_count_2_f10, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f10.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f10 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f10, df_Specialty_count_3_f10, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f10 = df_Specialty_count_m2_f10.append(df_Specialty_count_m2_f10.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f10['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f10['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f10['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f10 = Concat_Registrations_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f10['Total-2017'] = Concat_Registrations_count_f1_f10['Total-2017'].astype(int)
Concat_Registrations_count_f1_f10['Percent-2017'] = Concat_Registrations_count_f1_f10['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f10['7DEvolution-2017'] = Concat_Registrations_count_f1_f10['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f10['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f10['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f10 = Concat_Registrations_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f10['Total-2018'] = Concat_Registrations_count_f1_f10['Total-2018'].astype(int)
Concat_Registrations_count_f1_f10['Percent-2018'] = Concat_Registrations_count_f1_f10['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f10['7DEvolution-2018'] = Concat_Registrations_count_f1_f10['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f10['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f10['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f10 = Concat_Registrations_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f10['Total-2019'] = Concat_Registrations_count_f1_f10['Total-2019'].astype(int)
Concat_Registrations_count_f1_f10['Percent-2019'] = Concat_Registrations_count_f1_f10['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f10['7DEvolution-2019'] = Concat_Registrations_count_f1_f10['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f10['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f10['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f10 = Concat_Registrations_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f10['Total-2021'] = Concat_Registrations_count_f1_f10['Total-2021'].astype(int)
Concat_Registrations_count_f1_f10['Percent-2021'] = Concat_Registrations_count_f1_f10['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f10['7DEvolution-2021'] = Concat_Registrations_count_f1_f10['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f10['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f10['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f10 = Concat_Registrations_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f10['Total-2022'] = Concat_Registrations_count_f1_f10['Total-2022'].astype(int)
Concat_Registrations_count_f1_f10['Percent-2022'] = Concat_Registrations_count_f1_f10['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f10['7DEvolution-2022'] = Concat_Registrations_count_f1_f10['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f10['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f10['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f10 = Concat_Registrations_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f10['Total-2023'] = Concat_Registrations_count_f1_f10['Total-2023'].astype(int)
Concat_Registrations_count_f1_f10['Percent-2023'] = Concat_Registrations_count_f1_f10['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f10['7DEvolution-2023'] = Concat_Registrations_count_f1_f10['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f10['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f10['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f10 = Concat_ACQRET_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f10['Total-2018'] = Concat_ACQRET_count_f1_f10['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f10['ACQ-2018'] = Concat_ACQRET_count_f1_f10['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f10['Percent-2018'] = Concat_ACQRET_count_f1_f10['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f10['RET-2018'] = Concat_ACQRET_count_f1_f10['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f10['Percnt-2018'] = Concat_ACQRET_count_f1_f10['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f10['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f10['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f10 = Concat_ACQRET_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f10['Total-2019'] = Concat_ACQRET_count_f1_f10['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f10['ACQ-2019'] = Concat_ACQRET_count_f1_f10['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f10['Percent-2019'] = Concat_ACQRET_count_f1_f10['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f10['RET-2019'] = Concat_ACQRET_count_f1_f10['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f10['Percnt-2019'] = Concat_ACQRET_count_f1_f10['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f10['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f10['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f10 = Concat_ACQRET_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f10['Total-2021'] = Concat_ACQRET_count_f1_f10['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f10['ACQ-2021'] = Concat_ACQRET_count_f1_f10['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f10['Percent-2021'] = Concat_ACQRET_count_f1_f10['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f10['RET-2021'] = Concat_ACQRET_count_f1_f10['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f10['Percnt-2021'] = Concat_ACQRET_count_f1_f10['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f10['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f10['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f10 = Concat_ACQRET_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f10['Total-2022'] = Concat_ACQRET_count_f1_f10['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f10['ACQ-2022'] = Concat_ACQRET_count_f1_f10['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f10['Percent-2022'] = Concat_ACQRET_count_f1_f10['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f10['RET-2022'] = Concat_ACQRET_count_f1_f10['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f10['Percnt-2022'] = Concat_ACQRET_count_f1_f10['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f10['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f10['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f10 = Concat_ACQRET_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f10['Total-2023'] = Concat_ACQRET_count_f1_f10['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f10['ACQ-2023'] = Concat_ACQRET_count_f1_f10['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f10['Percent-2023'] = Concat_ACQRET_count_f1_f10['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f10['RET-2023'] = Concat_ACQRET_count_f1_f10['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f10['Percnt-2023'] = Concat_ACQRET_count_f1_f10['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f10['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f10['Total-2017'],errors='coerce')
Concat_REV_count_f1_f10 = Concat_REV_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f10['Total-2017'] = Concat_REV_count_f1_f10['Total-2017'].astype(int)
Concat_REV_count_f1_f10['Percent-2017'] = Concat_REV_count_f1_f10['Percent-2017'].astype(float)
Concat_REV_count_f1_f10['7DEvolution-2017'] = Concat_REV_count_f1_f10['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f10['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f10['Total-2018'],errors='coerce')
Concat_REV_count_f1_f10 = Concat_REV_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f10['Total-2018'] = Concat_REV_count_f1_f10['Total-2018'].astype(int)
Concat_REV_count_f1_f10['Percent-2018'] = Concat_REV_count_f1_f10['Percent-2018'].astype(float)
Concat_REV_count_f1_f10['7DEvolution-2018'] = Concat_REV_count_f1_f10['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f10['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f10['Total-2019'],errors='coerce')
Concat_REV_count_f1_f10 = Concat_REV_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f10['Total-2019'] = Concat_REV_count_f1_f10['Total-2019'].astype(int)
Concat_REV_count_f1_f10['Percent-2019'] = Concat_REV_count_f1_f10['Percent-2019'].astype(float)
Concat_REV_count_f1_f10['7DEvolution-2019'] = Concat_REV_count_f1_f10['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f10['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f10['Total-2022'],errors='coerce')
Concat_REV_count_f1_f10 = Concat_REV_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f10['Total-2022'] = Concat_REV_count_f1_f10['Total-2022'].astype(int)
Concat_REV_count_f1_f10['Percent-2022'] = Concat_REV_count_f1_f10['Percent-2022'].astype(float)
Concat_REV_count_f1_f10['7DEvolution-2022'] = Concat_REV_count_f1_f10['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f10['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f10['Total-2023'],errors='coerce')
Concat_REV_count_f1_f10 = Concat_REV_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f10['Total-2023'] = Concat_REV_count_f1_f10['Total-2023'].astype(int)
Concat_REV_count_f1_f10['Percent-2023'] = Concat_REV_count_f1_f10['Percent-2023'].astype(float)
Concat_REV_count_f1_f10['7DEvolution-2023'] = Concat_REV_count_f1_f10['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f10['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f10['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f10 = Concat_RegGRDel_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f10['Total-2017'] = Concat_RegGRDel_count_f1_f10['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f10['Percent-2017'] = Concat_RegGRDel_count_f1_f10['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f10['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f10['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f10['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f10['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f10 = Concat_RegGRDel_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f10['Total-2018'] = Concat_RegGRDel_count_f1_f10['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f10['Percent-2018'] = Concat_RegGRDel_count_f1_f10['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f10['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f10['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f10['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f10['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f10 = Concat_RegGRDel_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f10['Total-2019'] = Concat_RegGRDel_count_f1_f10['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f10['Percent-2019'] = Concat_RegGRDel_count_f1_f10['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f10['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f10['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f10['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f10['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f10 = Concat_RegGRDel_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f10['Total-2021'] = Concat_RegGRDel_count_f1_f10['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f10['Percent-2021'] = Concat_RegGRDel_count_f1_f10['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f10['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f10['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f10['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f10['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f10 = Concat_RegGRDel_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f10['Total-2022'] = Concat_RegGRDel_count_f1_f10['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f10['Percent-2022'] = Concat_RegGRDel_count_f1_f10['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f10['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f10['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f10['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f10['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f10 = Concat_RegGRDel_count_f1_f10.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f10['Total-2023'] = Concat_RegGRDel_count_f1_f10['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f10['Percent-2023'] = Concat_RegGRDel_count_f1_f10['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f10['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f10['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f10['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f10['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f10 = Conct_AC_RT_GRDel_f1_f10.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f10['Total-2018'] = Conct_AC_RT_GRDel_f1_f10['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f10['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f10['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f10['Percent-2018'] = Conct_AC_RT_GRDel_f1_f10['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f10['RET-2018'] = Conct_AC_RT_GRDel_f1_f10['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f10['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f10['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f10['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f10['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f10 = Conct_AC_RT_GRDel_f1_f10.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f10['Total-2019'] = Conct_AC_RT_GRDel_f1_f10['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f10['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f10['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f10['Percent-2019'] = Conct_AC_RT_GRDel_f1_f10['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f10['RET-2019'] = Conct_AC_RT_GRDel_f1_f10['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f10['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f10['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f10['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f10['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f10 = Conct_AC_RT_GRDel_f1_f10.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f10['Total-2021'] = Conct_AC_RT_GRDel_f1_f10['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f10['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f10['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f10['Percent-2021'] = Conct_AC_RT_GRDel_f1_f10['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f10['RET-2021'] = Conct_AC_RT_GRDel_f1_f10['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f10['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f10['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f10['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f10['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f10 = Conct_AC_RT_GRDel_f1_f10.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f10['Total-2022'] = Conct_AC_RT_GRDel_f1_f10['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f10['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f10['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f10['Percent-2022'] = Conct_AC_RT_GRDel_f1_f10['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f10['RET-2022'] = Conct_AC_RT_GRDel_f1_f10['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f10['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f10['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f10['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f10['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f10 = Conct_AC_RT_GRDel_f1_f10.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f10['Total-2023'] = Conct_AC_RT_GRDel_f1_f10['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f10['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f10['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f10['Percent-2023'] = Conct_AC_RT_GRDel_f1_f10['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f10['RET-2023'] = Conct_AC_RT_GRDel_f1_f10['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f10['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f10['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f10['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f10['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f10 = Conct_RV_GRDel_f1_f10.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f10['Total-2017'] = Conct_RV_GRDel_f1_f10['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f10['Percent-2017'] = Conct_RV_GRDel_f1_f10['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f10['7DEvolution-2017'] = Conct_RV_GRDel_f1_f10['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f10['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f10['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f10 = Conct_RV_GRDel_f1_f10.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f10['Total-2018'] = Conct_RV_GRDel_f1_f10['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f10['Percent-2018'] = Conct_RV_GRDel_f1_f10['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f10['7DEvolution-2018'] = Conct_RV_GRDel_f1_f10['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f10['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f10['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f10 = Conct_RV_GRDel_f1_f10.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f10['Total-2019'] = Conct_RV_GRDel_f1_f10['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f10['Percent-2019'] = Conct_RV_GRDel_f1_f10['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f10['7DEvolution-2019'] = Conct_RV_GRDel_f1_f10['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f10['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f10['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f10 = Conct_RV_GRDel_f1_f10.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f10['Total-2022'] = Conct_RV_GRDel_f1_f10['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f10['Percent-2022'] = Conct_RV_GRDel_f1_f10['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f10['7DEvolution-2022'] = Conct_RV_GRDel_f1_f10['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f10['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f10['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f10 = Conct_RV_GRDel_f1_f10.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f10['Total-2023'] = Conct_RV_GRDel_f1_f10['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f10['Percent-2023'] = Conct_RV_GRDel_f1_f10['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f10['7DEvolution-2023'] = Conct_RV_GRDel_f1_f10['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f10['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f10['Total-2017'],errors='coerce')
df_Profile_Count_m2_f10 = df_Profile_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f10['Total-2017'] = df_Profile_Count_m2_f10['Total-2017'].astype(int)
df_Profile_Count_m2_f10['Percent-2017'] = df_Profile_Count_m2_f10['Percent-2017'].astype(float)

df_Profile_Count_m2_f10['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f10['Total-2018'],errors='coerce')
df_Profile_Count_m2_f10 = df_Profile_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f10['Total-2018'] = df_Profile_Count_m2_f10['Total-2018'].astype(int)
df_Profile_Count_m2_f10['Percent-2018'] = df_Profile_Count_m2_f10['Percent-2018'].astype(float)

df_Profile_Count_m2_f10['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f10['Total-2019'],errors='coerce')
df_Profile_Count_m2_f10 = df_Profile_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f10['Total-2019'] = df_Profile_Count_m2_f10['Total-2019'].astype(int)
df_Profile_Count_m2_f10['Percent-2019'] = df_Profile_Count_m2_f10['Percent-2019'].astype(float)

df_Profile_Count_m2_f10['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f10['Total-2021'],errors='coerce')
df_Profile_Count_m2_f10 = df_Profile_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f10['Total-2021'] = df_Profile_Count_m2_f10['Total-2021'].astype(int)
df_Profile_Count_m2_f10['Percent-2021'] = df_Profile_Count_m2_f10['Percent-2021'].astype(float)

df_Profile_Count_m2_f10['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f10['Total-2022'],errors='coerce')
df_Profile_Count_m2_f10 = df_Profile_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f10['Total-2022'] = df_Profile_Count_m2_f10['Total-2022'].astype(int)
df_Profile_Count_m2_f10['Percent-2022'] = df_Profile_Count_m2_f10['Percent-2022'].astype(float)

df_Profile_Count_m2_f10['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f10['Total-2023'],errors='coerce')
df_Profile_Count_m2_f10 = df_Profile_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f10['Total-2023'] = df_Profile_Count_m2_f10['Total-2023'].astype(int)
df_Profile_Count_m2_f10['Percent-2023'] = df_Profile_Count_m2_f10['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f10['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f10['Total-2017'],errors='coerce')
df_Pass_Count_m2_f10 = df_Pass_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f10['Total-2017'] = df_Pass_Count_m2_f10['Total-2017'].astype(int)
df_Pass_Count_m2_f10['Percent-2017'] = df_Pass_Count_m2_f10['Percent-2017'].astype(float)

df_Pass_Count_m2_f10['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f10['Total-2018'],errors='coerce')
df_Pass_Count_m2_f10 = df_Pass_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f10['Total-2018'] = df_Pass_Count_m2_f10['Total-2018'].astype(int)
df_Pass_Count_m2_f10['Percent-2018'] = df_Pass_Count_m2_f10['Percent-2018'].astype(float)

df_Pass_Count_m2_f10['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f10['Total-2019'],errors='coerce')
df_Pass_Count_m2_f10 = df_Pass_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f10['Total-2019'] = df_Pass_Count_m2_f10['Total-2019'].astype(int)
df_Pass_Count_m2_f10['Percent-2019'] = df_Pass_Count_m2_f10['Percent-2019'].astype(float)

df_Pass_Count_m2_f10['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f10['Total-2021'],errors='coerce')
df_Pass_Count_m2_f10 = df_Pass_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f10['Total-2021'] = df_Pass_Count_m2_f10['Total-2021'].astype(int)
df_Pass_Count_m2_f10['Percent-2021'] = df_Pass_Count_m2_f10['Percent-2021'].astype(float)

df_Pass_Count_m2_f10['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f10['Total-2022'],errors='coerce')
df_Pass_Count_m2_f10 = df_Pass_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f10['Total-2022'] = df_Pass_Count_m2_f10['Total-2022'].astype(int)
df_Pass_Count_m2_f10['Percent-2022'] = df_Pass_Count_m2_f10['Percent-2022'].astype(float)

df_Pass_Count_m2_f10['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f10['Total-2023'],errors='coerce')
df_Pass_Count_m2_f10 = df_Pass_Count_m2_f10.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f10['Total-2023'] = df_Pass_Count_m2_f10['Total-2023'].astype(int)
df_Pass_Count_m2_f10['Percent-2023'] = df_Pass_Count_m2_f10['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f10['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f10['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f10 = dfAttendees_Country_Count_m2_f10.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f10['Total-2017'] = dfAttendees_Country_Count_m2_f10['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f10['Percent-2017'] = dfAttendees_Country_Count_m2_f10['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f10['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f10['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f10 = dfAttendees_Country_Count_m2_f10.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f10['Total-2018'] = dfAttendees_Country_Count_m2_f10['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f10['Percent-2018'] = dfAttendees_Country_Count_m2_f10['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f10['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f10['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f10 = dfAttendees_Country_Count_m2_f10.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f10['Total-2019'] = dfAttendees_Country_Count_m2_f10['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f10['Percent-2019'] = dfAttendees_Country_Count_m2_f10['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f10['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f10['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f10 = dfAttendees_Country_Count_m2_f10.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f10['Total-2021'] = dfAttendees_Country_Count_m2_f10['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f10['Percent-2021'] = dfAttendees_Country_Count_m2_f10['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f10['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f10['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f10 = dfAttendees_Country_Count_m2_f10.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f10['Total-2022'] = dfAttendees_Country_Count_m2_f10['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f10['Percent-2022'] = dfAttendees_Country_Count_m2_f10['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f10['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f10['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f10 = dfAttendees_Country_Count_m2_f10.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f10['Total-2023'] = dfAttendees_Country_Count_m2_f10['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f10['Percent-2023'] = dfAttendees_Country_Count_m2_f10['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f10['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f10['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f10 = df_ATTENDEES_AREAS_count_m2_f10.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f10['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f10['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f10['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f10['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f10['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f10['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f10 = df_ATTENDEES_AREAS_count_m2_f10.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f10['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f10['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f10['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f10['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f10['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f10['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f10 = df_ATTENDEES_AREAS_count_m2_f10.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f10['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f10['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f10['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f10['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f10['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f10['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f10 = df_ATTENDEES_AREAS_count_m2_f10.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f10['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f10['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f10['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f10['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f10['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f10['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f10 = df_ATTENDEES_AREAS_count_m2_f10.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f10['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f10['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f10['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f10['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f10['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f10['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f10 = df_ATTENDEES_AREAS_count_m2_f10.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f10['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f10['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f10['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f10['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f10['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f10['Total-2017'],errors='coerce')
df_Specialty_count_m2_f10 = df_Specialty_count_m2_f10.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f10['Total-2017'] = df_Specialty_count_m2_f10['Total-2017'].astype(int)
df_Specialty_count_m2_f10['Percent-2017'] = df_Specialty_count_m2_f10['Percent-2017'].astype(float)

df_Specialty_count_m2_f10['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f10['Total-2018'],errors='coerce')
df_Specialty_count_m2_f10 = df_Specialty_count_m2_f10.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f10['Total-2018'] = df_Specialty_count_m2_f10['Total-2018'].astype(int)
df_Specialty_count_m2_f10['Percent-2018'] = df_Specialty_count_m2_f10['Percent-2018'].astype(float)

df_Specialty_count_m2_f10['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f10['Total-2019'],errors='coerce')
df_Specialty_count_m2_f10 = df_Specialty_count_m2_f10.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f10['Total-2019'] = df_Specialty_count_m2_f10['Total-2019'].astype(int)
df_Specialty_count_m2_f10['Percent-2019'] = df_Specialty_count_m2_f10['Percent-2019'].astype(float)

df_Specialty_count_m2_f10['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f10['Total-2021'],errors='coerce')
df_Specialty_count_m2_f10 = df_Specialty_count_m2_f10.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f10['Total-2021'] = df_Specialty_count_m2_f10['Total-2021'].astype(int)
df_Specialty_count_m2_f10['Percent-2021'] = df_Specialty_count_m2_f10['Percent-2021'].astype(float)

df_Specialty_count_m2_f10['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f10['Total-2022'],errors='coerce')
df_Specialty_count_m2_f10 = df_Specialty_count_m2_f10.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f10['Total-2022'] = df_Specialty_count_m2_f10['Total-2022'].astype(int)
df_Specialty_count_m2_f10['Percent-2022'] = df_Specialty_count_m2_f10['Percent-2022'].astype(float)

df_Specialty_count_m2_f10['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f10['Total-2023'],errors='coerce')
df_Specialty_count_m2_f10 = df_Specialty_count_m2_f10.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f10['Total-2023'] = df_Specialty_count_m2_f10['Total-2023'].astype(int)
df_Specialty_count_m2_f10['Percent-2023'] = df_Specialty_count_m2_f10['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f10.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f10.dtypes)
#print(df_Specialty_count_m2_f10.dtypes)

#print(dfAttendees_Country_Count_m2_f10.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f10.dtypes)
#print(df_Specialty_count_m2_f10.dtypes)

# EXCEL FILE
writerf10 = pd.ExcelWriter(outputExcelFile_f10, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f10.to_excel\
    (writerf10, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f10.to_excel\
    (writerf10, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f10.to_excel\
    (writerf10, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f10.to_excel\
    (writerf10, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f10.to_excel\
    (writerf10, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f10.to_excel\
    (writerf10, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f10.to_excel\
    (writerf10, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f10.to_excel\
    (writerf10, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f10.to_excel\
    (writerf10, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f10.to_excel\
    (writerf10, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f10.to_excel\
    (writerf10, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf10.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f10)

workbook.save(outputExcelFile_f10)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 126 days**********************************************')
print('************************************End of 126 days**********************************************')
print('************************************End of 126 days**********************************************')
print('************************************End of 126 days**********************************************')
print('************************************End of 126 days**********************************************')
print('************************************End of 126 days**********************************************')
print('************************************End of 126 days**********************************************')
print('************************************End of 126 days**********************************************')
print('************************************End of 126 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f11_Registrations_count = pd.DataFrame(filter_11_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f11_Registrations_count = dfd17_f11_Registrations_count.fillna('Unknown')
dfd17_f11_Registrations_count['Percent-2017'] = (dfd17_f11_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f11_Registrations_count['Percent-2017'] = dfd17_f11_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f11_Registrations_count['7DEvolution-2017'] = dfd17_f11_Registrations_count['Total-2017'] - dfd17_f10_Registrations_count['Total-2017']
#print(tab(dfd17_f11_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f11_Registrations_count = pd.DataFrame(filter_11_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f11_Registrations_count = dfd18_f11_Registrations_count.fillna('Unknown')
dfd18_f11_Registrations_count['Percent-2018'] = (dfd18_f11_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f11_Registrations_count['Percent-2018'] = dfd18_f11_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f11_Registrations_count['7DEvolution-2018'] = dfd18_f11_Registrations_count['Total-2018'] - dfd18_f10_Registrations_count['Total-2018']
#print(tab(dfd18_f11_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f11_Registrations_count = pd.DataFrame(filter_11_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f11_Registrations_count = dfd19_f11_Registrations_count.fillna('Unknown')
dfd19_f11_Registrations_count['Percent-2019'] = (dfd19_f11_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f11_Registrations_count['Percent-2019'] = dfd19_f11_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f11_Registrations_count['7DEvolution-2019'] = dfd19_f11_Registrations_count['Total-2019'] - dfd19_f10_Registrations_count['Total-2019']
#print(tab(dfd19_f11_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f11_Registrations_count = pd.DataFrame(filter_11_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f11_Registrations_count = dfd21_f11_Registrations_count.fillna('Unknown')
dfd21_f11_Registrations_count['Percent-2021'] = (dfd21_f11_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f11_Registrations_count['Percent-2021'] = dfd21_f11_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f11_Registrations_count['7DEvolution-2021'] = dfd21_f11_Registrations_count['Total-2021'] - dfd21_f10_Registrations_count['Total-2021']
#print(tab(dfd21_f11_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f11_Registrations_count = pd.DataFrame(filter_11_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f11_Registrations_count = dfd22_f11_Registrations_count.fillna('Unknown')
dfd22_f11_Registrations_count['Percent-2022'] = (dfd22_f11_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f11_Registrations_count['Percent-2022'] = dfd22_f11_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f11_Registrations_count['7DEvolution-2022'] = dfd22_f11_Registrations_count['Total-2022'] - dfd22_f10_Registrations_count['Total-2022']
#print(tab(dfd22_f11_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_Registrations_count = pd.DataFrame(filter_11_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f11_Registrations_count = dfd23_f11_Registrations_count.fillna('Unknown')
dfd23_f11_Registrations_count['Percent-2023'] = (dfd23_f11_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f11_Registrations_count['Percent-2023'] = dfd23_f11_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f11_Registrations_count['7DEvolution-2023'] = dfd23_f11_Registrations_count['Total-2023'] - dfd23_f10_Registrations_count['Total-2023']
#print(tab(dfd23_f11_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f11_RegistrationsEvolution_count = pd.DataFrame(filter_11_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f11_RegistrationsEvolution_count = dfd23_f11_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f11_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f11_Registrations_count['Total-2023'] - dfd19_f11_Registrations_count['Total-2019'])/ dfd19_f11_Registrations_count['Total-2019'].sum()) * 100
dfd23_f11_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f11_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f11_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f11 = pd.DataFrame(pd.merge(dfd17_f11_Registrations_count, dfd18_f11_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f11 = pd.DataFrame(pd.merge(dfd19_f11_Registrations_count, dfd21_f11_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f11 = pd.DataFrame(pd.merge(dfd22_f11_Registrations_count, dfd23_f11_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f11 = pd.DataFrame(pd.merge(df_Registrations_count_1_f11, df_Registrations_count_2_f11, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f11 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f11, df_Registrations_count_3_f11, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f11 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f11, dfd23_f11_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f11 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11]
Concat_Registrations_count_f1_f11 = pd.concat(ConcatFrames_Registrations_count_f1_f11)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f11  = ConcatFrames_Registrations_count_f1_f11.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f11.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f11 = filter_11_df18[filter_11_df18['New customer'] == 1]
df_NewCustomer_df19_f11 = filter_11_df19[filter_11_df19['New customer'] == 1]
df_NewCustomer_df21_f11 = filter_11_df21[filter_11_df21['New customer'] == 1]
df_NewCustomer_df22_f11 = filter_11_df22[filter_11_df22['New customer'] == 1]
df_NewCustomer_df23_f11 = filter_11_df23[filter_11_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f11.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f11.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f11.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a11_ACQRET_count = pd.DataFrame(filter_11_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f11_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f11.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f11_ACQRET_count['Percent-2018'] = (dfd18_f11_ACQRET_count['ACQ-2018'] / dfd18_f11_Registrations_count['Total-2018'].sum()) * 100
dfd18_f11_ACQRET_count['Percent-2018'] = dfd18_f11_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f11_ACQRET_count['RET-2018'] = dfd18_a11_ACQRET_count['Total-2018'] - dfd18_f11_ACQRET_count['ACQ-2018']
dfd18_f11_ACQRET_count['Percnt-2018'] = (dfd18_f11_ACQRET_count['RET-2018'] / dfd18_a11_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f11_ACQRET_count['Percnt-2018'] = dfd18_f11_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f11_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a11_ACQRET_count = pd.DataFrame(filter_11_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f11_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f11.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f11_ACQRET_count['Percent-2019'] = (dfd19_f11_ACQRET_count['ACQ-2019'] / dfd19_f11_Registrations_count['Total-2019'].sum()) * 100
dfd19_f11_ACQRET_count['Percent-2019'] = dfd19_f11_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f11_ACQRET_count['RET-2019'] = dfd19_a11_ACQRET_count['Total-2019'] - dfd19_f11_ACQRET_count['ACQ-2019']
dfd19_f11_ACQRET_count['Percnt-2019'] = (dfd19_f11_ACQRET_count['RET-2019'] / dfd19_a11_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f11_ACQRET_count['Percnt-2019'] = dfd19_f11_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f11_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a11_ACQRET_count = pd.DataFrame(filter_11_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f11_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f11.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f11_ACQRET_count['Percent-2021'] = (dfd21_f11_ACQRET_count['ACQ-2021'] / dfd21_f11_Registrations_count['Total-2021'].sum()) * 100
dfd21_f11_ACQRET_count['Percent-2021'] = dfd21_f11_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f11_ACQRET_count['RET-2021'] = dfd21_a11_ACQRET_count['Total-2021'] - dfd21_f11_ACQRET_count['ACQ-2021']
dfd21_f11_ACQRET_count['Percnt-2021'] = (dfd21_f11_ACQRET_count['RET-2021'] / dfd21_a11_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f11_ACQRET_count['Percnt-2021'] = dfd21_f11_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f11_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a11_ACQRET_count = pd.DataFrame(filter_11_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f11_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f11.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f11_ACQRET_count['Percent-2022'] = (dfd22_f11_ACQRET_count['ACQ-2022'] / dfd22_f11_Registrations_count['Total-2022'].sum()) * 100
dfd22_f11_ACQRET_count['Percent-2022'] = dfd22_f11_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f11_ACQRET_count['RET-2022'] = dfd22_a11_ACQRET_count['Total-2022'] - dfd22_f11_ACQRET_count['ACQ-2022']
dfd22_f11_ACQRET_count['Percnt-2022'] = (dfd22_f11_ACQRET_count['RET-2022'] / dfd22_a11_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f11_ACQRET_count['Percnt-2022'] = dfd22_f11_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f11_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a11_ACQRET_count = pd.DataFrame(filter_11_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f11_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f11.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f11_ACQRET_count['Percent-2023'] = (dfd23_f11_ACQRET_count['ACQ-2023'] / dfd23_f11_Registrations_count['Total-2023'].sum()) * 100
dfd23_f11_ACQRET_count['Percent-2023'] = dfd23_f11_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f11_ACQRET_count['RET-2023'] = dfd23_a11_ACQRET_count['Total-2023'] - dfd23_f11_ACQRET_count['ACQ-2023']
dfd23_f11_ACQRET_count['Percnt-2023'] = (dfd23_f11_ACQRET_count['RET-2023'] / dfd23_a11_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f11_ACQRET_count['Percnt-2023'] = dfd23_f11_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f11_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f11 = pd.DataFrame(pd.merge(dfd18_a11_ACQRET_count, dfd18_f11_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f11 = pd.DataFrame(pd.merge(dfd19_a11_ACQRET_count, dfd19_f11_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f11 = pd.DataFrame(pd.merge(dfd21_a11_ACQRET_count, dfd21_f11_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f11 = pd.DataFrame(pd.merge(dfd22_a11_ACQRET_count, dfd22_f11_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_11_f11 = pd.DataFrame(pd.merge(dfd23_a11_ACQRET_count, dfd23_f11_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_11_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f11 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f11, df_ACQRET_count_2_f11, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f11 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f11, df_ACQRET_count_3_f11, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f11 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f11, df_ACQRET_count_4_f11, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f11 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f11, df_ACQRET_count_11_f11, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f11 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11]
Concat_ACQRET_count_f1_f11 = pd.concat(ConcatFrames_ACQRET_count_f1_f11)
#print(tab(Concat_ACQRET_count_f1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f11 = Concat_ACQRET_count_f1_f11[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f11_Revenue_calc = pd.DataFrame(filter_11_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f11_Revenue_calc['Percent-2017'] = (dfd17_f11_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f11_Revenue_calc['Percent-2017'] = dfd17_f11_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f11_Revenue_calc['7DEvolution-2017'] = dfd17_f11_Revenue_calc['Total-2017'] - dfd17_f10_Revenue_calc['Total-2017']
#print(tab(dfd17_f11_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f11_Revenue_calc = pd.DataFrame(filter_11_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f11_Revenue_calc['Percent-2018'] = (dfd18_f11_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f11_Revenue_calc['Percent-2018'] = dfd18_f11_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f11_Revenue_calc['7DEvolution-2018'] = dfd18_f11_Revenue_calc['Total-2018'] - dfd18_f10_Revenue_calc['Total-2018']
#print(tab(dfd18_f11_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f11_Revenue_calc = pd.DataFrame(filter_11_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f11_Revenue_calc['Percent-2019'] = (dfd19_f11_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f11_Revenue_calc['Percent-2019'] = dfd19_f11_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f11_Revenue_calc['7DEvolution-2019'] = dfd19_f11_Revenue_calc['Total-2019'] - dfd19_f10_Revenue_calc['Total-2019']
#print(tab(dfd19_f11_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f11_Revenue_calc = pd.DataFrame(filter_11_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f11_Revenue_calc['Percent-2021'] = (dfd21_f11_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f11_Revenue_calc['Percent-2021'] = dfd21_f11_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f11_Revenue_calc['7DEvolution-2021'] = dfd21_f11_Revenue_calc['Total-2021'] - dfd21_f10_Revenue_calc['Total-2021']
#print(tab(dfd21_f11_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f11_Revenue_calc = pd.DataFrame(filter_11_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f11_Revenue_calc['Percent-2022'] = (dfd22_f11_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f11_Revenue_calc['Percent-2022'] = dfd22_f11_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f11_Revenue_calc['7DEvolution-2022'] = dfd22_f11_Revenue_calc['Total-2022'] - dfd22_f10_Revenue_calc['Total-2022']
#print(tab(dfd22_f11_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_Revenue_calc = pd.DataFrame(filter_11_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f11_Revenue_calc['Percent-2023'] = (dfd23_f11_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f11_Revenue_calc['Percent-2023'] = dfd23_f11_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f11_Revenue_calc['7DEvolution-2023'] = dfd23_f11_Revenue_calc['Total-2023'] - dfd23_f10_Revenue_calc['Total-2023']
#print(tab(dfd23_f11_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f11_RevenueEvolution_calc = pd.DataFrame(filter_11_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f11_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f11_Revenue_calc['Total-2023'] - dfd19_f11_Revenue_calc['Total-2019'])/ dfd19_f11_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f11_RevenueEvolution_calc['Evolution-2023'] = dfd23_f11_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f11_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f11 = pd.DataFrame(pd.merge(dfd17_f11_Revenue_calc, dfd18_f11_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f11 = pd.DataFrame(pd.merge(dfd19_f11_Revenue_calc, dfd21_f11_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f11 = pd.DataFrame(pd.merge(dfd22_f11_Revenue_calc, dfd23_f11_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f11_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f11, df_Revenue_calc_2_f11, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f11Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f11_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f11_Evolution, df_Revenue_calc_3_f11, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f11Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f11 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f11_Evolution, dfd23_f11_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f11 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11]
Concat_REV_count_f1_f11 = pd.concat(ConcatFrames_REV_count_f1_f11)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f11_Registrations_GRDel = pd.DataFrame(filtr_11_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f11_Registrations_GRDel = dfd17_f11_Registrations_GRDel.fillna('Unknown')
dfd17_f11_Registrations_GRDel['Percent-2017'] = (dfd17_f11_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f11_Registrations_GRDel['Percent-2017'] = dfd17_f11_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f11_Registrations_GRDel['7DEvolution-2017'] = dfd17_f11_Registrations_GRDel['Total-2017'] - dfd17_f10_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f11_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f11_Registrations_GRDel = pd.DataFrame(filtr_11_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f11_Registrations_GRDel = dfd18_f11_Registrations_GRDel.fillna('Unknown')
dfd18_f11_Registrations_GRDel['Percent-2018'] = (dfd18_f11_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f11_Registrations_GRDel['Percent-2018'] = dfd18_f11_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f11_Registrations_GRDel['7DEvolution-2018'] = dfd18_f11_Registrations_GRDel['Total-2018'] - dfd18_f10_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f11_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f11_Registrations_GRDel = pd.DataFrame(filtr_11_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f11_Registrations_GRDel = dfd19_f11_Registrations_GRDel.fillna('Unknown')
dfd19_f11_Registrations_GRDel['Percent-2019'] = (dfd19_f11_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f11_Registrations_GRDel['Percent-2019'] = dfd19_f11_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f11_Registrations_GRDel['7DEvolution-2019'] = dfd19_f11_Registrations_GRDel['Total-2019'] - dfd19_f10_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f11_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f11_Registrations_GRDel = pd.DataFrame(filtr_11_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f11_Registrations_GRDel = dfd21_f11_Registrations_GRDel.fillna('Unknown')
dfd21_f11_Registrations_GRDel['Percent-2021'] = (dfd21_f11_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f11_Registrations_GRDel['Percent-2021'] = dfd21_f11_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f11_Registrations_GRDel['7DEvolution-2021'] = dfd21_f11_Registrations_GRDel['Total-2021'] - dfd21_f10_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f11_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f11_Registrations_GRDel = pd.DataFrame(filtr_11_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f11_Registrations_GRDel = dfd22_f11_Registrations_GRDel.fillna('Unknown')
dfd22_f11_Registrations_GRDel['Percent-2022'] = (dfd22_f11_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f11_Registrations_GRDel['Percent-2022'] = dfd22_f11_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f11_Registrations_GRDel['7DEvolution-2022'] = dfd22_f11_Registrations_GRDel['Total-2022'] - dfd22_f10_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f11_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_Registrations_GRDel = pd.DataFrame(filtr_11_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f11_Registrations_GRDel = dfd23_f11_Registrations_GRDel.fillna('Unknown')
dfd23_f11_Registrations_GRDel['Percent-2023'] = (dfd23_f11_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f11_Registrations_GRDel['Percent-2023'] = dfd23_f11_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f11_Registrations_GRDel['7DEvolution-2023'] = dfd23_f11_Registrations_GRDel['Total-2023'] - dfd23_f10_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f11_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f11_Registrations_Evol_GRDel = pd.DataFrame(filtr_11_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f11_Registrations_Evol_GRDel = dfd23_f11_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f11_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f11_Registrations_GRDel['Total-2023'] - dfd19_f11_Registrations_GRDel['Total-2019'])/ dfd19_f11_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f11_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f11 = pd.concat([dfd17_f11_Registrations_GRDel, dfd18_f11_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f11 = pd.DataFrame(pd.merge(dfd17_f11_Registrations_GRDel, dfd18_f11_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f11 = pd.DataFrame(pd.merge(dfd19_f11_Registrations_GRDel, dfd21_f11_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f11 = pd.DataFrame(pd.merge(dfd22_f11_Registrations_GRDel, dfd23_f11_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f11 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f11, df_Registrations_GRDel_2_f11, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_11_f11 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f11, df_Registrations_GRDel_3_f11, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f11 = pd.DataFrame(pd.merge(df_Registrations_GRDel_11_f11, dfd23_f11_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f11 = df_Registrations_GRDel_f11[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f11 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11]
Concat_RegGRDel_count_f1_f11 = pd.concat(ConcatFrames_RegGRDel_count_f1_f11)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f11 = filtr_11_df18_GRdel[filtr_11_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f11 = filtr_11_df19_GRdel[filtr_11_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f11 = filtr_11_df21_GRdel[filtr_11_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f11 = filtr_11_df22_GRdel[filtr_11_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f11 = filtr_11_df23_GRdel[filtr_11_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f11.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f11.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a11_AC_RT_GRDel = pd.DataFrame(filtr_11_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f11_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f11.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f11_AC_RT_GRDel['Percent-2018'] = (dfd18_f11_AC_RT_GRDel['ACQ-2018'] / dfd18_f11_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f11_AC_RT_GRDel['Percent-2018'] = dfd18_f11_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f11_AC_RT_GRDel['RET-2018'] = dfd18_a11_AC_RT_GRDel['Total-2018'] - dfd18_f11_AC_RT_GRDel['ACQ-2018']
dfd18_f11_AC_RT_GRDel['Percnt-2018'] = (dfd18_f11_AC_RT_GRDel['RET-2018'] / dfd18_a11_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f11_AC_RT_GRDel['Percnt-2018'] = dfd18_f11_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f11_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a11_AC_RT_GRDel = pd.DataFrame(filtr_11_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f11_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f11.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f11_AC_RT_GRDel['Percent-2019'] = (dfd19_f11_AC_RT_GRDel['ACQ-2019'] / dfd19_f11_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f11_AC_RT_GRDel['Percent-2019'] = dfd19_f11_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f11_AC_RT_GRDel['RET-2019'] = dfd19_a11_AC_RT_GRDel['Total-2019'] - dfd19_f11_AC_RT_GRDel['ACQ-2019']
dfd19_f11_AC_RT_GRDel['Percnt-2019'] = (dfd19_f11_AC_RT_GRDel['RET-2019'] / dfd19_a11_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f11_AC_RT_GRDel['Percnt-2019'] = dfd19_f11_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f11_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a11_AC_RT_GRDel = pd.DataFrame(filtr_11_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f11_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f11.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f11_AC_RT_GRDel['Percent-2021'] = (dfd21_f11_AC_RT_GRDel['ACQ-2021'] / dfd21_f11_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f11_AC_RT_GRDel['Percent-2021'] = dfd21_f11_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f11_AC_RT_GRDel['RET-2021'] = dfd21_a11_AC_RT_GRDel['Total-2021'] - dfd21_f11_AC_RT_GRDel['ACQ-2021']
dfd21_f11_AC_RT_GRDel['Percnt-2021'] = (dfd21_f11_AC_RT_GRDel['RET-2021'] / dfd21_a11_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f11_AC_RT_GRDel['Percnt-2021'] = dfd21_f11_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f11_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a11_AC_RT_GRDel = pd.DataFrame(filtr_11_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f11_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f11.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f11_AC_RT_GRDel['Percent-2022'] = (dfd22_f11_AC_RT_GRDel['ACQ-2022'] / dfd22_f11_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f11_AC_RT_GRDel['Percent-2022'] = dfd22_f11_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f11_AC_RT_GRDel['RET-2022'] = dfd22_a11_AC_RT_GRDel['Total-2022'] - dfd22_f11_AC_RT_GRDel['ACQ-2022']
dfd22_f11_AC_RT_GRDel['Percnt-2022'] = (dfd22_f11_AC_RT_GRDel['RET-2022'] / dfd22_a11_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f11_AC_RT_GRDel['Percnt-2022'] = dfd22_f11_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f11_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a11_AC_RT_GRDel = pd.DataFrame(filtr_11_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f11_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f11.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f11_AC_RT_GRDel['Percent-2023'] = (dfd23_f11_AC_RT_GRDel['ACQ-2023'] / dfd23_f11_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f11_AC_RT_GRDel['Percent-2023'] = dfd23_f11_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f11_AC_RT_GRDel['RET-2023'] = dfd23_a11_AC_RT_GRDel['Total-2023'] - dfd23_f11_AC_RT_GRDel['ACQ-2023']
dfd23_f11_AC_RT_GRDel['Percnt-2023'] = (dfd23_f11_AC_RT_GRDel['RET-2023'] / dfd23_a11_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f11_AC_RT_GRDel['Percnt-2023'] = dfd23_f11_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f11_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f11 = pd.DataFrame(pd.merge_ordered(dfd18_a11_AC_RT_GRDel, dfd18_f11_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f11 = pd.DataFrame(pd.merge_ordered(dfd19_a11_AC_RT_GRDel, dfd19_f11_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f11 = pd.DataFrame(pd.merge_ordered(dfd21_a11_AC_RT_GRDel, dfd21_f11_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f11 = pd.DataFrame(pd.merge_ordered(dfd22_a11_AC_RT_GRDel, dfd22_f11_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_11_f11 = pd.DataFrame(pd.merge_ordered(dfd23_a11_AC_RT_GRDel, dfd23_f11_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f11 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f11, df_AC_ET_GRDel_2_f11, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f11 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f11, df_AC_ET_GRDel_3_f11, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f11 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f11, df_AC_ET_GRDel_4_f11, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f11 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f11, df_AC_ET_GRDel_11_f11, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f11 = df_AC_RT_GRDel_M4_f11[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f11 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11]
Conct_AC_RT_GRDel_f1_f11 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f11)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_11_df17_GRdel = filtr_11_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f11_Revenu_GRDel = pd.DataFrame(filtr_11_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f11_Revenu_GRDel['Percent-2017'] = (dfd17_f11_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f11_Revenu_GRDel['Percent-2017'] = dfd17_f11_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f11_Revenu_GRDel['7DEvolution-2017'] = dfd17_f11_Revenu_GRDel['Total-2017'] - dfd17_f10_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f11_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_11_df18_GRdel = filtr_11_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f11_Revenu_GRDel = pd.DataFrame(filtr_11_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f11_Revenu_GRDel['Percent-2018'] = (dfd18_f11_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f11_Revenu_GRDel['Percent-2018'] = dfd18_f11_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f11_Revenu_GRDel['7DEvolution-2018'] = dfd18_f11_Revenu_GRDel['Total-2018'] - dfd18_f10_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f11_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_11_df19_GRdel = filtr_11_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f11_Revenu_GRDel = pd.DataFrame(filtr_11_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f11_Revenu_GRDel['Percent-2019'] = (dfd19_f11_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f11_Revenu_GRDel['Percent-2019'] = dfd19_f11_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f11_Revenu_GRDel['7DEvolution-2019'] = dfd19_f11_Revenu_GRDel['Total-2019'] - dfd19_f10_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f11_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_11_df21_GRdel = filtr_11_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f11_Revenu_GRDel = pd.DataFrame(filtr_11_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f11_Revenu_GRDel['Percent-2021'] = (dfd21_f11_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f11_Revenu_GRDel['Percent-2021'] = dfd21_f11_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f11_Revenu_GRDel['7DEvolution-2021'] = dfd21_f11_Revenu_GRDel['Total-2021'] - dfd21_f10_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f11_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_11_df22_GRdel = filtr_11_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f11_Revenu_GRDel = pd.DataFrame(filtr_11_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f11_Revenu_GRDel['Percent-2022'] = (dfd22_f11_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f11_Revenu_GRDel['Percent-2022'] = dfd22_f11_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f11_Revenu_GRDel['7DEvolution-2022'] = dfd22_f11_Revenu_GRDel['Total-2022'] - dfd22_f10_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f11_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_11_df23_GRdel = filtr_11_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f11_Revenu_GRDel = pd.DataFrame(filtr_11_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f11_Revenu_GRDel['Percent-2023'] = (dfd23_f11_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f11_Revenu_GRDel['Percent-2023'] = dfd23_f11_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f11_Revenu_GRDel['7DEvolution-2023'] = dfd23_f11_Revenu_GRDel['Total-2023'] - dfd23_f10_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f11_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f11_Revenu_Evlt_GRDel = pd.DataFrame(filtr_11_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f11_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f11_Revenu_GRDel['Total-2023'] - dfd19_f11_Revenu_GRDel['Total-2019'])/ dfd19_f11_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f11_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f11_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f11_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f11 = pd.DataFrame(pd.merge(dfd17_f11_Revenu_GRDel, dfd18_f11_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f11 = pd.DataFrame(pd.merge(dfd19_f11_Revenu_GRDel, dfd21_f11_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f11 = pd.DataFrame(pd.merge(dfd22_f11_Revenu_GRDel, dfd23_f11_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f11 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f11, df_Revenu_GRDel_2_f11, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_11_f11 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f11, df_Revenu_GRDel_3_f11, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f11 = pd.DataFrame(pd.merge(df_Revenu_GRDel_11_f11, dfd23_f11_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f11 = df_Revenu_GRDel_f11[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f11 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11]
Conct_RV_GRDel_f1_f11 = pd.concat(ConcatFra_RV_GRDel_f1_f11)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f11_Profile_count = pd.DataFrame(filtr_11_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f11_Profile_count = dfd17_f11_Profile_count.fillna('Unknown')
dfd17_f11_Profile_count['Percent-2017'] = (dfd17_f11_Profile_count['Total-2017'] / dfd17_f11_Profile_count['Total-2017'].sum()) * 100
dfd17_f11_Profile_count['Percent-2017'] = dfd17_f11_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f11_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f11_Profile_count = pd.DataFrame(filtr_11_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f11_Profile_count = dfd18_f11_Profile_count.fillna('Unknown')
dfd18_f11_Profile_count['Percent-2018'] = (dfd18_f11_Profile_count['Total-2018'] / dfd18_f11_Profile_count['Total-2018'].sum()) * 100
dfd18_f11_Profile_count['Percent-2018'] = dfd18_f11_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f11_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f11_Profile_count = pd.DataFrame(filtr_11_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f11_Profile_count = dfd19_f11_Profile_count.fillna('Unknown')
dfd19_f11_Profile_count['Percent-2019'] = (dfd19_f11_Profile_count['Total-2019'] / dfd19_f11_Profile_count['Total-2019'].sum()) * 100
dfd19_f11_Profile_count['Percent-2019'] = dfd19_f11_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f11_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f11_Profile_count = pd.DataFrame(filtr_11_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f11_Profile_count = dfd21_f11_Profile_count.fillna('Unknown')
dfd21_f11_Profile_count['Percent-2021'] = (dfd21_f11_Profile_count['Total-2021'] / dfd21_f11_Profile_count['Total-2021'].sum()) * 100
dfd21_f11_Profile_count['Percent-2021'] = dfd21_f11_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f11_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f11_Profile_count = pd.DataFrame(filtr_11_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f11_Profile_count = dfd22_f11_Profile_count.fillna('Unknown')
dfd22_f11_Profile_count['Percent-2022'] = (dfd22_f11_Profile_count['Total-2022'] / dfd22_f11_Profile_count['Total-2022'].sum()) * 100
dfd22_f11_Profile_count['Percent-2022'] = dfd22_f11_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f11_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_Profile_count = pd.DataFrame(filtr_11_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f11_Profile_count = dfd23_f11_Profile_count.fillna('Unknown')
dfd23_f11_Profile_count['Percent-2023'] = (dfd23_f11_Profile_count['Total-2023'] / dfd23_f11_Profile_count['Total-2023'].sum()) * 100
dfd23_f11_Profile_count['Percent-2023'] = dfd23_f11_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f11_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f11 = pd.DataFrame(pd.merge(dfd17_f11_Profile_count, dfd18_f11_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f11 = pd.DataFrame(pd.merge(dfd19_f11_Profile_count, dfd21_f11_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f11 = pd.DataFrame(pd.merge(dfd22_f11_Profile_count, dfd23_f11_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f11 = pd.DataFrame(pd.merge(df_Profile_Count_1_f11, df_Profile_Count_2_f11, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f11 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f11, df_Profile_Count_3_f11, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f11 = df_Profile_Count_m2_f11.append(df_Profile_Count_m2_f11.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f11['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f11_Pass_count = pd.DataFrame(filtr_11_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f11_Pass_count = dfd17_f11_Pass_count.fillna('Unknown')
dfd17_f11_Pass_count['Percent-2017'] = (dfd17_f11_Pass_count['Total-2017'] / dfd17_f11_Pass_count['Total-2017'].sum()) * 100
dfd17_f11_Pass_count['Percent-2017'] = dfd17_f11_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f11_Pass_count = pd.DataFrame(filtr_11_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f11_Pass_count = dfd18_f11_Pass_count.fillna('Unknown')
dfd18_f11_Pass_count['Percent-2018'] = (dfd18_f11_Pass_count['Total-2018'] / dfd18_f11_Pass_count['Total-2018'].sum()) * 100
dfd18_f11_Pass_count['Percent-2018'] = dfd18_f11_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f11_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f11_Pass_count = pd.DataFrame(filtr_11_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f11_Pass_count = dfd19_f11_Pass_count.fillna('Unknown')
dfd19_f11_Pass_count['Percent-2019'] = (dfd19_f11_Pass_count['Total-2019'] / dfd19_f11_Pass_count['Total-2019'].sum()) * 100
dfd19_f11_Pass_count['Percent-2019'] = dfd19_f11_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f11_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f11_Pass_count = pd.DataFrame(filtr_11_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f11_Pass_count = dfd21_f11_Pass_count.fillna('Unknown')
dfd21_f11_Pass_count['Percent-2021'] = (dfd21_f11_Pass_count['Total-2021'] / dfd21_f11_Pass_count['Total-2021'].sum()) * 100
dfd21_f11_Pass_count['Percent-2021'] = dfd21_f11_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f11_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f11_Pass_count = pd.DataFrame(filtr_11_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f11_Pass_count = dfd22_f11_Pass_count.fillna('Unknown')
dfd22_f11_Pass_count['Percent-2022'] = (dfd22_f11_Pass_count['Total-2022'] / dfd22_f11_Pass_count['Total-2022'].sum()) * 100
dfd22_f11_Pass_count['Percent-2022'] = dfd22_f11_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f11_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_Pass_count = pd.DataFrame(filtr_11_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f11_Pass_count = dfd23_f11_Pass_count.fillna('Unknown')
dfd23_f11_Pass_count['Percent-2023'] = (dfd23_f11_Pass_count['Total-2023'] / dfd23_f11_Pass_count['Total-2023'].sum()) * 100
dfd23_f11_Pass_count['Percent-2023'] = dfd23_f11_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f11_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f11 = pd.DataFrame(pd.merge(dfd17_f11_Pass_count, dfd18_f11_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f11 = pd.DataFrame(pd.merge(dfd19_f11_Pass_count, dfd21_f11_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f11 = pd.DataFrame(pd.merge(dfd22_f11_Pass_count, dfd23_f11_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f11 = pd.DataFrame(pd.merge(df_Pass_Count_1_f11, df_Pass_Count_2_f11, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f11 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f11, df_Pass_Count_3_f11, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f11 = df_Pass_Count_m2_f11.append(df_Pass_Count_m2_f11.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f11['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f11_Attendees_Country_count = pd.DataFrame(filtr_11_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f11_Attendees_Country_count = dfd17_f11_Attendees_Country_count.fillna('Unknown')
dfd17_f11_Attendees_Country_count['Percent-2017'] = (dfd17_f11_Attendees_Country_count['Total-2017'] / dfd17_f11_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f11_Attendees_Country_count['Percent-2017'] = dfd17_f11_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f11_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f11_Attendees_Country_count = pd.DataFrame(filtr_11_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f11_Attendees_Country_count = dfd18_f11_Attendees_Country_count.fillna('Unknown')
dfd18_f11_Attendees_Country_count['Percent-2018'] = (dfd18_f11_Attendees_Country_count['Total-2018'] / dfd18_f11_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f11_Attendees_Country_count['Percent-2018'] = dfd18_f11_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f11_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f11_Attendees_Country_count = pd.DataFrame(filtr_11_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f11_Attendees_Country_count = dfd19_f11_Attendees_Country_count.fillna('Unknown')
dfd19_f11_Attendees_Country_count['Percent-2019'] = (dfd19_f11_Attendees_Country_count['Total-2019'] / dfd19_f11_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f11_Attendees_Country_count['Percent-2019'] = dfd19_f11_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f11_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f11_Attendees_Country_count = pd.DataFrame(filtr_11_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f11_Attendees_Country_count = dfd21_f11_Attendees_Country_count.fillna('Unknown')
dfd21_f11_Attendees_Country_count['Percent-2021'] = (dfd21_f11_Attendees_Country_count['Total-2021'] / dfd21_f11_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f11_Attendees_Country_count['Percent-2021'] = dfd21_f11_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f11_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f11_Attendees_Country_count = pd.DataFrame(filtr_11_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f11_Attendees_Country_count = dfd22_f11_Attendees_Country_count.fillna('Unknown')
dfd22_f11_Attendees_Country_count['Percent-2022'] = (dfd22_f11_Attendees_Country_count['Total-2022'] / dfd22_f11_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f11_Attendees_Country_count['Percent-2022'] = dfd22_f11_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f11_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_Attendees_Country_count = pd.DataFrame(filtr_11_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f11_Attendees_Country_count = dfd23_f11_Attendees_Country_count.fillna('Unknown')
dfd23_f11_Attendees_Country_count['Percent-2023'] = (dfd23_f11_Attendees_Country_count['Total-2023'] / dfd23_f11_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f11_Attendees_Country_count['Percent-2023'] = dfd23_f11_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f11_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f11 = pd.DataFrame(pd.merge(dfd17_f11_Attendees_Country_count, dfd18_f11_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f11 = pd.DataFrame(pd.merge(dfd19_f11_Attendees_Country_count, dfd21_f11_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f11 = pd.DataFrame(pd.merge(dfd22_f11_Attendees_Country_count, dfd23_f11_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f11 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f11, dfAttendees_Country_Count_2_f11, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f11.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f11 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f11, dfAttendees_Country_Count_3_f11, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f11 = dfAttendees_Country_Count_m2_f11.append(dfAttendees_Country_Count_m2_f11.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f11['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f11_ATTENDEES_AREAS_count = pd.DataFrame(filtr_11_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f11_ATTENDEES_AREAS_count = dfd17_f11_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f11_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f11_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f11_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f11_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f11_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f11_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f11_ATTENDEES_AREAS_count = pd.DataFrame(filtr_11_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f11_ATTENDEES_AREAS_count = dfd18_f11_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f11_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f11_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f11_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f11_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f11_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f11_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f11_ATTENDEES_AREAS_count = pd.DataFrame(filtr_11_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f11_ATTENDEES_AREAS_count = dfd19_f11_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f11_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f11_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f11_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f11_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f11_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f11_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f11_ATTENDEES_AREAS_count = pd.DataFrame(filtr_11_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f11_ATTENDEES_AREAS_count = dfd21_f11_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f11_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f11_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f11_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f11_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f11_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f11_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f11_ATTENDEES_AREAS_count = pd.DataFrame(filtr_11_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f11_ATTENDEES_AREAS_count = dfd22_f11_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f11_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f11_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f11_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f11_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f11_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f11_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_ATTENDEES_AREAS_count = pd.DataFrame(filtr_11_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f11_ATTENDEES_AREAS_count = dfd23_f11_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f11_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f11_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f11_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f11_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f11_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f11_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f11 = pd.DataFrame(pd.merge(dfd17_f11_ATTENDEES_AREAS_count, dfd18_f11_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f11 = pd.DataFrame(pd.merge(dfd19_f11_ATTENDEES_AREAS_count, dfd21_f11_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f11 = pd.DataFrame(pd.merge(dfd22_f11_ATTENDEES_AREAS_count, dfd23_f11_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f11.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f11 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f11, df_ATTENDEES_AREAS_count_2_f11, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f11 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f11, df_ATTENDEES_AREAS_count_3_f11, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f11 = df_ATTENDEES_AREAS_count_m2_f11.append(df_ATTENDEES_AREAS_count_m2_f11.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f11['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f11_Attendees_Specialty_count = pd.DataFrame(filtr_11_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f11_Attendees_Specialty_count = dfd17_f11_Attendees_Specialty_count.fillna('Unknown')
dfd17_f11_Attendees_Specialty_count['Percent-2017'] = (dfd17_f11_Attendees_Specialty_count['Total-2017'] / dfd17_f11_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f11_Attendees_Specialty_count['Percent-2017'] = dfd17_f11_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f11_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f11_Attendees_Specialty_count = pd.DataFrame(filtr_11_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f11_Attendees_Specialty_count = dfd18_f11_Attendees_Specialty_count.fillna('Unknown')
dfd18_f11_Attendees_Specialty_count['Percent-2018'] = (dfd18_f11_Attendees_Specialty_count['Total-2018'] / dfd18_f11_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f11_Attendees_Specialty_count['Percent-2018'] = dfd18_f11_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f11_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f11_Attendees_Specialty_count = pd.DataFrame(filtr_11_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f11_Attendees_Specialty_count = dfd19_f11_Attendees_Specialty_count.fillna('Unknown')
dfd19_f11_Attendees_Specialty_count['Percent-2019'] = (dfd19_f11_Attendees_Specialty_count['Total-2019'] / dfd19_f11_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f11_Attendees_Specialty_count['Percent-2019'] = dfd19_f11_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f11_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f11_Attendees_Specialty_count = pd.DataFrame(filtr_11_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f11_Attendees_Specialty_count = dfd21_f11_Attendees_Specialty_count.fillna('Unknown')
dfd21_f11_Attendees_Specialty_count['Percent-2021'] = (dfd21_f11_Attendees_Specialty_count['Total-2021'] / dfd21_f11_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f11_Attendees_Specialty_count['Percent-2021'] = dfd21_f11_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f11_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f11_Attendees_Specialty_count = pd.DataFrame(filtr_11_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f11_Attendees_Specialty_count = dfd22_f11_Attendees_Specialty_count.fillna('Unknown')
dfd22_f11_Attendees_Specialty_count['Percent-2022'] = (dfd22_f11_Attendees_Specialty_count['Total-2022'] / dfd22_f11_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f11_Attendees_Specialty_count['Percent-2022'] = dfd22_f11_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f11_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f11_Attendees_Specialty_count = pd.DataFrame(filtr_11_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f11_Attendees_Specialty_count = dfd23_f11_Attendees_Specialty_count.fillna('Unknown')
dfd23_f11_Attendees_Specialty_count['Percent-2023'] = (dfd23_f11_Attendees_Specialty_count['Total-2023'] / dfd23_f11_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f11_Attendees_Specialty_count['Percent-2023'] = dfd23_f11_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f11_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f11 = pd.DataFrame(pd.merge(dfd17_f11_Attendees_Specialty_count, dfd18_f11_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f11 = pd.DataFrame(pd.merge(dfd19_f11_Attendees_Specialty_count, dfd21_f11_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f11 = pd.DataFrame(pd.merge(dfd22_f11_Attendees_Specialty_count, dfd23_f11_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f11 = pd.DataFrame(pd.merge(df_Specialty_count_1_f11, df_Specialty_count_2_f11, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f11.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f11 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f11, df_Specialty_count_3_f11, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f11 = df_Specialty_count_m2_f11.append(df_Specialty_count_m2_f11.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f11['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f11['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f11['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f11 = Concat_Registrations_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f11['Total-2017'] = Concat_Registrations_count_f1_f11['Total-2017'].astype(int)
Concat_Registrations_count_f1_f11['Percent-2017'] = Concat_Registrations_count_f1_f11['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f11['7DEvolution-2017'] = Concat_Registrations_count_f1_f11['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f11['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f11['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f11 = Concat_Registrations_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f11['Total-2018'] = Concat_Registrations_count_f1_f11['Total-2018'].astype(int)
Concat_Registrations_count_f1_f11['Percent-2018'] = Concat_Registrations_count_f1_f11['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f11['7DEvolution-2018'] = Concat_Registrations_count_f1_f11['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f11['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f11['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f11 = Concat_Registrations_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f11['Total-2019'] = Concat_Registrations_count_f1_f11['Total-2019'].astype(int)
Concat_Registrations_count_f1_f11['Percent-2019'] = Concat_Registrations_count_f1_f11['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f11['7DEvolution-2019'] = Concat_Registrations_count_f1_f11['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f11['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f11['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f11 = Concat_Registrations_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f11['Total-2021'] = Concat_Registrations_count_f1_f11['Total-2021'].astype(int)
Concat_Registrations_count_f1_f11['Percent-2021'] = Concat_Registrations_count_f1_f11['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f11['7DEvolution-2021'] = Concat_Registrations_count_f1_f11['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f11['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f11['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f11 = Concat_Registrations_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f11['Total-2022'] = Concat_Registrations_count_f1_f11['Total-2022'].astype(int)
Concat_Registrations_count_f1_f11['Percent-2022'] = Concat_Registrations_count_f1_f11['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f11['7DEvolution-2022'] = Concat_Registrations_count_f1_f11['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f11['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f11['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f11 = Concat_Registrations_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f11['Total-2023'] = Concat_Registrations_count_f1_f11['Total-2023'].astype(int)
Concat_Registrations_count_f1_f11['Percent-2023'] = Concat_Registrations_count_f1_f11['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f11['7DEvolution-2023'] = Concat_Registrations_count_f1_f11['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f11['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f11['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f11 = Concat_ACQRET_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f11['Total-2018'] = Concat_ACQRET_count_f1_f11['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f11['ACQ-2018'] = Concat_ACQRET_count_f1_f11['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f11['Percent-2018'] = Concat_ACQRET_count_f1_f11['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f11['RET-2018'] = Concat_ACQRET_count_f1_f11['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f11['Percnt-2018'] = Concat_ACQRET_count_f1_f11['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f11['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f11['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f11 = Concat_ACQRET_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f11['Total-2019'] = Concat_ACQRET_count_f1_f11['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f11['ACQ-2019'] = Concat_ACQRET_count_f1_f11['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f11['Percent-2019'] = Concat_ACQRET_count_f1_f11['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f11['RET-2019'] = Concat_ACQRET_count_f1_f11['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f11['Percnt-2019'] = Concat_ACQRET_count_f1_f11['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f11['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f11['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f11 = Concat_ACQRET_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f11['Total-2021'] = Concat_ACQRET_count_f1_f11['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f11['ACQ-2021'] = Concat_ACQRET_count_f1_f11['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f11['Percent-2021'] = Concat_ACQRET_count_f1_f11['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f11['RET-2021'] = Concat_ACQRET_count_f1_f11['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f11['Percnt-2021'] = Concat_ACQRET_count_f1_f11['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f11['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f11['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f11 = Concat_ACQRET_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f11['Total-2022'] = Concat_ACQRET_count_f1_f11['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f11['ACQ-2022'] = Concat_ACQRET_count_f1_f11['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f11['Percent-2022'] = Concat_ACQRET_count_f1_f11['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f11['RET-2022'] = Concat_ACQRET_count_f1_f11['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f11['Percnt-2022'] = Concat_ACQRET_count_f1_f11['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f11['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f11['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f11 = Concat_ACQRET_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f11['Total-2023'] = Concat_ACQRET_count_f1_f11['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f11['ACQ-2023'] = Concat_ACQRET_count_f1_f11['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f11['Percent-2023'] = Concat_ACQRET_count_f1_f11['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f11['RET-2023'] = Concat_ACQRET_count_f1_f11['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f11['Percnt-2023'] = Concat_ACQRET_count_f1_f11['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f11['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f11['Total-2017'],errors='coerce')
Concat_REV_count_f1_f11 = Concat_REV_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f11['Total-2017'] = Concat_REV_count_f1_f11['Total-2017'].astype(int)
Concat_REV_count_f1_f11['Percent-2017'] = Concat_REV_count_f1_f11['Percent-2017'].astype(float)
Concat_REV_count_f1_f11['7DEvolution-2017'] = Concat_REV_count_f1_f11['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f11['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f11['Total-2018'],errors='coerce')
Concat_REV_count_f1_f11 = Concat_REV_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f11['Total-2018'] = Concat_REV_count_f1_f11['Total-2018'].astype(int)
Concat_REV_count_f1_f11['Percent-2018'] = Concat_REV_count_f1_f11['Percent-2018'].astype(float)
Concat_REV_count_f1_f11['7DEvolution-2018'] = Concat_REV_count_f1_f11['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f11['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f11['Total-2019'],errors='coerce')
Concat_REV_count_f1_f11 = Concat_REV_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f11['Total-2019'] = Concat_REV_count_f1_f11['Total-2019'].astype(int)
Concat_REV_count_f1_f11['Percent-2019'] = Concat_REV_count_f1_f11['Percent-2019'].astype(float)
Concat_REV_count_f1_f11['7DEvolution-2019'] = Concat_REV_count_f1_f11['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f11['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f11['Total-2022'],errors='coerce')
Concat_REV_count_f1_f11 = Concat_REV_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f11['Total-2022'] = Concat_REV_count_f1_f11['Total-2022'].astype(int)
Concat_REV_count_f1_f11['Percent-2022'] = Concat_REV_count_f1_f11['Percent-2022'].astype(float)
Concat_REV_count_f1_f11['7DEvolution-2022'] = Concat_REV_count_f1_f11['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f11['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f11['Total-2023'],errors='coerce')
Concat_REV_count_f1_f11 = Concat_REV_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f11['Total-2023'] = Concat_REV_count_f1_f11['Total-2023'].astype(int)
Concat_REV_count_f1_f11['Percent-2023'] = Concat_REV_count_f1_f11['Percent-2023'].astype(float)
Concat_REV_count_f1_f11['7DEvolution-2023'] = Concat_REV_count_f1_f11['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f11['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f11['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f11 = Concat_RegGRDel_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f11['Total-2017'] = Concat_RegGRDel_count_f1_f11['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f11['Percent-2017'] = Concat_RegGRDel_count_f1_f11['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f11['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f11['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f11['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f11['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f11 = Concat_RegGRDel_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f11['Total-2018'] = Concat_RegGRDel_count_f1_f11['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f11['Percent-2018'] = Concat_RegGRDel_count_f1_f11['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f11['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f11['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f11['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f11['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f11 = Concat_RegGRDel_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f11['Total-2019'] = Concat_RegGRDel_count_f1_f11['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f11['Percent-2019'] = Concat_RegGRDel_count_f1_f11['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f11['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f11['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f11['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f11['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f11 = Concat_RegGRDel_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f11['Total-2021'] = Concat_RegGRDel_count_f1_f11['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f11['Percent-2021'] = Concat_RegGRDel_count_f1_f11['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f11['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f11['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f11['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f11['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f11 = Concat_RegGRDel_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f11['Total-2022'] = Concat_RegGRDel_count_f1_f11['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f11['Percent-2022'] = Concat_RegGRDel_count_f1_f11['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f11['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f11['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f11['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f11['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f11 = Concat_RegGRDel_count_f1_f11.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f11['Total-2023'] = Concat_RegGRDel_count_f1_f11['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f11['Percent-2023'] = Concat_RegGRDel_count_f1_f11['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f11['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f11['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f11['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f11['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f11 = Conct_AC_RT_GRDel_f1_f11.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f11['Total-2018'] = Conct_AC_RT_GRDel_f1_f11['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f11['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f11['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f11['Percent-2018'] = Conct_AC_RT_GRDel_f1_f11['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f11['RET-2018'] = Conct_AC_RT_GRDel_f1_f11['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f11['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f11['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f11['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f11['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f11 = Conct_AC_RT_GRDel_f1_f11.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f11['Total-2019'] = Conct_AC_RT_GRDel_f1_f11['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f11['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f11['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f11['Percent-2019'] = Conct_AC_RT_GRDel_f1_f11['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f11['RET-2019'] = Conct_AC_RT_GRDel_f1_f11['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f11['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f11['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f11['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f11['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f11 = Conct_AC_RT_GRDel_f1_f11.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f11['Total-2021'] = Conct_AC_RT_GRDel_f1_f11['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f11['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f11['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f11['Percent-2021'] = Conct_AC_RT_GRDel_f1_f11['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f11['RET-2021'] = Conct_AC_RT_GRDel_f1_f11['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f11['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f11['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f11['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f11['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f11 = Conct_AC_RT_GRDel_f1_f11.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f11['Total-2022'] = Conct_AC_RT_GRDel_f1_f11['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f11['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f11['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f11['Percent-2022'] = Conct_AC_RT_GRDel_f1_f11['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f11['RET-2022'] = Conct_AC_RT_GRDel_f1_f11['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f11['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f11['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f11['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f11['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f11 = Conct_AC_RT_GRDel_f1_f11.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f11['Total-2023'] = Conct_AC_RT_GRDel_f1_f11['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f11['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f11['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f11['Percent-2023'] = Conct_AC_RT_GRDel_f1_f11['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f11['RET-2023'] = Conct_AC_RT_GRDel_f1_f11['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f11['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f11['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f11['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f11['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f11 = Conct_RV_GRDel_f1_f11.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f11['Total-2017'] = Conct_RV_GRDel_f1_f11['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f11['Percent-2017'] = Conct_RV_GRDel_f1_f11['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f11['7DEvolution-2017'] = Conct_RV_GRDel_f1_f11['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f11['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f11['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f11 = Conct_RV_GRDel_f1_f11.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f11['Total-2018'] = Conct_RV_GRDel_f1_f11['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f11['Percent-2018'] = Conct_RV_GRDel_f1_f11['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f11['7DEvolution-2018'] = Conct_RV_GRDel_f1_f11['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f11['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f11['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f11 = Conct_RV_GRDel_f1_f11.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f11['Total-2019'] = Conct_RV_GRDel_f1_f11['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f11['Percent-2019'] = Conct_RV_GRDel_f1_f11['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f11['7DEvolution-2019'] = Conct_RV_GRDel_f1_f11['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f11['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f11['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f11 = Conct_RV_GRDel_f1_f11.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f11['Total-2022'] = Conct_RV_GRDel_f1_f11['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f11['Percent-2022'] = Conct_RV_GRDel_f1_f11['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f11['7DEvolution-2022'] = Conct_RV_GRDel_f1_f11['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f11['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f11['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f11 = Conct_RV_GRDel_f1_f11.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f11['Total-2023'] = Conct_RV_GRDel_f1_f11['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f11['Percent-2023'] = Conct_RV_GRDel_f1_f11['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f11['7DEvolution-2023'] = Conct_RV_GRDel_f1_f11['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f11['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f11['Total-2017'],errors='coerce')
df_Profile_Count_m2_f11 = df_Profile_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f11['Total-2017'] = df_Profile_Count_m2_f11['Total-2017'].astype(int)
df_Profile_Count_m2_f11['Percent-2017'] = df_Profile_Count_m2_f11['Percent-2017'].astype(float)

df_Profile_Count_m2_f11['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f11['Total-2018'],errors='coerce')
df_Profile_Count_m2_f11 = df_Profile_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f11['Total-2018'] = df_Profile_Count_m2_f11['Total-2018'].astype(int)
df_Profile_Count_m2_f11['Percent-2018'] = df_Profile_Count_m2_f11['Percent-2018'].astype(float)

df_Profile_Count_m2_f11['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f11['Total-2019'],errors='coerce')
df_Profile_Count_m2_f11 = df_Profile_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f11['Total-2019'] = df_Profile_Count_m2_f11['Total-2019'].astype(int)
df_Profile_Count_m2_f11['Percent-2019'] = df_Profile_Count_m2_f11['Percent-2019'].astype(float)

df_Profile_Count_m2_f11['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f11['Total-2021'],errors='coerce')
df_Profile_Count_m2_f11 = df_Profile_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f11['Total-2021'] = df_Profile_Count_m2_f11['Total-2021'].astype(int)
df_Profile_Count_m2_f11['Percent-2021'] = df_Profile_Count_m2_f11['Percent-2021'].astype(float)

df_Profile_Count_m2_f11['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f11['Total-2022'],errors='coerce')
df_Profile_Count_m2_f11 = df_Profile_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f11['Total-2022'] = df_Profile_Count_m2_f11['Total-2022'].astype(int)
df_Profile_Count_m2_f11['Percent-2022'] = df_Profile_Count_m2_f11['Percent-2022'].astype(float)

df_Profile_Count_m2_f11['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f11['Total-2023'],errors='coerce')
df_Profile_Count_m2_f11 = df_Profile_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f11['Total-2023'] = df_Profile_Count_m2_f11['Total-2023'].astype(int)
df_Profile_Count_m2_f11['Percent-2023'] = df_Profile_Count_m2_f11['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f11['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f11['Total-2017'],errors='coerce')
df_Pass_Count_m2_f11 = df_Pass_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f11['Total-2017'] = df_Pass_Count_m2_f11['Total-2017'].astype(int)
df_Pass_Count_m2_f11['Percent-2017'] = df_Pass_Count_m2_f11['Percent-2017'].astype(float)

df_Pass_Count_m2_f11['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f11['Total-2018'],errors='coerce')
df_Pass_Count_m2_f11 = df_Pass_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f11['Total-2018'] = df_Pass_Count_m2_f11['Total-2018'].astype(int)
df_Pass_Count_m2_f11['Percent-2018'] = df_Pass_Count_m2_f11['Percent-2018'].astype(float)

df_Pass_Count_m2_f11['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f11['Total-2019'],errors='coerce')
df_Pass_Count_m2_f11 = df_Pass_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f11['Total-2019'] = df_Pass_Count_m2_f11['Total-2019'].astype(int)
df_Pass_Count_m2_f11['Percent-2019'] = df_Pass_Count_m2_f11['Percent-2019'].astype(float)

df_Pass_Count_m2_f11['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f11['Total-2021'],errors='coerce')
df_Pass_Count_m2_f11 = df_Pass_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f11['Total-2021'] = df_Pass_Count_m2_f11['Total-2021'].astype(int)
df_Pass_Count_m2_f11['Percent-2021'] = df_Pass_Count_m2_f11['Percent-2021'].astype(float)

df_Pass_Count_m2_f11['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f11['Total-2022'],errors='coerce')
df_Pass_Count_m2_f11 = df_Pass_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f11['Total-2022'] = df_Pass_Count_m2_f11['Total-2022'].astype(int)
df_Pass_Count_m2_f11['Percent-2022'] = df_Pass_Count_m2_f11['Percent-2022'].astype(float)

df_Pass_Count_m2_f11['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f11['Total-2023'],errors='coerce')
df_Pass_Count_m2_f11 = df_Pass_Count_m2_f11.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f11['Total-2023'] = df_Pass_Count_m2_f11['Total-2023'].astype(int)
df_Pass_Count_m2_f11['Percent-2023'] = df_Pass_Count_m2_f11['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f11['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f11['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f11 = dfAttendees_Country_Count_m2_f11.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f11['Total-2017'] = dfAttendees_Country_Count_m2_f11['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f11['Percent-2017'] = dfAttendees_Country_Count_m2_f11['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f11['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f11['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f11 = dfAttendees_Country_Count_m2_f11.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f11['Total-2018'] = dfAttendees_Country_Count_m2_f11['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f11['Percent-2018'] = dfAttendees_Country_Count_m2_f11['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f11['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f11['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f11 = dfAttendees_Country_Count_m2_f11.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f11['Total-2019'] = dfAttendees_Country_Count_m2_f11['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f11['Percent-2019'] = dfAttendees_Country_Count_m2_f11['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f11['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f11['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f11 = dfAttendees_Country_Count_m2_f11.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f11['Total-2021'] = dfAttendees_Country_Count_m2_f11['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f11['Percent-2021'] = dfAttendees_Country_Count_m2_f11['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f11['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f11['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f11 = dfAttendees_Country_Count_m2_f11.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f11['Total-2022'] = dfAttendees_Country_Count_m2_f11['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f11['Percent-2022'] = dfAttendees_Country_Count_m2_f11['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f11['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f11['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f11 = dfAttendees_Country_Count_m2_f11.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f11['Total-2023'] = dfAttendees_Country_Count_m2_f11['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f11['Percent-2023'] = dfAttendees_Country_Count_m2_f11['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f11['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f11['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f11 = df_ATTENDEES_AREAS_count_m2_f11.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f11['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f11['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f11['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f11['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f11['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f11['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f11 = df_ATTENDEES_AREAS_count_m2_f11.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f11['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f11['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f11['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f11['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f11['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f11['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f11 = df_ATTENDEES_AREAS_count_m2_f11.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f11['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f11['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f11['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f11['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f11['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f11['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f11 = df_ATTENDEES_AREAS_count_m2_f11.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f11['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f11['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f11['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f11['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f11['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f11['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f11 = df_ATTENDEES_AREAS_count_m2_f11.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f11['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f11['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f11['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f11['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f11['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f11['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f11 = df_ATTENDEES_AREAS_count_m2_f11.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f11['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f11['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f11['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f11['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f11['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f11['Total-2017'],errors='coerce')
df_Specialty_count_m2_f11 = df_Specialty_count_m2_f11.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f11['Total-2017'] = df_Specialty_count_m2_f11['Total-2017'].astype(int)
df_Specialty_count_m2_f11['Percent-2017'] = df_Specialty_count_m2_f11['Percent-2017'].astype(float)

df_Specialty_count_m2_f11['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f11['Total-2018'],errors='coerce')
df_Specialty_count_m2_f11 = df_Specialty_count_m2_f11.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f11['Total-2018'] = df_Specialty_count_m2_f11['Total-2018'].astype(int)
df_Specialty_count_m2_f11['Percent-2018'] = df_Specialty_count_m2_f11['Percent-2018'].astype(float)

df_Specialty_count_m2_f11['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f11['Total-2019'],errors='coerce')
df_Specialty_count_m2_f11 = df_Specialty_count_m2_f11.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f11['Total-2019'] = df_Specialty_count_m2_f11['Total-2019'].astype(int)
df_Specialty_count_m2_f11['Percent-2019'] = df_Specialty_count_m2_f11['Percent-2019'].astype(float)

df_Specialty_count_m2_f11['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f11['Total-2021'],errors='coerce')
df_Specialty_count_m2_f11 = df_Specialty_count_m2_f11.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f11['Total-2021'] = df_Specialty_count_m2_f11['Total-2021'].astype(int)
df_Specialty_count_m2_f11['Percent-2021'] = df_Specialty_count_m2_f11['Percent-2021'].astype(float)

df_Specialty_count_m2_f11['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f11['Total-2022'],errors='coerce')
df_Specialty_count_m2_f11 = df_Specialty_count_m2_f11.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f11['Total-2022'] = df_Specialty_count_m2_f11['Total-2022'].astype(int)
df_Specialty_count_m2_f11['Percent-2022'] = df_Specialty_count_m2_f11['Percent-2022'].astype(float)

df_Specialty_count_m2_f11['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f11['Total-2023'],errors='coerce')
df_Specialty_count_m2_f11 = df_Specialty_count_m2_f11.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f11['Total-2023'] = df_Specialty_count_m2_f11['Total-2023'].astype(int)
df_Specialty_count_m2_f11['Percent-2023'] = df_Specialty_count_m2_f11['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f11.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f11.dtypes)
#print(df_Specialty_count_m2_f11.dtypes)

#print(dfAttendees_Country_Count_m2_f11.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f11.dtypes)
#print(df_Specialty_count_m2_f11.dtypes)

# EXCEL FILE
writerf11 = pd.ExcelWriter(outputExcelFile_f11, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f11.to_excel\
    (writerf11, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f11.to_excel\
    (writerf11, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f11.to_excel\
    (writerf11, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f11.to_excel\
    (writerf11, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f11.to_excel\
    (writerf11, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f11.to_excel\
    (writerf11, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f11.to_excel\
    (writerf11, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f11.to_excel\
    (writerf11, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f11.to_excel\
    (writerf11, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f11.to_excel\
    (writerf11, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f11.to_excel\
    (writerf11, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf11.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f11)

workbook.save(outputExcelFile_f11)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 119 days**********************************************')
print('************************************End of 119 days**********************************************')
print('************************************End of 119 days**********************************************')
print('************************************End of 119 days**********************************************')
print('************************************End of 119 days**********************************************')
print('************************************End of 119 days**********************************************')
print('************************************End of 119 days**********************************************')
print('************************************End of 119 days**********************************************')
print('************************************End of 119 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f12_Registrations_count = pd.DataFrame(filter_12_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f12_Registrations_count = dfd17_f12_Registrations_count.fillna('Unknown')
dfd17_f12_Registrations_count['Percent-2017'] = (dfd17_f12_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f12_Registrations_count['Percent-2017'] = dfd17_f12_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f12_Registrations_count['7DEvolution-2017'] = dfd17_f12_Registrations_count['Total-2017'] - dfd17_f11_Registrations_count['Total-2017']
#print(tab(dfd17_f12_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f12_Registrations_count = pd.DataFrame(filter_12_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f12_Registrations_count = dfd18_f12_Registrations_count.fillna('Unknown')
dfd18_f12_Registrations_count['Percent-2018'] = (dfd18_f12_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f12_Registrations_count['Percent-2018'] = dfd18_f12_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f12_Registrations_count['7DEvolution-2018'] = dfd18_f12_Registrations_count['Total-2018'] - dfd18_f11_Registrations_count['Total-2018']
#print(tab(dfd18_f12_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f12_Registrations_count = pd.DataFrame(filter_12_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f12_Registrations_count = dfd19_f12_Registrations_count.fillna('Unknown')
dfd19_f12_Registrations_count['Percent-2019'] = (dfd19_f12_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f12_Registrations_count['Percent-2019'] = dfd19_f12_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f12_Registrations_count['7DEvolution-2019'] = dfd19_f12_Registrations_count['Total-2019'] - dfd19_f11_Registrations_count['Total-2019']
#print(tab(dfd19_f12_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f12_Registrations_count = pd.DataFrame(filter_12_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f12_Registrations_count = dfd21_f12_Registrations_count.fillna('Unknown')
dfd21_f12_Registrations_count['Percent-2021'] = (dfd21_f12_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f12_Registrations_count['Percent-2021'] = dfd21_f12_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f12_Registrations_count['7DEvolution-2021'] = dfd21_f12_Registrations_count['Total-2021'] - dfd21_f11_Registrations_count['Total-2021']
#print(tab(dfd21_f12_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f12_Registrations_count = pd.DataFrame(filter_12_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f12_Registrations_count = dfd22_f12_Registrations_count.fillna('Unknown')
dfd22_f12_Registrations_count['Percent-2022'] = (dfd22_f12_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f12_Registrations_count['Percent-2022'] = dfd22_f12_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f12_Registrations_count['7DEvolution-2022'] = dfd22_f12_Registrations_count['Total-2022'] - dfd22_f11_Registrations_count['Total-2022']
#print(tab(dfd22_f12_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_Registrations_count = pd.DataFrame(filter_12_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f12_Registrations_count = dfd23_f12_Registrations_count.fillna('Unknown')
dfd23_f12_Registrations_count['Percent-2023'] = (dfd23_f12_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f12_Registrations_count['Percent-2023'] = dfd23_f12_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f12_Registrations_count['7DEvolution-2023'] = dfd23_f12_Registrations_count['Total-2023'] - dfd23_f11_Registrations_count['Total-2023']
#print(tab(dfd23_f12_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f12_RegistrationsEvolution_count = pd.DataFrame(filter_12_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f12_RegistrationsEvolution_count = dfd23_f12_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f12_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f12_Registrations_count['Total-2023'] - dfd19_f12_Registrations_count['Total-2019'])/ dfd19_f12_Registrations_count['Total-2019'].sum()) * 100
dfd23_f12_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f12_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f12_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f12 = pd.DataFrame(pd.merge(dfd17_f12_Registrations_count, dfd18_f12_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f12 = pd.DataFrame(pd.merge(dfd19_f12_Registrations_count, dfd21_f12_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f12 = pd.DataFrame(pd.merge(dfd22_f12_Registrations_count, dfd23_f12_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f12 = pd.DataFrame(pd.merge(df_Registrations_count_1_f12, df_Registrations_count_2_f12, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f12 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f12, df_Registrations_count_3_f12, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f12 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f12, dfd23_f12_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f12 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12]
Concat_Registrations_count_f1_f12 = pd.concat(ConcatFrames_Registrations_count_f1_f12)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f12  = ConcatFrames_Registrations_count_f1_f12.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f12.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f12 = filter_12_df18[filter_12_df18['New customer'] == 1]
df_NewCustomer_df19_f12 = filter_12_df19[filter_12_df19['New customer'] == 1]
df_NewCustomer_df21_f12 = filter_12_df21[filter_12_df21['New customer'] == 1]
df_NewCustomer_df22_f12 = filter_12_df22[filter_12_df22['New customer'] == 1]
df_NewCustomer_df23_f12 = filter_12_df23[filter_12_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f12.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f12.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f12.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a12_ACQRET_count = pd.DataFrame(filter_12_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f12_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f12.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f12_ACQRET_count['Percent-2018'] = (dfd18_f12_ACQRET_count['ACQ-2018'] / dfd18_f12_Registrations_count['Total-2018'].sum()) * 100
dfd18_f12_ACQRET_count['Percent-2018'] = dfd18_f12_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f12_ACQRET_count['RET-2018'] = dfd18_a12_ACQRET_count['Total-2018'] - dfd18_f12_ACQRET_count['ACQ-2018']
dfd18_f12_ACQRET_count['Percnt-2018'] = (dfd18_f12_ACQRET_count['RET-2018'] / dfd18_a12_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f12_ACQRET_count['Percnt-2018'] = dfd18_f12_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f12_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a12_ACQRET_count = pd.DataFrame(filter_12_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f12_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f12.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f12_ACQRET_count['Percent-2019'] = (dfd19_f12_ACQRET_count['ACQ-2019'] / dfd19_f12_Registrations_count['Total-2019'].sum()) * 100
dfd19_f12_ACQRET_count['Percent-2019'] = dfd19_f12_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f12_ACQRET_count['RET-2019'] = dfd19_a12_ACQRET_count['Total-2019'] - dfd19_f12_ACQRET_count['ACQ-2019']
dfd19_f12_ACQRET_count['Percnt-2019'] = (dfd19_f12_ACQRET_count['RET-2019'] / dfd19_a12_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f12_ACQRET_count['Percnt-2019'] = dfd19_f12_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f12_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a12_ACQRET_count = pd.DataFrame(filter_12_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f12_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f12.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f12_ACQRET_count['Percent-2021'] = (dfd21_f12_ACQRET_count['ACQ-2021'] / dfd21_f12_Registrations_count['Total-2021'].sum()) * 100
dfd21_f12_ACQRET_count['Percent-2021'] = dfd21_f12_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f12_ACQRET_count['RET-2021'] = dfd21_a12_ACQRET_count['Total-2021'] - dfd21_f12_ACQRET_count['ACQ-2021']
dfd21_f12_ACQRET_count['Percnt-2021'] = (dfd21_f12_ACQRET_count['RET-2021'] / dfd21_a12_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f12_ACQRET_count['Percnt-2021'] = dfd21_f12_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f12_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a12_ACQRET_count = pd.DataFrame(filter_12_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f12_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f12.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f12_ACQRET_count['Percent-2022'] = (dfd22_f12_ACQRET_count['ACQ-2022'] / dfd22_f12_Registrations_count['Total-2022'].sum()) * 100
dfd22_f12_ACQRET_count['Percent-2022'] = dfd22_f12_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f12_ACQRET_count['RET-2022'] = dfd22_a12_ACQRET_count['Total-2022'] - dfd22_f12_ACQRET_count['ACQ-2022']
dfd22_f12_ACQRET_count['Percnt-2022'] = (dfd22_f12_ACQRET_count['RET-2022'] / dfd22_a12_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f12_ACQRET_count['Percnt-2022'] = dfd22_f12_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f12_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a12_ACQRET_count = pd.DataFrame(filter_12_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f12_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f12.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f12_ACQRET_count['Percent-2023'] = (dfd23_f12_ACQRET_count['ACQ-2023'] / dfd23_f12_Registrations_count['Total-2023'].sum()) * 100
dfd23_f12_ACQRET_count['Percent-2023'] = dfd23_f12_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f12_ACQRET_count['RET-2023'] = dfd23_a12_ACQRET_count['Total-2023'] - dfd23_f12_ACQRET_count['ACQ-2023']
dfd23_f12_ACQRET_count['Percnt-2023'] = (dfd23_f12_ACQRET_count['RET-2023'] / dfd23_a12_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f12_ACQRET_count['Percnt-2023'] = dfd23_f12_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f12_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f12 = pd.DataFrame(pd.merge(dfd18_a12_ACQRET_count, dfd18_f12_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f12 = pd.DataFrame(pd.merge(dfd19_a12_ACQRET_count, dfd19_f12_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f12 = pd.DataFrame(pd.merge(dfd21_a12_ACQRET_count, dfd21_f12_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f12 = pd.DataFrame(pd.merge(dfd22_a12_ACQRET_count, dfd22_f12_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_12_f12 = pd.DataFrame(pd.merge(dfd23_a12_ACQRET_count, dfd23_f12_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_12_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f12 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f12, df_ACQRET_count_2_f12, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f12 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f12, df_ACQRET_count_3_f12, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f12 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f12, df_ACQRET_count_4_f12, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f12 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f12, df_ACQRET_count_12_f12, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f12 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12]
Concat_ACQRET_count_f1_f12 = pd.concat(ConcatFrames_ACQRET_count_f1_f12)
#print(tab(Concat_ACQRET_count_f1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f12 = Concat_ACQRET_count_f1_f12[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f12_Revenue_calc = pd.DataFrame(filter_12_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f12_Revenue_calc['Percent-2017'] = (dfd17_f12_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f12_Revenue_calc['Percent-2017'] = dfd17_f12_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f12_Revenue_calc['7DEvolution-2017'] = dfd17_f12_Revenue_calc['Total-2017'] - dfd17_f11_Revenue_calc['Total-2017']
#print(tab(dfd17_f12_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f12_Revenue_calc = pd.DataFrame(filter_12_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f12_Revenue_calc['Percent-2018'] = (dfd18_f12_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f12_Revenue_calc['Percent-2018'] = dfd18_f12_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f12_Revenue_calc['7DEvolution-2018'] = dfd18_f12_Revenue_calc['Total-2018'] - dfd18_f11_Revenue_calc['Total-2018']
#print(tab(dfd18_f12_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f12_Revenue_calc = pd.DataFrame(filter_12_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f12_Revenue_calc['Percent-2019'] = (dfd19_f12_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f12_Revenue_calc['Percent-2019'] = dfd19_f12_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f12_Revenue_calc['7DEvolution-2019'] = dfd19_f12_Revenue_calc['Total-2019'] - dfd19_f11_Revenue_calc['Total-2019']
#print(tab(dfd19_f12_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f12_Revenue_calc = pd.DataFrame(filter_12_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f12_Revenue_calc['Percent-2021'] = (dfd21_f12_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f12_Revenue_calc['Percent-2021'] = dfd21_f12_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f12_Revenue_calc['7DEvolution-2021'] = dfd21_f12_Revenue_calc['Total-2021'] - dfd21_f11_Revenue_calc['Total-2021']
#print(tab(dfd21_f12_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f12_Revenue_calc = pd.DataFrame(filter_12_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f12_Revenue_calc['Percent-2022'] = (dfd22_f12_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f12_Revenue_calc['Percent-2022'] = dfd22_f12_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f12_Revenue_calc['7DEvolution-2022'] = dfd22_f12_Revenue_calc['Total-2022'] - dfd22_f11_Revenue_calc['Total-2022']
#print(tab(dfd22_f12_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_Revenue_calc = pd.DataFrame(filter_12_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f12_Revenue_calc['Percent-2023'] = (dfd23_f12_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f12_Revenue_calc['Percent-2023'] = dfd23_f12_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f12_Revenue_calc['7DEvolution-2023'] = dfd23_f12_Revenue_calc['Total-2023'] - dfd23_f11_Revenue_calc['Total-2023']
#print(tab(dfd23_f12_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f12_RevenueEvolution_calc = pd.DataFrame(filter_12_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f12_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f12_Revenue_calc['Total-2023'] - dfd19_f12_Revenue_calc['Total-2019'])/ dfd19_f12_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f12_RevenueEvolution_calc['Evolution-2023'] = dfd23_f12_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f12_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f12 = pd.DataFrame(pd.merge(dfd17_f12_Revenue_calc, dfd18_f12_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f12 = pd.DataFrame(pd.merge(dfd19_f12_Revenue_calc, dfd21_f12_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f12 = pd.DataFrame(pd.merge(dfd22_f12_Revenue_calc, dfd23_f12_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f12_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f12, df_Revenue_calc_2_f12, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f12Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f12_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f12_Evolution, df_Revenue_calc_3_f12, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f12Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f12 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f12_Evolution, dfd23_f12_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f12 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12]
Concat_REV_count_f1_f12 = pd.concat(ConcatFrames_REV_count_f1_f12)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f12_Registrations_GRDel = pd.DataFrame(filtr_12_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f12_Registrations_GRDel = dfd17_f12_Registrations_GRDel.fillna('Unknown')
dfd17_f12_Registrations_GRDel['Percent-2017'] = (dfd17_f12_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f12_Registrations_GRDel['Percent-2017'] = dfd17_f12_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f12_Registrations_GRDel['7DEvolution-2017'] = dfd17_f12_Registrations_GRDel['Total-2017'] - dfd17_f11_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f12_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f12_Registrations_GRDel = pd.DataFrame(filtr_12_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f12_Registrations_GRDel = dfd18_f12_Registrations_GRDel.fillna('Unknown')
dfd18_f12_Registrations_GRDel['Percent-2018'] = (dfd18_f12_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f12_Registrations_GRDel['Percent-2018'] = dfd18_f12_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f12_Registrations_GRDel['7DEvolution-2018'] = dfd18_f12_Registrations_GRDel['Total-2018'] - dfd18_f11_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f12_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f12_Registrations_GRDel = pd.DataFrame(filtr_12_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f12_Registrations_GRDel = dfd19_f12_Registrations_GRDel.fillna('Unknown')
dfd19_f12_Registrations_GRDel['Percent-2019'] = (dfd19_f12_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f12_Registrations_GRDel['Percent-2019'] = dfd19_f12_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f12_Registrations_GRDel['7DEvolution-2019'] = dfd19_f12_Registrations_GRDel['Total-2019'] - dfd19_f11_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f12_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f12_Registrations_GRDel = pd.DataFrame(filtr_12_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f12_Registrations_GRDel = dfd21_f12_Registrations_GRDel.fillna('Unknown')
dfd21_f12_Registrations_GRDel['Percent-2021'] = (dfd21_f12_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f12_Registrations_GRDel['Percent-2021'] = dfd21_f12_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f12_Registrations_GRDel['7DEvolution-2021'] = dfd21_f12_Registrations_GRDel['Total-2021'] - dfd21_f11_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f12_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f12_Registrations_GRDel = pd.DataFrame(filtr_12_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f12_Registrations_GRDel = dfd22_f12_Registrations_GRDel.fillna('Unknown')
dfd22_f12_Registrations_GRDel['Percent-2022'] = (dfd22_f12_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f12_Registrations_GRDel['Percent-2022'] = dfd22_f12_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f12_Registrations_GRDel['7DEvolution-2022'] = dfd22_f12_Registrations_GRDel['Total-2022'] - dfd22_f11_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f12_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_Registrations_GRDel = pd.DataFrame(filtr_12_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f12_Registrations_GRDel = dfd23_f12_Registrations_GRDel.fillna('Unknown')
dfd23_f12_Registrations_GRDel['Percent-2023'] = (dfd23_f12_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f12_Registrations_GRDel['Percent-2023'] = dfd23_f12_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f12_Registrations_GRDel['7DEvolution-2023'] = dfd23_f12_Registrations_GRDel['Total-2023'] - dfd23_f11_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f12_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f12_Registrations_Evol_GRDel = pd.DataFrame(filtr_12_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f12_Registrations_Evol_GRDel = dfd23_f12_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f12_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f12_Registrations_GRDel['Total-2023'] - dfd19_f12_Registrations_GRDel['Total-2019'])/ dfd19_f12_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f12_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f12 = pd.concat([dfd17_f12_Registrations_GRDel, dfd18_f12_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f12 = pd.DataFrame(pd.merge(dfd17_f12_Registrations_GRDel, dfd18_f12_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f12 = pd.DataFrame(pd.merge(dfd19_f12_Registrations_GRDel, dfd21_f12_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f12 = pd.DataFrame(pd.merge(dfd22_f12_Registrations_GRDel, dfd23_f12_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f12 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f12, df_Registrations_GRDel_2_f12, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_12_f12 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f12, df_Registrations_GRDel_3_f12, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f12 = pd.DataFrame(pd.merge(df_Registrations_GRDel_12_f12, dfd23_f12_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f12 = df_Registrations_GRDel_f12[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f12 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12]
Concat_RegGRDel_count_f1_f12 = pd.concat(ConcatFrames_RegGRDel_count_f1_f12)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f12 = filtr_12_df18_GRdel[filtr_12_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f12 = filtr_12_df19_GRdel[filtr_12_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f12 = filtr_12_df21_GRdel[filtr_12_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f12 = filtr_12_df22_GRdel[filtr_12_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f12 = filtr_12_df23_GRdel[filtr_12_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f12.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f12.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a12_AC_RT_GRDel = pd.DataFrame(filtr_12_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f12_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f12.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f12_AC_RT_GRDel['Percent-2018'] = (dfd18_f12_AC_RT_GRDel['ACQ-2018'] / dfd18_f12_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f12_AC_RT_GRDel['Percent-2018'] = dfd18_f12_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f12_AC_RT_GRDel['RET-2018'] = dfd18_a12_AC_RT_GRDel['Total-2018'] - dfd18_f12_AC_RT_GRDel['ACQ-2018']
dfd18_f12_AC_RT_GRDel['Percnt-2018'] = (dfd18_f12_AC_RT_GRDel['RET-2018'] / dfd18_a12_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f12_AC_RT_GRDel['Percnt-2018'] = dfd18_f12_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f12_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a12_AC_RT_GRDel = pd.DataFrame(filtr_12_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f12_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f12.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f12_AC_RT_GRDel['Percent-2019'] = (dfd19_f12_AC_RT_GRDel['ACQ-2019'] / dfd19_f12_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f12_AC_RT_GRDel['Percent-2019'] = dfd19_f12_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f12_AC_RT_GRDel['RET-2019'] = dfd19_a12_AC_RT_GRDel['Total-2019'] - dfd19_f12_AC_RT_GRDel['ACQ-2019']
dfd19_f12_AC_RT_GRDel['Percnt-2019'] = (dfd19_f12_AC_RT_GRDel['RET-2019'] / dfd19_a12_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f12_AC_RT_GRDel['Percnt-2019'] = dfd19_f12_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f12_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a12_AC_RT_GRDel = pd.DataFrame(filtr_12_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f12_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f12.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f12_AC_RT_GRDel['Percent-2021'] = (dfd21_f12_AC_RT_GRDel['ACQ-2021'] / dfd21_f12_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f12_AC_RT_GRDel['Percent-2021'] = dfd21_f12_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f12_AC_RT_GRDel['RET-2021'] = dfd21_a12_AC_RT_GRDel['Total-2021'] - dfd21_f12_AC_RT_GRDel['ACQ-2021']
dfd21_f12_AC_RT_GRDel['Percnt-2021'] = (dfd21_f12_AC_RT_GRDel['RET-2021'] / dfd21_a12_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f12_AC_RT_GRDel['Percnt-2021'] = dfd21_f12_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f12_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a12_AC_RT_GRDel = pd.DataFrame(filtr_12_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f12_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f12.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f12_AC_RT_GRDel['Percent-2022'] = (dfd22_f12_AC_RT_GRDel['ACQ-2022'] / dfd22_f12_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f12_AC_RT_GRDel['Percent-2022'] = dfd22_f12_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f12_AC_RT_GRDel['RET-2022'] = dfd22_a12_AC_RT_GRDel['Total-2022'] - dfd22_f12_AC_RT_GRDel['ACQ-2022']
dfd22_f12_AC_RT_GRDel['Percnt-2022'] = (dfd22_f12_AC_RT_GRDel['RET-2022'] / dfd22_a12_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f12_AC_RT_GRDel['Percnt-2022'] = dfd22_f12_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f12_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a12_AC_RT_GRDel = pd.DataFrame(filtr_12_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f12_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f12.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f12_AC_RT_GRDel['Percent-2023'] = (dfd23_f12_AC_RT_GRDel['ACQ-2023'] / dfd23_f12_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f12_AC_RT_GRDel['Percent-2023'] = dfd23_f12_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f12_AC_RT_GRDel['RET-2023'] = dfd23_a12_AC_RT_GRDel['Total-2023'] - dfd23_f12_AC_RT_GRDel['ACQ-2023']
dfd23_f12_AC_RT_GRDel['Percnt-2023'] = (dfd23_f12_AC_RT_GRDel['RET-2023'] / dfd23_a12_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f12_AC_RT_GRDel['Percnt-2023'] = dfd23_f12_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f12_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f12 = pd.DataFrame(pd.merge_ordered(dfd18_a12_AC_RT_GRDel, dfd18_f12_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f12 = pd.DataFrame(pd.merge_ordered(dfd19_a12_AC_RT_GRDel, dfd19_f12_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f12 = pd.DataFrame(pd.merge_ordered(dfd21_a12_AC_RT_GRDel, dfd21_f12_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f12 = pd.DataFrame(pd.merge_ordered(dfd22_a12_AC_RT_GRDel, dfd22_f12_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_12_f12 = pd.DataFrame(pd.merge_ordered(dfd23_a12_AC_RT_GRDel, dfd23_f12_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f12 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f12, df_AC_ET_GRDel_2_f12, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f12 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f12, df_AC_ET_GRDel_3_f12, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f12 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f12, df_AC_ET_GRDel_4_f12, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f12 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f12, df_AC_ET_GRDel_12_f12, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f12 = df_AC_RT_GRDel_M4_f12[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f12 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12]
Conct_AC_RT_GRDel_f1_f12 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f12)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_12_df17_GRdel = filtr_12_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f12_Revenu_GRDel = pd.DataFrame(filtr_12_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f12_Revenu_GRDel['Percent-2017'] = (dfd17_f12_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f12_Revenu_GRDel['Percent-2017'] = dfd17_f12_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f12_Revenu_GRDel['7DEvolution-2017'] = dfd17_f12_Revenu_GRDel['Total-2017'] - dfd17_f11_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f12_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_12_df18_GRdel = filtr_12_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f12_Revenu_GRDel = pd.DataFrame(filtr_12_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f12_Revenu_GRDel['Percent-2018'] = (dfd18_f12_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f12_Revenu_GRDel['Percent-2018'] = dfd18_f12_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f12_Revenu_GRDel['7DEvolution-2018'] = dfd18_f12_Revenu_GRDel['Total-2018'] - dfd18_f11_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f12_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_12_df19_GRdel = filtr_12_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f12_Revenu_GRDel = pd.DataFrame(filtr_12_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f12_Revenu_GRDel['Percent-2019'] = (dfd19_f12_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f12_Revenu_GRDel['Percent-2019'] = dfd19_f12_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f12_Revenu_GRDel['7DEvolution-2019'] = dfd19_f12_Revenu_GRDel['Total-2019'] - dfd19_f11_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f12_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_12_df21_GRdel = filtr_12_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f12_Revenu_GRDel = pd.DataFrame(filtr_12_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f12_Revenu_GRDel['Percent-2021'] = (dfd21_f12_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f12_Revenu_GRDel['Percent-2021'] = dfd21_f12_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f12_Revenu_GRDel['7DEvolution-2021'] = dfd21_f12_Revenu_GRDel['Total-2021'] - dfd21_f11_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f12_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_12_df22_GRdel = filtr_12_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f12_Revenu_GRDel = pd.DataFrame(filtr_12_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f12_Revenu_GRDel['Percent-2022'] = (dfd22_f12_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f12_Revenu_GRDel['Percent-2022'] = dfd22_f12_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f12_Revenu_GRDel['7DEvolution-2022'] = dfd22_f12_Revenu_GRDel['Total-2022'] - dfd22_f11_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f12_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_12_df23_GRdel = filtr_12_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f12_Revenu_GRDel = pd.DataFrame(filtr_12_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f12_Revenu_GRDel['Percent-2023'] = (dfd23_f12_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f12_Revenu_GRDel['Percent-2023'] = dfd23_f12_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f12_Revenu_GRDel['7DEvolution-2023'] = dfd23_f12_Revenu_GRDel['Total-2023'] - dfd23_f11_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f12_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f12_Revenu_Evlt_GRDel = pd.DataFrame(filtr_12_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f12_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f12_Revenu_GRDel['Total-2023'] - dfd19_f12_Revenu_GRDel['Total-2019'])/ dfd19_f12_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f12_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f12_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f12_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f12 = pd.DataFrame(pd.merge(dfd17_f12_Revenu_GRDel, dfd18_f12_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f12 = pd.DataFrame(pd.merge(dfd19_f12_Revenu_GRDel, dfd21_f12_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f12 = pd.DataFrame(pd.merge(dfd22_f12_Revenu_GRDel, dfd23_f12_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f12 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f12, df_Revenu_GRDel_2_f12, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_12_f12 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f12, df_Revenu_GRDel_3_f12, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f12 = pd.DataFrame(pd.merge(df_Revenu_GRDel_12_f12, dfd23_f12_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f12 = df_Revenu_GRDel_f12[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f12 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12]
Conct_RV_GRDel_f1_f12 = pd.concat(ConcatFra_RV_GRDel_f1_f12)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f12_Profile_count = pd.DataFrame(filtr_12_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f12_Profile_count = dfd17_f12_Profile_count.fillna('Unknown')
dfd17_f12_Profile_count['Percent-2017'] = (dfd17_f12_Profile_count['Total-2017'] / dfd17_f12_Profile_count['Total-2017'].sum()) * 100
dfd17_f12_Profile_count['Percent-2017'] = dfd17_f12_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f12_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f12_Profile_count = pd.DataFrame(filtr_12_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f12_Profile_count = dfd18_f12_Profile_count.fillna('Unknown')
dfd18_f12_Profile_count['Percent-2018'] = (dfd18_f12_Profile_count['Total-2018'] / dfd18_f12_Profile_count['Total-2018'].sum()) * 100
dfd18_f12_Profile_count['Percent-2018'] = dfd18_f12_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f12_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f12_Profile_count = pd.DataFrame(filtr_12_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f12_Profile_count = dfd19_f12_Profile_count.fillna('Unknown')
dfd19_f12_Profile_count['Percent-2019'] = (dfd19_f12_Profile_count['Total-2019'] / dfd19_f12_Profile_count['Total-2019'].sum()) * 100
dfd19_f12_Profile_count['Percent-2019'] = dfd19_f12_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f12_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f12_Profile_count = pd.DataFrame(filtr_12_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f12_Profile_count = dfd21_f12_Profile_count.fillna('Unknown')
dfd21_f12_Profile_count['Percent-2021'] = (dfd21_f12_Profile_count['Total-2021'] / dfd21_f12_Profile_count['Total-2021'].sum()) * 100
dfd21_f12_Profile_count['Percent-2021'] = dfd21_f12_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f12_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f12_Profile_count = pd.DataFrame(filtr_12_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f12_Profile_count = dfd22_f12_Profile_count.fillna('Unknown')
dfd22_f12_Profile_count['Percent-2022'] = (dfd22_f12_Profile_count['Total-2022'] / dfd22_f12_Profile_count['Total-2022'].sum()) * 100
dfd22_f12_Profile_count['Percent-2022'] = dfd22_f12_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f12_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_Profile_count = pd.DataFrame(filtr_12_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f12_Profile_count = dfd23_f12_Profile_count.fillna('Unknown')
dfd23_f12_Profile_count['Percent-2023'] = (dfd23_f12_Profile_count['Total-2023'] / dfd23_f12_Profile_count['Total-2023'].sum()) * 100
dfd23_f12_Profile_count['Percent-2023'] = dfd23_f12_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f12_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f12 = pd.DataFrame(pd.merge(dfd17_f12_Profile_count, dfd18_f12_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f12 = pd.DataFrame(pd.merge(dfd19_f12_Profile_count, dfd21_f12_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f12 = pd.DataFrame(pd.merge(dfd22_f12_Profile_count, dfd23_f12_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f12 = pd.DataFrame(pd.merge(df_Profile_Count_1_f12, df_Profile_Count_2_f12, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f12 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f12, df_Profile_Count_3_f12, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f12 = df_Profile_Count_m2_f12.append(df_Profile_Count_m2_f12.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f12['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f12_Pass_count = pd.DataFrame(filtr_12_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f12_Pass_count = dfd17_f12_Pass_count.fillna('Unknown')
dfd17_f12_Pass_count['Percent-2017'] = (dfd17_f12_Pass_count['Total-2017'] / dfd17_f12_Pass_count['Total-2017'].sum()) * 100
dfd17_f12_Pass_count['Percent-2017'] = dfd17_f12_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f12_Pass_count = pd.DataFrame(filtr_12_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f12_Pass_count = dfd18_f12_Pass_count.fillna('Unknown')
dfd18_f12_Pass_count['Percent-2018'] = (dfd18_f12_Pass_count['Total-2018'] / dfd18_f12_Pass_count['Total-2018'].sum()) * 100
dfd18_f12_Pass_count['Percent-2018'] = dfd18_f12_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f12_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f12_Pass_count = pd.DataFrame(filtr_12_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f12_Pass_count = dfd19_f12_Pass_count.fillna('Unknown')
dfd19_f12_Pass_count['Percent-2019'] = (dfd19_f12_Pass_count['Total-2019'] / dfd19_f12_Pass_count['Total-2019'].sum()) * 100
dfd19_f12_Pass_count['Percent-2019'] = dfd19_f12_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f12_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f12_Pass_count = pd.DataFrame(filtr_12_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f12_Pass_count = dfd21_f12_Pass_count.fillna('Unknown')
dfd21_f12_Pass_count['Percent-2021'] = (dfd21_f12_Pass_count['Total-2021'] / dfd21_f12_Pass_count['Total-2021'].sum()) * 100
dfd21_f12_Pass_count['Percent-2021'] = dfd21_f12_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f12_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f12_Pass_count = pd.DataFrame(filtr_12_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f12_Pass_count = dfd22_f12_Pass_count.fillna('Unknown')
dfd22_f12_Pass_count['Percent-2022'] = (dfd22_f12_Pass_count['Total-2022'] / dfd22_f12_Pass_count['Total-2022'].sum()) * 100
dfd22_f12_Pass_count['Percent-2022'] = dfd22_f12_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f12_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_Pass_count = pd.DataFrame(filtr_12_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f12_Pass_count = dfd23_f12_Pass_count.fillna('Unknown')
dfd23_f12_Pass_count['Percent-2023'] = (dfd23_f12_Pass_count['Total-2023'] / dfd23_f12_Pass_count['Total-2023'].sum()) * 100
dfd23_f12_Pass_count['Percent-2023'] = dfd23_f12_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f12_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f12 = pd.DataFrame(pd.merge(dfd17_f12_Pass_count, dfd18_f12_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f12 = pd.DataFrame(pd.merge(dfd19_f12_Pass_count, dfd21_f12_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f12 = pd.DataFrame(pd.merge(dfd22_f12_Pass_count, dfd23_f12_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f12 = pd.DataFrame(pd.merge(df_Pass_Count_1_f12, df_Pass_Count_2_f12, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f12 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f12, df_Pass_Count_3_f12, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f12 = df_Pass_Count_m2_f12.append(df_Pass_Count_m2_f12.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f12['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f12_Attendees_Country_count = pd.DataFrame(filtr_12_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f12_Attendees_Country_count = dfd17_f12_Attendees_Country_count.fillna('Unknown')
dfd17_f12_Attendees_Country_count['Percent-2017'] = (dfd17_f12_Attendees_Country_count['Total-2017'] / dfd17_f12_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f12_Attendees_Country_count['Percent-2017'] = dfd17_f12_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f12_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f12_Attendees_Country_count = pd.DataFrame(filtr_12_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f12_Attendees_Country_count = dfd18_f12_Attendees_Country_count.fillna('Unknown')
dfd18_f12_Attendees_Country_count['Percent-2018'] = (dfd18_f12_Attendees_Country_count['Total-2018'] / dfd18_f12_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f12_Attendees_Country_count['Percent-2018'] = dfd18_f12_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f12_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f12_Attendees_Country_count = pd.DataFrame(filtr_12_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f12_Attendees_Country_count = dfd19_f12_Attendees_Country_count.fillna('Unknown')
dfd19_f12_Attendees_Country_count['Percent-2019'] = (dfd19_f12_Attendees_Country_count['Total-2019'] / dfd19_f12_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f12_Attendees_Country_count['Percent-2019'] = dfd19_f12_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f12_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f12_Attendees_Country_count = pd.DataFrame(filtr_12_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f12_Attendees_Country_count = dfd21_f12_Attendees_Country_count.fillna('Unknown')
dfd21_f12_Attendees_Country_count['Percent-2021'] = (dfd21_f12_Attendees_Country_count['Total-2021'] / dfd21_f12_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f12_Attendees_Country_count['Percent-2021'] = dfd21_f12_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f12_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f12_Attendees_Country_count = pd.DataFrame(filtr_12_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f12_Attendees_Country_count = dfd22_f12_Attendees_Country_count.fillna('Unknown')
dfd22_f12_Attendees_Country_count['Percent-2022'] = (dfd22_f12_Attendees_Country_count['Total-2022'] / dfd22_f12_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f12_Attendees_Country_count['Percent-2022'] = dfd22_f12_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f12_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_Attendees_Country_count = pd.DataFrame(filtr_12_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f12_Attendees_Country_count = dfd23_f12_Attendees_Country_count.fillna('Unknown')
dfd23_f12_Attendees_Country_count['Percent-2023'] = (dfd23_f12_Attendees_Country_count['Total-2023'] / dfd23_f12_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f12_Attendees_Country_count['Percent-2023'] = dfd23_f12_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f12_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f12 = pd.DataFrame(pd.merge(dfd17_f12_Attendees_Country_count, dfd18_f12_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f12 = pd.DataFrame(pd.merge(dfd19_f12_Attendees_Country_count, dfd21_f12_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f12 = pd.DataFrame(pd.merge(dfd22_f12_Attendees_Country_count, dfd23_f12_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f12 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f12, dfAttendees_Country_Count_2_f12, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f12.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f12 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f12, dfAttendees_Country_Count_3_f12, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f12 = dfAttendees_Country_Count_m2_f12.append(dfAttendees_Country_Count_m2_f12.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f12['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f12_ATTENDEES_AREAS_count = pd.DataFrame(filtr_12_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f12_ATTENDEES_AREAS_count = dfd17_f12_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f12_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f12_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f12_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f12_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f12_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f12_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f12_ATTENDEES_AREAS_count = pd.DataFrame(filtr_12_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f12_ATTENDEES_AREAS_count = dfd18_f12_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f12_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f12_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f12_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f12_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f12_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f12_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f12_ATTENDEES_AREAS_count = pd.DataFrame(filtr_12_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f12_ATTENDEES_AREAS_count = dfd19_f12_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f12_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f12_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f12_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f12_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f12_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f12_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f12_ATTENDEES_AREAS_count = pd.DataFrame(filtr_12_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f12_ATTENDEES_AREAS_count = dfd21_f12_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f12_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f12_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f12_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f12_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f12_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f12_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f12_ATTENDEES_AREAS_count = pd.DataFrame(filtr_12_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f12_ATTENDEES_AREAS_count = dfd22_f12_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f12_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f12_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f12_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f12_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f12_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f12_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_ATTENDEES_AREAS_count = pd.DataFrame(filtr_12_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f12_ATTENDEES_AREAS_count = dfd23_f12_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f12_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f12_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f12_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f12_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f12_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f12_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f12 = pd.DataFrame(pd.merge(dfd17_f12_ATTENDEES_AREAS_count, dfd18_f12_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f12 = pd.DataFrame(pd.merge(dfd19_f12_ATTENDEES_AREAS_count, dfd21_f12_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f12 = pd.DataFrame(pd.merge(dfd22_f12_ATTENDEES_AREAS_count, dfd23_f12_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f12.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f12 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f12, df_ATTENDEES_AREAS_count_2_f12, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f12 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f12, df_ATTENDEES_AREAS_count_3_f12, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f12 = df_ATTENDEES_AREAS_count_m2_f12.append(df_ATTENDEES_AREAS_count_m2_f12.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f12['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f12_Attendees_Specialty_count = pd.DataFrame(filtr_12_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f12_Attendees_Specialty_count = dfd17_f12_Attendees_Specialty_count.fillna('Unknown')
dfd17_f12_Attendees_Specialty_count['Percent-2017'] = (dfd17_f12_Attendees_Specialty_count['Total-2017'] / dfd17_f12_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f12_Attendees_Specialty_count['Percent-2017'] = dfd17_f12_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f12_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f12_Attendees_Specialty_count = pd.DataFrame(filtr_12_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f12_Attendees_Specialty_count = dfd18_f12_Attendees_Specialty_count.fillna('Unknown')
dfd18_f12_Attendees_Specialty_count['Percent-2018'] = (dfd18_f12_Attendees_Specialty_count['Total-2018'] / dfd18_f12_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f12_Attendees_Specialty_count['Percent-2018'] = dfd18_f12_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f12_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f12_Attendees_Specialty_count = pd.DataFrame(filtr_12_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f12_Attendees_Specialty_count = dfd19_f12_Attendees_Specialty_count.fillna('Unknown')
dfd19_f12_Attendees_Specialty_count['Percent-2019'] = (dfd19_f12_Attendees_Specialty_count['Total-2019'] / dfd19_f12_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f12_Attendees_Specialty_count['Percent-2019'] = dfd19_f12_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f12_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f12_Attendees_Specialty_count = pd.DataFrame(filtr_12_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f12_Attendees_Specialty_count = dfd21_f12_Attendees_Specialty_count.fillna('Unknown')
dfd21_f12_Attendees_Specialty_count['Percent-2021'] = (dfd21_f12_Attendees_Specialty_count['Total-2021'] / dfd21_f12_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f12_Attendees_Specialty_count['Percent-2021'] = dfd21_f12_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f12_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f12_Attendees_Specialty_count = pd.DataFrame(filtr_12_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f12_Attendees_Specialty_count = dfd22_f12_Attendees_Specialty_count.fillna('Unknown')
dfd22_f12_Attendees_Specialty_count['Percent-2022'] = (dfd22_f12_Attendees_Specialty_count['Total-2022'] / dfd22_f12_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f12_Attendees_Specialty_count['Percent-2022'] = dfd22_f12_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f12_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f12_Attendees_Specialty_count = pd.DataFrame(filtr_12_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f12_Attendees_Specialty_count = dfd23_f12_Attendees_Specialty_count.fillna('Unknown')
dfd23_f12_Attendees_Specialty_count['Percent-2023'] = (dfd23_f12_Attendees_Specialty_count['Total-2023'] / dfd23_f12_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f12_Attendees_Specialty_count['Percent-2023'] = dfd23_f12_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f12_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f12 = pd.DataFrame(pd.merge(dfd17_f12_Attendees_Specialty_count, dfd18_f12_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f12 = pd.DataFrame(pd.merge(dfd19_f12_Attendees_Specialty_count, dfd21_f12_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f12 = pd.DataFrame(pd.merge(dfd22_f12_Attendees_Specialty_count, dfd23_f12_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f12 = pd.DataFrame(pd.merge(df_Specialty_count_1_f12, df_Specialty_count_2_f12, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f12.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f12 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f12, df_Specialty_count_3_f12, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f12 = df_Specialty_count_m2_f12.append(df_Specialty_count_m2_f12.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f12['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f12['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f12['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f12 = Concat_Registrations_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f12['Total-2017'] = Concat_Registrations_count_f1_f12['Total-2017'].astype(int)
Concat_Registrations_count_f1_f12['Percent-2017'] = Concat_Registrations_count_f1_f12['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f12['7DEvolution-2017'] = Concat_Registrations_count_f1_f12['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f12['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f12['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f12 = Concat_Registrations_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f12['Total-2018'] = Concat_Registrations_count_f1_f12['Total-2018'].astype(int)
Concat_Registrations_count_f1_f12['Percent-2018'] = Concat_Registrations_count_f1_f12['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f12['7DEvolution-2018'] = Concat_Registrations_count_f1_f12['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f12['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f12['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f12 = Concat_Registrations_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f12['Total-2019'] = Concat_Registrations_count_f1_f12['Total-2019'].astype(int)
Concat_Registrations_count_f1_f12['Percent-2019'] = Concat_Registrations_count_f1_f12['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f12['7DEvolution-2019'] = Concat_Registrations_count_f1_f12['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f12['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f12['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f12 = Concat_Registrations_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f12['Total-2021'] = Concat_Registrations_count_f1_f12['Total-2021'].astype(int)
Concat_Registrations_count_f1_f12['Percent-2021'] = Concat_Registrations_count_f1_f12['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f12['7DEvolution-2021'] = Concat_Registrations_count_f1_f12['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f12['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f12['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f12 = Concat_Registrations_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f12['Total-2022'] = Concat_Registrations_count_f1_f12['Total-2022'].astype(int)
Concat_Registrations_count_f1_f12['Percent-2022'] = Concat_Registrations_count_f1_f12['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f12['7DEvolution-2022'] = Concat_Registrations_count_f1_f12['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f12['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f12['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f12 = Concat_Registrations_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f12['Total-2023'] = Concat_Registrations_count_f1_f12['Total-2023'].astype(int)
Concat_Registrations_count_f1_f12['Percent-2023'] = Concat_Registrations_count_f1_f12['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f12['7DEvolution-2023'] = Concat_Registrations_count_f1_f12['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f12['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f12['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f12 = Concat_ACQRET_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f12['Total-2018'] = Concat_ACQRET_count_f1_f12['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f12['ACQ-2018'] = Concat_ACQRET_count_f1_f12['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f12['Percent-2018'] = Concat_ACQRET_count_f1_f12['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f12['RET-2018'] = Concat_ACQRET_count_f1_f12['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f12['Percnt-2018'] = Concat_ACQRET_count_f1_f12['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f12['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f12['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f12 = Concat_ACQRET_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f12['Total-2019'] = Concat_ACQRET_count_f1_f12['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f12['ACQ-2019'] = Concat_ACQRET_count_f1_f12['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f12['Percent-2019'] = Concat_ACQRET_count_f1_f12['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f12['RET-2019'] = Concat_ACQRET_count_f1_f12['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f12['Percnt-2019'] = Concat_ACQRET_count_f1_f12['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f12['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f12['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f12 = Concat_ACQRET_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f12['Total-2021'] = Concat_ACQRET_count_f1_f12['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f12['ACQ-2021'] = Concat_ACQRET_count_f1_f12['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f12['Percent-2021'] = Concat_ACQRET_count_f1_f12['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f12['RET-2021'] = Concat_ACQRET_count_f1_f12['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f12['Percnt-2021'] = Concat_ACQRET_count_f1_f12['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f12['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f12['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f12 = Concat_ACQRET_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f12['Total-2022'] = Concat_ACQRET_count_f1_f12['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f12['ACQ-2022'] = Concat_ACQRET_count_f1_f12['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f12['Percent-2022'] = Concat_ACQRET_count_f1_f12['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f12['RET-2022'] = Concat_ACQRET_count_f1_f12['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f12['Percnt-2022'] = Concat_ACQRET_count_f1_f12['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f12['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f12['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f12 = Concat_ACQRET_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f12['Total-2023'] = Concat_ACQRET_count_f1_f12['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f12['ACQ-2023'] = Concat_ACQRET_count_f1_f12['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f12['Percent-2023'] = Concat_ACQRET_count_f1_f12['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f12['RET-2023'] = Concat_ACQRET_count_f1_f12['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f12['Percnt-2023'] = Concat_ACQRET_count_f1_f12['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f12['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f12['Total-2017'],errors='coerce')
Concat_REV_count_f1_f12 = Concat_REV_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f12['Total-2017'] = Concat_REV_count_f1_f12['Total-2017'].astype(int)
Concat_REV_count_f1_f12['Percent-2017'] = Concat_REV_count_f1_f12['Percent-2017'].astype(float)
Concat_REV_count_f1_f12['7DEvolution-2017'] = Concat_REV_count_f1_f12['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f12['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f12['Total-2018'],errors='coerce')
Concat_REV_count_f1_f12 = Concat_REV_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f12['Total-2018'] = Concat_REV_count_f1_f12['Total-2018'].astype(int)
Concat_REV_count_f1_f12['Percent-2018'] = Concat_REV_count_f1_f12['Percent-2018'].astype(float)
Concat_REV_count_f1_f12['7DEvolution-2018'] = Concat_REV_count_f1_f12['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f12['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f12['Total-2019'],errors='coerce')
Concat_REV_count_f1_f12 = Concat_REV_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f12['Total-2019'] = Concat_REV_count_f1_f12['Total-2019'].astype(int)
Concat_REV_count_f1_f12['Percent-2019'] = Concat_REV_count_f1_f12['Percent-2019'].astype(float)
Concat_REV_count_f1_f12['7DEvolution-2019'] = Concat_REV_count_f1_f12['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f12['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f12['Total-2022'],errors='coerce')
Concat_REV_count_f1_f12 = Concat_REV_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f12['Total-2022'] = Concat_REV_count_f1_f12['Total-2022'].astype(int)
Concat_REV_count_f1_f12['Percent-2022'] = Concat_REV_count_f1_f12['Percent-2022'].astype(float)
Concat_REV_count_f1_f12['7DEvolution-2022'] = Concat_REV_count_f1_f12['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f12['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f12['Total-2023'],errors='coerce')
Concat_REV_count_f1_f12 = Concat_REV_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f12['Total-2023'] = Concat_REV_count_f1_f12['Total-2023'].astype(int)
Concat_REV_count_f1_f12['Percent-2023'] = Concat_REV_count_f1_f12['Percent-2023'].astype(float)
Concat_REV_count_f1_f12['7DEvolution-2023'] = Concat_REV_count_f1_f12['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f12['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f12['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f12 = Concat_RegGRDel_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f12['Total-2017'] = Concat_RegGRDel_count_f1_f12['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f12['Percent-2017'] = Concat_RegGRDel_count_f1_f12['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f12['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f12['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f12['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f12['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f12 = Concat_RegGRDel_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f12['Total-2018'] = Concat_RegGRDel_count_f1_f12['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f12['Percent-2018'] = Concat_RegGRDel_count_f1_f12['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f12['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f12['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f12['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f12['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f12 = Concat_RegGRDel_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f12['Total-2019'] = Concat_RegGRDel_count_f1_f12['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f12['Percent-2019'] = Concat_RegGRDel_count_f1_f12['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f12['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f12['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f12['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f12['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f12 = Concat_RegGRDel_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f12['Total-2021'] = Concat_RegGRDel_count_f1_f12['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f12['Percent-2021'] = Concat_RegGRDel_count_f1_f12['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f12['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f12['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f12['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f12['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f12 = Concat_RegGRDel_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f12['Total-2022'] = Concat_RegGRDel_count_f1_f12['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f12['Percent-2022'] = Concat_RegGRDel_count_f1_f12['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f12['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f12['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f12['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f12['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f12 = Concat_RegGRDel_count_f1_f12.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f12['Total-2023'] = Concat_RegGRDel_count_f1_f12['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f12['Percent-2023'] = Concat_RegGRDel_count_f1_f12['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f12['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f12['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f12['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f12['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f12 = Conct_AC_RT_GRDel_f1_f12.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f12['Total-2018'] = Conct_AC_RT_GRDel_f1_f12['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f12['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f12['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f12['Percent-2018'] = Conct_AC_RT_GRDel_f1_f12['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f12['RET-2018'] = Conct_AC_RT_GRDel_f1_f12['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f12['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f12['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f12['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f12['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f12 = Conct_AC_RT_GRDel_f1_f12.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f12['Total-2019'] = Conct_AC_RT_GRDel_f1_f12['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f12['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f12['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f12['Percent-2019'] = Conct_AC_RT_GRDel_f1_f12['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f12['RET-2019'] = Conct_AC_RT_GRDel_f1_f12['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f12['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f12['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f12['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f12['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f12 = Conct_AC_RT_GRDel_f1_f12.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f12['Total-2021'] = Conct_AC_RT_GRDel_f1_f12['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f12['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f12['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f12['Percent-2021'] = Conct_AC_RT_GRDel_f1_f12['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f12['RET-2021'] = Conct_AC_RT_GRDel_f1_f12['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f12['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f12['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f12['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f12['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f12 = Conct_AC_RT_GRDel_f1_f12.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f12['Total-2022'] = Conct_AC_RT_GRDel_f1_f12['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f12['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f12['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f12['Percent-2022'] = Conct_AC_RT_GRDel_f1_f12['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f12['RET-2022'] = Conct_AC_RT_GRDel_f1_f12['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f12['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f12['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f12['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f12['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f12 = Conct_AC_RT_GRDel_f1_f12.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f12['Total-2023'] = Conct_AC_RT_GRDel_f1_f12['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f12['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f12['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f12['Percent-2023'] = Conct_AC_RT_GRDel_f1_f12['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f12['RET-2023'] = Conct_AC_RT_GRDel_f1_f12['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f12['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f12['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f12['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f12['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f12 = Conct_RV_GRDel_f1_f12.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f12['Total-2017'] = Conct_RV_GRDel_f1_f12['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f12['Percent-2017'] = Conct_RV_GRDel_f1_f12['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f12['7DEvolution-2017'] = Conct_RV_GRDel_f1_f12['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f12['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f12['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f12 = Conct_RV_GRDel_f1_f12.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f12['Total-2018'] = Conct_RV_GRDel_f1_f12['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f12['Percent-2018'] = Conct_RV_GRDel_f1_f12['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f12['7DEvolution-2018'] = Conct_RV_GRDel_f1_f12['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f12['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f12['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f12 = Conct_RV_GRDel_f1_f12.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f12['Total-2019'] = Conct_RV_GRDel_f1_f12['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f12['Percent-2019'] = Conct_RV_GRDel_f1_f12['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f12['7DEvolution-2019'] = Conct_RV_GRDel_f1_f12['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f12['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f12['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f12 = Conct_RV_GRDel_f1_f12.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f12['Total-2022'] = Conct_RV_GRDel_f1_f12['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f12['Percent-2022'] = Conct_RV_GRDel_f1_f12['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f12['7DEvolution-2022'] = Conct_RV_GRDel_f1_f12['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f12['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f12['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f12 = Conct_RV_GRDel_f1_f12.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f12['Total-2023'] = Conct_RV_GRDel_f1_f12['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f12['Percent-2023'] = Conct_RV_GRDel_f1_f12['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f12['7DEvolution-2023'] = Conct_RV_GRDel_f1_f12['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f12['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f12['Total-2017'],errors='coerce')
df_Profile_Count_m2_f12 = df_Profile_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f12['Total-2017'] = df_Profile_Count_m2_f12['Total-2017'].astype(int)
df_Profile_Count_m2_f12['Percent-2017'] = df_Profile_Count_m2_f12['Percent-2017'].astype(float)

df_Profile_Count_m2_f12['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f12['Total-2018'],errors='coerce')
df_Profile_Count_m2_f12 = df_Profile_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f12['Total-2018'] = df_Profile_Count_m2_f12['Total-2018'].astype(int)
df_Profile_Count_m2_f12['Percent-2018'] = df_Profile_Count_m2_f12['Percent-2018'].astype(float)

df_Profile_Count_m2_f12['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f12['Total-2019'],errors='coerce')
df_Profile_Count_m2_f12 = df_Profile_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f12['Total-2019'] = df_Profile_Count_m2_f12['Total-2019'].astype(int)
df_Profile_Count_m2_f12['Percent-2019'] = df_Profile_Count_m2_f12['Percent-2019'].astype(float)

df_Profile_Count_m2_f12['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f12['Total-2021'],errors='coerce')
df_Profile_Count_m2_f12 = df_Profile_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f12['Total-2021'] = df_Profile_Count_m2_f12['Total-2021'].astype(int)
df_Profile_Count_m2_f12['Percent-2021'] = df_Profile_Count_m2_f12['Percent-2021'].astype(float)

df_Profile_Count_m2_f12['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f12['Total-2022'],errors='coerce')
df_Profile_Count_m2_f12 = df_Profile_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f12['Total-2022'] = df_Profile_Count_m2_f12['Total-2022'].astype(int)
df_Profile_Count_m2_f12['Percent-2022'] = df_Profile_Count_m2_f12['Percent-2022'].astype(float)

df_Profile_Count_m2_f12['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f12['Total-2023'],errors='coerce')
df_Profile_Count_m2_f12 = df_Profile_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f12['Total-2023'] = df_Profile_Count_m2_f12['Total-2023'].astype(int)
df_Profile_Count_m2_f12['Percent-2023'] = df_Profile_Count_m2_f12['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f12['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f12['Total-2017'],errors='coerce')
df_Pass_Count_m2_f12 = df_Pass_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f12['Total-2017'] = df_Pass_Count_m2_f12['Total-2017'].astype(int)
df_Pass_Count_m2_f12['Percent-2017'] = df_Pass_Count_m2_f12['Percent-2017'].astype(float)

df_Pass_Count_m2_f12['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f12['Total-2018'],errors='coerce')
df_Pass_Count_m2_f12 = df_Pass_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f12['Total-2018'] = df_Pass_Count_m2_f12['Total-2018'].astype(int)
df_Pass_Count_m2_f12['Percent-2018'] = df_Pass_Count_m2_f12['Percent-2018'].astype(float)

df_Pass_Count_m2_f12['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f12['Total-2019'],errors='coerce')
df_Pass_Count_m2_f12 = df_Pass_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f12['Total-2019'] = df_Pass_Count_m2_f12['Total-2019'].astype(int)
df_Pass_Count_m2_f12['Percent-2019'] = df_Pass_Count_m2_f12['Percent-2019'].astype(float)

df_Pass_Count_m2_f12['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f12['Total-2021'],errors='coerce')
df_Pass_Count_m2_f12 = df_Pass_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f12['Total-2021'] = df_Pass_Count_m2_f12['Total-2021'].astype(int)
df_Pass_Count_m2_f12['Percent-2021'] = df_Pass_Count_m2_f12['Percent-2021'].astype(float)

df_Pass_Count_m2_f12['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f12['Total-2022'],errors='coerce')
df_Pass_Count_m2_f12 = df_Pass_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f12['Total-2022'] = df_Pass_Count_m2_f12['Total-2022'].astype(int)
df_Pass_Count_m2_f12['Percent-2022'] = df_Pass_Count_m2_f12['Percent-2022'].astype(float)

df_Pass_Count_m2_f12['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f12['Total-2023'],errors='coerce')
df_Pass_Count_m2_f12 = df_Pass_Count_m2_f12.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f12['Total-2023'] = df_Pass_Count_m2_f12['Total-2023'].astype(int)
df_Pass_Count_m2_f12['Percent-2023'] = df_Pass_Count_m2_f12['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f12['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f12['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f12 = dfAttendees_Country_Count_m2_f12.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f12['Total-2017'] = dfAttendees_Country_Count_m2_f12['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f12['Percent-2017'] = dfAttendees_Country_Count_m2_f12['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f12['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f12['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f12 = dfAttendees_Country_Count_m2_f12.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f12['Total-2018'] = dfAttendees_Country_Count_m2_f12['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f12['Percent-2018'] = dfAttendees_Country_Count_m2_f12['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f12['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f12['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f12 = dfAttendees_Country_Count_m2_f12.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f12['Total-2019'] = dfAttendees_Country_Count_m2_f12['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f12['Percent-2019'] = dfAttendees_Country_Count_m2_f12['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f12['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f12['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f12 = dfAttendees_Country_Count_m2_f12.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f12['Total-2021'] = dfAttendees_Country_Count_m2_f12['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f12['Percent-2021'] = dfAttendees_Country_Count_m2_f12['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f12['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f12['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f12 = dfAttendees_Country_Count_m2_f12.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f12['Total-2022'] = dfAttendees_Country_Count_m2_f12['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f12['Percent-2022'] = dfAttendees_Country_Count_m2_f12['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f12['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f12['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f12 = dfAttendees_Country_Count_m2_f12.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f12['Total-2023'] = dfAttendees_Country_Count_m2_f12['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f12['Percent-2023'] = dfAttendees_Country_Count_m2_f12['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f12['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f12['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f12 = df_ATTENDEES_AREAS_count_m2_f12.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f12['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f12['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f12['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f12['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f12['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f12['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f12 = df_ATTENDEES_AREAS_count_m2_f12.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f12['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f12['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f12['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f12['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f12['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f12['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f12 = df_ATTENDEES_AREAS_count_m2_f12.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f12['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f12['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f12['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f12['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f12['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f12['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f12 = df_ATTENDEES_AREAS_count_m2_f12.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f12['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f12['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f12['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f12['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f12['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f12['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f12 = df_ATTENDEES_AREAS_count_m2_f12.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f12['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f12['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f12['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f12['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f12['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f12['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f12 = df_ATTENDEES_AREAS_count_m2_f12.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f12['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f12['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f12['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f12['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f12['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f12['Total-2017'],errors='coerce')
df_Specialty_count_m2_f12 = df_Specialty_count_m2_f12.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f12['Total-2017'] = df_Specialty_count_m2_f12['Total-2017'].astype(int)
df_Specialty_count_m2_f12['Percent-2017'] = df_Specialty_count_m2_f12['Percent-2017'].astype(float)

df_Specialty_count_m2_f12['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f12['Total-2018'],errors='coerce')
df_Specialty_count_m2_f12 = df_Specialty_count_m2_f12.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f12['Total-2018'] = df_Specialty_count_m2_f12['Total-2018'].astype(int)
df_Specialty_count_m2_f12['Percent-2018'] = df_Specialty_count_m2_f12['Percent-2018'].astype(float)

df_Specialty_count_m2_f12['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f12['Total-2019'],errors='coerce')
df_Specialty_count_m2_f12 = df_Specialty_count_m2_f12.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f12['Total-2019'] = df_Specialty_count_m2_f12['Total-2019'].astype(int)
df_Specialty_count_m2_f12['Percent-2019'] = df_Specialty_count_m2_f12['Percent-2019'].astype(float)

df_Specialty_count_m2_f12['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f12['Total-2021'],errors='coerce')
df_Specialty_count_m2_f12 = df_Specialty_count_m2_f12.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f12['Total-2021'] = df_Specialty_count_m2_f12['Total-2021'].astype(int)
df_Specialty_count_m2_f12['Percent-2021'] = df_Specialty_count_m2_f12['Percent-2021'].astype(float)

df_Specialty_count_m2_f12['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f12['Total-2022'],errors='coerce')
df_Specialty_count_m2_f12 = df_Specialty_count_m2_f12.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f12['Total-2022'] = df_Specialty_count_m2_f12['Total-2022'].astype(int)
df_Specialty_count_m2_f12['Percent-2022'] = df_Specialty_count_m2_f12['Percent-2022'].astype(float)

df_Specialty_count_m2_f12['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f12['Total-2023'],errors='coerce')
df_Specialty_count_m2_f12 = df_Specialty_count_m2_f12.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f12['Total-2023'] = df_Specialty_count_m2_f12['Total-2023'].astype(int)
df_Specialty_count_m2_f12['Percent-2023'] = df_Specialty_count_m2_f12['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f12.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f12.dtypes)
#print(df_Specialty_count_m2_f12.dtypes)

#print(dfAttendees_Country_Count_m2_f12.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f12.dtypes)
#print(df_Specialty_count_m2_f12.dtypes)

# EXCEL FILE
writerf12 = pd.ExcelWriter(outputExcelFile_f12, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f12.to_excel\
    (writerf12, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f12.to_excel\
    (writerf12, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f12.to_excel\
    (writerf12, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f12.to_excel\
    (writerf12, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f12.to_excel\
    (writerf12, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f12.to_excel\
    (writerf12, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f12.to_excel\
    (writerf12, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f12.to_excel\
    (writerf12, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f12.to_excel\
    (writerf12, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f12.to_excel\
    (writerf12, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f12.to_excel\
    (writerf12, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf12.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f12)

workbook.save(outputExcelFile_f12)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 112 days**********************************************')
print('************************************End of 112 days**********************************************')
print('************************************End of 112 days**********************************************')
print('************************************End of 112 days**********************************************')
print('************************************End of 112 days**********************************************')
print('************************************End of 112 days**********************************************')
print('************************************End of 112 days**********************************************')
print('************************************End of 112 days**********************************************')
print('************************************End of 112 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f13_Registrations_count = pd.DataFrame(filter_13_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f13_Registrations_count = dfd17_f13_Registrations_count.fillna('Unknown')
dfd17_f13_Registrations_count['Percent-2017'] = (dfd17_f13_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f13_Registrations_count['Percent-2017'] = dfd17_f13_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f13_Registrations_count['7DEvolution-2017'] = dfd17_f13_Registrations_count['Total-2017'] - dfd17_f12_Registrations_count['Total-2017']
#print(tab(dfd17_f13_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f13_Registrations_count = pd.DataFrame(filter_13_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f13_Registrations_count = dfd18_f13_Registrations_count.fillna('Unknown')
dfd18_f13_Registrations_count['Percent-2018'] = (dfd18_f13_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f13_Registrations_count['Percent-2018'] = dfd18_f13_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f13_Registrations_count['7DEvolution-2018'] = dfd18_f13_Registrations_count['Total-2018'] - dfd18_f12_Registrations_count['Total-2018']
#print(tab(dfd18_f13_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f13_Registrations_count = pd.DataFrame(filter_13_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f13_Registrations_count = dfd19_f13_Registrations_count.fillna('Unknown')
dfd19_f13_Registrations_count['Percent-2019'] = (dfd19_f13_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f13_Registrations_count['Percent-2019'] = dfd19_f13_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f13_Registrations_count['7DEvolution-2019'] = dfd19_f13_Registrations_count['Total-2019'] - dfd19_f12_Registrations_count['Total-2019']
#print(tab(dfd19_f13_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f13_Registrations_count = pd.DataFrame(filter_13_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f13_Registrations_count = dfd21_f13_Registrations_count.fillna('Unknown')
dfd21_f13_Registrations_count['Percent-2021'] = (dfd21_f13_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f13_Registrations_count['Percent-2021'] = dfd21_f13_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f13_Registrations_count['7DEvolution-2021'] = dfd21_f13_Registrations_count['Total-2021'] - dfd21_f12_Registrations_count['Total-2021']
#print(tab(dfd21_f13_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f13_Registrations_count = pd.DataFrame(filter_13_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f13_Registrations_count = dfd22_f13_Registrations_count.fillna('Unknown')
dfd22_f13_Registrations_count['Percent-2022'] = (dfd22_f13_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f13_Registrations_count['Percent-2022'] = dfd22_f13_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f13_Registrations_count['7DEvolution-2022'] = dfd22_f13_Registrations_count['Total-2022'] - dfd22_f12_Registrations_count['Total-2022']
#print(tab(dfd22_f13_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_Registrations_count = pd.DataFrame(filter_13_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f13_Registrations_count = dfd23_f13_Registrations_count.fillna('Unknown')
dfd23_f13_Registrations_count['Percent-2023'] = (dfd23_f13_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f13_Registrations_count['Percent-2023'] = dfd23_f13_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f13_Registrations_count['7DEvolution-2023'] = dfd23_f13_Registrations_count['Total-2023'] - dfd23_f12_Registrations_count['Total-2023']
#print(tab(dfd23_f13_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f13_RegistrationsEvolution_count = pd.DataFrame(filter_13_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f13_RegistrationsEvolution_count = dfd23_f13_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f13_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f13_Registrations_count['Total-2023'] - dfd19_f13_Registrations_count['Total-2019'])/ dfd19_f13_Registrations_count['Total-2019'].sum()) * 100
dfd23_f13_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f13_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f13_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f13 = pd.DataFrame(pd.merge(dfd17_f13_Registrations_count, dfd18_f13_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f13 = pd.DataFrame(pd.merge(dfd19_f13_Registrations_count, dfd21_f13_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f13 = pd.DataFrame(pd.merge(dfd22_f13_Registrations_count, dfd23_f13_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f13 = pd.DataFrame(pd.merge(df_Registrations_count_1_f13, df_Registrations_count_2_f13, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f13 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f13, df_Registrations_count_3_f13, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f13 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f13, dfd23_f13_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f13 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13]
Concat_Registrations_count_f1_f13 = pd.concat(ConcatFrames_Registrations_count_f1_f13)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f13  = ConcatFrames_Registrations_count_f1_f13.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f13.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f13 = filter_13_df18[filter_13_df18['New customer'] == 1]
df_NewCustomer_df19_f13 = filter_13_df19[filter_13_df19['New customer'] == 1]
df_NewCustomer_df21_f13 = filter_13_df21[filter_13_df21['New customer'] == 1]
df_NewCustomer_df22_f13 = filter_13_df22[filter_13_df22['New customer'] == 1]
df_NewCustomer_df23_f13 = filter_13_df23[filter_13_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f13.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f13.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f13.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a13_ACQRET_count = pd.DataFrame(filter_13_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f13_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f13.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f13_ACQRET_count['Percent-2018'] = (dfd18_f13_ACQRET_count['ACQ-2018'] / dfd18_f13_Registrations_count['Total-2018'].sum()) * 100
dfd18_f13_ACQRET_count['Percent-2018'] = dfd18_f13_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f13_ACQRET_count['RET-2018'] = dfd18_a13_ACQRET_count['Total-2018'] - dfd18_f13_ACQRET_count['ACQ-2018']
dfd18_f13_ACQRET_count['Percnt-2018'] = (dfd18_f13_ACQRET_count['RET-2018'] / dfd18_a13_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f13_ACQRET_count['Percnt-2018'] = dfd18_f13_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f13_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a13_ACQRET_count = pd.DataFrame(filter_13_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f13_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f13.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f13_ACQRET_count['Percent-2019'] = (dfd19_f13_ACQRET_count['ACQ-2019'] / dfd19_f13_Registrations_count['Total-2019'].sum()) * 100
dfd19_f13_ACQRET_count['Percent-2019'] = dfd19_f13_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f13_ACQRET_count['RET-2019'] = dfd19_a13_ACQRET_count['Total-2019'] - dfd19_f13_ACQRET_count['ACQ-2019']
dfd19_f13_ACQRET_count['Percnt-2019'] = (dfd19_f13_ACQRET_count['RET-2019'] / dfd19_a13_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f13_ACQRET_count['Percnt-2019'] = dfd19_f13_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f13_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a13_ACQRET_count = pd.DataFrame(filter_13_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f13_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f13.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f13_ACQRET_count['Percent-2021'] = (dfd21_f13_ACQRET_count['ACQ-2021'] / dfd21_f13_Registrations_count['Total-2021'].sum()) * 100
dfd21_f13_ACQRET_count['Percent-2021'] = dfd21_f13_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f13_ACQRET_count['RET-2021'] = dfd21_a13_ACQRET_count['Total-2021'] - dfd21_f13_ACQRET_count['ACQ-2021']
dfd21_f13_ACQRET_count['Percnt-2021'] = (dfd21_f13_ACQRET_count['RET-2021'] / dfd21_a13_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f13_ACQRET_count['Percnt-2021'] = dfd21_f13_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f13_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a13_ACQRET_count = pd.DataFrame(filter_13_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f13_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f13.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f13_ACQRET_count['Percent-2022'] = (dfd22_f13_ACQRET_count['ACQ-2022'] / dfd22_f13_Registrations_count['Total-2022'].sum()) * 100
dfd22_f13_ACQRET_count['Percent-2022'] = dfd22_f13_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f13_ACQRET_count['RET-2022'] = dfd22_a13_ACQRET_count['Total-2022'] - dfd22_f13_ACQRET_count['ACQ-2022']
dfd22_f13_ACQRET_count['Percnt-2022'] = (dfd22_f13_ACQRET_count['RET-2022'] / dfd22_a13_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f13_ACQRET_count['Percnt-2022'] = dfd22_f13_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f13_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a13_ACQRET_count = pd.DataFrame(filter_13_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f13_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f13.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f13_ACQRET_count['Percent-2023'] = (dfd23_f13_ACQRET_count['ACQ-2023'] / dfd23_f13_Registrations_count['Total-2023'].sum()) * 100
dfd23_f13_ACQRET_count['Percent-2023'] = dfd23_f13_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f13_ACQRET_count['RET-2023'] = dfd23_a13_ACQRET_count['Total-2023'] - dfd23_f13_ACQRET_count['ACQ-2023']
dfd23_f13_ACQRET_count['Percnt-2023'] = (dfd23_f13_ACQRET_count['RET-2023'] / dfd23_a13_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f13_ACQRET_count['Percnt-2023'] = dfd23_f13_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f13_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f13 = pd.DataFrame(pd.merge(dfd18_a13_ACQRET_count, dfd18_f13_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f13 = pd.DataFrame(pd.merge(dfd19_a13_ACQRET_count, dfd19_f13_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f13 = pd.DataFrame(pd.merge(dfd21_a13_ACQRET_count, dfd21_f13_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f13 = pd.DataFrame(pd.merge(dfd22_a13_ACQRET_count, dfd22_f13_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_13_f13 = pd.DataFrame(pd.merge(dfd23_a13_ACQRET_count, dfd23_f13_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_13_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f13 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f13, df_ACQRET_count_2_f13, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f13 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f13, df_ACQRET_count_3_f13, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f13 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f13, df_ACQRET_count_4_f13, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f13 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f13, df_ACQRET_count_13_f13, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f13 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13]
Concat_ACQRET_count_f1_f13 = pd.concat(ConcatFrames_ACQRET_count_f1_f13)
#print(tab(Concat_ACQRET_count_f1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f13 = Concat_ACQRET_count_f1_f13[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f13_Revenue_calc = pd.DataFrame(filter_13_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f13_Revenue_calc['Percent-2017'] = (dfd17_f13_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f13_Revenue_calc['Percent-2017'] = dfd17_f13_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f13_Revenue_calc['7DEvolution-2017'] = dfd17_f13_Revenue_calc['Total-2017'] - dfd17_f12_Revenue_calc['Total-2017']
#print(tab(dfd17_f13_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f13_Revenue_calc = pd.DataFrame(filter_13_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f13_Revenue_calc['Percent-2018'] = (dfd18_f13_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f13_Revenue_calc['Percent-2018'] = dfd18_f13_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f13_Revenue_calc['7DEvolution-2018'] = dfd18_f13_Revenue_calc['Total-2018'] - dfd18_f12_Revenue_calc['Total-2018']
#print(tab(dfd18_f13_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f13_Revenue_calc = pd.DataFrame(filter_13_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f13_Revenue_calc['Percent-2019'] = (dfd19_f13_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f13_Revenue_calc['Percent-2019'] = dfd19_f13_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f13_Revenue_calc['7DEvolution-2019'] = dfd19_f13_Revenue_calc['Total-2019'] - dfd19_f12_Revenue_calc['Total-2019']
#print(tab(dfd19_f13_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f13_Revenue_calc = pd.DataFrame(filter_13_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f13_Revenue_calc['Percent-2021'] = (dfd21_f13_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f13_Revenue_calc['Percent-2021'] = dfd21_f13_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f13_Revenue_calc['7DEvolution-2021'] = dfd21_f13_Revenue_calc['Total-2021'] - dfd21_f12_Revenue_calc['Total-2021']
#print(tab(dfd21_f13_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f13_Revenue_calc = pd.DataFrame(filter_13_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f13_Revenue_calc['Percent-2022'] = (dfd22_f13_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f13_Revenue_calc['Percent-2022'] = dfd22_f13_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f13_Revenue_calc['7DEvolution-2022'] = dfd22_f13_Revenue_calc['Total-2022'] - dfd22_f12_Revenue_calc['Total-2022']
#print(tab(dfd22_f13_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_Revenue_calc = pd.DataFrame(filter_13_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f13_Revenue_calc['Percent-2023'] = (dfd23_f13_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f13_Revenue_calc['Percent-2023'] = dfd23_f13_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f13_Revenue_calc['7DEvolution-2023'] = dfd23_f13_Revenue_calc['Total-2023'] - dfd23_f12_Revenue_calc['Total-2023']
#print(tab(dfd23_f13_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f13_RevenueEvolution_calc = pd.DataFrame(filter_13_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f13_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f13_Revenue_calc['Total-2023'] - dfd19_f13_Revenue_calc['Total-2019'])/ dfd19_f13_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f13_RevenueEvolution_calc['Evolution-2023'] = dfd23_f13_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f13_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f13 = pd.DataFrame(pd.merge(dfd17_f13_Revenue_calc, dfd18_f13_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f13 = pd.DataFrame(pd.merge(dfd19_f13_Revenue_calc, dfd21_f13_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f13 = pd.DataFrame(pd.merge(dfd22_f13_Revenue_calc, dfd23_f13_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f13_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f13, df_Revenue_calc_2_f13, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f13Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f13_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f13_Evolution, df_Revenue_calc_3_f13, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f13Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f13 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f13_Evolution, dfd23_f13_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f13 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13]
Concat_REV_count_f1_f13 = pd.concat(ConcatFrames_REV_count_f1_f13)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f13_Registrations_GRDel = pd.DataFrame(filtr_13_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f13_Registrations_GRDel = dfd17_f13_Registrations_GRDel.fillna('Unknown')
dfd17_f13_Registrations_GRDel['Percent-2017'] = (dfd17_f13_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f13_Registrations_GRDel['Percent-2017'] = dfd17_f13_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f13_Registrations_GRDel['7DEvolution-2017'] = dfd17_f13_Registrations_GRDel['Total-2017'] - dfd17_f12_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f13_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f13_Registrations_GRDel = pd.DataFrame(filtr_13_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f13_Registrations_GRDel = dfd18_f13_Registrations_GRDel.fillna('Unknown')
dfd18_f13_Registrations_GRDel['Percent-2018'] = (dfd18_f13_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f13_Registrations_GRDel['Percent-2018'] = dfd18_f13_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f13_Registrations_GRDel['7DEvolution-2018'] = dfd18_f13_Registrations_GRDel['Total-2018'] - dfd18_f12_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f13_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f13_Registrations_GRDel = pd.DataFrame(filtr_13_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f13_Registrations_GRDel = dfd19_f13_Registrations_GRDel.fillna('Unknown')
dfd19_f13_Registrations_GRDel['Percent-2019'] = (dfd19_f13_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f13_Registrations_GRDel['Percent-2019'] = dfd19_f13_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f13_Registrations_GRDel['7DEvolution-2019'] = dfd19_f13_Registrations_GRDel['Total-2019'] - dfd19_f12_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f13_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f13_Registrations_GRDel = pd.DataFrame(filtr_13_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f13_Registrations_GRDel = dfd21_f13_Registrations_GRDel.fillna('Unknown')
dfd21_f13_Registrations_GRDel['Percent-2021'] = (dfd21_f13_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f13_Registrations_GRDel['Percent-2021'] = dfd21_f13_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f13_Registrations_GRDel['7DEvolution-2021'] = dfd21_f13_Registrations_GRDel['Total-2021'] - dfd21_f12_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f13_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f13_Registrations_GRDel = pd.DataFrame(filtr_13_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f13_Registrations_GRDel = dfd22_f13_Registrations_GRDel.fillna('Unknown')
dfd22_f13_Registrations_GRDel['Percent-2022'] = (dfd22_f13_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f13_Registrations_GRDel['Percent-2022'] = dfd22_f13_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f13_Registrations_GRDel['7DEvolution-2022'] = dfd22_f13_Registrations_GRDel['Total-2022'] - dfd22_f12_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f13_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_Registrations_GRDel = pd.DataFrame(filtr_13_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f13_Registrations_GRDel = dfd23_f13_Registrations_GRDel.fillna('Unknown')
dfd23_f13_Registrations_GRDel['Percent-2023'] = (dfd23_f13_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f13_Registrations_GRDel['Percent-2023'] = dfd23_f13_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f13_Registrations_GRDel['7DEvolution-2023'] = dfd23_f13_Registrations_GRDel['Total-2023'] - dfd23_f12_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f13_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f13_Registrations_Evol_GRDel = pd.DataFrame(filtr_13_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f13_Registrations_Evol_GRDel = dfd23_f13_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f13_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f13_Registrations_GRDel['Total-2023'] - dfd19_f13_Registrations_GRDel['Total-2019'])/ dfd19_f13_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f13_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f13 = pd.concat([dfd17_f13_Registrations_GRDel, dfd18_f13_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f13 = pd.DataFrame(pd.merge(dfd17_f13_Registrations_GRDel, dfd18_f13_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f13 = pd.DataFrame(pd.merge(dfd19_f13_Registrations_GRDel, dfd21_f13_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f13 = pd.DataFrame(pd.merge(dfd22_f13_Registrations_GRDel, dfd23_f13_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f13 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f13, df_Registrations_GRDel_2_f13, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_13_f13 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f13, df_Registrations_GRDel_3_f13, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f13 = pd.DataFrame(pd.merge(df_Registrations_GRDel_13_f13, dfd23_f13_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f13 = df_Registrations_GRDel_f13[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f13 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13]
Concat_RegGRDel_count_f1_f13 = pd.concat(ConcatFrames_RegGRDel_count_f1_f13)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f13 = filtr_13_df18_GRdel[filtr_13_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f13 = filtr_13_df19_GRdel[filtr_13_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f13 = filtr_13_df21_GRdel[filtr_13_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f13 = filtr_13_df22_GRdel[filtr_13_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f13 = filtr_13_df23_GRdel[filtr_13_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f13.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f13.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a13_AC_RT_GRDel = pd.DataFrame(filtr_13_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f13_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f13.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f13_AC_RT_GRDel['Percent-2018'] = (dfd18_f13_AC_RT_GRDel['ACQ-2018'] / dfd18_f13_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f13_AC_RT_GRDel['Percent-2018'] = dfd18_f13_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f13_AC_RT_GRDel['RET-2018'] = dfd18_a13_AC_RT_GRDel['Total-2018'] - dfd18_f13_AC_RT_GRDel['ACQ-2018']
dfd18_f13_AC_RT_GRDel['Percnt-2018'] = (dfd18_f13_AC_RT_GRDel['RET-2018'] / dfd18_a13_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f13_AC_RT_GRDel['Percnt-2018'] = dfd18_f13_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f13_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a13_AC_RT_GRDel = pd.DataFrame(filtr_13_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f13_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f13.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f13_AC_RT_GRDel['Percent-2019'] = (dfd19_f13_AC_RT_GRDel['ACQ-2019'] / dfd19_f13_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f13_AC_RT_GRDel['Percent-2019'] = dfd19_f13_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f13_AC_RT_GRDel['RET-2019'] = dfd19_a13_AC_RT_GRDel['Total-2019'] - dfd19_f13_AC_RT_GRDel['ACQ-2019']
dfd19_f13_AC_RT_GRDel['Percnt-2019'] = (dfd19_f13_AC_RT_GRDel['RET-2019'] / dfd19_a13_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f13_AC_RT_GRDel['Percnt-2019'] = dfd19_f13_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f13_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a13_AC_RT_GRDel = pd.DataFrame(filtr_13_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f13_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f13.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f13_AC_RT_GRDel['Percent-2021'] = (dfd21_f13_AC_RT_GRDel['ACQ-2021'] / dfd21_f13_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f13_AC_RT_GRDel['Percent-2021'] = dfd21_f13_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f13_AC_RT_GRDel['RET-2021'] = dfd21_a13_AC_RT_GRDel['Total-2021'] - dfd21_f13_AC_RT_GRDel['ACQ-2021']
dfd21_f13_AC_RT_GRDel['Percnt-2021'] = (dfd21_f13_AC_RT_GRDel['RET-2021'] / dfd21_a13_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f13_AC_RT_GRDel['Percnt-2021'] = dfd21_f13_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f13_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a13_AC_RT_GRDel = pd.DataFrame(filtr_13_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f13_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f13.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f13_AC_RT_GRDel['Percent-2022'] = (dfd22_f13_AC_RT_GRDel['ACQ-2022'] / dfd22_f13_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f13_AC_RT_GRDel['Percent-2022'] = dfd22_f13_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f13_AC_RT_GRDel['RET-2022'] = dfd22_a13_AC_RT_GRDel['Total-2022'] - dfd22_f13_AC_RT_GRDel['ACQ-2022']
dfd22_f13_AC_RT_GRDel['Percnt-2022'] = (dfd22_f13_AC_RT_GRDel['RET-2022'] / dfd22_a13_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f13_AC_RT_GRDel['Percnt-2022'] = dfd22_f13_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f13_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a13_AC_RT_GRDel = pd.DataFrame(filtr_13_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f13_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f13.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f13_AC_RT_GRDel['Percent-2023'] = (dfd23_f13_AC_RT_GRDel['ACQ-2023'] / dfd23_f13_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f13_AC_RT_GRDel['Percent-2023'] = dfd23_f13_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f13_AC_RT_GRDel['RET-2023'] = dfd23_a13_AC_RT_GRDel['Total-2023'] - dfd23_f13_AC_RT_GRDel['ACQ-2023']
dfd23_f13_AC_RT_GRDel['Percnt-2023'] = (dfd23_f13_AC_RT_GRDel['RET-2023'] / dfd23_a13_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f13_AC_RT_GRDel['Percnt-2023'] = dfd23_f13_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f13_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f13 = pd.DataFrame(pd.merge_ordered(dfd18_a13_AC_RT_GRDel, dfd18_f13_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f13 = pd.DataFrame(pd.merge_ordered(dfd19_a13_AC_RT_GRDel, dfd19_f13_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f13 = pd.DataFrame(pd.merge_ordered(dfd21_a13_AC_RT_GRDel, dfd21_f13_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f13 = pd.DataFrame(pd.merge_ordered(dfd22_a13_AC_RT_GRDel, dfd22_f13_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_13_f13 = pd.DataFrame(pd.merge_ordered(dfd23_a13_AC_RT_GRDel, dfd23_f13_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f13 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f13, df_AC_ET_GRDel_2_f13, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f13 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f13, df_AC_ET_GRDel_3_f13, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f13 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f13, df_AC_ET_GRDel_4_f13, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f13 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f13, df_AC_ET_GRDel_13_f13, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f13 = df_AC_RT_GRDel_M4_f13[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f13 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13]
Conct_AC_RT_GRDel_f1_f13 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f13)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_13_df17_GRdel = filtr_13_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f13_Revenu_GRDel = pd.DataFrame(filtr_13_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f13_Revenu_GRDel['Percent-2017'] = (dfd17_f13_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f13_Revenu_GRDel['Percent-2017'] = dfd17_f13_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f13_Revenu_GRDel['7DEvolution-2017'] = dfd17_f13_Revenu_GRDel['Total-2017'] - dfd17_f12_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f13_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_13_df18_GRdel = filtr_13_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f13_Revenu_GRDel = pd.DataFrame(filtr_13_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f13_Revenu_GRDel['Percent-2018'] = (dfd18_f13_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f13_Revenu_GRDel['Percent-2018'] = dfd18_f13_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f13_Revenu_GRDel['7DEvolution-2018'] = dfd18_f13_Revenu_GRDel['Total-2018'] - dfd18_f12_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f13_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_13_df19_GRdel = filtr_13_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f13_Revenu_GRDel = pd.DataFrame(filtr_13_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f13_Revenu_GRDel['Percent-2019'] = (dfd19_f13_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f13_Revenu_GRDel['Percent-2019'] = dfd19_f13_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f13_Revenu_GRDel['7DEvolution-2019'] = dfd19_f13_Revenu_GRDel['Total-2019'] - dfd19_f12_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f13_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_13_df21_GRdel = filtr_13_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f13_Revenu_GRDel = pd.DataFrame(filtr_13_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f13_Revenu_GRDel['Percent-2021'] = (dfd21_f13_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f13_Revenu_GRDel['Percent-2021'] = dfd21_f13_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f13_Revenu_GRDel['7DEvolution-2021'] = dfd21_f13_Revenu_GRDel['Total-2021'] - dfd21_f12_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f13_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_13_df22_GRdel = filtr_13_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f13_Revenu_GRDel = pd.DataFrame(filtr_13_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f13_Revenu_GRDel['Percent-2022'] = (dfd22_f13_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f13_Revenu_GRDel['Percent-2022'] = dfd22_f13_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f13_Revenu_GRDel['7DEvolution-2022'] = dfd22_f13_Revenu_GRDel['Total-2022'] - dfd22_f12_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f13_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_13_df23_GRdel = filtr_13_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f13_Revenu_GRDel = pd.DataFrame(filtr_13_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f13_Revenu_GRDel['Percent-2023'] = (dfd23_f13_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f13_Revenu_GRDel['Percent-2023'] = dfd23_f13_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f13_Revenu_GRDel['7DEvolution-2023'] = dfd23_f13_Revenu_GRDel['Total-2023'] - dfd23_f12_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f13_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f13_Revenu_Evlt_GRDel = pd.DataFrame(filtr_13_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f13_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f13_Revenu_GRDel['Total-2023'] - dfd19_f13_Revenu_GRDel['Total-2019'])/ dfd19_f13_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f13_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f13_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f13_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f13 = pd.DataFrame(pd.merge(dfd17_f13_Revenu_GRDel, dfd18_f13_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f13 = pd.DataFrame(pd.merge(dfd19_f13_Revenu_GRDel, dfd21_f13_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f13 = pd.DataFrame(pd.merge(dfd22_f13_Revenu_GRDel, dfd23_f13_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f13 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f13, df_Revenu_GRDel_2_f13, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_13_f13 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f13, df_Revenu_GRDel_3_f13, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f13 = pd.DataFrame(pd.merge(df_Revenu_GRDel_13_f13, dfd23_f13_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f13 = df_Revenu_GRDel_f13[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f13 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13]
Conct_RV_GRDel_f1_f13 = pd.concat(ConcatFra_RV_GRDel_f1_f13)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f13_Profile_count = pd.DataFrame(filtr_13_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f13_Profile_count = dfd17_f13_Profile_count.fillna('Unknown')
dfd17_f13_Profile_count['Percent-2017'] = (dfd17_f13_Profile_count['Total-2017'] / dfd17_f13_Profile_count['Total-2017'].sum()) * 100
dfd17_f13_Profile_count['Percent-2017'] = dfd17_f13_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f13_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f13_Profile_count = pd.DataFrame(filtr_13_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f13_Profile_count = dfd18_f13_Profile_count.fillna('Unknown')
dfd18_f13_Profile_count['Percent-2018'] = (dfd18_f13_Profile_count['Total-2018'] / dfd18_f13_Profile_count['Total-2018'].sum()) * 100
dfd18_f13_Profile_count['Percent-2018'] = dfd18_f13_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f13_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f13_Profile_count = pd.DataFrame(filtr_13_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f13_Profile_count = dfd19_f13_Profile_count.fillna('Unknown')
dfd19_f13_Profile_count['Percent-2019'] = (dfd19_f13_Profile_count['Total-2019'] / dfd19_f13_Profile_count['Total-2019'].sum()) * 100
dfd19_f13_Profile_count['Percent-2019'] = dfd19_f13_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f13_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f13_Profile_count = pd.DataFrame(filtr_13_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f13_Profile_count = dfd21_f13_Profile_count.fillna('Unknown')
dfd21_f13_Profile_count['Percent-2021'] = (dfd21_f13_Profile_count['Total-2021'] / dfd21_f13_Profile_count['Total-2021'].sum()) * 100
dfd21_f13_Profile_count['Percent-2021'] = dfd21_f13_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f13_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f13_Profile_count = pd.DataFrame(filtr_13_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f13_Profile_count = dfd22_f13_Profile_count.fillna('Unknown')
dfd22_f13_Profile_count['Percent-2022'] = (dfd22_f13_Profile_count['Total-2022'] / dfd22_f13_Profile_count['Total-2022'].sum()) * 100
dfd22_f13_Profile_count['Percent-2022'] = dfd22_f13_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f13_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_Profile_count = pd.DataFrame(filtr_13_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f13_Profile_count = dfd23_f13_Profile_count.fillna('Unknown')
dfd23_f13_Profile_count['Percent-2023'] = (dfd23_f13_Profile_count['Total-2023'] / dfd23_f13_Profile_count['Total-2023'].sum()) * 100
dfd23_f13_Profile_count['Percent-2023'] = dfd23_f13_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f13_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f13 = pd.DataFrame(pd.merge(dfd17_f13_Profile_count, dfd18_f13_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f13 = pd.DataFrame(pd.merge(dfd19_f13_Profile_count, dfd21_f13_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f13 = pd.DataFrame(pd.merge(dfd22_f13_Profile_count, dfd23_f13_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f13 = pd.DataFrame(pd.merge(df_Profile_Count_1_f13, df_Profile_Count_2_f13, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f13 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f13, df_Profile_Count_3_f13, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f13 = df_Profile_Count_m2_f13.append(df_Profile_Count_m2_f13.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f13['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f13_Pass_count = pd.DataFrame(filtr_13_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f13_Pass_count = dfd17_f13_Pass_count.fillna('Unknown')
dfd17_f13_Pass_count['Percent-2017'] = (dfd17_f13_Pass_count['Total-2017'] / dfd17_f13_Pass_count['Total-2017'].sum()) * 100
dfd17_f13_Pass_count['Percent-2017'] = dfd17_f13_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f13_Pass_count = pd.DataFrame(filtr_13_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f13_Pass_count = dfd18_f13_Pass_count.fillna('Unknown')
dfd18_f13_Pass_count['Percent-2018'] = (dfd18_f13_Pass_count['Total-2018'] / dfd18_f13_Pass_count['Total-2018'].sum()) * 100
dfd18_f13_Pass_count['Percent-2018'] = dfd18_f13_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f13_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f13_Pass_count = pd.DataFrame(filtr_13_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f13_Pass_count = dfd19_f13_Pass_count.fillna('Unknown')
dfd19_f13_Pass_count['Percent-2019'] = (dfd19_f13_Pass_count['Total-2019'] / dfd19_f13_Pass_count['Total-2019'].sum()) * 100
dfd19_f13_Pass_count['Percent-2019'] = dfd19_f13_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f13_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f13_Pass_count = pd.DataFrame(filtr_13_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f13_Pass_count = dfd21_f13_Pass_count.fillna('Unknown')
dfd21_f13_Pass_count['Percent-2021'] = (dfd21_f13_Pass_count['Total-2021'] / dfd21_f13_Pass_count['Total-2021'].sum()) * 100
dfd21_f13_Pass_count['Percent-2021'] = dfd21_f13_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f13_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f13_Pass_count = pd.DataFrame(filtr_13_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f13_Pass_count = dfd22_f13_Pass_count.fillna('Unknown')
dfd22_f13_Pass_count['Percent-2022'] = (dfd22_f13_Pass_count['Total-2022'] / dfd22_f13_Pass_count['Total-2022'].sum()) * 100
dfd22_f13_Pass_count['Percent-2022'] = dfd22_f13_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f13_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_Pass_count = pd.DataFrame(filtr_13_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f13_Pass_count = dfd23_f13_Pass_count.fillna('Unknown')
dfd23_f13_Pass_count['Percent-2023'] = (dfd23_f13_Pass_count['Total-2023'] / dfd23_f13_Pass_count['Total-2023'].sum()) * 100
dfd23_f13_Pass_count['Percent-2023'] = dfd23_f13_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f13_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f13 = pd.DataFrame(pd.merge(dfd17_f13_Pass_count, dfd18_f13_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f13 = pd.DataFrame(pd.merge(dfd19_f13_Pass_count, dfd21_f13_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f13 = pd.DataFrame(pd.merge(dfd22_f13_Pass_count, dfd23_f13_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f13 = pd.DataFrame(pd.merge(df_Pass_Count_1_f13, df_Pass_Count_2_f13, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f13 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f13, df_Pass_Count_3_f13, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f13 = df_Pass_Count_m2_f13.append(df_Pass_Count_m2_f13.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f13['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f13_Attendees_Country_count = pd.DataFrame(filtr_13_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f13_Attendees_Country_count = dfd17_f13_Attendees_Country_count.fillna('Unknown')
dfd17_f13_Attendees_Country_count['Percent-2017'] = (dfd17_f13_Attendees_Country_count['Total-2017'] / dfd17_f13_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f13_Attendees_Country_count['Percent-2017'] = dfd17_f13_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f13_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f13_Attendees_Country_count = pd.DataFrame(filtr_13_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f13_Attendees_Country_count = dfd18_f13_Attendees_Country_count.fillna('Unknown')
dfd18_f13_Attendees_Country_count['Percent-2018'] = (dfd18_f13_Attendees_Country_count['Total-2018'] / dfd18_f13_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f13_Attendees_Country_count['Percent-2018'] = dfd18_f13_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f13_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f13_Attendees_Country_count = pd.DataFrame(filtr_13_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f13_Attendees_Country_count = dfd19_f13_Attendees_Country_count.fillna('Unknown')
dfd19_f13_Attendees_Country_count['Percent-2019'] = (dfd19_f13_Attendees_Country_count['Total-2019'] / dfd19_f13_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f13_Attendees_Country_count['Percent-2019'] = dfd19_f13_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f13_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f13_Attendees_Country_count = pd.DataFrame(filtr_13_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f13_Attendees_Country_count = dfd21_f13_Attendees_Country_count.fillna('Unknown')
dfd21_f13_Attendees_Country_count['Percent-2021'] = (dfd21_f13_Attendees_Country_count['Total-2021'] / dfd21_f13_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f13_Attendees_Country_count['Percent-2021'] = dfd21_f13_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f13_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f13_Attendees_Country_count = pd.DataFrame(filtr_13_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f13_Attendees_Country_count = dfd22_f13_Attendees_Country_count.fillna('Unknown')
dfd22_f13_Attendees_Country_count['Percent-2022'] = (dfd22_f13_Attendees_Country_count['Total-2022'] / dfd22_f13_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f13_Attendees_Country_count['Percent-2022'] = dfd22_f13_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f13_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_Attendees_Country_count = pd.DataFrame(filtr_13_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f13_Attendees_Country_count = dfd23_f13_Attendees_Country_count.fillna('Unknown')
dfd23_f13_Attendees_Country_count['Percent-2023'] = (dfd23_f13_Attendees_Country_count['Total-2023'] / dfd23_f13_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f13_Attendees_Country_count['Percent-2023'] = dfd23_f13_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f13_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f13 = pd.DataFrame(pd.merge(dfd17_f13_Attendees_Country_count, dfd18_f13_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f13 = pd.DataFrame(pd.merge(dfd19_f13_Attendees_Country_count, dfd21_f13_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f13 = pd.DataFrame(pd.merge(dfd22_f13_Attendees_Country_count, dfd23_f13_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f13 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f13, dfAttendees_Country_Count_2_f13, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f13.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f13 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f13, dfAttendees_Country_Count_3_f13, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f13 = dfAttendees_Country_Count_m2_f13.append(dfAttendees_Country_Count_m2_f13.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f13['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f13_ATTENDEES_AREAS_count = pd.DataFrame(filtr_13_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f13_ATTENDEES_AREAS_count = dfd17_f13_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f13_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f13_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f13_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f13_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f13_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f13_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f13_ATTENDEES_AREAS_count = pd.DataFrame(filtr_13_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f13_ATTENDEES_AREAS_count = dfd18_f13_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f13_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f13_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f13_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f13_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f13_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f13_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f13_ATTENDEES_AREAS_count = pd.DataFrame(filtr_13_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f13_ATTENDEES_AREAS_count = dfd19_f13_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f13_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f13_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f13_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f13_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f13_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f13_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f13_ATTENDEES_AREAS_count = pd.DataFrame(filtr_13_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f13_ATTENDEES_AREAS_count = dfd21_f13_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f13_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f13_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f13_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f13_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f13_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f13_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f13_ATTENDEES_AREAS_count = pd.DataFrame(filtr_13_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f13_ATTENDEES_AREAS_count = dfd22_f13_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f13_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f13_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f13_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f13_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f13_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f13_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_ATTENDEES_AREAS_count = pd.DataFrame(filtr_13_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f13_ATTENDEES_AREAS_count = dfd23_f13_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f13_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f13_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f13_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f13_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f13_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f13_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f13 = pd.DataFrame(pd.merge(dfd17_f13_ATTENDEES_AREAS_count, dfd18_f13_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f13 = pd.DataFrame(pd.merge(dfd19_f13_ATTENDEES_AREAS_count, dfd21_f13_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f13 = pd.DataFrame(pd.merge(dfd22_f13_ATTENDEES_AREAS_count, dfd23_f13_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f13.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f13 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f13, df_ATTENDEES_AREAS_count_2_f13, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f13 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f13, df_ATTENDEES_AREAS_count_3_f13, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f13 = df_ATTENDEES_AREAS_count_m2_f13.append(df_ATTENDEES_AREAS_count_m2_f13.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f13['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f13_Attendees_Specialty_count = pd.DataFrame(filtr_13_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f13_Attendees_Specialty_count = dfd17_f13_Attendees_Specialty_count.fillna('Unknown')
dfd17_f13_Attendees_Specialty_count['Percent-2017'] = (dfd17_f13_Attendees_Specialty_count['Total-2017'] / dfd17_f13_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f13_Attendees_Specialty_count['Percent-2017'] = dfd17_f13_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f13_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f13_Attendees_Specialty_count = pd.DataFrame(filtr_13_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f13_Attendees_Specialty_count = dfd18_f13_Attendees_Specialty_count.fillna('Unknown')
dfd18_f13_Attendees_Specialty_count['Percent-2018'] = (dfd18_f13_Attendees_Specialty_count['Total-2018'] / dfd18_f13_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f13_Attendees_Specialty_count['Percent-2018'] = dfd18_f13_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f13_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f13_Attendees_Specialty_count = pd.DataFrame(filtr_13_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f13_Attendees_Specialty_count = dfd19_f13_Attendees_Specialty_count.fillna('Unknown')
dfd19_f13_Attendees_Specialty_count['Percent-2019'] = (dfd19_f13_Attendees_Specialty_count['Total-2019'] / dfd19_f13_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f13_Attendees_Specialty_count['Percent-2019'] = dfd19_f13_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f13_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f13_Attendees_Specialty_count = pd.DataFrame(filtr_13_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f13_Attendees_Specialty_count = dfd21_f13_Attendees_Specialty_count.fillna('Unknown')
dfd21_f13_Attendees_Specialty_count['Percent-2021'] = (dfd21_f13_Attendees_Specialty_count['Total-2021'] / dfd21_f13_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f13_Attendees_Specialty_count['Percent-2021'] = dfd21_f13_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f13_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f13_Attendees_Specialty_count = pd.DataFrame(filtr_13_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f13_Attendees_Specialty_count = dfd22_f13_Attendees_Specialty_count.fillna('Unknown')
dfd22_f13_Attendees_Specialty_count['Percent-2022'] = (dfd22_f13_Attendees_Specialty_count['Total-2022'] / dfd22_f13_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f13_Attendees_Specialty_count['Percent-2022'] = dfd22_f13_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f13_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f13_Attendees_Specialty_count = pd.DataFrame(filtr_13_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f13_Attendees_Specialty_count = dfd23_f13_Attendees_Specialty_count.fillna('Unknown')
dfd23_f13_Attendees_Specialty_count['Percent-2023'] = (dfd23_f13_Attendees_Specialty_count['Total-2023'] / dfd23_f13_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f13_Attendees_Specialty_count['Percent-2023'] = dfd23_f13_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f13_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f13 = pd.DataFrame(pd.merge(dfd17_f13_Attendees_Specialty_count, dfd18_f13_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f13 = pd.DataFrame(pd.merge(dfd19_f13_Attendees_Specialty_count, dfd21_f13_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f13 = pd.DataFrame(pd.merge(dfd22_f13_Attendees_Specialty_count, dfd23_f13_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f13 = pd.DataFrame(pd.merge(df_Specialty_count_1_f13, df_Specialty_count_2_f13, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f13.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f13 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f13, df_Specialty_count_3_f13, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f13 = df_Specialty_count_m2_f13.append(df_Specialty_count_m2_f13.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f13['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f13['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f13['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f13 = Concat_Registrations_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f13['Total-2017'] = Concat_Registrations_count_f1_f13['Total-2017'].astype(int)
Concat_Registrations_count_f1_f13['Percent-2017'] = Concat_Registrations_count_f1_f13['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f13['7DEvolution-2017'] = Concat_Registrations_count_f1_f13['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f13['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f13['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f13 = Concat_Registrations_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f13['Total-2018'] = Concat_Registrations_count_f1_f13['Total-2018'].astype(int)
Concat_Registrations_count_f1_f13['Percent-2018'] = Concat_Registrations_count_f1_f13['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f13['7DEvolution-2018'] = Concat_Registrations_count_f1_f13['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f13['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f13['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f13 = Concat_Registrations_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f13['Total-2019'] = Concat_Registrations_count_f1_f13['Total-2019'].astype(int)
Concat_Registrations_count_f1_f13['Percent-2019'] = Concat_Registrations_count_f1_f13['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f13['7DEvolution-2019'] = Concat_Registrations_count_f1_f13['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f13['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f13['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f13 = Concat_Registrations_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f13['Total-2021'] = Concat_Registrations_count_f1_f13['Total-2021'].astype(int)
Concat_Registrations_count_f1_f13['Percent-2021'] = Concat_Registrations_count_f1_f13['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f13['7DEvolution-2021'] = Concat_Registrations_count_f1_f13['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f13['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f13['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f13 = Concat_Registrations_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f13['Total-2022'] = Concat_Registrations_count_f1_f13['Total-2022'].astype(int)
Concat_Registrations_count_f1_f13['Percent-2022'] = Concat_Registrations_count_f1_f13['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f13['7DEvolution-2022'] = Concat_Registrations_count_f1_f13['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f13['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f13['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f13 = Concat_Registrations_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f13['Total-2023'] = Concat_Registrations_count_f1_f13['Total-2023'].astype(int)
Concat_Registrations_count_f1_f13['Percent-2023'] = Concat_Registrations_count_f1_f13['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f13['7DEvolution-2023'] = Concat_Registrations_count_f1_f13['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f13['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f13['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f13 = Concat_ACQRET_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f13['Total-2018'] = Concat_ACQRET_count_f1_f13['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f13['ACQ-2018'] = Concat_ACQRET_count_f1_f13['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f13['Percent-2018'] = Concat_ACQRET_count_f1_f13['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f13['RET-2018'] = Concat_ACQRET_count_f1_f13['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f13['Percnt-2018'] = Concat_ACQRET_count_f1_f13['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f13['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f13['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f13 = Concat_ACQRET_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f13['Total-2019'] = Concat_ACQRET_count_f1_f13['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f13['ACQ-2019'] = Concat_ACQRET_count_f1_f13['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f13['Percent-2019'] = Concat_ACQRET_count_f1_f13['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f13['RET-2019'] = Concat_ACQRET_count_f1_f13['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f13['Percnt-2019'] = Concat_ACQRET_count_f1_f13['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f13['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f13['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f13 = Concat_ACQRET_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f13['Total-2021'] = Concat_ACQRET_count_f1_f13['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f13['ACQ-2021'] = Concat_ACQRET_count_f1_f13['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f13['Percent-2021'] = Concat_ACQRET_count_f1_f13['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f13['RET-2021'] = Concat_ACQRET_count_f1_f13['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f13['Percnt-2021'] = Concat_ACQRET_count_f1_f13['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f13['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f13['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f13 = Concat_ACQRET_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f13['Total-2022'] = Concat_ACQRET_count_f1_f13['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f13['ACQ-2022'] = Concat_ACQRET_count_f1_f13['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f13['Percent-2022'] = Concat_ACQRET_count_f1_f13['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f13['RET-2022'] = Concat_ACQRET_count_f1_f13['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f13['Percnt-2022'] = Concat_ACQRET_count_f1_f13['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f13['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f13['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f13 = Concat_ACQRET_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f13['Total-2023'] = Concat_ACQRET_count_f1_f13['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f13['ACQ-2023'] = Concat_ACQRET_count_f1_f13['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f13['Percent-2023'] = Concat_ACQRET_count_f1_f13['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f13['RET-2023'] = Concat_ACQRET_count_f1_f13['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f13['Percnt-2023'] = Concat_ACQRET_count_f1_f13['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f13['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f13['Total-2017'],errors='coerce')
Concat_REV_count_f1_f13 = Concat_REV_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f13['Total-2017'] = Concat_REV_count_f1_f13['Total-2017'].astype(int)
Concat_REV_count_f1_f13['Percent-2017'] = Concat_REV_count_f1_f13['Percent-2017'].astype(float)
Concat_REV_count_f1_f13['7DEvolution-2017'] = Concat_REV_count_f1_f13['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f13['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f13['Total-2018'],errors='coerce')
Concat_REV_count_f1_f13 = Concat_REV_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f13['Total-2018'] = Concat_REV_count_f1_f13['Total-2018'].astype(int)
Concat_REV_count_f1_f13['Percent-2018'] = Concat_REV_count_f1_f13['Percent-2018'].astype(float)
Concat_REV_count_f1_f13['7DEvolution-2018'] = Concat_REV_count_f1_f13['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f13['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f13['Total-2019'],errors='coerce')
Concat_REV_count_f1_f13 = Concat_REV_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f13['Total-2019'] = Concat_REV_count_f1_f13['Total-2019'].astype(int)
Concat_REV_count_f1_f13['Percent-2019'] = Concat_REV_count_f1_f13['Percent-2019'].astype(float)
Concat_REV_count_f1_f13['7DEvolution-2019'] = Concat_REV_count_f1_f13['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f13['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f13['Total-2022'],errors='coerce')
Concat_REV_count_f1_f13 = Concat_REV_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f13['Total-2022'] = Concat_REV_count_f1_f13['Total-2022'].astype(int)
Concat_REV_count_f1_f13['Percent-2022'] = Concat_REV_count_f1_f13['Percent-2022'].astype(float)
Concat_REV_count_f1_f13['7DEvolution-2022'] = Concat_REV_count_f1_f13['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f13['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f13['Total-2023'],errors='coerce')
Concat_REV_count_f1_f13 = Concat_REV_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f13['Total-2023'] = Concat_REV_count_f1_f13['Total-2023'].astype(int)
Concat_REV_count_f1_f13['Percent-2023'] = Concat_REV_count_f1_f13['Percent-2023'].astype(float)
Concat_REV_count_f1_f13['7DEvolution-2023'] = Concat_REV_count_f1_f13['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f13['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f13['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f13 = Concat_RegGRDel_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f13['Total-2017'] = Concat_RegGRDel_count_f1_f13['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f13['Percent-2017'] = Concat_RegGRDel_count_f1_f13['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f13['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f13['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f13['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f13['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f13 = Concat_RegGRDel_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f13['Total-2018'] = Concat_RegGRDel_count_f1_f13['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f13['Percent-2018'] = Concat_RegGRDel_count_f1_f13['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f13['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f13['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f13['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f13['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f13 = Concat_RegGRDel_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f13['Total-2019'] = Concat_RegGRDel_count_f1_f13['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f13['Percent-2019'] = Concat_RegGRDel_count_f1_f13['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f13['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f13['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f13['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f13['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f13 = Concat_RegGRDel_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f13['Total-2021'] = Concat_RegGRDel_count_f1_f13['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f13['Percent-2021'] = Concat_RegGRDel_count_f1_f13['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f13['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f13['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f13['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f13['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f13 = Concat_RegGRDel_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f13['Total-2022'] = Concat_RegGRDel_count_f1_f13['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f13['Percent-2022'] = Concat_RegGRDel_count_f1_f13['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f13['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f13['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f13['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f13['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f13 = Concat_RegGRDel_count_f1_f13.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f13['Total-2023'] = Concat_RegGRDel_count_f1_f13['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f13['Percent-2023'] = Concat_RegGRDel_count_f1_f13['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f13['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f13['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f13['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f13['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f13 = Conct_AC_RT_GRDel_f1_f13.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f13['Total-2018'] = Conct_AC_RT_GRDel_f1_f13['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f13['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f13['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f13['Percent-2018'] = Conct_AC_RT_GRDel_f1_f13['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f13['RET-2018'] = Conct_AC_RT_GRDel_f1_f13['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f13['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f13['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f13['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f13['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f13 = Conct_AC_RT_GRDel_f1_f13.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f13['Total-2019'] = Conct_AC_RT_GRDel_f1_f13['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f13['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f13['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f13['Percent-2019'] = Conct_AC_RT_GRDel_f1_f13['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f13['RET-2019'] = Conct_AC_RT_GRDel_f1_f13['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f13['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f13['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f13['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f13['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f13 = Conct_AC_RT_GRDel_f1_f13.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f13['Total-2021'] = Conct_AC_RT_GRDel_f1_f13['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f13['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f13['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f13['Percent-2021'] = Conct_AC_RT_GRDel_f1_f13['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f13['RET-2021'] = Conct_AC_RT_GRDel_f1_f13['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f13['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f13['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f13['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f13['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f13 = Conct_AC_RT_GRDel_f1_f13.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f13['Total-2022'] = Conct_AC_RT_GRDel_f1_f13['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f13['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f13['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f13['Percent-2022'] = Conct_AC_RT_GRDel_f1_f13['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f13['RET-2022'] = Conct_AC_RT_GRDel_f1_f13['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f13['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f13['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f13['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f13['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f13 = Conct_AC_RT_GRDel_f1_f13.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f13['Total-2023'] = Conct_AC_RT_GRDel_f1_f13['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f13['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f13['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f13['Percent-2023'] = Conct_AC_RT_GRDel_f1_f13['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f13['RET-2023'] = Conct_AC_RT_GRDel_f1_f13['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f13['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f13['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f13['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f13['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f13 = Conct_RV_GRDel_f1_f13.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f13['Total-2017'] = Conct_RV_GRDel_f1_f13['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f13['Percent-2017'] = Conct_RV_GRDel_f1_f13['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f13['7DEvolution-2017'] = Conct_RV_GRDel_f1_f13['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f13['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f13['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f13 = Conct_RV_GRDel_f1_f13.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f13['Total-2018'] = Conct_RV_GRDel_f1_f13['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f13['Percent-2018'] = Conct_RV_GRDel_f1_f13['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f13['7DEvolution-2018'] = Conct_RV_GRDel_f1_f13['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f13['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f13['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f13 = Conct_RV_GRDel_f1_f13.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f13['Total-2019'] = Conct_RV_GRDel_f1_f13['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f13['Percent-2019'] = Conct_RV_GRDel_f1_f13['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f13['7DEvolution-2019'] = Conct_RV_GRDel_f1_f13['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f13['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f13['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f13 = Conct_RV_GRDel_f1_f13.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f13['Total-2022'] = Conct_RV_GRDel_f1_f13['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f13['Percent-2022'] = Conct_RV_GRDel_f1_f13['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f13['7DEvolution-2022'] = Conct_RV_GRDel_f1_f13['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f13['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f13['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f13 = Conct_RV_GRDel_f1_f13.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f13['Total-2023'] = Conct_RV_GRDel_f1_f13['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f13['Percent-2023'] = Conct_RV_GRDel_f1_f13['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f13['7DEvolution-2023'] = Conct_RV_GRDel_f1_f13['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f13['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f13['Total-2017'],errors='coerce')
df_Profile_Count_m2_f13 = df_Profile_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f13['Total-2017'] = df_Profile_Count_m2_f13['Total-2017'].astype(int)
df_Profile_Count_m2_f13['Percent-2017'] = df_Profile_Count_m2_f13['Percent-2017'].astype(float)

df_Profile_Count_m2_f13['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f13['Total-2018'],errors='coerce')
df_Profile_Count_m2_f13 = df_Profile_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f13['Total-2018'] = df_Profile_Count_m2_f13['Total-2018'].astype(int)
df_Profile_Count_m2_f13['Percent-2018'] = df_Profile_Count_m2_f13['Percent-2018'].astype(float)

df_Profile_Count_m2_f13['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f13['Total-2019'],errors='coerce')
df_Profile_Count_m2_f13 = df_Profile_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f13['Total-2019'] = df_Profile_Count_m2_f13['Total-2019'].astype(int)
df_Profile_Count_m2_f13['Percent-2019'] = df_Profile_Count_m2_f13['Percent-2019'].astype(float)

df_Profile_Count_m2_f13['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f13['Total-2021'],errors='coerce')
df_Profile_Count_m2_f13 = df_Profile_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f13['Total-2021'] = df_Profile_Count_m2_f13['Total-2021'].astype(int)
df_Profile_Count_m2_f13['Percent-2021'] = df_Profile_Count_m2_f13['Percent-2021'].astype(float)

df_Profile_Count_m2_f13['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f13['Total-2022'],errors='coerce')
df_Profile_Count_m2_f13 = df_Profile_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f13['Total-2022'] = df_Profile_Count_m2_f13['Total-2022'].astype(int)
df_Profile_Count_m2_f13['Percent-2022'] = df_Profile_Count_m2_f13['Percent-2022'].astype(float)

df_Profile_Count_m2_f13['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f13['Total-2023'],errors='coerce')
df_Profile_Count_m2_f13 = df_Profile_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f13['Total-2023'] = df_Profile_Count_m2_f13['Total-2023'].astype(int)
df_Profile_Count_m2_f13['Percent-2023'] = df_Profile_Count_m2_f13['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f13['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f13['Total-2017'],errors='coerce')
df_Pass_Count_m2_f13 = df_Pass_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f13['Total-2017'] = df_Pass_Count_m2_f13['Total-2017'].astype(int)
df_Pass_Count_m2_f13['Percent-2017'] = df_Pass_Count_m2_f13['Percent-2017'].astype(float)

df_Pass_Count_m2_f13['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f13['Total-2018'],errors='coerce')
df_Pass_Count_m2_f13 = df_Pass_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f13['Total-2018'] = df_Pass_Count_m2_f13['Total-2018'].astype(int)
df_Pass_Count_m2_f13['Percent-2018'] = df_Pass_Count_m2_f13['Percent-2018'].astype(float)

df_Pass_Count_m2_f13['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f13['Total-2019'],errors='coerce')
df_Pass_Count_m2_f13 = df_Pass_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f13['Total-2019'] = df_Pass_Count_m2_f13['Total-2019'].astype(int)
df_Pass_Count_m2_f13['Percent-2019'] = df_Pass_Count_m2_f13['Percent-2019'].astype(float)

df_Pass_Count_m2_f13['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f13['Total-2021'],errors='coerce')
df_Pass_Count_m2_f13 = df_Pass_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f13['Total-2021'] = df_Pass_Count_m2_f13['Total-2021'].astype(int)
df_Pass_Count_m2_f13['Percent-2021'] = df_Pass_Count_m2_f13['Percent-2021'].astype(float)

df_Pass_Count_m2_f13['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f13['Total-2022'],errors='coerce')
df_Pass_Count_m2_f13 = df_Pass_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f13['Total-2022'] = df_Pass_Count_m2_f13['Total-2022'].astype(int)
df_Pass_Count_m2_f13['Percent-2022'] = df_Pass_Count_m2_f13['Percent-2022'].astype(float)

df_Pass_Count_m2_f13['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f13['Total-2023'],errors='coerce')
df_Pass_Count_m2_f13 = df_Pass_Count_m2_f13.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f13['Total-2023'] = df_Pass_Count_m2_f13['Total-2023'].astype(int)
df_Pass_Count_m2_f13['Percent-2023'] = df_Pass_Count_m2_f13['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f13['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f13['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f13 = dfAttendees_Country_Count_m2_f13.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f13['Total-2017'] = dfAttendees_Country_Count_m2_f13['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f13['Percent-2017'] = dfAttendees_Country_Count_m2_f13['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f13['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f13['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f13 = dfAttendees_Country_Count_m2_f13.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f13['Total-2018'] = dfAttendees_Country_Count_m2_f13['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f13['Percent-2018'] = dfAttendees_Country_Count_m2_f13['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f13['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f13['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f13 = dfAttendees_Country_Count_m2_f13.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f13['Total-2019'] = dfAttendees_Country_Count_m2_f13['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f13['Percent-2019'] = dfAttendees_Country_Count_m2_f13['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f13['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f13['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f13 = dfAttendees_Country_Count_m2_f13.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f13['Total-2021'] = dfAttendees_Country_Count_m2_f13['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f13['Percent-2021'] = dfAttendees_Country_Count_m2_f13['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f13['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f13['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f13 = dfAttendees_Country_Count_m2_f13.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f13['Total-2022'] = dfAttendees_Country_Count_m2_f13['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f13['Percent-2022'] = dfAttendees_Country_Count_m2_f13['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f13['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f13['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f13 = dfAttendees_Country_Count_m2_f13.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f13['Total-2023'] = dfAttendees_Country_Count_m2_f13['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f13['Percent-2023'] = dfAttendees_Country_Count_m2_f13['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f13['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f13['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f13 = df_ATTENDEES_AREAS_count_m2_f13.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f13['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f13['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f13['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f13['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f13['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f13['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f13 = df_ATTENDEES_AREAS_count_m2_f13.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f13['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f13['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f13['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f13['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f13['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f13['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f13 = df_ATTENDEES_AREAS_count_m2_f13.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f13['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f13['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f13['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f13['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f13['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f13['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f13 = df_ATTENDEES_AREAS_count_m2_f13.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f13['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f13['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f13['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f13['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f13['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f13['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f13 = df_ATTENDEES_AREAS_count_m2_f13.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f13['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f13['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f13['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f13['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f13['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f13['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f13 = df_ATTENDEES_AREAS_count_m2_f13.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f13['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f13['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f13['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f13['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f13['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f13['Total-2017'],errors='coerce')
df_Specialty_count_m2_f13 = df_Specialty_count_m2_f13.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f13['Total-2017'] = df_Specialty_count_m2_f13['Total-2017'].astype(int)
df_Specialty_count_m2_f13['Percent-2017'] = df_Specialty_count_m2_f13['Percent-2017'].astype(float)

df_Specialty_count_m2_f13['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f13['Total-2018'],errors='coerce')
df_Specialty_count_m2_f13 = df_Specialty_count_m2_f13.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f13['Total-2018'] = df_Specialty_count_m2_f13['Total-2018'].astype(int)
df_Specialty_count_m2_f13['Percent-2018'] = df_Specialty_count_m2_f13['Percent-2018'].astype(float)

df_Specialty_count_m2_f13['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f13['Total-2019'],errors='coerce')
df_Specialty_count_m2_f13 = df_Specialty_count_m2_f13.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f13['Total-2019'] = df_Specialty_count_m2_f13['Total-2019'].astype(int)
df_Specialty_count_m2_f13['Percent-2019'] = df_Specialty_count_m2_f13['Percent-2019'].astype(float)

df_Specialty_count_m2_f13['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f13['Total-2021'],errors='coerce')
df_Specialty_count_m2_f13 = df_Specialty_count_m2_f13.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f13['Total-2021'] = df_Specialty_count_m2_f13['Total-2021'].astype(int)
df_Specialty_count_m2_f13['Percent-2021'] = df_Specialty_count_m2_f13['Percent-2021'].astype(float)

df_Specialty_count_m2_f13['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f13['Total-2022'],errors='coerce')
df_Specialty_count_m2_f13 = df_Specialty_count_m2_f13.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f13['Total-2022'] = df_Specialty_count_m2_f13['Total-2022'].astype(int)
df_Specialty_count_m2_f13['Percent-2022'] = df_Specialty_count_m2_f13['Percent-2022'].astype(float)

df_Specialty_count_m2_f13['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f13['Total-2023'],errors='coerce')
df_Specialty_count_m2_f13 = df_Specialty_count_m2_f13.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f13['Total-2023'] = df_Specialty_count_m2_f13['Total-2023'].astype(int)
df_Specialty_count_m2_f13['Percent-2023'] = df_Specialty_count_m2_f13['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f13.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f13.dtypes)
#print(df_Specialty_count_m2_f13.dtypes)

#print(dfAttendees_Country_Count_m2_f13.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f13.dtypes)
#print(df_Specialty_count_m2_f13.dtypes)

# EXCEL FILE
writerf13 = pd.ExcelWriter(outputExcelFile_f13, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f13.to_excel\
    (writerf13, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f13.to_excel\
    (writerf13, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f13.to_excel\
    (writerf13, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f13.to_excel\
    (writerf13, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f13.to_excel\
    (writerf13, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f13.to_excel\
    (writerf13, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f13.to_excel\
    (writerf13, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f13.to_excel\
    (writerf13, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f13.to_excel\
    (writerf13, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f13.to_excel\
    (writerf13, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f13.to_excel\
    (writerf13, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf13.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f13)

workbook.save(outputExcelFile_f13)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 105 days**********************************************')
print('************************************End of 105 days**********************************************')
print('************************************End of 105 days**********************************************')
print('************************************End of 105 days**********************************************')
print('************************************End of 105 days**********************************************')
print('************************************End of 105 days**********************************************')
print('************************************End of 105 days**********************************************')
print('************************************End of 105 days**********************************************')
print('************************************End of 105 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f14_Registrations_count = pd.DataFrame(filter_14_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f14_Registrations_count = dfd17_f14_Registrations_count.fillna('Unknown')
dfd17_f14_Registrations_count['Percent-2017'] = (dfd17_f14_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f14_Registrations_count['Percent-2017'] = dfd17_f14_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f14_Registrations_count['7DEvolution-2017'] = dfd17_f14_Registrations_count['Total-2017'] - dfd17_f13_Registrations_count['Total-2017']
#print(tab(dfd17_f14_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f14_Registrations_count = pd.DataFrame(filter_14_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f14_Registrations_count = dfd18_f14_Registrations_count.fillna('Unknown')
dfd18_f14_Registrations_count['Percent-2018'] = (dfd18_f14_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f14_Registrations_count['Percent-2018'] = dfd18_f14_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f14_Registrations_count['7DEvolution-2018'] = dfd18_f14_Registrations_count['Total-2018'] - dfd18_f13_Registrations_count['Total-2018']
#print(tab(dfd18_f14_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f14_Registrations_count = pd.DataFrame(filter_14_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f14_Registrations_count = dfd19_f14_Registrations_count.fillna('Unknown')
dfd19_f14_Registrations_count['Percent-2019'] = (dfd19_f14_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f14_Registrations_count['Percent-2019'] = dfd19_f14_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f14_Registrations_count['7DEvolution-2019'] = dfd19_f14_Registrations_count['Total-2019'] - dfd19_f13_Registrations_count['Total-2019']
#print(tab(dfd19_f14_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f14_Registrations_count = pd.DataFrame(filter_14_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f14_Registrations_count = dfd21_f14_Registrations_count.fillna('Unknown')
dfd21_f14_Registrations_count['Percent-2021'] = (dfd21_f14_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f14_Registrations_count['Percent-2021'] = dfd21_f14_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f14_Registrations_count['7DEvolution-2021'] = dfd21_f14_Registrations_count['Total-2021'] - dfd21_f13_Registrations_count['Total-2021']
#print(tab(dfd21_f14_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f14_Registrations_count = pd.DataFrame(filter_14_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f14_Registrations_count = dfd22_f14_Registrations_count.fillna('Unknown')
dfd22_f14_Registrations_count['Percent-2022'] = (dfd22_f14_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f14_Registrations_count['Percent-2022'] = dfd22_f14_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f14_Registrations_count['7DEvolution-2022'] = dfd22_f14_Registrations_count['Total-2022'] - dfd22_f13_Registrations_count['Total-2022']
#print(tab(dfd22_f14_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_Registrations_count = pd.DataFrame(filter_14_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f14_Registrations_count = dfd23_f14_Registrations_count.fillna('Unknown')
dfd23_f14_Registrations_count['Percent-2023'] = (dfd23_f14_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f14_Registrations_count['Percent-2023'] = dfd23_f14_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f14_Registrations_count['7DEvolution-2023'] = dfd23_f14_Registrations_count['Total-2023'] - dfd23_f13_Registrations_count['Total-2023']
#print(tab(dfd23_f14_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f14_RegistrationsEvolution_count = pd.DataFrame(filter_14_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f14_RegistrationsEvolution_count = dfd23_f14_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f14_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f14_Registrations_count['Total-2023'] - dfd19_f14_Registrations_count['Total-2019'])/ dfd19_f14_Registrations_count['Total-2019'].sum()) * 100
dfd23_f14_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f14_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f14_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f14 = pd.DataFrame(pd.merge(dfd17_f14_Registrations_count, dfd18_f14_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f14 = pd.DataFrame(pd.merge(dfd19_f14_Registrations_count, dfd21_f14_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f14 = pd.DataFrame(pd.merge(dfd22_f14_Registrations_count, dfd23_f14_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f14 = pd.DataFrame(pd.merge(df_Registrations_count_1_f14, df_Registrations_count_2_f14, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f14 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f14, df_Registrations_count_3_f14, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f14 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f14, dfd23_f14_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f14 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14]
Concat_Registrations_count_f1_f14 = pd.concat(ConcatFrames_Registrations_count_f1_f14)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f14  = ConcatFrames_Registrations_count_f1_f14.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f14.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f14 = filter_14_df18[filter_14_df18['New customer'] == 1]
df_NewCustomer_df19_f14 = filter_14_df19[filter_14_df19['New customer'] == 1]
df_NewCustomer_df21_f14 = filter_14_df21[filter_14_df21['New customer'] == 1]
df_NewCustomer_df22_f14 = filter_14_df22[filter_14_df22['New customer'] == 1]
df_NewCustomer_df23_f14 = filter_14_df23[filter_14_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f14.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f14.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f14.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a14_ACQRET_count = pd.DataFrame(filter_14_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f14_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f14.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f14_ACQRET_count['Percent-2018'] = (dfd18_f14_ACQRET_count['ACQ-2018'] / dfd18_f14_Registrations_count['Total-2018'].sum()) * 100
dfd18_f14_ACQRET_count['Percent-2018'] = dfd18_f14_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f14_ACQRET_count['RET-2018'] = dfd18_a14_ACQRET_count['Total-2018'] - dfd18_f14_ACQRET_count['ACQ-2018']
dfd18_f14_ACQRET_count['Percnt-2018'] = (dfd18_f14_ACQRET_count['RET-2018'] / dfd18_a14_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f14_ACQRET_count['Percnt-2018'] = dfd18_f14_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f14_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a14_ACQRET_count = pd.DataFrame(filter_14_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f14_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f14.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f14_ACQRET_count['Percent-2019'] = (dfd19_f14_ACQRET_count['ACQ-2019'] / dfd19_f14_Registrations_count['Total-2019'].sum()) * 100
dfd19_f14_ACQRET_count['Percent-2019'] = dfd19_f14_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f14_ACQRET_count['RET-2019'] = dfd19_a14_ACQRET_count['Total-2019'] - dfd19_f14_ACQRET_count['ACQ-2019']
dfd19_f14_ACQRET_count['Percnt-2019'] = (dfd19_f14_ACQRET_count['RET-2019'] / dfd19_a14_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f14_ACQRET_count['Percnt-2019'] = dfd19_f14_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f14_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a14_ACQRET_count = pd.DataFrame(filter_14_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f14_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f14.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f14_ACQRET_count['Percent-2021'] = (dfd21_f14_ACQRET_count['ACQ-2021'] / dfd21_f14_Registrations_count['Total-2021'].sum()) * 100
dfd21_f14_ACQRET_count['Percent-2021'] = dfd21_f14_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f14_ACQRET_count['RET-2021'] = dfd21_a14_ACQRET_count['Total-2021'] - dfd21_f14_ACQRET_count['ACQ-2021']
dfd21_f14_ACQRET_count['Percnt-2021'] = (dfd21_f14_ACQRET_count['RET-2021'] / dfd21_a14_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f14_ACQRET_count['Percnt-2021'] = dfd21_f14_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f14_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a14_ACQRET_count = pd.DataFrame(filter_14_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f14_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f14.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f14_ACQRET_count['Percent-2022'] = (dfd22_f14_ACQRET_count['ACQ-2022'] / dfd22_f14_Registrations_count['Total-2022'].sum()) * 100
dfd22_f14_ACQRET_count['Percent-2022'] = dfd22_f14_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f14_ACQRET_count['RET-2022'] = dfd22_a14_ACQRET_count['Total-2022'] - dfd22_f14_ACQRET_count['ACQ-2022']
dfd22_f14_ACQRET_count['Percnt-2022'] = (dfd22_f14_ACQRET_count['RET-2022'] / dfd22_a14_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f14_ACQRET_count['Percnt-2022'] = dfd22_f14_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f14_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a14_ACQRET_count = pd.DataFrame(filter_14_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f14_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f14.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f14_ACQRET_count['Percent-2023'] = (dfd23_f14_ACQRET_count['ACQ-2023'] / dfd23_f14_Registrations_count['Total-2023'].sum()) * 100
dfd23_f14_ACQRET_count['Percent-2023'] = dfd23_f14_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f14_ACQRET_count['RET-2023'] = dfd23_a14_ACQRET_count['Total-2023'] - dfd23_f14_ACQRET_count['ACQ-2023']
dfd23_f14_ACQRET_count['Percnt-2023'] = (dfd23_f14_ACQRET_count['RET-2023'] / dfd23_a14_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f14_ACQRET_count['Percnt-2023'] = dfd23_f14_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f14_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f14 = pd.DataFrame(pd.merge(dfd18_a14_ACQRET_count, dfd18_f14_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f14 = pd.DataFrame(pd.merge(dfd19_a14_ACQRET_count, dfd19_f14_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f14 = pd.DataFrame(pd.merge(dfd21_a14_ACQRET_count, dfd21_f14_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f14 = pd.DataFrame(pd.merge(dfd22_a14_ACQRET_count, dfd22_f14_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_14_f14 = pd.DataFrame(pd.merge(dfd23_a14_ACQRET_count, dfd23_f14_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_14_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f14 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f14, df_ACQRET_count_2_f14, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f14 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f14, df_ACQRET_count_3_f14, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f14 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f14, df_ACQRET_count_4_f14, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f14 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f14, df_ACQRET_count_14_f14, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f14 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14]
Concat_ACQRET_count_f1_f14 = pd.concat(ConcatFrames_ACQRET_count_f1_f14)
#print(tab(Concat_ACQRET_count_f1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f14 = Concat_ACQRET_count_f1_f14[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f14_Revenue_calc = pd.DataFrame(filter_14_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f14_Revenue_calc['Percent-2017'] = (dfd17_f14_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f14_Revenue_calc['Percent-2017'] = dfd17_f14_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f14_Revenue_calc['7DEvolution-2017'] = dfd17_f14_Revenue_calc['Total-2017'] - dfd17_f13_Revenue_calc['Total-2017']
#print(tab(dfd17_f14_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f14_Revenue_calc = pd.DataFrame(filter_14_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f14_Revenue_calc['Percent-2018'] = (dfd18_f14_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f14_Revenue_calc['Percent-2018'] = dfd18_f14_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f14_Revenue_calc['7DEvolution-2018'] = dfd18_f14_Revenue_calc['Total-2018'] - dfd18_f13_Revenue_calc['Total-2018']
#print(tab(dfd18_f14_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f14_Revenue_calc = pd.DataFrame(filter_14_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f14_Revenue_calc['Percent-2019'] = (dfd19_f14_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f14_Revenue_calc['Percent-2019'] = dfd19_f14_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f14_Revenue_calc['7DEvolution-2019'] = dfd19_f14_Revenue_calc['Total-2019'] - dfd19_f13_Revenue_calc['Total-2019']
#print(tab(dfd19_f14_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f14_Revenue_calc = pd.DataFrame(filter_14_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f14_Revenue_calc['Percent-2021'] = (dfd21_f14_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f14_Revenue_calc['Percent-2021'] = dfd21_f14_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f14_Revenue_calc['7DEvolution-2021'] = dfd21_f14_Revenue_calc['Total-2021'] - dfd21_f13_Revenue_calc['Total-2021']
#print(tab(dfd21_f14_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f14_Revenue_calc = pd.DataFrame(filter_14_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f14_Revenue_calc['Percent-2022'] = (dfd22_f14_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f14_Revenue_calc['Percent-2022'] = dfd22_f14_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f14_Revenue_calc['7DEvolution-2022'] = dfd22_f14_Revenue_calc['Total-2022'] - dfd22_f13_Revenue_calc['Total-2022']
#print(tab(dfd22_f14_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_Revenue_calc = pd.DataFrame(filter_14_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f14_Revenue_calc['Percent-2023'] = (dfd23_f14_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f14_Revenue_calc['Percent-2023'] = dfd23_f14_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f14_Revenue_calc['7DEvolution-2023'] = dfd23_f14_Revenue_calc['Total-2023'] - dfd23_f13_Revenue_calc['Total-2023']
#print(tab(dfd23_f14_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f14_RevenueEvolution_calc = pd.DataFrame(filter_14_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f14_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f14_Revenue_calc['Total-2023'] - dfd19_f14_Revenue_calc['Total-2019'])/ dfd19_f14_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f14_RevenueEvolution_calc['Evolution-2023'] = dfd23_f14_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f14_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f14 = pd.DataFrame(pd.merge(dfd17_f14_Revenue_calc, dfd18_f14_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f14 = pd.DataFrame(pd.merge(dfd19_f14_Revenue_calc, dfd21_f14_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f14 = pd.DataFrame(pd.merge(dfd22_f14_Revenue_calc, dfd23_f14_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f14_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f14, df_Revenue_calc_2_f14, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f14Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f14_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f14_Evolution, df_Revenue_calc_3_f14, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f14Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f14 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f14_Evolution, dfd23_f14_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f14 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14]
Concat_REV_count_f1_f14 = pd.concat(ConcatFrames_REV_count_f1_f14)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f14_Registrations_GRDel = pd.DataFrame(filtr_14_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f14_Registrations_GRDel = dfd17_f14_Registrations_GRDel.fillna('Unknown')
dfd17_f14_Registrations_GRDel['Percent-2017'] = (dfd17_f14_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f14_Registrations_GRDel['Percent-2017'] = dfd17_f14_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f14_Registrations_GRDel['7DEvolution-2017'] = dfd17_f14_Registrations_GRDel['Total-2017'] - dfd17_f13_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f14_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f14_Registrations_GRDel = pd.DataFrame(filtr_14_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f14_Registrations_GRDel = dfd18_f14_Registrations_GRDel.fillna('Unknown')
dfd18_f14_Registrations_GRDel['Percent-2018'] = (dfd18_f14_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f14_Registrations_GRDel['Percent-2018'] = dfd18_f14_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f14_Registrations_GRDel['7DEvolution-2018'] = dfd18_f14_Registrations_GRDel['Total-2018'] - dfd18_f13_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f14_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f14_Registrations_GRDel = pd.DataFrame(filtr_14_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f14_Registrations_GRDel = dfd19_f14_Registrations_GRDel.fillna('Unknown')
dfd19_f14_Registrations_GRDel['Percent-2019'] = (dfd19_f14_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f14_Registrations_GRDel['Percent-2019'] = dfd19_f14_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f14_Registrations_GRDel['7DEvolution-2019'] = dfd19_f14_Registrations_GRDel['Total-2019'] - dfd19_f13_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f14_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f14_Registrations_GRDel = pd.DataFrame(filtr_14_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f14_Registrations_GRDel = dfd21_f14_Registrations_GRDel.fillna('Unknown')
dfd21_f14_Registrations_GRDel['Percent-2021'] = (dfd21_f14_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f14_Registrations_GRDel['Percent-2021'] = dfd21_f14_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f14_Registrations_GRDel['7DEvolution-2021'] = dfd21_f14_Registrations_GRDel['Total-2021'] - dfd21_f13_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f14_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f14_Registrations_GRDel = pd.DataFrame(filtr_14_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f14_Registrations_GRDel = dfd22_f14_Registrations_GRDel.fillna('Unknown')
dfd22_f14_Registrations_GRDel['Percent-2022'] = (dfd22_f14_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f14_Registrations_GRDel['Percent-2022'] = dfd22_f14_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f14_Registrations_GRDel['7DEvolution-2022'] = dfd22_f14_Registrations_GRDel['Total-2022'] - dfd22_f13_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f14_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_Registrations_GRDel = pd.DataFrame(filtr_14_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f14_Registrations_GRDel = dfd23_f14_Registrations_GRDel.fillna('Unknown')
dfd23_f14_Registrations_GRDel['Percent-2023'] = (dfd23_f14_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f14_Registrations_GRDel['Percent-2023'] = dfd23_f14_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f14_Registrations_GRDel['7DEvolution-2023'] = dfd23_f14_Registrations_GRDel['Total-2023'] - dfd23_f13_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f14_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f14_Registrations_Evol_GRDel = pd.DataFrame(filtr_14_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f14_Registrations_Evol_GRDel = dfd23_f14_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f14_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f14_Registrations_GRDel['Total-2023'] - dfd19_f14_Registrations_GRDel['Total-2019'])/ dfd19_f14_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f14_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f14 = pd.concat([dfd17_f14_Registrations_GRDel, dfd18_f14_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f14 = pd.DataFrame(pd.merge(dfd17_f14_Registrations_GRDel, dfd18_f14_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f14 = pd.DataFrame(pd.merge(dfd19_f14_Registrations_GRDel, dfd21_f14_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f14 = pd.DataFrame(pd.merge(dfd22_f14_Registrations_GRDel, dfd23_f14_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f14 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f14, df_Registrations_GRDel_2_f14, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_14_f14 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f14, df_Registrations_GRDel_3_f14, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f14 = pd.DataFrame(pd.merge(df_Registrations_GRDel_14_f14, dfd23_f14_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f14 = df_Registrations_GRDel_f14[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f14 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14]
Concat_RegGRDel_count_f1_f14 = pd.concat(ConcatFrames_RegGRDel_count_f1_f14)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f14 = filtr_14_df18_GRdel[filtr_14_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f14 = filtr_14_df19_GRdel[filtr_14_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f14 = filtr_14_df21_GRdel[filtr_14_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f14 = filtr_14_df22_GRdel[filtr_14_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f14 = filtr_14_df23_GRdel[filtr_14_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f14.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f14.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a14_AC_RT_GRDel = pd.DataFrame(filtr_14_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f14_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f14.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f14_AC_RT_GRDel['Percent-2018'] = (dfd18_f14_AC_RT_GRDel['ACQ-2018'] / dfd18_f14_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f14_AC_RT_GRDel['Percent-2018'] = dfd18_f14_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f14_AC_RT_GRDel['RET-2018'] = dfd18_a14_AC_RT_GRDel['Total-2018'] - dfd18_f14_AC_RT_GRDel['ACQ-2018']
dfd18_f14_AC_RT_GRDel['Percnt-2018'] = (dfd18_f14_AC_RT_GRDel['RET-2018'] / dfd18_a14_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f14_AC_RT_GRDel['Percnt-2018'] = dfd18_f14_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f14_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a14_AC_RT_GRDel = pd.DataFrame(filtr_14_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f14_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f14.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f14_AC_RT_GRDel['Percent-2019'] = (dfd19_f14_AC_RT_GRDel['ACQ-2019'] / dfd19_f14_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f14_AC_RT_GRDel['Percent-2019'] = dfd19_f14_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f14_AC_RT_GRDel['RET-2019'] = dfd19_a14_AC_RT_GRDel['Total-2019'] - dfd19_f14_AC_RT_GRDel['ACQ-2019']
dfd19_f14_AC_RT_GRDel['Percnt-2019'] = (dfd19_f14_AC_RT_GRDel['RET-2019'] / dfd19_a14_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f14_AC_RT_GRDel['Percnt-2019'] = dfd19_f14_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f14_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a14_AC_RT_GRDel = pd.DataFrame(filtr_14_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f14_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f14.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f14_AC_RT_GRDel['Percent-2021'] = (dfd21_f14_AC_RT_GRDel['ACQ-2021'] / dfd21_f14_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f14_AC_RT_GRDel['Percent-2021'] = dfd21_f14_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f14_AC_RT_GRDel['RET-2021'] = dfd21_a14_AC_RT_GRDel['Total-2021'] - dfd21_f14_AC_RT_GRDel['ACQ-2021']
dfd21_f14_AC_RT_GRDel['Percnt-2021'] = (dfd21_f14_AC_RT_GRDel['RET-2021'] / dfd21_a14_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f14_AC_RT_GRDel['Percnt-2021'] = dfd21_f14_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f14_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a14_AC_RT_GRDel = pd.DataFrame(filtr_14_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f14_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f14.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f14_AC_RT_GRDel['Percent-2022'] = (dfd22_f14_AC_RT_GRDel['ACQ-2022'] / dfd22_f14_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f14_AC_RT_GRDel['Percent-2022'] = dfd22_f14_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f14_AC_RT_GRDel['RET-2022'] = dfd22_a14_AC_RT_GRDel['Total-2022'] - dfd22_f14_AC_RT_GRDel['ACQ-2022']
dfd22_f14_AC_RT_GRDel['Percnt-2022'] = (dfd22_f14_AC_RT_GRDel['RET-2022'] / dfd22_a14_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f14_AC_RT_GRDel['Percnt-2022'] = dfd22_f14_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f14_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a14_AC_RT_GRDel = pd.DataFrame(filtr_14_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f14_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f14.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f14_AC_RT_GRDel['Percent-2023'] = (dfd23_f14_AC_RT_GRDel['ACQ-2023'] / dfd23_f14_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f14_AC_RT_GRDel['Percent-2023'] = dfd23_f14_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f14_AC_RT_GRDel['RET-2023'] = dfd23_a14_AC_RT_GRDel['Total-2023'] - dfd23_f14_AC_RT_GRDel['ACQ-2023']
dfd23_f14_AC_RT_GRDel['Percnt-2023'] = (dfd23_f14_AC_RT_GRDel['RET-2023'] / dfd23_a14_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f14_AC_RT_GRDel['Percnt-2023'] = dfd23_f14_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f14_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f14 = pd.DataFrame(pd.merge_ordered(dfd18_a14_AC_RT_GRDel, dfd18_f14_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f14 = pd.DataFrame(pd.merge_ordered(dfd19_a14_AC_RT_GRDel, dfd19_f14_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f14 = pd.DataFrame(pd.merge_ordered(dfd21_a14_AC_RT_GRDel, dfd21_f14_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f14 = pd.DataFrame(pd.merge_ordered(dfd22_a14_AC_RT_GRDel, dfd22_f14_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_14_f14 = pd.DataFrame(pd.merge_ordered(dfd23_a14_AC_RT_GRDel, dfd23_f14_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f14 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f14, df_AC_ET_GRDel_2_f14, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f14 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f14, df_AC_ET_GRDel_3_f14, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f14 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f14, df_AC_ET_GRDel_4_f14, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f14 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f14, df_AC_ET_GRDel_14_f14, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f14 = df_AC_RT_GRDel_M4_f14[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f14 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14]
Conct_AC_RT_GRDel_f1_f14 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f14)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_14_df17_GRdel = filtr_14_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f14_Revenu_GRDel = pd.DataFrame(filtr_14_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f14_Revenu_GRDel['Percent-2017'] = (dfd17_f14_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f14_Revenu_GRDel['Percent-2017'] = dfd17_f14_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f14_Revenu_GRDel['7DEvolution-2017'] = dfd17_f14_Revenu_GRDel['Total-2017'] - dfd17_f13_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f14_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_14_df18_GRdel = filtr_14_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f14_Revenu_GRDel = pd.DataFrame(filtr_14_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f14_Revenu_GRDel['Percent-2018'] = (dfd18_f14_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f14_Revenu_GRDel['Percent-2018'] = dfd18_f14_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f14_Revenu_GRDel['7DEvolution-2018'] = dfd18_f14_Revenu_GRDel['Total-2018'] - dfd18_f13_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f14_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_14_df19_GRdel = filtr_14_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f14_Revenu_GRDel = pd.DataFrame(filtr_14_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f14_Revenu_GRDel['Percent-2019'] = (dfd19_f14_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f14_Revenu_GRDel['Percent-2019'] = dfd19_f14_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f14_Revenu_GRDel['7DEvolution-2019'] = dfd19_f14_Revenu_GRDel['Total-2019'] - dfd19_f13_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f14_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_14_df21_GRdel = filtr_14_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f14_Revenu_GRDel = pd.DataFrame(filtr_14_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f14_Revenu_GRDel['Percent-2021'] = (dfd21_f14_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f14_Revenu_GRDel['Percent-2021'] = dfd21_f14_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f14_Revenu_GRDel['7DEvolution-2021'] = dfd21_f14_Revenu_GRDel['Total-2021'] - dfd21_f13_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f14_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_14_df22_GRdel = filtr_14_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f14_Revenu_GRDel = pd.DataFrame(filtr_14_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f14_Revenu_GRDel['Percent-2022'] = (dfd22_f14_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f14_Revenu_GRDel['Percent-2022'] = dfd22_f14_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f14_Revenu_GRDel['7DEvolution-2022'] = dfd22_f14_Revenu_GRDel['Total-2022'] - dfd22_f13_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f14_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_14_df23_GRdel = filtr_14_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f14_Revenu_GRDel = pd.DataFrame(filtr_14_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f14_Revenu_GRDel['Percent-2023'] = (dfd23_f14_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f14_Revenu_GRDel['Percent-2023'] = dfd23_f14_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f14_Revenu_GRDel['7DEvolution-2023'] = dfd23_f14_Revenu_GRDel['Total-2023'] - dfd23_f13_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f14_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f14_Revenu_Evlt_GRDel = pd.DataFrame(filtr_14_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f14_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f14_Revenu_GRDel['Total-2023'] - dfd19_f14_Revenu_GRDel['Total-2019'])/ dfd19_f14_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f14_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f14_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f14_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f14 = pd.DataFrame(pd.merge(dfd17_f14_Revenu_GRDel, dfd18_f14_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f14 = pd.DataFrame(pd.merge(dfd19_f14_Revenu_GRDel, dfd21_f14_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f14 = pd.DataFrame(pd.merge(dfd22_f14_Revenu_GRDel, dfd23_f14_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f14 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f14, df_Revenu_GRDel_2_f14, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_14_f14 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f14, df_Revenu_GRDel_3_f14, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f14 = pd.DataFrame(pd.merge(df_Revenu_GRDel_14_f14, dfd23_f14_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f14 = df_Revenu_GRDel_f14[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f14 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14]
Conct_RV_GRDel_f1_f14 = pd.concat(ConcatFra_RV_GRDel_f1_f14)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f14_Profile_count = pd.DataFrame(filtr_14_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f14_Profile_count = dfd17_f14_Profile_count.fillna('Unknown')
dfd17_f14_Profile_count['Percent-2017'] = (dfd17_f14_Profile_count['Total-2017'] / dfd17_f14_Profile_count['Total-2017'].sum()) * 100
dfd17_f14_Profile_count['Percent-2017'] = dfd17_f14_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f14_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f14_Profile_count = pd.DataFrame(filtr_14_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f14_Profile_count = dfd18_f14_Profile_count.fillna('Unknown')
dfd18_f14_Profile_count['Percent-2018'] = (dfd18_f14_Profile_count['Total-2018'] / dfd18_f14_Profile_count['Total-2018'].sum()) * 100
dfd18_f14_Profile_count['Percent-2018'] = dfd18_f14_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f14_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f14_Profile_count = pd.DataFrame(filtr_14_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f14_Profile_count = dfd19_f14_Profile_count.fillna('Unknown')
dfd19_f14_Profile_count['Percent-2019'] = (dfd19_f14_Profile_count['Total-2019'] / dfd19_f14_Profile_count['Total-2019'].sum()) * 100
dfd19_f14_Profile_count['Percent-2019'] = dfd19_f14_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f14_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f14_Profile_count = pd.DataFrame(filtr_14_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f14_Profile_count = dfd21_f14_Profile_count.fillna('Unknown')
dfd21_f14_Profile_count['Percent-2021'] = (dfd21_f14_Profile_count['Total-2021'] / dfd21_f14_Profile_count['Total-2021'].sum()) * 100
dfd21_f14_Profile_count['Percent-2021'] = dfd21_f14_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f14_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f14_Profile_count = pd.DataFrame(filtr_14_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f14_Profile_count = dfd22_f14_Profile_count.fillna('Unknown')
dfd22_f14_Profile_count['Percent-2022'] = (dfd22_f14_Profile_count['Total-2022'] / dfd22_f14_Profile_count['Total-2022'].sum()) * 100
dfd22_f14_Profile_count['Percent-2022'] = dfd22_f14_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f14_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_Profile_count = pd.DataFrame(filtr_14_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f14_Profile_count = dfd23_f14_Profile_count.fillna('Unknown')
dfd23_f14_Profile_count['Percent-2023'] = (dfd23_f14_Profile_count['Total-2023'] / dfd23_f14_Profile_count['Total-2023'].sum()) * 100
dfd23_f14_Profile_count['Percent-2023'] = dfd23_f14_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f14_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f14 = pd.DataFrame(pd.merge(dfd17_f14_Profile_count, dfd18_f14_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f14 = pd.DataFrame(pd.merge(dfd19_f14_Profile_count, dfd21_f14_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f14 = pd.DataFrame(pd.merge(dfd22_f14_Profile_count, dfd23_f14_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f14 = pd.DataFrame(pd.merge(df_Profile_Count_1_f14, df_Profile_Count_2_f14, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f14 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f14, df_Profile_Count_3_f14, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f14 = df_Profile_Count_m2_f14.append(df_Profile_Count_m2_f14.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f14['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f14_Pass_count = pd.DataFrame(filtr_14_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f14_Pass_count = dfd17_f14_Pass_count.fillna('Unknown')
dfd17_f14_Pass_count['Percent-2017'] = (dfd17_f14_Pass_count['Total-2017'] / dfd17_f14_Pass_count['Total-2017'].sum()) * 100
dfd17_f14_Pass_count['Percent-2017'] = dfd17_f14_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f14_Pass_count = pd.DataFrame(filtr_14_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f14_Pass_count = dfd18_f14_Pass_count.fillna('Unknown')
dfd18_f14_Pass_count['Percent-2018'] = (dfd18_f14_Pass_count['Total-2018'] / dfd18_f14_Pass_count['Total-2018'].sum()) * 100
dfd18_f14_Pass_count['Percent-2018'] = dfd18_f14_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f14_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f14_Pass_count = pd.DataFrame(filtr_14_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f14_Pass_count = dfd19_f14_Pass_count.fillna('Unknown')
dfd19_f14_Pass_count['Percent-2019'] = (dfd19_f14_Pass_count['Total-2019'] / dfd19_f14_Pass_count['Total-2019'].sum()) * 100
dfd19_f14_Pass_count['Percent-2019'] = dfd19_f14_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f14_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f14_Pass_count = pd.DataFrame(filtr_14_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f14_Pass_count = dfd21_f14_Pass_count.fillna('Unknown')
dfd21_f14_Pass_count['Percent-2021'] = (dfd21_f14_Pass_count['Total-2021'] / dfd21_f14_Pass_count['Total-2021'].sum()) * 100
dfd21_f14_Pass_count['Percent-2021'] = dfd21_f14_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f14_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f14_Pass_count = pd.DataFrame(filtr_14_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f14_Pass_count = dfd22_f14_Pass_count.fillna('Unknown')
dfd22_f14_Pass_count['Percent-2022'] = (dfd22_f14_Pass_count['Total-2022'] / dfd22_f14_Pass_count['Total-2022'].sum()) * 100
dfd22_f14_Pass_count['Percent-2022'] = dfd22_f14_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f14_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_Pass_count = pd.DataFrame(filtr_14_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f14_Pass_count = dfd23_f14_Pass_count.fillna('Unknown')
dfd23_f14_Pass_count['Percent-2023'] = (dfd23_f14_Pass_count['Total-2023'] / dfd23_f14_Pass_count['Total-2023'].sum()) * 100
dfd23_f14_Pass_count['Percent-2023'] = dfd23_f14_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f14_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f14 = pd.DataFrame(pd.merge(dfd17_f14_Pass_count, dfd18_f14_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f14 = pd.DataFrame(pd.merge(dfd19_f14_Pass_count, dfd21_f14_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f14 = pd.DataFrame(pd.merge(dfd22_f14_Pass_count, dfd23_f14_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f14 = pd.DataFrame(pd.merge(df_Pass_Count_1_f14, df_Pass_Count_2_f14, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f14 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f14, df_Pass_Count_3_f14, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f14 = df_Pass_Count_m2_f14.append(df_Pass_Count_m2_f14.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f14['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f14_Attendees_Country_count = pd.DataFrame(filtr_14_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f14_Attendees_Country_count = dfd17_f14_Attendees_Country_count.fillna('Unknown')
dfd17_f14_Attendees_Country_count['Percent-2017'] = (dfd17_f14_Attendees_Country_count['Total-2017'] / dfd17_f14_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f14_Attendees_Country_count['Percent-2017'] = dfd17_f14_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f14_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f14_Attendees_Country_count = pd.DataFrame(filtr_14_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f14_Attendees_Country_count = dfd18_f14_Attendees_Country_count.fillna('Unknown')
dfd18_f14_Attendees_Country_count['Percent-2018'] = (dfd18_f14_Attendees_Country_count['Total-2018'] / dfd18_f14_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f14_Attendees_Country_count['Percent-2018'] = dfd18_f14_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f14_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f14_Attendees_Country_count = pd.DataFrame(filtr_14_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f14_Attendees_Country_count = dfd19_f14_Attendees_Country_count.fillna('Unknown')
dfd19_f14_Attendees_Country_count['Percent-2019'] = (dfd19_f14_Attendees_Country_count['Total-2019'] / dfd19_f14_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f14_Attendees_Country_count['Percent-2019'] = dfd19_f14_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f14_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f14_Attendees_Country_count = pd.DataFrame(filtr_14_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f14_Attendees_Country_count = dfd21_f14_Attendees_Country_count.fillna('Unknown')
dfd21_f14_Attendees_Country_count['Percent-2021'] = (dfd21_f14_Attendees_Country_count['Total-2021'] / dfd21_f14_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f14_Attendees_Country_count['Percent-2021'] = dfd21_f14_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f14_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f14_Attendees_Country_count = pd.DataFrame(filtr_14_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f14_Attendees_Country_count = dfd22_f14_Attendees_Country_count.fillna('Unknown')
dfd22_f14_Attendees_Country_count['Percent-2022'] = (dfd22_f14_Attendees_Country_count['Total-2022'] / dfd22_f14_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f14_Attendees_Country_count['Percent-2022'] = dfd22_f14_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f14_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_Attendees_Country_count = pd.DataFrame(filtr_14_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f14_Attendees_Country_count = dfd23_f14_Attendees_Country_count.fillna('Unknown')
dfd23_f14_Attendees_Country_count['Percent-2023'] = (dfd23_f14_Attendees_Country_count['Total-2023'] / dfd23_f14_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f14_Attendees_Country_count['Percent-2023'] = dfd23_f14_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f14_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f14 = pd.DataFrame(pd.merge(dfd17_f14_Attendees_Country_count, dfd18_f14_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f14 = pd.DataFrame(pd.merge(dfd19_f14_Attendees_Country_count, dfd21_f14_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f14 = pd.DataFrame(pd.merge(dfd22_f14_Attendees_Country_count, dfd23_f14_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f14 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f14, dfAttendees_Country_Count_2_f14, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f14.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f14 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f14, dfAttendees_Country_Count_3_f14, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f14 = dfAttendees_Country_Count_m2_f14.append(dfAttendees_Country_Count_m2_f14.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f14['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f14_ATTENDEES_AREAS_count = pd.DataFrame(filtr_14_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f14_ATTENDEES_AREAS_count = dfd17_f14_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f14_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f14_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f14_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f14_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f14_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f14_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f14_ATTENDEES_AREAS_count = pd.DataFrame(filtr_14_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f14_ATTENDEES_AREAS_count = dfd18_f14_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f14_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f14_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f14_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f14_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f14_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f14_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f14_ATTENDEES_AREAS_count = pd.DataFrame(filtr_14_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f14_ATTENDEES_AREAS_count = dfd19_f14_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f14_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f14_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f14_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f14_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f14_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f14_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f14_ATTENDEES_AREAS_count = pd.DataFrame(filtr_14_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f14_ATTENDEES_AREAS_count = dfd21_f14_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f14_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f14_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f14_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f14_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f14_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f14_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f14_ATTENDEES_AREAS_count = pd.DataFrame(filtr_14_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f14_ATTENDEES_AREAS_count = dfd22_f14_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f14_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f14_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f14_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f14_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f14_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f14_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_ATTENDEES_AREAS_count = pd.DataFrame(filtr_14_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f14_ATTENDEES_AREAS_count = dfd23_f14_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f14_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f14_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f14_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f14_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f14_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f14_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f14 = pd.DataFrame(pd.merge(dfd17_f14_ATTENDEES_AREAS_count, dfd18_f14_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f14 = pd.DataFrame(pd.merge(dfd19_f14_ATTENDEES_AREAS_count, dfd21_f14_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f14 = pd.DataFrame(pd.merge(dfd22_f14_ATTENDEES_AREAS_count, dfd23_f14_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f14.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f14 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f14, df_ATTENDEES_AREAS_count_2_f14, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f14 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f14, df_ATTENDEES_AREAS_count_3_f14, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f14 = df_ATTENDEES_AREAS_count_m2_f14.append(df_ATTENDEES_AREAS_count_m2_f14.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f14['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f14_Attendees_Specialty_count = pd.DataFrame(filtr_14_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f14_Attendees_Specialty_count = dfd17_f14_Attendees_Specialty_count.fillna('Unknown')
dfd17_f14_Attendees_Specialty_count['Percent-2017'] = (dfd17_f14_Attendees_Specialty_count['Total-2017'] / dfd17_f14_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f14_Attendees_Specialty_count['Percent-2017'] = dfd17_f14_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f14_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f14_Attendees_Specialty_count = pd.DataFrame(filtr_14_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f14_Attendees_Specialty_count = dfd18_f14_Attendees_Specialty_count.fillna('Unknown')
dfd18_f14_Attendees_Specialty_count['Percent-2018'] = (dfd18_f14_Attendees_Specialty_count['Total-2018'] / dfd18_f14_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f14_Attendees_Specialty_count['Percent-2018'] = dfd18_f14_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f14_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f14_Attendees_Specialty_count = pd.DataFrame(filtr_14_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f14_Attendees_Specialty_count = dfd19_f14_Attendees_Specialty_count.fillna('Unknown')
dfd19_f14_Attendees_Specialty_count['Percent-2019'] = (dfd19_f14_Attendees_Specialty_count['Total-2019'] / dfd19_f14_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f14_Attendees_Specialty_count['Percent-2019'] = dfd19_f14_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f14_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f14_Attendees_Specialty_count = pd.DataFrame(filtr_14_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f14_Attendees_Specialty_count = dfd21_f14_Attendees_Specialty_count.fillna('Unknown')
dfd21_f14_Attendees_Specialty_count['Percent-2021'] = (dfd21_f14_Attendees_Specialty_count['Total-2021'] / dfd21_f14_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f14_Attendees_Specialty_count['Percent-2021'] = dfd21_f14_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f14_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f14_Attendees_Specialty_count = pd.DataFrame(filtr_14_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f14_Attendees_Specialty_count = dfd22_f14_Attendees_Specialty_count.fillna('Unknown')
dfd22_f14_Attendees_Specialty_count['Percent-2022'] = (dfd22_f14_Attendees_Specialty_count['Total-2022'] / dfd22_f14_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f14_Attendees_Specialty_count['Percent-2022'] = dfd22_f14_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f14_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f14_Attendees_Specialty_count = pd.DataFrame(filtr_14_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f14_Attendees_Specialty_count = dfd23_f14_Attendees_Specialty_count.fillna('Unknown')
dfd23_f14_Attendees_Specialty_count['Percent-2023'] = (dfd23_f14_Attendees_Specialty_count['Total-2023'] / dfd23_f14_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f14_Attendees_Specialty_count['Percent-2023'] = dfd23_f14_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f14_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f14 = pd.DataFrame(pd.merge(dfd17_f14_Attendees_Specialty_count, dfd18_f14_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f14 = pd.DataFrame(pd.merge(dfd19_f14_Attendees_Specialty_count, dfd21_f14_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f14 = pd.DataFrame(pd.merge(dfd22_f14_Attendees_Specialty_count, dfd23_f14_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f14 = pd.DataFrame(pd.merge(df_Specialty_count_1_f14, df_Specialty_count_2_f14, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f14.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f14 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f14, df_Specialty_count_3_f14, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f14 = df_Specialty_count_m2_f14.append(df_Specialty_count_m2_f14.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f14['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f14['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f14['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f14 = Concat_Registrations_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f14['Total-2017'] = Concat_Registrations_count_f1_f14['Total-2017'].astype(int)
Concat_Registrations_count_f1_f14['Percent-2017'] = Concat_Registrations_count_f1_f14['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f14['7DEvolution-2017'] = Concat_Registrations_count_f1_f14['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f14['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f14['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f14 = Concat_Registrations_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f14['Total-2018'] = Concat_Registrations_count_f1_f14['Total-2018'].astype(int)
Concat_Registrations_count_f1_f14['Percent-2018'] = Concat_Registrations_count_f1_f14['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f14['7DEvolution-2018'] = Concat_Registrations_count_f1_f14['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f14['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f14['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f14 = Concat_Registrations_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f14['Total-2019'] = Concat_Registrations_count_f1_f14['Total-2019'].astype(int)
Concat_Registrations_count_f1_f14['Percent-2019'] = Concat_Registrations_count_f1_f14['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f14['7DEvolution-2019'] = Concat_Registrations_count_f1_f14['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f14['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f14['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f14 = Concat_Registrations_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f14['Total-2021'] = Concat_Registrations_count_f1_f14['Total-2021'].astype(int)
Concat_Registrations_count_f1_f14['Percent-2021'] = Concat_Registrations_count_f1_f14['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f14['7DEvolution-2021'] = Concat_Registrations_count_f1_f14['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f14['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f14['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f14 = Concat_Registrations_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f14['Total-2022'] = Concat_Registrations_count_f1_f14['Total-2022'].astype(int)
Concat_Registrations_count_f1_f14['Percent-2022'] = Concat_Registrations_count_f1_f14['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f14['7DEvolution-2022'] = Concat_Registrations_count_f1_f14['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f14['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f14['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f14 = Concat_Registrations_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f14['Total-2023'] = Concat_Registrations_count_f1_f14['Total-2023'].astype(int)
Concat_Registrations_count_f1_f14['Percent-2023'] = Concat_Registrations_count_f1_f14['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f14['7DEvolution-2023'] = Concat_Registrations_count_f1_f14['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f14['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f14['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f14 = Concat_ACQRET_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f14['Total-2018'] = Concat_ACQRET_count_f1_f14['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f14['ACQ-2018'] = Concat_ACQRET_count_f1_f14['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f14['Percent-2018'] = Concat_ACQRET_count_f1_f14['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f14['RET-2018'] = Concat_ACQRET_count_f1_f14['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f14['Percnt-2018'] = Concat_ACQRET_count_f1_f14['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f14['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f14['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f14 = Concat_ACQRET_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f14['Total-2019'] = Concat_ACQRET_count_f1_f14['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f14['ACQ-2019'] = Concat_ACQRET_count_f1_f14['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f14['Percent-2019'] = Concat_ACQRET_count_f1_f14['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f14['RET-2019'] = Concat_ACQRET_count_f1_f14['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f14['Percnt-2019'] = Concat_ACQRET_count_f1_f14['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f14['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f14['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f14 = Concat_ACQRET_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f14['Total-2021'] = Concat_ACQRET_count_f1_f14['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f14['ACQ-2021'] = Concat_ACQRET_count_f1_f14['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f14['Percent-2021'] = Concat_ACQRET_count_f1_f14['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f14['RET-2021'] = Concat_ACQRET_count_f1_f14['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f14['Percnt-2021'] = Concat_ACQRET_count_f1_f14['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f14['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f14['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f14 = Concat_ACQRET_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f14['Total-2022'] = Concat_ACQRET_count_f1_f14['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f14['ACQ-2022'] = Concat_ACQRET_count_f1_f14['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f14['Percent-2022'] = Concat_ACQRET_count_f1_f14['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f14['RET-2022'] = Concat_ACQRET_count_f1_f14['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f14['Percnt-2022'] = Concat_ACQRET_count_f1_f14['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f14['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f14['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f14 = Concat_ACQRET_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f14['Total-2023'] = Concat_ACQRET_count_f1_f14['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f14['ACQ-2023'] = Concat_ACQRET_count_f1_f14['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f14['Percent-2023'] = Concat_ACQRET_count_f1_f14['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f14['RET-2023'] = Concat_ACQRET_count_f1_f14['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f14['Percnt-2023'] = Concat_ACQRET_count_f1_f14['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f14['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f14['Total-2017'],errors='coerce')
Concat_REV_count_f1_f14 = Concat_REV_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f14['Total-2017'] = Concat_REV_count_f1_f14['Total-2017'].astype(int)
Concat_REV_count_f1_f14['Percent-2017'] = Concat_REV_count_f1_f14['Percent-2017'].astype(float)
Concat_REV_count_f1_f14['7DEvolution-2017'] = Concat_REV_count_f1_f14['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f14['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f14['Total-2018'],errors='coerce')
Concat_REV_count_f1_f14 = Concat_REV_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f14['Total-2018'] = Concat_REV_count_f1_f14['Total-2018'].astype(int)
Concat_REV_count_f1_f14['Percent-2018'] = Concat_REV_count_f1_f14['Percent-2018'].astype(float)
Concat_REV_count_f1_f14['7DEvolution-2018'] = Concat_REV_count_f1_f14['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f14['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f14['Total-2019'],errors='coerce')
Concat_REV_count_f1_f14 = Concat_REV_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f14['Total-2019'] = Concat_REV_count_f1_f14['Total-2019'].astype(int)
Concat_REV_count_f1_f14['Percent-2019'] = Concat_REV_count_f1_f14['Percent-2019'].astype(float)
Concat_REV_count_f1_f14['7DEvolution-2019'] = Concat_REV_count_f1_f14['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f14['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f14['Total-2022'],errors='coerce')
Concat_REV_count_f1_f14 = Concat_REV_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f14['Total-2022'] = Concat_REV_count_f1_f14['Total-2022'].astype(int)
Concat_REV_count_f1_f14['Percent-2022'] = Concat_REV_count_f1_f14['Percent-2022'].astype(float)
Concat_REV_count_f1_f14['7DEvolution-2022'] = Concat_REV_count_f1_f14['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f14['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f14['Total-2023'],errors='coerce')
Concat_REV_count_f1_f14 = Concat_REV_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f14['Total-2023'] = Concat_REV_count_f1_f14['Total-2023'].astype(int)
Concat_REV_count_f1_f14['Percent-2023'] = Concat_REV_count_f1_f14['Percent-2023'].astype(float)
Concat_REV_count_f1_f14['7DEvolution-2023'] = Concat_REV_count_f1_f14['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f14['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f14['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f14 = Concat_RegGRDel_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f14['Total-2017'] = Concat_RegGRDel_count_f1_f14['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f14['Percent-2017'] = Concat_RegGRDel_count_f1_f14['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f14['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f14['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f14['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f14['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f14 = Concat_RegGRDel_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f14['Total-2018'] = Concat_RegGRDel_count_f1_f14['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f14['Percent-2018'] = Concat_RegGRDel_count_f1_f14['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f14['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f14['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f14['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f14['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f14 = Concat_RegGRDel_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f14['Total-2019'] = Concat_RegGRDel_count_f1_f14['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f14['Percent-2019'] = Concat_RegGRDel_count_f1_f14['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f14['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f14['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f14['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f14['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f14 = Concat_RegGRDel_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f14['Total-2021'] = Concat_RegGRDel_count_f1_f14['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f14['Percent-2021'] = Concat_RegGRDel_count_f1_f14['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f14['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f14['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f14['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f14['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f14 = Concat_RegGRDel_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f14['Total-2022'] = Concat_RegGRDel_count_f1_f14['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f14['Percent-2022'] = Concat_RegGRDel_count_f1_f14['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f14['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f14['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f14['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f14['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f14 = Concat_RegGRDel_count_f1_f14.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f14['Total-2023'] = Concat_RegGRDel_count_f1_f14['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f14['Percent-2023'] = Concat_RegGRDel_count_f1_f14['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f14['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f14['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f14['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f14['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f14 = Conct_AC_RT_GRDel_f1_f14.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f14['Total-2018'] = Conct_AC_RT_GRDel_f1_f14['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f14['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f14['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f14['Percent-2018'] = Conct_AC_RT_GRDel_f1_f14['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f14['RET-2018'] = Conct_AC_RT_GRDel_f1_f14['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f14['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f14['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f14['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f14['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f14 = Conct_AC_RT_GRDel_f1_f14.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f14['Total-2019'] = Conct_AC_RT_GRDel_f1_f14['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f14['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f14['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f14['Percent-2019'] = Conct_AC_RT_GRDel_f1_f14['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f14['RET-2019'] = Conct_AC_RT_GRDel_f1_f14['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f14['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f14['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f14['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f14['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f14 = Conct_AC_RT_GRDel_f1_f14.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f14['Total-2021'] = Conct_AC_RT_GRDel_f1_f14['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f14['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f14['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f14['Percent-2021'] = Conct_AC_RT_GRDel_f1_f14['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f14['RET-2021'] = Conct_AC_RT_GRDel_f1_f14['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f14['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f14['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f14['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f14['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f14 = Conct_AC_RT_GRDel_f1_f14.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f14['Total-2022'] = Conct_AC_RT_GRDel_f1_f14['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f14['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f14['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f14['Percent-2022'] = Conct_AC_RT_GRDel_f1_f14['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f14['RET-2022'] = Conct_AC_RT_GRDel_f1_f14['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f14['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f14['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f14['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f14['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f14 = Conct_AC_RT_GRDel_f1_f14.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f14['Total-2023'] = Conct_AC_RT_GRDel_f1_f14['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f14['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f14['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f14['Percent-2023'] = Conct_AC_RT_GRDel_f1_f14['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f14['RET-2023'] = Conct_AC_RT_GRDel_f1_f14['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f14['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f14['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f14['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f14['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f14 = Conct_RV_GRDel_f1_f14.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f14['Total-2017'] = Conct_RV_GRDel_f1_f14['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f14['Percent-2017'] = Conct_RV_GRDel_f1_f14['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f14['7DEvolution-2017'] = Conct_RV_GRDel_f1_f14['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f14['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f14['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f14 = Conct_RV_GRDel_f1_f14.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f14['Total-2018'] = Conct_RV_GRDel_f1_f14['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f14['Percent-2018'] = Conct_RV_GRDel_f1_f14['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f14['7DEvolution-2018'] = Conct_RV_GRDel_f1_f14['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f14['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f14['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f14 = Conct_RV_GRDel_f1_f14.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f14['Total-2019'] = Conct_RV_GRDel_f1_f14['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f14['Percent-2019'] = Conct_RV_GRDel_f1_f14['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f14['7DEvolution-2019'] = Conct_RV_GRDel_f1_f14['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f14['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f14['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f14 = Conct_RV_GRDel_f1_f14.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f14['Total-2022'] = Conct_RV_GRDel_f1_f14['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f14['Percent-2022'] = Conct_RV_GRDel_f1_f14['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f14['7DEvolution-2022'] = Conct_RV_GRDel_f1_f14['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f14['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f14['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f14 = Conct_RV_GRDel_f1_f14.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f14['Total-2023'] = Conct_RV_GRDel_f1_f14['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f14['Percent-2023'] = Conct_RV_GRDel_f1_f14['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f14['7DEvolution-2023'] = Conct_RV_GRDel_f1_f14['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f14['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f14['Total-2017'],errors='coerce')
df_Profile_Count_m2_f14 = df_Profile_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f14['Total-2017'] = df_Profile_Count_m2_f14['Total-2017'].astype(int)
df_Profile_Count_m2_f14['Percent-2017'] = df_Profile_Count_m2_f14['Percent-2017'].astype(float)

df_Profile_Count_m2_f14['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f14['Total-2018'],errors='coerce')
df_Profile_Count_m2_f14 = df_Profile_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f14['Total-2018'] = df_Profile_Count_m2_f14['Total-2018'].astype(int)
df_Profile_Count_m2_f14['Percent-2018'] = df_Profile_Count_m2_f14['Percent-2018'].astype(float)

df_Profile_Count_m2_f14['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f14['Total-2019'],errors='coerce')
df_Profile_Count_m2_f14 = df_Profile_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f14['Total-2019'] = df_Profile_Count_m2_f14['Total-2019'].astype(int)
df_Profile_Count_m2_f14['Percent-2019'] = df_Profile_Count_m2_f14['Percent-2019'].astype(float)

df_Profile_Count_m2_f14['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f14['Total-2021'],errors='coerce')
df_Profile_Count_m2_f14 = df_Profile_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f14['Total-2021'] = df_Profile_Count_m2_f14['Total-2021'].astype(int)
df_Profile_Count_m2_f14['Percent-2021'] = df_Profile_Count_m2_f14['Percent-2021'].astype(float)

df_Profile_Count_m2_f14['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f14['Total-2022'],errors='coerce')
df_Profile_Count_m2_f14 = df_Profile_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f14['Total-2022'] = df_Profile_Count_m2_f14['Total-2022'].astype(int)
df_Profile_Count_m2_f14['Percent-2022'] = df_Profile_Count_m2_f14['Percent-2022'].astype(float)

df_Profile_Count_m2_f14['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f14['Total-2023'],errors='coerce')
df_Profile_Count_m2_f14 = df_Profile_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f14['Total-2023'] = df_Profile_Count_m2_f14['Total-2023'].astype(int)
df_Profile_Count_m2_f14['Percent-2023'] = df_Profile_Count_m2_f14['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f14['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f14['Total-2017'],errors='coerce')
df_Pass_Count_m2_f14 = df_Pass_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f14['Total-2017'] = df_Pass_Count_m2_f14['Total-2017'].astype(int)
df_Pass_Count_m2_f14['Percent-2017'] = df_Pass_Count_m2_f14['Percent-2017'].astype(float)

df_Pass_Count_m2_f14['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f14['Total-2018'],errors='coerce')
df_Pass_Count_m2_f14 = df_Pass_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f14['Total-2018'] = df_Pass_Count_m2_f14['Total-2018'].astype(int)
df_Pass_Count_m2_f14['Percent-2018'] = df_Pass_Count_m2_f14['Percent-2018'].astype(float)

df_Pass_Count_m2_f14['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f14['Total-2019'],errors='coerce')
df_Pass_Count_m2_f14 = df_Pass_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f14['Total-2019'] = df_Pass_Count_m2_f14['Total-2019'].astype(int)
df_Pass_Count_m2_f14['Percent-2019'] = df_Pass_Count_m2_f14['Percent-2019'].astype(float)

df_Pass_Count_m2_f14['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f14['Total-2021'],errors='coerce')
df_Pass_Count_m2_f14 = df_Pass_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f14['Total-2021'] = df_Pass_Count_m2_f14['Total-2021'].astype(int)
df_Pass_Count_m2_f14['Percent-2021'] = df_Pass_Count_m2_f14['Percent-2021'].astype(float)

df_Pass_Count_m2_f14['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f14['Total-2022'],errors='coerce')
df_Pass_Count_m2_f14 = df_Pass_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f14['Total-2022'] = df_Pass_Count_m2_f14['Total-2022'].astype(int)
df_Pass_Count_m2_f14['Percent-2022'] = df_Pass_Count_m2_f14['Percent-2022'].astype(float)

df_Pass_Count_m2_f14['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f14['Total-2023'],errors='coerce')
df_Pass_Count_m2_f14 = df_Pass_Count_m2_f14.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f14['Total-2023'] = df_Pass_Count_m2_f14['Total-2023'].astype(int)
df_Pass_Count_m2_f14['Percent-2023'] = df_Pass_Count_m2_f14['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f14['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f14['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f14 = dfAttendees_Country_Count_m2_f14.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f14['Total-2017'] = dfAttendees_Country_Count_m2_f14['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f14['Percent-2017'] = dfAttendees_Country_Count_m2_f14['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f14['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f14['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f14 = dfAttendees_Country_Count_m2_f14.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f14['Total-2018'] = dfAttendees_Country_Count_m2_f14['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f14['Percent-2018'] = dfAttendees_Country_Count_m2_f14['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f14['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f14['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f14 = dfAttendees_Country_Count_m2_f14.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f14['Total-2019'] = dfAttendees_Country_Count_m2_f14['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f14['Percent-2019'] = dfAttendees_Country_Count_m2_f14['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f14['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f14['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f14 = dfAttendees_Country_Count_m2_f14.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f14['Total-2021'] = dfAttendees_Country_Count_m2_f14['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f14['Percent-2021'] = dfAttendees_Country_Count_m2_f14['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f14['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f14['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f14 = dfAttendees_Country_Count_m2_f14.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f14['Total-2022'] = dfAttendees_Country_Count_m2_f14['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f14['Percent-2022'] = dfAttendees_Country_Count_m2_f14['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f14['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f14['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f14 = dfAttendees_Country_Count_m2_f14.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f14['Total-2023'] = dfAttendees_Country_Count_m2_f14['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f14['Percent-2023'] = dfAttendees_Country_Count_m2_f14['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f14['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f14['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f14 = df_ATTENDEES_AREAS_count_m2_f14.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f14['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f14['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f14['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f14['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f14['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f14['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f14 = df_ATTENDEES_AREAS_count_m2_f14.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f14['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f14['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f14['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f14['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f14['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f14['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f14 = df_ATTENDEES_AREAS_count_m2_f14.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f14['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f14['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f14['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f14['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f14['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f14['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f14 = df_ATTENDEES_AREAS_count_m2_f14.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f14['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f14['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f14['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f14['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f14['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f14['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f14 = df_ATTENDEES_AREAS_count_m2_f14.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f14['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f14['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f14['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f14['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f14['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f14['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f14 = df_ATTENDEES_AREAS_count_m2_f14.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f14['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f14['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f14['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f14['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f14['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f14['Total-2017'],errors='coerce')
df_Specialty_count_m2_f14 = df_Specialty_count_m2_f14.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f14['Total-2017'] = df_Specialty_count_m2_f14['Total-2017'].astype(int)
df_Specialty_count_m2_f14['Percent-2017'] = df_Specialty_count_m2_f14['Percent-2017'].astype(float)

df_Specialty_count_m2_f14['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f14['Total-2018'],errors='coerce')
df_Specialty_count_m2_f14 = df_Specialty_count_m2_f14.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f14['Total-2018'] = df_Specialty_count_m2_f14['Total-2018'].astype(int)
df_Specialty_count_m2_f14['Percent-2018'] = df_Specialty_count_m2_f14['Percent-2018'].astype(float)

df_Specialty_count_m2_f14['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f14['Total-2019'],errors='coerce')
df_Specialty_count_m2_f14 = df_Specialty_count_m2_f14.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f14['Total-2019'] = df_Specialty_count_m2_f14['Total-2019'].astype(int)
df_Specialty_count_m2_f14['Percent-2019'] = df_Specialty_count_m2_f14['Percent-2019'].astype(float)

df_Specialty_count_m2_f14['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f14['Total-2021'],errors='coerce')
df_Specialty_count_m2_f14 = df_Specialty_count_m2_f14.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f14['Total-2021'] = df_Specialty_count_m2_f14['Total-2021'].astype(int)
df_Specialty_count_m2_f14['Percent-2021'] = df_Specialty_count_m2_f14['Percent-2021'].astype(float)

df_Specialty_count_m2_f14['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f14['Total-2022'],errors='coerce')
df_Specialty_count_m2_f14 = df_Specialty_count_m2_f14.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f14['Total-2022'] = df_Specialty_count_m2_f14['Total-2022'].astype(int)
df_Specialty_count_m2_f14['Percent-2022'] = df_Specialty_count_m2_f14['Percent-2022'].astype(float)

df_Specialty_count_m2_f14['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f14['Total-2023'],errors='coerce')
df_Specialty_count_m2_f14 = df_Specialty_count_m2_f14.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f14['Total-2023'] = df_Specialty_count_m2_f14['Total-2023'].astype(int)
df_Specialty_count_m2_f14['Percent-2023'] = df_Specialty_count_m2_f14['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f14.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f14.dtypes)
#print(df_Specialty_count_m2_f14.dtypes)

#print(dfAttendees_Country_Count_m2_f14.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f14.dtypes)
#print(df_Specialty_count_m2_f14.dtypes)

# EXCEL FILE
writerf14 = pd.ExcelWriter(outputExcelFile_f14, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f14.to_excel\
    (writerf14, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f14.to_excel\
    (writerf14, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f14.to_excel\
    (writerf14, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f14.to_excel\
    (writerf14, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f14.to_excel\
    (writerf14, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f14.to_excel\
    (writerf14, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f14.to_excel\
    (writerf14, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f14.to_excel\
    (writerf14, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f14.to_excel\
    (writerf14, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f14.to_excel\
    (writerf14, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f14.to_excel\
    (writerf14, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf14.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f14)

workbook.save(outputExcelFile_f14)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 98 days**********************************************')
print('************************************End of 98 days**********************************************')
print('************************************End of 98 days**********************************************')
print('************************************End of 98 days**********************************************')
print('************************************End of 98 days**********************************************')
print('************************************End of 98 days**********************************************')
print('************************************End of 98 days**********************************************')
print('************************************End of 98 days**********************************************')
print('************************************End of 98 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f15_Registrations_count = pd.DataFrame(filter_15_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f15_Registrations_count = dfd17_f15_Registrations_count.fillna('Unknown')
dfd17_f15_Registrations_count['Percent-2017'] = (dfd17_f15_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f15_Registrations_count['Percent-2017'] = dfd17_f15_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f15_Registrations_count['7DEvolution-2017'] = dfd17_f15_Registrations_count['Total-2017'] - dfd17_f14_Registrations_count['Total-2017']
#print(tab(dfd17_f15_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f15_Registrations_count = pd.DataFrame(filter_15_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f15_Registrations_count = dfd18_f15_Registrations_count.fillna('Unknown')
dfd18_f15_Registrations_count['Percent-2018'] = (dfd18_f15_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f15_Registrations_count['Percent-2018'] = dfd18_f15_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f15_Registrations_count['7DEvolution-2018'] = dfd18_f15_Registrations_count['Total-2018'] - dfd18_f14_Registrations_count['Total-2018']
#print(tab(dfd18_f15_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f15_Registrations_count = pd.DataFrame(filter_15_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f15_Registrations_count = dfd19_f15_Registrations_count.fillna('Unknown')
dfd19_f15_Registrations_count['Percent-2019'] = (dfd19_f15_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f15_Registrations_count['Percent-2019'] = dfd19_f15_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f15_Registrations_count['7DEvolution-2019'] = dfd19_f15_Registrations_count['Total-2019'] - dfd19_f14_Registrations_count['Total-2019']
#print(tab(dfd19_f15_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f15_Registrations_count = pd.DataFrame(filter_15_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f15_Registrations_count = dfd21_f15_Registrations_count.fillna('Unknown')
dfd21_f15_Registrations_count['Percent-2021'] = (dfd21_f15_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f15_Registrations_count['Percent-2021'] = dfd21_f15_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f15_Registrations_count['7DEvolution-2021'] = dfd21_f15_Registrations_count['Total-2021'] - dfd21_f14_Registrations_count['Total-2021']
#print(tab(dfd21_f15_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f15_Registrations_count = pd.DataFrame(filter_15_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f15_Registrations_count = dfd22_f15_Registrations_count.fillna('Unknown')
dfd22_f15_Registrations_count['Percent-2022'] = (dfd22_f15_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f15_Registrations_count['Percent-2022'] = dfd22_f15_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f15_Registrations_count['7DEvolution-2022'] = dfd22_f15_Registrations_count['Total-2022'] - dfd22_f14_Registrations_count['Total-2022']
#print(tab(dfd22_f15_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_Registrations_count = pd.DataFrame(filter_15_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f15_Registrations_count = dfd23_f15_Registrations_count.fillna('Unknown')
dfd23_f15_Registrations_count['Percent-2023'] = (dfd23_f15_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f15_Registrations_count['Percent-2023'] = dfd23_f15_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f15_Registrations_count['7DEvolution-2023'] = dfd23_f15_Registrations_count['Total-2023'] - dfd23_f14_Registrations_count['Total-2023']
#print(tab(dfd23_f15_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f15_RegistrationsEvolution_count = pd.DataFrame(filter_15_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f15_RegistrationsEvolution_count = dfd23_f15_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f15_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f15_Registrations_count['Total-2023'] - dfd19_f15_Registrations_count['Total-2019'])/ dfd19_f15_Registrations_count['Total-2019'].sum()) * 100
dfd23_f15_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f15_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f15_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f15 = pd.DataFrame(pd.merge(dfd17_f15_Registrations_count, dfd18_f15_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f15 = pd.DataFrame(pd.merge(dfd19_f15_Registrations_count, dfd21_f15_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f15 = pd.DataFrame(pd.merge(dfd22_f15_Registrations_count, dfd23_f15_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f15 = pd.DataFrame(pd.merge(df_Registrations_count_1_f15, df_Registrations_count_2_f15, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f15 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f15, df_Registrations_count_3_f15, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f15 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f15, dfd23_f15_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f15 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15]
Concat_Registrations_count_f1_f15 = pd.concat(ConcatFrames_Registrations_count_f1_f15)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f15  = ConcatFrames_Registrations_count_f1_f15.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f15.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f15 = filter_15_df18[filter_15_df18['New customer'] == 1]
df_NewCustomer_df19_f15 = filter_15_df19[filter_15_df19['New customer'] == 1]
df_NewCustomer_df21_f15 = filter_15_df21[filter_15_df21['New customer'] == 1]
df_NewCustomer_df22_f15 = filter_15_df22[filter_15_df22['New customer'] == 1]
df_NewCustomer_df23_f15 = filter_15_df23[filter_15_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f15.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f15.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f15.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a15_ACQRET_count = pd.DataFrame(filter_15_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f15_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f15.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f15_ACQRET_count['Percent-2018'] = (dfd18_f15_ACQRET_count['ACQ-2018'] / dfd18_f15_Registrations_count['Total-2018'].sum()) * 100
dfd18_f15_ACQRET_count['Percent-2018'] = dfd18_f15_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f15_ACQRET_count['RET-2018'] = dfd18_a15_ACQRET_count['Total-2018'] - dfd18_f15_ACQRET_count['ACQ-2018']
dfd18_f15_ACQRET_count['Percnt-2018'] = (dfd18_f15_ACQRET_count['RET-2018'] / dfd18_a15_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f15_ACQRET_count['Percnt-2018'] = dfd18_f15_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f15_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a15_ACQRET_count = pd.DataFrame(filter_15_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f15_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f15.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f15_ACQRET_count['Percent-2019'] = (dfd19_f15_ACQRET_count['ACQ-2019'] / dfd19_f15_Registrations_count['Total-2019'].sum()) * 100
dfd19_f15_ACQRET_count['Percent-2019'] = dfd19_f15_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f15_ACQRET_count['RET-2019'] = dfd19_a15_ACQRET_count['Total-2019'] - dfd19_f15_ACQRET_count['ACQ-2019']
dfd19_f15_ACQRET_count['Percnt-2019'] = (dfd19_f15_ACQRET_count['RET-2019'] / dfd19_a15_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f15_ACQRET_count['Percnt-2019'] = dfd19_f15_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f15_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a15_ACQRET_count = pd.DataFrame(filter_15_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f15_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f15.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f15_ACQRET_count['Percent-2021'] = (dfd21_f15_ACQRET_count['ACQ-2021'] / dfd21_f15_Registrations_count['Total-2021'].sum()) * 100
dfd21_f15_ACQRET_count['Percent-2021'] = dfd21_f15_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f15_ACQRET_count['RET-2021'] = dfd21_a15_ACQRET_count['Total-2021'] - dfd21_f15_ACQRET_count['ACQ-2021']
dfd21_f15_ACQRET_count['Percnt-2021'] = (dfd21_f15_ACQRET_count['RET-2021'] / dfd21_a15_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f15_ACQRET_count['Percnt-2021'] = dfd21_f15_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f15_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a15_ACQRET_count = pd.DataFrame(filter_15_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f15_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f15.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f15_ACQRET_count['Percent-2022'] = (dfd22_f15_ACQRET_count['ACQ-2022'] / dfd22_f15_Registrations_count['Total-2022'].sum()) * 100
dfd22_f15_ACQRET_count['Percent-2022'] = dfd22_f15_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f15_ACQRET_count['RET-2022'] = dfd22_a15_ACQRET_count['Total-2022'] - dfd22_f15_ACQRET_count['ACQ-2022']
dfd22_f15_ACQRET_count['Percnt-2022'] = (dfd22_f15_ACQRET_count['RET-2022'] / dfd22_a15_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f15_ACQRET_count['Percnt-2022'] = dfd22_f15_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f15_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a15_ACQRET_count = pd.DataFrame(filter_15_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f15_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f15.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f15_ACQRET_count['Percent-2023'] = (dfd23_f15_ACQRET_count['ACQ-2023'] / dfd23_f15_Registrations_count['Total-2023'].sum()) * 100
dfd23_f15_ACQRET_count['Percent-2023'] = dfd23_f15_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f15_ACQRET_count['RET-2023'] = dfd23_a15_ACQRET_count['Total-2023'] - dfd23_f15_ACQRET_count['ACQ-2023']
dfd23_f15_ACQRET_count['Percnt-2023'] = (dfd23_f15_ACQRET_count['RET-2023'] / dfd23_a15_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f15_ACQRET_count['Percnt-2023'] = dfd23_f15_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f15_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f15 = pd.DataFrame(pd.merge(dfd18_a15_ACQRET_count, dfd18_f15_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f15 = pd.DataFrame(pd.merge(dfd19_a15_ACQRET_count, dfd19_f15_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f15 = pd.DataFrame(pd.merge(dfd21_a15_ACQRET_count, dfd21_f15_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f15 = pd.DataFrame(pd.merge(dfd22_a15_ACQRET_count, dfd22_f15_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_15_f15 = pd.DataFrame(pd.merge(dfd23_a15_ACQRET_count, dfd23_f15_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_15_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f15 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f15, df_ACQRET_count_2_f15, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f15 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f15, df_ACQRET_count_3_f15, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f15 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f15, df_ACQRET_count_4_f15, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f15 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f15, df_ACQRET_count_15_f15, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f15 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15]
Concat_ACQRET_count_f1_f15 = pd.concat(ConcatFrames_ACQRET_count_f1_f15)
#print(tab(Concat_ACQRET_count_f1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f15 = Concat_ACQRET_count_f1_f15[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f15_Revenue_calc = pd.DataFrame(filter_15_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f15_Revenue_calc['Percent-2017'] = (dfd17_f15_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f15_Revenue_calc['Percent-2017'] = dfd17_f15_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f15_Revenue_calc['7DEvolution-2017'] = dfd17_f15_Revenue_calc['Total-2017'] - dfd17_f14_Revenue_calc['Total-2017']
#print(tab(dfd17_f15_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f15_Revenue_calc = pd.DataFrame(filter_15_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f15_Revenue_calc['Percent-2018'] = (dfd18_f15_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f15_Revenue_calc['Percent-2018'] = dfd18_f15_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f15_Revenue_calc['7DEvolution-2018'] = dfd18_f15_Revenue_calc['Total-2018'] - dfd18_f14_Revenue_calc['Total-2018']
#print(tab(dfd18_f15_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f15_Revenue_calc = pd.DataFrame(filter_15_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f15_Revenue_calc['Percent-2019'] = (dfd19_f15_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f15_Revenue_calc['Percent-2019'] = dfd19_f15_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f15_Revenue_calc['7DEvolution-2019'] = dfd19_f15_Revenue_calc['Total-2019'] - dfd19_f14_Revenue_calc['Total-2019']
#print(tab(dfd19_f15_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f15_Revenue_calc = pd.DataFrame(filter_15_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f15_Revenue_calc['Percent-2021'] = (dfd21_f15_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f15_Revenue_calc['Percent-2021'] = dfd21_f15_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f15_Revenue_calc['7DEvolution-2021'] = dfd21_f15_Revenue_calc['Total-2021'] - dfd21_f14_Revenue_calc['Total-2021']
#print(tab(dfd21_f15_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f15_Revenue_calc = pd.DataFrame(filter_15_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f15_Revenue_calc['Percent-2022'] = (dfd22_f15_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f15_Revenue_calc['Percent-2022'] = dfd22_f15_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f15_Revenue_calc['7DEvolution-2022'] = dfd22_f15_Revenue_calc['Total-2022'] - dfd22_f14_Revenue_calc['Total-2022']
#print(tab(dfd22_f15_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_Revenue_calc = pd.DataFrame(filter_15_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f15_Revenue_calc['Percent-2023'] = (dfd23_f15_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f15_Revenue_calc['Percent-2023'] = dfd23_f15_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f15_Revenue_calc['7DEvolution-2023'] = dfd23_f15_Revenue_calc['Total-2023'] - dfd23_f14_Revenue_calc['Total-2023']
#print(tab(dfd23_f15_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f15_RevenueEvolution_calc = pd.DataFrame(filter_15_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f15_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f15_Revenue_calc['Total-2023'] - dfd19_f15_Revenue_calc['Total-2019'])/ dfd19_f15_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f15_RevenueEvolution_calc['Evolution-2023'] = dfd23_f15_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f15_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f15 = pd.DataFrame(pd.merge(dfd17_f15_Revenue_calc, dfd18_f15_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f15 = pd.DataFrame(pd.merge(dfd19_f15_Revenue_calc, dfd21_f15_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f15 = pd.DataFrame(pd.merge(dfd22_f15_Revenue_calc, dfd23_f15_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f15_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f15, df_Revenue_calc_2_f15, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f15Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f15_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f15_Evolution, df_Revenue_calc_3_f15, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f15Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f15 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f15_Evolution, dfd23_f15_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f15 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15]
Concat_REV_count_f1_f15 = pd.concat(ConcatFrames_REV_count_f1_f15)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f15_Registrations_GRDel = pd.DataFrame(filtr_15_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f15_Registrations_GRDel = dfd17_f15_Registrations_GRDel.fillna('Unknown')
dfd17_f15_Registrations_GRDel['Percent-2017'] = (dfd17_f15_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f15_Registrations_GRDel['Percent-2017'] = dfd17_f15_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f15_Registrations_GRDel['7DEvolution-2017'] = dfd17_f15_Registrations_GRDel['Total-2017'] - dfd17_f14_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f15_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f15_Registrations_GRDel = pd.DataFrame(filtr_15_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f15_Registrations_GRDel = dfd18_f15_Registrations_GRDel.fillna('Unknown')
dfd18_f15_Registrations_GRDel['Percent-2018'] = (dfd18_f15_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f15_Registrations_GRDel['Percent-2018'] = dfd18_f15_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f15_Registrations_GRDel['7DEvolution-2018'] = dfd18_f15_Registrations_GRDel['Total-2018'] - dfd18_f14_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f15_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f15_Registrations_GRDel = pd.DataFrame(filtr_15_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f15_Registrations_GRDel = dfd19_f15_Registrations_GRDel.fillna('Unknown')
dfd19_f15_Registrations_GRDel['Percent-2019'] = (dfd19_f15_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f15_Registrations_GRDel['Percent-2019'] = dfd19_f15_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f15_Registrations_GRDel['7DEvolution-2019'] = dfd19_f15_Registrations_GRDel['Total-2019'] - dfd19_f14_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f15_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f15_Registrations_GRDel = pd.DataFrame(filtr_15_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f15_Registrations_GRDel = dfd21_f15_Registrations_GRDel.fillna('Unknown')
dfd21_f15_Registrations_GRDel['Percent-2021'] = (dfd21_f15_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f15_Registrations_GRDel['Percent-2021'] = dfd21_f15_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f15_Registrations_GRDel['7DEvolution-2021'] = dfd21_f15_Registrations_GRDel['Total-2021'] - dfd21_f14_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f15_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f15_Registrations_GRDel = pd.DataFrame(filtr_15_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f15_Registrations_GRDel = dfd22_f15_Registrations_GRDel.fillna('Unknown')
dfd22_f15_Registrations_GRDel['Percent-2022'] = (dfd22_f15_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f15_Registrations_GRDel['Percent-2022'] = dfd22_f15_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f15_Registrations_GRDel['7DEvolution-2022'] = dfd22_f15_Registrations_GRDel['Total-2022'] - dfd22_f14_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f15_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_Registrations_GRDel = pd.DataFrame(filtr_15_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f15_Registrations_GRDel = dfd23_f15_Registrations_GRDel.fillna('Unknown')
dfd23_f15_Registrations_GRDel['Percent-2023'] = (dfd23_f15_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f15_Registrations_GRDel['Percent-2023'] = dfd23_f15_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f15_Registrations_GRDel['7DEvolution-2023'] = dfd23_f15_Registrations_GRDel['Total-2023'] - dfd23_f14_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f15_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f15_Registrations_Evol_GRDel = pd.DataFrame(filtr_15_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f15_Registrations_Evol_GRDel = dfd23_f15_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f15_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f15_Registrations_GRDel['Total-2023'] - dfd19_f15_Registrations_GRDel['Total-2019'])/ dfd19_f15_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f15_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f15 = pd.concat([dfd17_f15_Registrations_GRDel, dfd18_f15_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f15 = pd.DataFrame(pd.merge(dfd17_f15_Registrations_GRDel, dfd18_f15_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f15 = pd.DataFrame(pd.merge(dfd19_f15_Registrations_GRDel, dfd21_f15_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f15 = pd.DataFrame(pd.merge(dfd22_f15_Registrations_GRDel, dfd23_f15_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f15 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f15, df_Registrations_GRDel_2_f15, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_15_f15 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f15, df_Registrations_GRDel_3_f15, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f15 = pd.DataFrame(pd.merge(df_Registrations_GRDel_15_f15, dfd23_f15_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f15 = df_Registrations_GRDel_f15[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f15 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15]
Concat_RegGRDel_count_f1_f15 = pd.concat(ConcatFrames_RegGRDel_count_f1_f15)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f15 = filtr_15_df18_GRdel[filtr_15_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f15 = filtr_15_df19_GRdel[filtr_15_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f15 = filtr_15_df21_GRdel[filtr_15_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f15 = filtr_15_df22_GRdel[filtr_15_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f15 = filtr_15_df23_GRdel[filtr_15_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f15.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f15.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a15_AC_RT_GRDel = pd.DataFrame(filtr_15_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f15_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f15.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f15_AC_RT_GRDel['Percent-2018'] = (dfd18_f15_AC_RT_GRDel['ACQ-2018'] / dfd18_f15_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f15_AC_RT_GRDel['Percent-2018'] = dfd18_f15_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f15_AC_RT_GRDel['RET-2018'] = dfd18_a15_AC_RT_GRDel['Total-2018'] - dfd18_f15_AC_RT_GRDel['ACQ-2018']
dfd18_f15_AC_RT_GRDel['Percnt-2018'] = (dfd18_f15_AC_RT_GRDel['RET-2018'] / dfd18_a15_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f15_AC_RT_GRDel['Percnt-2018'] = dfd18_f15_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f15_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a15_AC_RT_GRDel = pd.DataFrame(filtr_15_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f15_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f15.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f15_AC_RT_GRDel['Percent-2019'] = (dfd19_f15_AC_RT_GRDel['ACQ-2019'] / dfd19_f15_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f15_AC_RT_GRDel['Percent-2019'] = dfd19_f15_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f15_AC_RT_GRDel['RET-2019'] = dfd19_a15_AC_RT_GRDel['Total-2019'] - dfd19_f15_AC_RT_GRDel['ACQ-2019']
dfd19_f15_AC_RT_GRDel['Percnt-2019'] = (dfd19_f15_AC_RT_GRDel['RET-2019'] / dfd19_a15_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f15_AC_RT_GRDel['Percnt-2019'] = dfd19_f15_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f15_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a15_AC_RT_GRDel = pd.DataFrame(filtr_15_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f15_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f15.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f15_AC_RT_GRDel['Percent-2021'] = (dfd21_f15_AC_RT_GRDel['ACQ-2021'] / dfd21_f15_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f15_AC_RT_GRDel['Percent-2021'] = dfd21_f15_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f15_AC_RT_GRDel['RET-2021'] = dfd21_a15_AC_RT_GRDel['Total-2021'] - dfd21_f15_AC_RT_GRDel['ACQ-2021']
dfd21_f15_AC_RT_GRDel['Percnt-2021'] = (dfd21_f15_AC_RT_GRDel['RET-2021'] / dfd21_a15_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f15_AC_RT_GRDel['Percnt-2021'] = dfd21_f15_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f15_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a15_AC_RT_GRDel = pd.DataFrame(filtr_15_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f15_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f15.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f15_AC_RT_GRDel['Percent-2022'] = (dfd22_f15_AC_RT_GRDel['ACQ-2022'] / dfd22_f15_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f15_AC_RT_GRDel['Percent-2022'] = dfd22_f15_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f15_AC_RT_GRDel['RET-2022'] = dfd22_a15_AC_RT_GRDel['Total-2022'] - dfd22_f15_AC_RT_GRDel['ACQ-2022']
dfd22_f15_AC_RT_GRDel['Percnt-2022'] = (dfd22_f15_AC_RT_GRDel['RET-2022'] / dfd22_a15_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f15_AC_RT_GRDel['Percnt-2022'] = dfd22_f15_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f15_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a15_AC_RT_GRDel = pd.DataFrame(filtr_15_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f15_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f15.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f15_AC_RT_GRDel['Percent-2023'] = (dfd23_f15_AC_RT_GRDel['ACQ-2023'] / dfd23_f15_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f15_AC_RT_GRDel['Percent-2023'] = dfd23_f15_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f15_AC_RT_GRDel['RET-2023'] = dfd23_a15_AC_RT_GRDel['Total-2023'] - dfd23_f15_AC_RT_GRDel['ACQ-2023']
dfd23_f15_AC_RT_GRDel['Percnt-2023'] = (dfd23_f15_AC_RT_GRDel['RET-2023'] / dfd23_a15_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f15_AC_RT_GRDel['Percnt-2023'] = dfd23_f15_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f15_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f15 = pd.DataFrame(pd.merge_ordered(dfd18_a15_AC_RT_GRDel, dfd18_f15_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f15 = pd.DataFrame(pd.merge_ordered(dfd19_a15_AC_RT_GRDel, dfd19_f15_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f15 = pd.DataFrame(pd.merge_ordered(dfd21_a15_AC_RT_GRDel, dfd21_f15_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f15 = pd.DataFrame(pd.merge_ordered(dfd22_a15_AC_RT_GRDel, dfd22_f15_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_15_f15 = pd.DataFrame(pd.merge_ordered(dfd23_a15_AC_RT_GRDel, dfd23_f15_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f15 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f15, df_AC_ET_GRDel_2_f15, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f15 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f15, df_AC_ET_GRDel_3_f15, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f15 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f15, df_AC_ET_GRDel_4_f15, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f15 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f15, df_AC_ET_GRDel_15_f15, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f15 = df_AC_RT_GRDel_M4_f15[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f15 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15]
Conct_AC_RT_GRDel_f1_f15 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f15)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_15_df17_GRdel = filtr_15_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f15_Revenu_GRDel = pd.DataFrame(filtr_15_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f15_Revenu_GRDel['Percent-2017'] = (dfd17_f15_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f15_Revenu_GRDel['Percent-2017'] = dfd17_f15_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f15_Revenu_GRDel['7DEvolution-2017'] = dfd17_f15_Revenu_GRDel['Total-2017'] - dfd17_f14_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f15_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_15_df18_GRdel = filtr_15_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f15_Revenu_GRDel = pd.DataFrame(filtr_15_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f15_Revenu_GRDel['Percent-2018'] = (dfd18_f15_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f15_Revenu_GRDel['Percent-2018'] = dfd18_f15_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f15_Revenu_GRDel['7DEvolution-2018'] = dfd18_f15_Revenu_GRDel['Total-2018'] - dfd18_f14_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f15_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_15_df19_GRdel = filtr_15_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f15_Revenu_GRDel = pd.DataFrame(filtr_15_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f15_Revenu_GRDel['Percent-2019'] = (dfd19_f15_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f15_Revenu_GRDel['Percent-2019'] = dfd19_f15_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f15_Revenu_GRDel['7DEvolution-2019'] = dfd19_f15_Revenu_GRDel['Total-2019'] - dfd19_f14_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f15_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_15_df21_GRdel = filtr_15_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f15_Revenu_GRDel = pd.DataFrame(filtr_15_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f15_Revenu_GRDel['Percent-2021'] = (dfd21_f15_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f15_Revenu_GRDel['Percent-2021'] = dfd21_f15_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f15_Revenu_GRDel['7DEvolution-2021'] = dfd21_f15_Revenu_GRDel['Total-2021'] - dfd21_f14_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f15_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_15_df22_GRdel = filtr_15_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f15_Revenu_GRDel = pd.DataFrame(filtr_15_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f15_Revenu_GRDel['Percent-2022'] = (dfd22_f15_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f15_Revenu_GRDel['Percent-2022'] = dfd22_f15_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f15_Revenu_GRDel['7DEvolution-2022'] = dfd22_f15_Revenu_GRDel['Total-2022'] - dfd22_f14_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f15_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_15_df23_GRdel = filtr_15_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f15_Revenu_GRDel = pd.DataFrame(filtr_15_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f15_Revenu_GRDel['Percent-2023'] = (dfd23_f15_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f15_Revenu_GRDel['Percent-2023'] = dfd23_f15_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f15_Revenu_GRDel['7DEvolution-2023'] = dfd23_f15_Revenu_GRDel['Total-2023'] - dfd23_f14_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f15_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f15_Revenu_Evlt_GRDel = pd.DataFrame(filtr_15_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f15_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f15_Revenu_GRDel['Total-2023'] - dfd19_f15_Revenu_GRDel['Total-2019'])/ dfd19_f15_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f15_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f15_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f15_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f15 = pd.DataFrame(pd.merge(dfd17_f15_Revenu_GRDel, dfd18_f15_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f15 = pd.DataFrame(pd.merge(dfd19_f15_Revenu_GRDel, dfd21_f15_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f15 = pd.DataFrame(pd.merge(dfd22_f15_Revenu_GRDel, dfd23_f15_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f15 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f15, df_Revenu_GRDel_2_f15, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_15_f15 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f15, df_Revenu_GRDel_3_f15, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f15 = pd.DataFrame(pd.merge(df_Revenu_GRDel_15_f15, dfd23_f15_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f15 = df_Revenu_GRDel_f15[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f15 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15]
Conct_RV_GRDel_f1_f15 = pd.concat(ConcatFra_RV_GRDel_f1_f15)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f15_Profile_count = pd.DataFrame(filtr_15_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f15_Profile_count = dfd17_f15_Profile_count.fillna('Unknown')
dfd17_f15_Profile_count['Percent-2017'] = (dfd17_f15_Profile_count['Total-2017'] / dfd17_f15_Profile_count['Total-2017'].sum()) * 100
dfd17_f15_Profile_count['Percent-2017'] = dfd17_f15_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f15_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f15_Profile_count = pd.DataFrame(filtr_15_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f15_Profile_count = dfd18_f15_Profile_count.fillna('Unknown')
dfd18_f15_Profile_count['Percent-2018'] = (dfd18_f15_Profile_count['Total-2018'] / dfd18_f15_Profile_count['Total-2018'].sum()) * 100
dfd18_f15_Profile_count['Percent-2018'] = dfd18_f15_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f15_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f15_Profile_count = pd.DataFrame(filtr_15_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f15_Profile_count = dfd19_f15_Profile_count.fillna('Unknown')
dfd19_f15_Profile_count['Percent-2019'] = (dfd19_f15_Profile_count['Total-2019'] / dfd19_f15_Profile_count['Total-2019'].sum()) * 100
dfd19_f15_Profile_count['Percent-2019'] = dfd19_f15_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f15_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f15_Profile_count = pd.DataFrame(filtr_15_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f15_Profile_count = dfd21_f15_Profile_count.fillna('Unknown')
dfd21_f15_Profile_count['Percent-2021'] = (dfd21_f15_Profile_count['Total-2021'] / dfd21_f15_Profile_count['Total-2021'].sum()) * 100
dfd21_f15_Profile_count['Percent-2021'] = dfd21_f15_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f15_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f15_Profile_count = pd.DataFrame(filtr_15_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f15_Profile_count = dfd22_f15_Profile_count.fillna('Unknown')
dfd22_f15_Profile_count['Percent-2022'] = (dfd22_f15_Profile_count['Total-2022'] / dfd22_f15_Profile_count['Total-2022'].sum()) * 100
dfd22_f15_Profile_count['Percent-2022'] = dfd22_f15_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f15_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_Profile_count = pd.DataFrame(filtr_15_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f15_Profile_count = dfd23_f15_Profile_count.fillna('Unknown')
dfd23_f15_Profile_count['Percent-2023'] = (dfd23_f15_Profile_count['Total-2023'] / dfd23_f15_Profile_count['Total-2023'].sum()) * 100
dfd23_f15_Profile_count['Percent-2023'] = dfd23_f15_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f15_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f15 = pd.DataFrame(pd.merge(dfd17_f15_Profile_count, dfd18_f15_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f15 = pd.DataFrame(pd.merge(dfd19_f15_Profile_count, dfd21_f15_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f15 = pd.DataFrame(pd.merge(dfd22_f15_Profile_count, dfd23_f15_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f15 = pd.DataFrame(pd.merge(df_Profile_Count_1_f15, df_Profile_Count_2_f15, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f15 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f15, df_Profile_Count_3_f15, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f15 = df_Profile_Count_m2_f15.append(df_Profile_Count_m2_f15.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f15['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f15_Pass_count = pd.DataFrame(filtr_15_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f15_Pass_count = dfd17_f15_Pass_count.fillna('Unknown')
dfd17_f15_Pass_count['Percent-2017'] = (dfd17_f15_Pass_count['Total-2017'] / dfd17_f15_Pass_count['Total-2017'].sum()) * 100
dfd17_f15_Pass_count['Percent-2017'] = dfd17_f15_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f15_Pass_count = pd.DataFrame(filtr_15_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f15_Pass_count = dfd18_f15_Pass_count.fillna('Unknown')
dfd18_f15_Pass_count['Percent-2018'] = (dfd18_f15_Pass_count['Total-2018'] / dfd18_f15_Pass_count['Total-2018'].sum()) * 100
dfd18_f15_Pass_count['Percent-2018'] = dfd18_f15_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f15_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f15_Pass_count = pd.DataFrame(filtr_15_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f15_Pass_count = dfd19_f15_Pass_count.fillna('Unknown')
dfd19_f15_Pass_count['Percent-2019'] = (dfd19_f15_Pass_count['Total-2019'] / dfd19_f15_Pass_count['Total-2019'].sum()) * 100
dfd19_f15_Pass_count['Percent-2019'] = dfd19_f15_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f15_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f15_Pass_count = pd.DataFrame(filtr_15_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f15_Pass_count = dfd21_f15_Pass_count.fillna('Unknown')
dfd21_f15_Pass_count['Percent-2021'] = (dfd21_f15_Pass_count['Total-2021'] / dfd21_f15_Pass_count['Total-2021'].sum()) * 100
dfd21_f15_Pass_count['Percent-2021'] = dfd21_f15_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f15_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f15_Pass_count = pd.DataFrame(filtr_15_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f15_Pass_count = dfd22_f15_Pass_count.fillna('Unknown')
dfd22_f15_Pass_count['Percent-2022'] = (dfd22_f15_Pass_count['Total-2022'] / dfd22_f15_Pass_count['Total-2022'].sum()) * 100
dfd22_f15_Pass_count['Percent-2022'] = dfd22_f15_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f15_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_Pass_count = pd.DataFrame(filtr_15_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f15_Pass_count = dfd23_f15_Pass_count.fillna('Unknown')
dfd23_f15_Pass_count['Percent-2023'] = (dfd23_f15_Pass_count['Total-2023'] / dfd23_f15_Pass_count['Total-2023'].sum()) * 100
dfd23_f15_Pass_count['Percent-2023'] = dfd23_f15_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f15_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f15 = pd.DataFrame(pd.merge(dfd17_f15_Pass_count, dfd18_f15_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f15 = pd.DataFrame(pd.merge(dfd19_f15_Pass_count, dfd21_f15_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f15 = pd.DataFrame(pd.merge(dfd22_f15_Pass_count, dfd23_f15_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f15 = pd.DataFrame(pd.merge(df_Pass_Count_1_f15, df_Pass_Count_2_f15, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f15 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f15, df_Pass_Count_3_f15, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f15 = df_Pass_Count_m2_f15.append(df_Pass_Count_m2_f15.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f15['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f15_Attendees_Country_count = pd.DataFrame(filtr_15_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f15_Attendees_Country_count = dfd17_f15_Attendees_Country_count.fillna('Unknown')
dfd17_f15_Attendees_Country_count['Percent-2017'] = (dfd17_f15_Attendees_Country_count['Total-2017'] / dfd17_f15_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f15_Attendees_Country_count['Percent-2017'] = dfd17_f15_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f15_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f15_Attendees_Country_count = pd.DataFrame(filtr_15_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f15_Attendees_Country_count = dfd18_f15_Attendees_Country_count.fillna('Unknown')
dfd18_f15_Attendees_Country_count['Percent-2018'] = (dfd18_f15_Attendees_Country_count['Total-2018'] / dfd18_f15_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f15_Attendees_Country_count['Percent-2018'] = dfd18_f15_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f15_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f15_Attendees_Country_count = pd.DataFrame(filtr_15_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f15_Attendees_Country_count = dfd19_f15_Attendees_Country_count.fillna('Unknown')
dfd19_f15_Attendees_Country_count['Percent-2019'] = (dfd19_f15_Attendees_Country_count['Total-2019'] / dfd19_f15_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f15_Attendees_Country_count['Percent-2019'] = dfd19_f15_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f15_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f15_Attendees_Country_count = pd.DataFrame(filtr_15_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f15_Attendees_Country_count = dfd21_f15_Attendees_Country_count.fillna('Unknown')
dfd21_f15_Attendees_Country_count['Percent-2021'] = (dfd21_f15_Attendees_Country_count['Total-2021'] / dfd21_f15_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f15_Attendees_Country_count['Percent-2021'] = dfd21_f15_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f15_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f15_Attendees_Country_count = pd.DataFrame(filtr_15_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f15_Attendees_Country_count = dfd22_f15_Attendees_Country_count.fillna('Unknown')
dfd22_f15_Attendees_Country_count['Percent-2022'] = (dfd22_f15_Attendees_Country_count['Total-2022'] / dfd22_f15_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f15_Attendees_Country_count['Percent-2022'] = dfd22_f15_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f15_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_Attendees_Country_count = pd.DataFrame(filtr_15_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f15_Attendees_Country_count = dfd23_f15_Attendees_Country_count.fillna('Unknown')
dfd23_f15_Attendees_Country_count['Percent-2023'] = (dfd23_f15_Attendees_Country_count['Total-2023'] / dfd23_f15_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f15_Attendees_Country_count['Percent-2023'] = dfd23_f15_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f15_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f15 = pd.DataFrame(pd.merge(dfd17_f15_Attendees_Country_count, dfd18_f15_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f15 = pd.DataFrame(pd.merge(dfd19_f15_Attendees_Country_count, dfd21_f15_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f15 = pd.DataFrame(pd.merge(dfd22_f15_Attendees_Country_count, dfd23_f15_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f15 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f15, dfAttendees_Country_Count_2_f15, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f15.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f15 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f15, dfAttendees_Country_Count_3_f15, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f15 = dfAttendees_Country_Count_m2_f15.append(dfAttendees_Country_Count_m2_f15.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f15['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f15_ATTENDEES_AREAS_count = pd.DataFrame(filtr_15_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f15_ATTENDEES_AREAS_count = dfd17_f15_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f15_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f15_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f15_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f15_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f15_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f15_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f15_ATTENDEES_AREAS_count = pd.DataFrame(filtr_15_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f15_ATTENDEES_AREAS_count = dfd18_f15_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f15_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f15_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f15_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f15_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f15_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f15_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f15_ATTENDEES_AREAS_count = pd.DataFrame(filtr_15_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f15_ATTENDEES_AREAS_count = dfd19_f15_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f15_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f15_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f15_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f15_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f15_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f15_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f15_ATTENDEES_AREAS_count = pd.DataFrame(filtr_15_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f15_ATTENDEES_AREAS_count = dfd21_f15_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f15_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f15_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f15_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f15_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f15_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f15_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f15_ATTENDEES_AREAS_count = pd.DataFrame(filtr_15_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f15_ATTENDEES_AREAS_count = dfd22_f15_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f15_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f15_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f15_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f15_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f15_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f15_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_ATTENDEES_AREAS_count = pd.DataFrame(filtr_15_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f15_ATTENDEES_AREAS_count = dfd23_f15_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f15_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f15_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f15_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f15_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f15_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f15_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f15 = pd.DataFrame(pd.merge(dfd17_f15_ATTENDEES_AREAS_count, dfd18_f15_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f15 = pd.DataFrame(pd.merge(dfd19_f15_ATTENDEES_AREAS_count, dfd21_f15_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f15 = pd.DataFrame(pd.merge(dfd22_f15_ATTENDEES_AREAS_count, dfd23_f15_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f15.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f15 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f15, df_ATTENDEES_AREAS_count_2_f15, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f15 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f15, df_ATTENDEES_AREAS_count_3_f15, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f15 = df_ATTENDEES_AREAS_count_m2_f15.append(df_ATTENDEES_AREAS_count_m2_f15.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f15['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f15_Attendees_Specialty_count = pd.DataFrame(filtr_15_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f15_Attendees_Specialty_count = dfd17_f15_Attendees_Specialty_count.fillna('Unknown')
dfd17_f15_Attendees_Specialty_count['Percent-2017'] = (dfd17_f15_Attendees_Specialty_count['Total-2017'] / dfd17_f15_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f15_Attendees_Specialty_count['Percent-2017'] = dfd17_f15_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f15_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f15_Attendees_Specialty_count = pd.DataFrame(filtr_15_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f15_Attendees_Specialty_count = dfd18_f15_Attendees_Specialty_count.fillna('Unknown')
dfd18_f15_Attendees_Specialty_count['Percent-2018'] = (dfd18_f15_Attendees_Specialty_count['Total-2018'] / dfd18_f15_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f15_Attendees_Specialty_count['Percent-2018'] = dfd18_f15_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f15_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f15_Attendees_Specialty_count = pd.DataFrame(filtr_15_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f15_Attendees_Specialty_count = dfd19_f15_Attendees_Specialty_count.fillna('Unknown')
dfd19_f15_Attendees_Specialty_count['Percent-2019'] = (dfd19_f15_Attendees_Specialty_count['Total-2019'] / dfd19_f15_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f15_Attendees_Specialty_count['Percent-2019'] = dfd19_f15_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f15_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f15_Attendees_Specialty_count = pd.DataFrame(filtr_15_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f15_Attendees_Specialty_count = dfd21_f15_Attendees_Specialty_count.fillna('Unknown')
dfd21_f15_Attendees_Specialty_count['Percent-2021'] = (dfd21_f15_Attendees_Specialty_count['Total-2021'] / dfd21_f15_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f15_Attendees_Specialty_count['Percent-2021'] = dfd21_f15_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f15_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f15_Attendees_Specialty_count = pd.DataFrame(filtr_15_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f15_Attendees_Specialty_count = dfd22_f15_Attendees_Specialty_count.fillna('Unknown')
dfd22_f15_Attendees_Specialty_count['Percent-2022'] = (dfd22_f15_Attendees_Specialty_count['Total-2022'] / dfd22_f15_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f15_Attendees_Specialty_count['Percent-2022'] = dfd22_f15_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f15_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f15_Attendees_Specialty_count = pd.DataFrame(filtr_15_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f15_Attendees_Specialty_count = dfd23_f15_Attendees_Specialty_count.fillna('Unknown')
dfd23_f15_Attendees_Specialty_count['Percent-2023'] = (dfd23_f15_Attendees_Specialty_count['Total-2023'] / dfd23_f15_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f15_Attendees_Specialty_count['Percent-2023'] = dfd23_f15_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f15_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f15 = pd.DataFrame(pd.merge(dfd17_f15_Attendees_Specialty_count, dfd18_f15_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f15 = pd.DataFrame(pd.merge(dfd19_f15_Attendees_Specialty_count, dfd21_f15_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f15 = pd.DataFrame(pd.merge(dfd22_f15_Attendees_Specialty_count, dfd23_f15_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f15 = pd.DataFrame(pd.merge(df_Specialty_count_1_f15, df_Specialty_count_2_f15, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f15.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f15 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f15, df_Specialty_count_3_f15, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f15 = df_Specialty_count_m2_f15.append(df_Specialty_count_m2_f15.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f15['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f15['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f15['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f15 = Concat_Registrations_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f15['Total-2017'] = Concat_Registrations_count_f1_f15['Total-2017'].astype(int)
Concat_Registrations_count_f1_f15['Percent-2017'] = Concat_Registrations_count_f1_f15['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f15['7DEvolution-2017'] = Concat_Registrations_count_f1_f15['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f15['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f15['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f15 = Concat_Registrations_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f15['Total-2018'] = Concat_Registrations_count_f1_f15['Total-2018'].astype(int)
Concat_Registrations_count_f1_f15['Percent-2018'] = Concat_Registrations_count_f1_f15['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f15['7DEvolution-2018'] = Concat_Registrations_count_f1_f15['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f15['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f15['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f15 = Concat_Registrations_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f15['Total-2019'] = Concat_Registrations_count_f1_f15['Total-2019'].astype(int)
Concat_Registrations_count_f1_f15['Percent-2019'] = Concat_Registrations_count_f1_f15['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f15['7DEvolution-2019'] = Concat_Registrations_count_f1_f15['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f15['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f15['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f15 = Concat_Registrations_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f15['Total-2021'] = Concat_Registrations_count_f1_f15['Total-2021'].astype(int)
Concat_Registrations_count_f1_f15['Percent-2021'] = Concat_Registrations_count_f1_f15['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f15['7DEvolution-2021'] = Concat_Registrations_count_f1_f15['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f15['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f15['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f15 = Concat_Registrations_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f15['Total-2022'] = Concat_Registrations_count_f1_f15['Total-2022'].astype(int)
Concat_Registrations_count_f1_f15['Percent-2022'] = Concat_Registrations_count_f1_f15['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f15['7DEvolution-2022'] = Concat_Registrations_count_f1_f15['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f15['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f15['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f15 = Concat_Registrations_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f15['Total-2023'] = Concat_Registrations_count_f1_f15['Total-2023'].astype(int)
Concat_Registrations_count_f1_f15['Percent-2023'] = Concat_Registrations_count_f1_f15['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f15['7DEvolution-2023'] = Concat_Registrations_count_f1_f15['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f15['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f15['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f15 = Concat_ACQRET_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f15['Total-2018'] = Concat_ACQRET_count_f1_f15['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f15['ACQ-2018'] = Concat_ACQRET_count_f1_f15['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f15['Percent-2018'] = Concat_ACQRET_count_f1_f15['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f15['RET-2018'] = Concat_ACQRET_count_f1_f15['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f15['Percnt-2018'] = Concat_ACQRET_count_f1_f15['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f15['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f15['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f15 = Concat_ACQRET_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f15['Total-2019'] = Concat_ACQRET_count_f1_f15['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f15['ACQ-2019'] = Concat_ACQRET_count_f1_f15['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f15['Percent-2019'] = Concat_ACQRET_count_f1_f15['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f15['RET-2019'] = Concat_ACQRET_count_f1_f15['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f15['Percnt-2019'] = Concat_ACQRET_count_f1_f15['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f15['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f15['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f15 = Concat_ACQRET_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f15['Total-2021'] = Concat_ACQRET_count_f1_f15['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f15['ACQ-2021'] = Concat_ACQRET_count_f1_f15['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f15['Percent-2021'] = Concat_ACQRET_count_f1_f15['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f15['RET-2021'] = Concat_ACQRET_count_f1_f15['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f15['Percnt-2021'] = Concat_ACQRET_count_f1_f15['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f15['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f15['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f15 = Concat_ACQRET_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f15['Total-2022'] = Concat_ACQRET_count_f1_f15['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f15['ACQ-2022'] = Concat_ACQRET_count_f1_f15['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f15['Percent-2022'] = Concat_ACQRET_count_f1_f15['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f15['RET-2022'] = Concat_ACQRET_count_f1_f15['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f15['Percnt-2022'] = Concat_ACQRET_count_f1_f15['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f15['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f15['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f15 = Concat_ACQRET_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f15['Total-2023'] = Concat_ACQRET_count_f1_f15['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f15['ACQ-2023'] = Concat_ACQRET_count_f1_f15['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f15['Percent-2023'] = Concat_ACQRET_count_f1_f15['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f15['RET-2023'] = Concat_ACQRET_count_f1_f15['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f15['Percnt-2023'] = Concat_ACQRET_count_f1_f15['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f15['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f15['Total-2017'],errors='coerce')
Concat_REV_count_f1_f15 = Concat_REV_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f15['Total-2017'] = Concat_REV_count_f1_f15['Total-2017'].astype(int)
Concat_REV_count_f1_f15['Percent-2017'] = Concat_REV_count_f1_f15['Percent-2017'].astype(float)
Concat_REV_count_f1_f15['7DEvolution-2017'] = Concat_REV_count_f1_f15['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f15['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f15['Total-2018'],errors='coerce')
Concat_REV_count_f1_f15 = Concat_REV_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f15['Total-2018'] = Concat_REV_count_f1_f15['Total-2018'].astype(int)
Concat_REV_count_f1_f15['Percent-2018'] = Concat_REV_count_f1_f15['Percent-2018'].astype(float)
Concat_REV_count_f1_f15['7DEvolution-2018'] = Concat_REV_count_f1_f15['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f15['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f15['Total-2019'],errors='coerce')
Concat_REV_count_f1_f15 = Concat_REV_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f15['Total-2019'] = Concat_REV_count_f1_f15['Total-2019'].astype(int)
Concat_REV_count_f1_f15['Percent-2019'] = Concat_REV_count_f1_f15['Percent-2019'].astype(float)
Concat_REV_count_f1_f15['7DEvolution-2019'] = Concat_REV_count_f1_f15['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f15['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f15['Total-2022'],errors='coerce')
Concat_REV_count_f1_f15 = Concat_REV_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f15['Total-2022'] = Concat_REV_count_f1_f15['Total-2022'].astype(int)
Concat_REV_count_f1_f15['Percent-2022'] = Concat_REV_count_f1_f15['Percent-2022'].astype(float)
Concat_REV_count_f1_f15['7DEvolution-2022'] = Concat_REV_count_f1_f15['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f15['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f15['Total-2023'],errors='coerce')
Concat_REV_count_f1_f15 = Concat_REV_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f15['Total-2023'] = Concat_REV_count_f1_f15['Total-2023'].astype(int)
Concat_REV_count_f1_f15['Percent-2023'] = Concat_REV_count_f1_f15['Percent-2023'].astype(float)
Concat_REV_count_f1_f15['7DEvolution-2023'] = Concat_REV_count_f1_f15['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f15['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f15['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f15 = Concat_RegGRDel_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f15['Total-2017'] = Concat_RegGRDel_count_f1_f15['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f15['Percent-2017'] = Concat_RegGRDel_count_f1_f15['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f15['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f15['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f15['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f15['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f15 = Concat_RegGRDel_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f15['Total-2018'] = Concat_RegGRDel_count_f1_f15['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f15['Percent-2018'] = Concat_RegGRDel_count_f1_f15['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f15['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f15['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f15['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f15['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f15 = Concat_RegGRDel_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f15['Total-2019'] = Concat_RegGRDel_count_f1_f15['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f15['Percent-2019'] = Concat_RegGRDel_count_f1_f15['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f15['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f15['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f15['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f15['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f15 = Concat_RegGRDel_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f15['Total-2021'] = Concat_RegGRDel_count_f1_f15['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f15['Percent-2021'] = Concat_RegGRDel_count_f1_f15['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f15['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f15['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f15['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f15['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f15 = Concat_RegGRDel_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f15['Total-2022'] = Concat_RegGRDel_count_f1_f15['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f15['Percent-2022'] = Concat_RegGRDel_count_f1_f15['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f15['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f15['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f15['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f15['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f15 = Concat_RegGRDel_count_f1_f15.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f15['Total-2023'] = Concat_RegGRDel_count_f1_f15['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f15['Percent-2023'] = Concat_RegGRDel_count_f1_f15['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f15['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f15['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f15['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f15['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f15 = Conct_AC_RT_GRDel_f1_f15.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f15['Total-2018'] = Conct_AC_RT_GRDel_f1_f15['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f15['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f15['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f15['Percent-2018'] = Conct_AC_RT_GRDel_f1_f15['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f15['RET-2018'] = Conct_AC_RT_GRDel_f1_f15['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f15['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f15['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f15['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f15['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f15 = Conct_AC_RT_GRDel_f1_f15.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f15['Total-2019'] = Conct_AC_RT_GRDel_f1_f15['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f15['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f15['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f15['Percent-2019'] = Conct_AC_RT_GRDel_f1_f15['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f15['RET-2019'] = Conct_AC_RT_GRDel_f1_f15['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f15['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f15['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f15['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f15['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f15 = Conct_AC_RT_GRDel_f1_f15.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f15['Total-2021'] = Conct_AC_RT_GRDel_f1_f15['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f15['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f15['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f15['Percent-2021'] = Conct_AC_RT_GRDel_f1_f15['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f15['RET-2021'] = Conct_AC_RT_GRDel_f1_f15['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f15['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f15['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f15['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f15['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f15 = Conct_AC_RT_GRDel_f1_f15.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f15['Total-2022'] = Conct_AC_RT_GRDel_f1_f15['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f15['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f15['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f15['Percent-2022'] = Conct_AC_RT_GRDel_f1_f15['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f15['RET-2022'] = Conct_AC_RT_GRDel_f1_f15['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f15['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f15['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f15['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f15['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f15 = Conct_AC_RT_GRDel_f1_f15.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f15['Total-2023'] = Conct_AC_RT_GRDel_f1_f15['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f15['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f15['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f15['Percent-2023'] = Conct_AC_RT_GRDel_f1_f15['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f15['RET-2023'] = Conct_AC_RT_GRDel_f1_f15['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f15['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f15['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f15['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f15['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f15 = Conct_RV_GRDel_f1_f15.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f15['Total-2017'] = Conct_RV_GRDel_f1_f15['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f15['Percent-2017'] = Conct_RV_GRDel_f1_f15['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f15['7DEvolution-2017'] = Conct_RV_GRDel_f1_f15['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f15['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f15['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f15 = Conct_RV_GRDel_f1_f15.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f15['Total-2018'] = Conct_RV_GRDel_f1_f15['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f15['Percent-2018'] = Conct_RV_GRDel_f1_f15['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f15['7DEvolution-2018'] = Conct_RV_GRDel_f1_f15['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f15['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f15['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f15 = Conct_RV_GRDel_f1_f15.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f15['Total-2019'] = Conct_RV_GRDel_f1_f15['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f15['Percent-2019'] = Conct_RV_GRDel_f1_f15['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f15['7DEvolution-2019'] = Conct_RV_GRDel_f1_f15['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f15['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f15['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f15 = Conct_RV_GRDel_f1_f15.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f15['Total-2022'] = Conct_RV_GRDel_f1_f15['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f15['Percent-2022'] = Conct_RV_GRDel_f1_f15['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f15['7DEvolution-2022'] = Conct_RV_GRDel_f1_f15['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f15['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f15['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f15 = Conct_RV_GRDel_f1_f15.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f15['Total-2023'] = Conct_RV_GRDel_f1_f15['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f15['Percent-2023'] = Conct_RV_GRDel_f1_f15['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f15['7DEvolution-2023'] = Conct_RV_GRDel_f1_f15['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f15['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f15['Total-2017'],errors='coerce')
df_Profile_Count_m2_f15 = df_Profile_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f15['Total-2017'] = df_Profile_Count_m2_f15['Total-2017'].astype(int)
df_Profile_Count_m2_f15['Percent-2017'] = df_Profile_Count_m2_f15['Percent-2017'].astype(float)

df_Profile_Count_m2_f15['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f15['Total-2018'],errors='coerce')
df_Profile_Count_m2_f15 = df_Profile_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f15['Total-2018'] = df_Profile_Count_m2_f15['Total-2018'].astype(int)
df_Profile_Count_m2_f15['Percent-2018'] = df_Profile_Count_m2_f15['Percent-2018'].astype(float)

df_Profile_Count_m2_f15['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f15['Total-2019'],errors='coerce')
df_Profile_Count_m2_f15 = df_Profile_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f15['Total-2019'] = df_Profile_Count_m2_f15['Total-2019'].astype(int)
df_Profile_Count_m2_f15['Percent-2019'] = df_Profile_Count_m2_f15['Percent-2019'].astype(float)

df_Profile_Count_m2_f15['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f15['Total-2021'],errors='coerce')
df_Profile_Count_m2_f15 = df_Profile_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f15['Total-2021'] = df_Profile_Count_m2_f15['Total-2021'].astype(int)
df_Profile_Count_m2_f15['Percent-2021'] = df_Profile_Count_m2_f15['Percent-2021'].astype(float)

df_Profile_Count_m2_f15['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f15['Total-2022'],errors='coerce')
df_Profile_Count_m2_f15 = df_Profile_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f15['Total-2022'] = df_Profile_Count_m2_f15['Total-2022'].astype(int)
df_Profile_Count_m2_f15['Percent-2022'] = df_Profile_Count_m2_f15['Percent-2022'].astype(float)

df_Profile_Count_m2_f15['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f15['Total-2023'],errors='coerce')
df_Profile_Count_m2_f15 = df_Profile_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f15['Total-2023'] = df_Profile_Count_m2_f15['Total-2023'].astype(int)
df_Profile_Count_m2_f15['Percent-2023'] = df_Profile_Count_m2_f15['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f15['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f15['Total-2017'],errors='coerce')
df_Pass_Count_m2_f15 = df_Pass_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f15['Total-2017'] = df_Pass_Count_m2_f15['Total-2017'].astype(int)
df_Pass_Count_m2_f15['Percent-2017'] = df_Pass_Count_m2_f15['Percent-2017'].astype(float)

df_Pass_Count_m2_f15['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f15['Total-2018'],errors='coerce')
df_Pass_Count_m2_f15 = df_Pass_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f15['Total-2018'] = df_Pass_Count_m2_f15['Total-2018'].astype(int)
df_Pass_Count_m2_f15['Percent-2018'] = df_Pass_Count_m2_f15['Percent-2018'].astype(float)

df_Pass_Count_m2_f15['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f15['Total-2019'],errors='coerce')
df_Pass_Count_m2_f15 = df_Pass_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f15['Total-2019'] = df_Pass_Count_m2_f15['Total-2019'].astype(int)
df_Pass_Count_m2_f15['Percent-2019'] = df_Pass_Count_m2_f15['Percent-2019'].astype(float)

df_Pass_Count_m2_f15['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f15['Total-2021'],errors='coerce')
df_Pass_Count_m2_f15 = df_Pass_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f15['Total-2021'] = df_Pass_Count_m2_f15['Total-2021'].astype(int)
df_Pass_Count_m2_f15['Percent-2021'] = df_Pass_Count_m2_f15['Percent-2021'].astype(float)

df_Pass_Count_m2_f15['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f15['Total-2022'],errors='coerce')
df_Pass_Count_m2_f15 = df_Pass_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f15['Total-2022'] = df_Pass_Count_m2_f15['Total-2022'].astype(int)
df_Pass_Count_m2_f15['Percent-2022'] = df_Pass_Count_m2_f15['Percent-2022'].astype(float)

df_Pass_Count_m2_f15['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f15['Total-2023'],errors='coerce')
df_Pass_Count_m2_f15 = df_Pass_Count_m2_f15.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f15['Total-2023'] = df_Pass_Count_m2_f15['Total-2023'].astype(int)
df_Pass_Count_m2_f15['Percent-2023'] = df_Pass_Count_m2_f15['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f15['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f15['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f15 = dfAttendees_Country_Count_m2_f15.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f15['Total-2017'] = dfAttendees_Country_Count_m2_f15['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f15['Percent-2017'] = dfAttendees_Country_Count_m2_f15['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f15['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f15['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f15 = dfAttendees_Country_Count_m2_f15.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f15['Total-2018'] = dfAttendees_Country_Count_m2_f15['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f15['Percent-2018'] = dfAttendees_Country_Count_m2_f15['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f15['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f15['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f15 = dfAttendees_Country_Count_m2_f15.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f15['Total-2019'] = dfAttendees_Country_Count_m2_f15['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f15['Percent-2019'] = dfAttendees_Country_Count_m2_f15['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f15['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f15['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f15 = dfAttendees_Country_Count_m2_f15.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f15['Total-2021'] = dfAttendees_Country_Count_m2_f15['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f15['Percent-2021'] = dfAttendees_Country_Count_m2_f15['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f15['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f15['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f15 = dfAttendees_Country_Count_m2_f15.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f15['Total-2022'] = dfAttendees_Country_Count_m2_f15['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f15['Percent-2022'] = dfAttendees_Country_Count_m2_f15['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f15['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f15['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f15 = dfAttendees_Country_Count_m2_f15.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f15['Total-2023'] = dfAttendees_Country_Count_m2_f15['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f15['Percent-2023'] = dfAttendees_Country_Count_m2_f15['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f15['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f15['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f15 = df_ATTENDEES_AREAS_count_m2_f15.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f15['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f15['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f15['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f15['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f15['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f15['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f15 = df_ATTENDEES_AREAS_count_m2_f15.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f15['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f15['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f15['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f15['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f15['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f15['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f15 = df_ATTENDEES_AREAS_count_m2_f15.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f15['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f15['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f15['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f15['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f15['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f15['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f15 = df_ATTENDEES_AREAS_count_m2_f15.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f15['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f15['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f15['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f15['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f15['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f15['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f15 = df_ATTENDEES_AREAS_count_m2_f15.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f15['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f15['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f15['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f15['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f15['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f15['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f15 = df_ATTENDEES_AREAS_count_m2_f15.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f15['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f15['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f15['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f15['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f15['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f15['Total-2017'],errors='coerce')
df_Specialty_count_m2_f15 = df_Specialty_count_m2_f15.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f15['Total-2017'] = df_Specialty_count_m2_f15['Total-2017'].astype(int)
df_Specialty_count_m2_f15['Percent-2017'] = df_Specialty_count_m2_f15['Percent-2017'].astype(float)

df_Specialty_count_m2_f15['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f15['Total-2018'],errors='coerce')
df_Specialty_count_m2_f15 = df_Specialty_count_m2_f15.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f15['Total-2018'] = df_Specialty_count_m2_f15['Total-2018'].astype(int)
df_Specialty_count_m2_f15['Percent-2018'] = df_Specialty_count_m2_f15['Percent-2018'].astype(float)

df_Specialty_count_m2_f15['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f15['Total-2019'],errors='coerce')
df_Specialty_count_m2_f15 = df_Specialty_count_m2_f15.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f15['Total-2019'] = df_Specialty_count_m2_f15['Total-2019'].astype(int)
df_Specialty_count_m2_f15['Percent-2019'] = df_Specialty_count_m2_f15['Percent-2019'].astype(float)

df_Specialty_count_m2_f15['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f15['Total-2021'],errors='coerce')
df_Specialty_count_m2_f15 = df_Specialty_count_m2_f15.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f15['Total-2021'] = df_Specialty_count_m2_f15['Total-2021'].astype(int)
df_Specialty_count_m2_f15['Percent-2021'] = df_Specialty_count_m2_f15['Percent-2021'].astype(float)

df_Specialty_count_m2_f15['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f15['Total-2022'],errors='coerce')
df_Specialty_count_m2_f15 = df_Specialty_count_m2_f15.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f15['Total-2022'] = df_Specialty_count_m2_f15['Total-2022'].astype(int)
df_Specialty_count_m2_f15['Percent-2022'] = df_Specialty_count_m2_f15['Percent-2022'].astype(float)

df_Specialty_count_m2_f15['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f15['Total-2023'],errors='coerce')
df_Specialty_count_m2_f15 = df_Specialty_count_m2_f15.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f15['Total-2023'] = df_Specialty_count_m2_f15['Total-2023'].astype(int)
df_Specialty_count_m2_f15['Percent-2023'] = df_Specialty_count_m2_f15['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f15.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f15.dtypes)
#print(df_Specialty_count_m2_f15.dtypes)

#print(dfAttendees_Country_Count_m2_f15.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f15.dtypes)
#print(df_Specialty_count_m2_f15.dtypes)

# EXCEL FILE
writerf15 = pd.ExcelWriter(outputExcelFile_f15, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f15.to_excel\
    (writerf15, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f15.to_excel\
    (writerf15, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f15.to_excel\
    (writerf15, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f15.to_excel\
    (writerf15, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f15.to_excel\
    (writerf15, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f15.to_excel\
    (writerf15, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f15.to_excel\
    (writerf15, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f15.to_excel\
    (writerf15, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f15.to_excel\
    (writerf15, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f15.to_excel\
    (writerf15, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f15.to_excel\
    (writerf15, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf15.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f15)

workbook.save(outputExcelFile_f15)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 91 days**********************************************')
print('************************************End of 91 days**********************************************')
print('************************************End of 91 days**********************************************')
print('************************************End of 91 days**********************************************')
print('************************************End of 91 days**********************************************')
print('************************************End of 91 days**********************************************')
print('************************************End of 91 days**********************************************')
print('************************************End of 91 days**********************************************')
print('************************************End of 91 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f16_Registrations_count = pd.DataFrame(filter_16_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f16_Registrations_count = dfd17_f16_Registrations_count.fillna('Unknown')
dfd17_f16_Registrations_count['Percent-2017'] = (dfd17_f16_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f16_Registrations_count['Percent-2017'] = dfd17_f16_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f16_Registrations_count['7DEvolution-2017'] = dfd17_f16_Registrations_count['Total-2017'] - dfd17_f15_Registrations_count['Total-2017']
#print(tab(dfd17_f16_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f16_Registrations_count = pd.DataFrame(filter_16_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f16_Registrations_count = dfd18_f16_Registrations_count.fillna('Unknown')
dfd18_f16_Registrations_count['Percent-2018'] = (dfd18_f16_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f16_Registrations_count['Percent-2018'] = dfd18_f16_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f16_Registrations_count['7DEvolution-2018'] = dfd18_f16_Registrations_count['Total-2018'] - dfd18_f15_Registrations_count['Total-2018']
#print(tab(dfd18_f16_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f16_Registrations_count = pd.DataFrame(filter_16_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f16_Registrations_count = dfd19_f16_Registrations_count.fillna('Unknown')
dfd19_f16_Registrations_count['Percent-2019'] = (dfd19_f16_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f16_Registrations_count['Percent-2019'] = dfd19_f16_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f16_Registrations_count['7DEvolution-2019'] = dfd19_f16_Registrations_count['Total-2019'] - dfd19_f15_Registrations_count['Total-2019']
#print(tab(dfd19_f16_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f16_Registrations_count = pd.DataFrame(filter_16_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f16_Registrations_count = dfd21_f16_Registrations_count.fillna('Unknown')
dfd21_f16_Registrations_count['Percent-2021'] = (dfd21_f16_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f16_Registrations_count['Percent-2021'] = dfd21_f16_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f16_Registrations_count['7DEvolution-2021'] = dfd21_f16_Registrations_count['Total-2021'] - dfd21_f15_Registrations_count['Total-2021']
#print(tab(dfd21_f16_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f16_Registrations_count = pd.DataFrame(filter_16_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f16_Registrations_count = dfd22_f16_Registrations_count.fillna('Unknown')
dfd22_f16_Registrations_count['Percent-2022'] = (dfd22_f16_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f16_Registrations_count['Percent-2022'] = dfd22_f16_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f16_Registrations_count['7DEvolution-2022'] = dfd22_f16_Registrations_count['Total-2022'] - dfd22_f15_Registrations_count['Total-2022']
#print(tab(dfd22_f16_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_Registrations_count = pd.DataFrame(filter_16_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f16_Registrations_count = dfd23_f16_Registrations_count.fillna('Unknown')
dfd23_f16_Registrations_count['Percent-2023'] = (dfd23_f16_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f16_Registrations_count['Percent-2023'] = dfd23_f16_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f16_Registrations_count['7DEvolution-2023'] = dfd23_f16_Registrations_count['Total-2023'] - dfd23_f15_Registrations_count['Total-2023']
#print(tab(dfd23_f16_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f16_RegistrationsEvolution_count = pd.DataFrame(filter_16_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f16_RegistrationsEvolution_count = dfd23_f16_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f16_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f16_Registrations_count['Total-2023'] - dfd19_f16_Registrations_count['Total-2019'])/ dfd19_f16_Registrations_count['Total-2019'].sum()) * 100
dfd23_f16_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f16_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f16_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f16 = pd.DataFrame(pd.merge(dfd17_f16_Registrations_count, dfd18_f16_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f16 = pd.DataFrame(pd.merge(dfd19_f16_Registrations_count, dfd21_f16_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f16 = pd.DataFrame(pd.merge(dfd22_f16_Registrations_count, dfd23_f16_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f16 = pd.DataFrame(pd.merge(df_Registrations_count_1_f16, df_Registrations_count_2_f16, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f16 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f16, df_Registrations_count_3_f16, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f16 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f16, dfd23_f16_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f16 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16]
Concat_Registrations_count_f1_f16 = pd.concat(ConcatFrames_Registrations_count_f1_f16)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f16  = ConcatFrames_Registrations_count_f1_f16.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f16.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f16 = filter_16_df18[filter_16_df18['New customer'] == 1]
df_NewCustomer_df19_f16 = filter_16_df19[filter_16_df19['New customer'] == 1]
df_NewCustomer_df21_f16 = filter_16_df21[filter_16_df21['New customer'] == 1]
df_NewCustomer_df22_f16 = filter_16_df22[filter_16_df22['New customer'] == 1]
df_NewCustomer_df23_f16 = filter_16_df23[filter_16_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f16.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f16.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f16.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a16_ACQRET_count = pd.DataFrame(filter_16_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f16_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f16.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f16_ACQRET_count['Percent-2018'] = (dfd18_f16_ACQRET_count['ACQ-2018'] / dfd18_f16_Registrations_count['Total-2018'].sum()) * 100
dfd18_f16_ACQRET_count['Percent-2018'] = dfd18_f16_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f16_ACQRET_count['RET-2018'] = dfd18_a16_ACQRET_count['Total-2018'] - dfd18_f16_ACQRET_count['ACQ-2018']
dfd18_f16_ACQRET_count['Percnt-2018'] = (dfd18_f16_ACQRET_count['RET-2018'] / dfd18_a16_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f16_ACQRET_count['Percnt-2018'] = dfd18_f16_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f16_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a16_ACQRET_count = pd.DataFrame(filter_16_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f16_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f16.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f16_ACQRET_count['Percent-2019'] = (dfd19_f16_ACQRET_count['ACQ-2019'] / dfd19_f16_Registrations_count['Total-2019'].sum()) * 100
dfd19_f16_ACQRET_count['Percent-2019'] = dfd19_f16_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f16_ACQRET_count['RET-2019'] = dfd19_a16_ACQRET_count['Total-2019'] - dfd19_f16_ACQRET_count['ACQ-2019']
dfd19_f16_ACQRET_count['Percnt-2019'] = (dfd19_f16_ACQRET_count['RET-2019'] / dfd19_a16_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f16_ACQRET_count['Percnt-2019'] = dfd19_f16_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f16_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a16_ACQRET_count = pd.DataFrame(filter_16_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f16_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f16.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f16_ACQRET_count['Percent-2021'] = (dfd21_f16_ACQRET_count['ACQ-2021'] / dfd21_f16_Registrations_count['Total-2021'].sum()) * 100
dfd21_f16_ACQRET_count['Percent-2021'] = dfd21_f16_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f16_ACQRET_count['RET-2021'] = dfd21_a16_ACQRET_count['Total-2021'] - dfd21_f16_ACQRET_count['ACQ-2021']
dfd21_f16_ACQRET_count['Percnt-2021'] = (dfd21_f16_ACQRET_count['RET-2021'] / dfd21_a16_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f16_ACQRET_count['Percnt-2021'] = dfd21_f16_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f16_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a16_ACQRET_count = pd.DataFrame(filter_16_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f16_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f16.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f16_ACQRET_count['Percent-2022'] = (dfd22_f16_ACQRET_count['ACQ-2022'] / dfd22_f16_Registrations_count['Total-2022'].sum()) * 100
dfd22_f16_ACQRET_count['Percent-2022'] = dfd22_f16_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f16_ACQRET_count['RET-2022'] = dfd22_a16_ACQRET_count['Total-2022'] - dfd22_f16_ACQRET_count['ACQ-2022']
dfd22_f16_ACQRET_count['Percnt-2022'] = (dfd22_f16_ACQRET_count['RET-2022'] / dfd22_a16_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f16_ACQRET_count['Percnt-2022'] = dfd22_f16_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f16_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a16_ACQRET_count = pd.DataFrame(filter_16_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f16_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f16.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f16_ACQRET_count['Percent-2023'] = (dfd23_f16_ACQRET_count['ACQ-2023'] / dfd23_f16_Registrations_count['Total-2023'].sum()) * 100
dfd23_f16_ACQRET_count['Percent-2023'] = dfd23_f16_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f16_ACQRET_count['RET-2023'] = dfd23_a16_ACQRET_count['Total-2023'] - dfd23_f16_ACQRET_count['ACQ-2023']
dfd23_f16_ACQRET_count['Percnt-2023'] = (dfd23_f16_ACQRET_count['RET-2023'] / dfd23_a16_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f16_ACQRET_count['Percnt-2023'] = dfd23_f16_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f16_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f16 = pd.DataFrame(pd.merge(dfd18_a16_ACQRET_count, dfd18_f16_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f16 = pd.DataFrame(pd.merge(dfd19_a16_ACQRET_count, dfd19_f16_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f16 = pd.DataFrame(pd.merge(dfd21_a16_ACQRET_count, dfd21_f16_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f16 = pd.DataFrame(pd.merge(dfd22_a16_ACQRET_count, dfd22_f16_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_16_f16 = pd.DataFrame(pd.merge(dfd23_a16_ACQRET_count, dfd23_f16_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_16_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f16 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f16, df_ACQRET_count_2_f16, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f16 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f16, df_ACQRET_count_3_f16, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f16 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f16, df_ACQRET_count_4_f16, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f16 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f16, df_ACQRET_count_16_f16, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f16 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16]
Concat_ACQRET_count_f1_f16 = pd.concat(ConcatFrames_ACQRET_count_f1_f16)
#print(tab(Concat_ACQRET_count_f1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f16 = Concat_ACQRET_count_f1_f16[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f16_Revenue_calc = pd.DataFrame(filter_16_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f16_Revenue_calc['Percent-2017'] = (dfd17_f16_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f16_Revenue_calc['Percent-2017'] = dfd17_f16_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f16_Revenue_calc['7DEvolution-2017'] = dfd17_f16_Revenue_calc['Total-2017'] - dfd17_f15_Revenue_calc['Total-2017']
#print(tab(dfd17_f16_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f16_Revenue_calc = pd.DataFrame(filter_16_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f16_Revenue_calc['Percent-2018'] = (dfd18_f16_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f16_Revenue_calc['Percent-2018'] = dfd18_f16_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f16_Revenue_calc['7DEvolution-2018'] = dfd18_f16_Revenue_calc['Total-2018'] - dfd18_f15_Revenue_calc['Total-2018']
#print(tab(dfd18_f16_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f16_Revenue_calc = pd.DataFrame(filter_16_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f16_Revenue_calc['Percent-2019'] = (dfd19_f16_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f16_Revenue_calc['Percent-2019'] = dfd19_f16_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f16_Revenue_calc['7DEvolution-2019'] = dfd19_f16_Revenue_calc['Total-2019'] - dfd19_f15_Revenue_calc['Total-2019']
#print(tab(dfd19_f16_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f16_Revenue_calc = pd.DataFrame(filter_16_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f16_Revenue_calc['Percent-2021'] = (dfd21_f16_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f16_Revenue_calc['Percent-2021'] = dfd21_f16_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f16_Revenue_calc['7DEvolution-2021'] = dfd21_f16_Revenue_calc['Total-2021'] - dfd21_f15_Revenue_calc['Total-2021']
#print(tab(dfd21_f16_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f16_Revenue_calc = pd.DataFrame(filter_16_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f16_Revenue_calc['Percent-2022'] = (dfd22_f16_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f16_Revenue_calc['Percent-2022'] = dfd22_f16_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f16_Revenue_calc['7DEvolution-2022'] = dfd22_f16_Revenue_calc['Total-2022'] - dfd22_f15_Revenue_calc['Total-2022']
#print(tab(dfd22_f16_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_Revenue_calc = pd.DataFrame(filter_16_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f16_Revenue_calc['Percent-2023'] = (dfd23_f16_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f16_Revenue_calc['Percent-2023'] = dfd23_f16_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f16_Revenue_calc['7DEvolution-2023'] = dfd23_f16_Revenue_calc['Total-2023'] - dfd23_f15_Revenue_calc['Total-2023']
#print(tab(dfd23_f16_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f16_RevenueEvolution_calc = pd.DataFrame(filter_16_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f16_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f16_Revenue_calc['Total-2023'] - dfd19_f16_Revenue_calc['Total-2019'])/ dfd19_f16_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f16_RevenueEvolution_calc['Evolution-2023'] = dfd23_f16_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f16_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f16 = pd.DataFrame(pd.merge(dfd17_f16_Revenue_calc, dfd18_f16_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f16 = pd.DataFrame(pd.merge(dfd19_f16_Revenue_calc, dfd21_f16_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f16 = pd.DataFrame(pd.merge(dfd22_f16_Revenue_calc, dfd23_f16_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f16_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f16, df_Revenue_calc_2_f16, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f16Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f16_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f16_Evolution, df_Revenue_calc_3_f16, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f16Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f16 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f16_Evolution, dfd23_f16_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f16 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16]
Concat_REV_count_f1_f16 = pd.concat(ConcatFrames_REV_count_f1_f16)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f16_Registrations_GRDel = pd.DataFrame(filtr_16_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f16_Registrations_GRDel = dfd17_f16_Registrations_GRDel.fillna('Unknown')
dfd17_f16_Registrations_GRDel['Percent-2017'] = (dfd17_f16_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f16_Registrations_GRDel['Percent-2017'] = dfd17_f16_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f16_Registrations_GRDel['7DEvolution-2017'] = dfd17_f16_Registrations_GRDel['Total-2017'] - dfd17_f15_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f16_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f16_Registrations_GRDel = pd.DataFrame(filtr_16_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f16_Registrations_GRDel = dfd18_f16_Registrations_GRDel.fillna('Unknown')
dfd18_f16_Registrations_GRDel['Percent-2018'] = (dfd18_f16_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f16_Registrations_GRDel['Percent-2018'] = dfd18_f16_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f16_Registrations_GRDel['7DEvolution-2018'] = dfd18_f16_Registrations_GRDel['Total-2018'] - dfd18_f15_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f16_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f16_Registrations_GRDel = pd.DataFrame(filtr_16_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f16_Registrations_GRDel = dfd19_f16_Registrations_GRDel.fillna('Unknown')
dfd19_f16_Registrations_GRDel['Percent-2019'] = (dfd19_f16_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f16_Registrations_GRDel['Percent-2019'] = dfd19_f16_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f16_Registrations_GRDel['7DEvolution-2019'] = dfd19_f16_Registrations_GRDel['Total-2019'] - dfd19_f15_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f16_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f16_Registrations_GRDel = pd.DataFrame(filtr_16_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f16_Registrations_GRDel = dfd21_f16_Registrations_GRDel.fillna('Unknown')
dfd21_f16_Registrations_GRDel['Percent-2021'] = (dfd21_f16_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f16_Registrations_GRDel['Percent-2021'] = dfd21_f16_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f16_Registrations_GRDel['7DEvolution-2021'] = dfd21_f16_Registrations_GRDel['Total-2021'] - dfd21_f15_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f16_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f16_Registrations_GRDel = pd.DataFrame(filtr_16_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f16_Registrations_GRDel = dfd22_f16_Registrations_GRDel.fillna('Unknown')
dfd22_f16_Registrations_GRDel['Percent-2022'] = (dfd22_f16_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f16_Registrations_GRDel['Percent-2022'] = dfd22_f16_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f16_Registrations_GRDel['7DEvolution-2022'] = dfd22_f16_Registrations_GRDel['Total-2022'] - dfd22_f15_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f16_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_Registrations_GRDel = pd.DataFrame(filtr_16_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f16_Registrations_GRDel = dfd23_f16_Registrations_GRDel.fillna('Unknown')
dfd23_f16_Registrations_GRDel['Percent-2023'] = (dfd23_f16_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f16_Registrations_GRDel['Percent-2023'] = dfd23_f16_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f16_Registrations_GRDel['7DEvolution-2023'] = dfd23_f16_Registrations_GRDel['Total-2023'] - dfd23_f15_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f16_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f16_Registrations_Evol_GRDel = pd.DataFrame(filtr_16_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f16_Registrations_Evol_GRDel = dfd23_f16_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f16_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f16_Registrations_GRDel['Total-2023'] - dfd19_f16_Registrations_GRDel['Total-2019'])/ dfd19_f16_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f16_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f16 = pd.concat([dfd17_f16_Registrations_GRDel, dfd18_f16_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f16 = pd.DataFrame(pd.merge(dfd17_f16_Registrations_GRDel, dfd18_f16_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f16 = pd.DataFrame(pd.merge(dfd19_f16_Registrations_GRDel, dfd21_f16_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f16 = pd.DataFrame(pd.merge(dfd22_f16_Registrations_GRDel, dfd23_f16_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f16 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f16, df_Registrations_GRDel_2_f16, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_16_f16 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f16, df_Registrations_GRDel_3_f16, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f16 = pd.DataFrame(pd.merge(df_Registrations_GRDel_16_f16, dfd23_f16_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f16 = df_Registrations_GRDel_f16[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f16 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16]
Concat_RegGRDel_count_f1_f16 = pd.concat(ConcatFrames_RegGRDel_count_f1_f16)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f16 = filtr_16_df18_GRdel[filtr_16_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f16 = filtr_16_df19_GRdel[filtr_16_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f16 = filtr_16_df21_GRdel[filtr_16_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f16 = filtr_16_df22_GRdel[filtr_16_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f16 = filtr_16_df23_GRdel[filtr_16_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f16.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f16.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a16_AC_RT_GRDel = pd.DataFrame(filtr_16_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f16_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f16.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f16_AC_RT_GRDel['Percent-2018'] = (dfd18_f16_AC_RT_GRDel['ACQ-2018'] / dfd18_f16_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f16_AC_RT_GRDel['Percent-2018'] = dfd18_f16_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f16_AC_RT_GRDel['RET-2018'] = dfd18_a16_AC_RT_GRDel['Total-2018'] - dfd18_f16_AC_RT_GRDel['ACQ-2018']
dfd18_f16_AC_RT_GRDel['Percnt-2018'] = (dfd18_f16_AC_RT_GRDel['RET-2018'] / dfd18_a16_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f16_AC_RT_GRDel['Percnt-2018'] = dfd18_f16_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f16_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a16_AC_RT_GRDel = pd.DataFrame(filtr_16_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f16_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f16.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f16_AC_RT_GRDel['Percent-2019'] = (dfd19_f16_AC_RT_GRDel['ACQ-2019'] / dfd19_f16_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f16_AC_RT_GRDel['Percent-2019'] = dfd19_f16_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f16_AC_RT_GRDel['RET-2019'] = dfd19_a16_AC_RT_GRDel['Total-2019'] - dfd19_f16_AC_RT_GRDel['ACQ-2019']
dfd19_f16_AC_RT_GRDel['Percnt-2019'] = (dfd19_f16_AC_RT_GRDel['RET-2019'] / dfd19_a16_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f16_AC_RT_GRDel['Percnt-2019'] = dfd19_f16_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f16_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a16_AC_RT_GRDel = pd.DataFrame(filtr_16_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f16_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f16.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f16_AC_RT_GRDel['Percent-2021'] = (dfd21_f16_AC_RT_GRDel['ACQ-2021'] / dfd21_f16_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f16_AC_RT_GRDel['Percent-2021'] = dfd21_f16_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f16_AC_RT_GRDel['RET-2021'] = dfd21_a16_AC_RT_GRDel['Total-2021'] - dfd21_f16_AC_RT_GRDel['ACQ-2021']
dfd21_f16_AC_RT_GRDel['Percnt-2021'] = (dfd21_f16_AC_RT_GRDel['RET-2021'] / dfd21_a16_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f16_AC_RT_GRDel['Percnt-2021'] = dfd21_f16_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f16_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a16_AC_RT_GRDel = pd.DataFrame(filtr_16_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f16_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f16.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f16_AC_RT_GRDel['Percent-2022'] = (dfd22_f16_AC_RT_GRDel['ACQ-2022'] / dfd22_f16_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f16_AC_RT_GRDel['Percent-2022'] = dfd22_f16_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f16_AC_RT_GRDel['RET-2022'] = dfd22_a16_AC_RT_GRDel['Total-2022'] - dfd22_f16_AC_RT_GRDel['ACQ-2022']
dfd22_f16_AC_RT_GRDel['Percnt-2022'] = (dfd22_f16_AC_RT_GRDel['RET-2022'] / dfd22_a16_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f16_AC_RT_GRDel['Percnt-2022'] = dfd22_f16_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f16_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a16_AC_RT_GRDel = pd.DataFrame(filtr_16_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f16_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f16.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f16_AC_RT_GRDel['Percent-2023'] = (dfd23_f16_AC_RT_GRDel['ACQ-2023'] / dfd23_f16_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f16_AC_RT_GRDel['Percent-2023'] = dfd23_f16_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f16_AC_RT_GRDel['RET-2023'] = dfd23_a16_AC_RT_GRDel['Total-2023'] - dfd23_f16_AC_RT_GRDel['ACQ-2023']
dfd23_f16_AC_RT_GRDel['Percnt-2023'] = (dfd23_f16_AC_RT_GRDel['RET-2023'] / dfd23_a16_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f16_AC_RT_GRDel['Percnt-2023'] = dfd23_f16_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f16_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f16 = pd.DataFrame(pd.merge_ordered(dfd18_a16_AC_RT_GRDel, dfd18_f16_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f16 = pd.DataFrame(pd.merge_ordered(dfd19_a16_AC_RT_GRDel, dfd19_f16_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f16 = pd.DataFrame(pd.merge_ordered(dfd21_a16_AC_RT_GRDel, dfd21_f16_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f16 = pd.DataFrame(pd.merge_ordered(dfd22_a16_AC_RT_GRDel, dfd22_f16_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_16_f16 = pd.DataFrame(pd.merge_ordered(dfd23_a16_AC_RT_GRDel, dfd23_f16_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f16 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f16, df_AC_ET_GRDel_2_f16, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f16 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f16, df_AC_ET_GRDel_3_f16, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f16 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f16, df_AC_ET_GRDel_4_f16, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f16 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f16, df_AC_ET_GRDel_16_f16, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f16 = df_AC_RT_GRDel_M4_f16[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f16 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16]
Conct_AC_RT_GRDel_f1_f16 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f16)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_16_df17_GRdel = filtr_16_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f16_Revenu_GRDel = pd.DataFrame(filtr_16_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f16_Revenu_GRDel['Percent-2017'] = (dfd17_f16_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f16_Revenu_GRDel['Percent-2017'] = dfd17_f16_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f16_Revenu_GRDel['7DEvolution-2017'] = dfd17_f16_Revenu_GRDel['Total-2017'] - dfd17_f15_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f16_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_16_df18_GRdel = filtr_16_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f16_Revenu_GRDel = pd.DataFrame(filtr_16_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f16_Revenu_GRDel['Percent-2018'] = (dfd18_f16_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f16_Revenu_GRDel['Percent-2018'] = dfd18_f16_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f16_Revenu_GRDel['7DEvolution-2018'] = dfd18_f16_Revenu_GRDel['Total-2018'] - dfd18_f15_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f16_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_16_df19_GRdel = filtr_16_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f16_Revenu_GRDel = pd.DataFrame(filtr_16_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f16_Revenu_GRDel['Percent-2019'] = (dfd19_f16_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f16_Revenu_GRDel['Percent-2019'] = dfd19_f16_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f16_Revenu_GRDel['7DEvolution-2019'] = dfd19_f16_Revenu_GRDel['Total-2019'] - dfd19_f15_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f16_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_16_df21_GRdel = filtr_16_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f16_Revenu_GRDel = pd.DataFrame(filtr_16_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f16_Revenu_GRDel['Percent-2021'] = (dfd21_f16_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f16_Revenu_GRDel['Percent-2021'] = dfd21_f16_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f16_Revenu_GRDel['7DEvolution-2021'] = dfd21_f16_Revenu_GRDel['Total-2021'] - dfd21_f15_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f16_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_16_df22_GRdel = filtr_16_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f16_Revenu_GRDel = pd.DataFrame(filtr_16_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f16_Revenu_GRDel['Percent-2022'] = (dfd22_f16_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f16_Revenu_GRDel['Percent-2022'] = dfd22_f16_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f16_Revenu_GRDel['7DEvolution-2022'] = dfd22_f16_Revenu_GRDel['Total-2022'] - dfd22_f15_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f16_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_16_df23_GRdel = filtr_16_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f16_Revenu_GRDel = pd.DataFrame(filtr_16_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f16_Revenu_GRDel['Percent-2023'] = (dfd23_f16_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f16_Revenu_GRDel['Percent-2023'] = dfd23_f16_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f16_Revenu_GRDel['7DEvolution-2023'] = dfd23_f16_Revenu_GRDel['Total-2023'] - dfd23_f15_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f16_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f16_Revenu_Evlt_GRDel = pd.DataFrame(filtr_16_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f16_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f16_Revenu_GRDel['Total-2023'] - dfd19_f16_Revenu_GRDel['Total-2019'])/ dfd19_f16_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f16_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f16_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f16_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f16 = pd.DataFrame(pd.merge(dfd17_f16_Revenu_GRDel, dfd18_f16_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f16 = pd.DataFrame(pd.merge(dfd19_f16_Revenu_GRDel, dfd21_f16_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f16 = pd.DataFrame(pd.merge(dfd22_f16_Revenu_GRDel, dfd23_f16_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f16 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f16, df_Revenu_GRDel_2_f16, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_16_f16 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f16, df_Revenu_GRDel_3_f16, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f16 = pd.DataFrame(pd.merge(df_Revenu_GRDel_16_f16, dfd23_f16_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f16 = df_Revenu_GRDel_f16[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f16 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16]
Conct_RV_GRDel_f1_f16 = pd.concat(ConcatFra_RV_GRDel_f1_f16)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f16_Profile_count = pd.DataFrame(filtr_16_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f16_Profile_count = dfd17_f16_Profile_count.fillna('Unknown')
dfd17_f16_Profile_count['Percent-2017'] = (dfd17_f16_Profile_count['Total-2017'] / dfd17_f16_Profile_count['Total-2017'].sum()) * 100
dfd17_f16_Profile_count['Percent-2017'] = dfd17_f16_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f16_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f16_Profile_count = pd.DataFrame(filtr_16_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f16_Profile_count = dfd18_f16_Profile_count.fillna('Unknown')
dfd18_f16_Profile_count['Percent-2018'] = (dfd18_f16_Profile_count['Total-2018'] / dfd18_f16_Profile_count['Total-2018'].sum()) * 100
dfd18_f16_Profile_count['Percent-2018'] = dfd18_f16_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f16_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f16_Profile_count = pd.DataFrame(filtr_16_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f16_Profile_count = dfd19_f16_Profile_count.fillna('Unknown')
dfd19_f16_Profile_count['Percent-2019'] = (dfd19_f16_Profile_count['Total-2019'] / dfd19_f16_Profile_count['Total-2019'].sum()) * 100
dfd19_f16_Profile_count['Percent-2019'] = dfd19_f16_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f16_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f16_Profile_count = pd.DataFrame(filtr_16_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f16_Profile_count = dfd21_f16_Profile_count.fillna('Unknown')
dfd21_f16_Profile_count['Percent-2021'] = (dfd21_f16_Profile_count['Total-2021'] / dfd21_f16_Profile_count['Total-2021'].sum()) * 100
dfd21_f16_Profile_count['Percent-2021'] = dfd21_f16_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f16_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f16_Profile_count = pd.DataFrame(filtr_16_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f16_Profile_count = dfd22_f16_Profile_count.fillna('Unknown')
dfd22_f16_Profile_count['Percent-2022'] = (dfd22_f16_Profile_count['Total-2022'] / dfd22_f16_Profile_count['Total-2022'].sum()) * 100
dfd22_f16_Profile_count['Percent-2022'] = dfd22_f16_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f16_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_Profile_count = pd.DataFrame(filtr_16_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f16_Profile_count = dfd23_f16_Profile_count.fillna('Unknown')
dfd23_f16_Profile_count['Percent-2023'] = (dfd23_f16_Profile_count['Total-2023'] / dfd23_f16_Profile_count['Total-2023'].sum()) * 100
dfd23_f16_Profile_count['Percent-2023'] = dfd23_f16_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f16_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f16 = pd.DataFrame(pd.merge(dfd17_f16_Profile_count, dfd18_f16_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f16 = pd.DataFrame(pd.merge(dfd19_f16_Profile_count, dfd21_f16_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f16 = pd.DataFrame(pd.merge(dfd22_f16_Profile_count, dfd23_f16_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f16 = pd.DataFrame(pd.merge(df_Profile_Count_1_f16, df_Profile_Count_2_f16, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f16 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f16, df_Profile_Count_3_f16, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f16 = df_Profile_Count_m2_f16.append(df_Profile_Count_m2_f16.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f16['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f16_Pass_count = pd.DataFrame(filtr_16_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f16_Pass_count = dfd17_f16_Pass_count.fillna('Unknown')
dfd17_f16_Pass_count['Percent-2017'] = (dfd17_f16_Pass_count['Total-2017'] / dfd17_f16_Pass_count['Total-2017'].sum()) * 100
dfd17_f16_Pass_count['Percent-2017'] = dfd17_f16_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f16_Pass_count = pd.DataFrame(filtr_16_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f16_Pass_count = dfd18_f16_Pass_count.fillna('Unknown')
dfd18_f16_Pass_count['Percent-2018'] = (dfd18_f16_Pass_count['Total-2018'] / dfd18_f16_Pass_count['Total-2018'].sum()) * 100
dfd18_f16_Pass_count['Percent-2018'] = dfd18_f16_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f16_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f16_Pass_count = pd.DataFrame(filtr_16_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f16_Pass_count = dfd19_f16_Pass_count.fillna('Unknown')
dfd19_f16_Pass_count['Percent-2019'] = (dfd19_f16_Pass_count['Total-2019'] / dfd19_f16_Pass_count['Total-2019'].sum()) * 100
dfd19_f16_Pass_count['Percent-2019'] = dfd19_f16_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f16_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f16_Pass_count = pd.DataFrame(filtr_16_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f16_Pass_count = dfd21_f16_Pass_count.fillna('Unknown')
dfd21_f16_Pass_count['Percent-2021'] = (dfd21_f16_Pass_count['Total-2021'] / dfd21_f16_Pass_count['Total-2021'].sum()) * 100
dfd21_f16_Pass_count['Percent-2021'] = dfd21_f16_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f16_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f16_Pass_count = pd.DataFrame(filtr_16_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f16_Pass_count = dfd22_f16_Pass_count.fillna('Unknown')
dfd22_f16_Pass_count['Percent-2022'] = (dfd22_f16_Pass_count['Total-2022'] / dfd22_f16_Pass_count['Total-2022'].sum()) * 100
dfd22_f16_Pass_count['Percent-2022'] = dfd22_f16_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f16_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_Pass_count = pd.DataFrame(filtr_16_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f16_Pass_count = dfd23_f16_Pass_count.fillna('Unknown')
dfd23_f16_Pass_count['Percent-2023'] = (dfd23_f16_Pass_count['Total-2023'] / dfd23_f16_Pass_count['Total-2023'].sum()) * 100
dfd23_f16_Pass_count['Percent-2023'] = dfd23_f16_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f16_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f16 = pd.DataFrame(pd.merge(dfd17_f16_Pass_count, dfd18_f16_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f16 = pd.DataFrame(pd.merge(dfd19_f16_Pass_count, dfd21_f16_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f16 = pd.DataFrame(pd.merge(dfd22_f16_Pass_count, dfd23_f16_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f16 = pd.DataFrame(pd.merge(df_Pass_Count_1_f16, df_Pass_Count_2_f16, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f16 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f16, df_Pass_Count_3_f16, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f16 = df_Pass_Count_m2_f16.append(df_Pass_Count_m2_f16.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f16['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f16_Attendees_Country_count = pd.DataFrame(filtr_16_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f16_Attendees_Country_count = dfd17_f16_Attendees_Country_count.fillna('Unknown')
dfd17_f16_Attendees_Country_count['Percent-2017'] = (dfd17_f16_Attendees_Country_count['Total-2017'] / dfd17_f16_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f16_Attendees_Country_count['Percent-2017'] = dfd17_f16_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f16_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f16_Attendees_Country_count = pd.DataFrame(filtr_16_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f16_Attendees_Country_count = dfd18_f16_Attendees_Country_count.fillna('Unknown')
dfd18_f16_Attendees_Country_count['Percent-2018'] = (dfd18_f16_Attendees_Country_count['Total-2018'] / dfd18_f16_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f16_Attendees_Country_count['Percent-2018'] = dfd18_f16_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f16_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f16_Attendees_Country_count = pd.DataFrame(filtr_16_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f16_Attendees_Country_count = dfd19_f16_Attendees_Country_count.fillna('Unknown')
dfd19_f16_Attendees_Country_count['Percent-2019'] = (dfd19_f16_Attendees_Country_count['Total-2019'] / dfd19_f16_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f16_Attendees_Country_count['Percent-2019'] = dfd19_f16_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f16_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f16_Attendees_Country_count = pd.DataFrame(filtr_16_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f16_Attendees_Country_count = dfd21_f16_Attendees_Country_count.fillna('Unknown')
dfd21_f16_Attendees_Country_count['Percent-2021'] = (dfd21_f16_Attendees_Country_count['Total-2021'] / dfd21_f16_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f16_Attendees_Country_count['Percent-2021'] = dfd21_f16_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f16_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f16_Attendees_Country_count = pd.DataFrame(filtr_16_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f16_Attendees_Country_count = dfd22_f16_Attendees_Country_count.fillna('Unknown')
dfd22_f16_Attendees_Country_count['Percent-2022'] = (dfd22_f16_Attendees_Country_count['Total-2022'] / dfd22_f16_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f16_Attendees_Country_count['Percent-2022'] = dfd22_f16_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f16_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_Attendees_Country_count = pd.DataFrame(filtr_16_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f16_Attendees_Country_count = dfd23_f16_Attendees_Country_count.fillna('Unknown')
dfd23_f16_Attendees_Country_count['Percent-2023'] = (dfd23_f16_Attendees_Country_count['Total-2023'] / dfd23_f16_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f16_Attendees_Country_count['Percent-2023'] = dfd23_f16_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f16_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f16 = pd.DataFrame(pd.merge(dfd17_f16_Attendees_Country_count, dfd18_f16_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f16 = pd.DataFrame(pd.merge(dfd19_f16_Attendees_Country_count, dfd21_f16_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f16 = pd.DataFrame(pd.merge(dfd22_f16_Attendees_Country_count, dfd23_f16_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f16 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f16, dfAttendees_Country_Count_2_f16, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f16.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f16 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f16, dfAttendees_Country_Count_3_f16, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f16 = dfAttendees_Country_Count_m2_f16.append(dfAttendees_Country_Count_m2_f16.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f16['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f16_ATTENDEES_AREAS_count = pd.DataFrame(filtr_16_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f16_ATTENDEES_AREAS_count = dfd17_f16_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f16_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f16_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f16_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f16_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f16_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f16_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f16_ATTENDEES_AREAS_count = pd.DataFrame(filtr_16_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f16_ATTENDEES_AREAS_count = dfd18_f16_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f16_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f16_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f16_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f16_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f16_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f16_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f16_ATTENDEES_AREAS_count = pd.DataFrame(filtr_16_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f16_ATTENDEES_AREAS_count = dfd19_f16_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f16_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f16_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f16_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f16_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f16_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f16_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f16_ATTENDEES_AREAS_count = pd.DataFrame(filtr_16_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f16_ATTENDEES_AREAS_count = dfd21_f16_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f16_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f16_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f16_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f16_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f16_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f16_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f16_ATTENDEES_AREAS_count = pd.DataFrame(filtr_16_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f16_ATTENDEES_AREAS_count = dfd22_f16_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f16_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f16_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f16_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f16_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f16_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f16_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_ATTENDEES_AREAS_count = pd.DataFrame(filtr_16_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f16_ATTENDEES_AREAS_count = dfd23_f16_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f16_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f16_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f16_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f16_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f16_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f16_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f16 = pd.DataFrame(pd.merge(dfd17_f16_ATTENDEES_AREAS_count, dfd18_f16_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f16 = pd.DataFrame(pd.merge(dfd19_f16_ATTENDEES_AREAS_count, dfd21_f16_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f16 = pd.DataFrame(pd.merge(dfd22_f16_ATTENDEES_AREAS_count, dfd23_f16_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f16.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f16 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f16, df_ATTENDEES_AREAS_count_2_f16, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f16 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f16, df_ATTENDEES_AREAS_count_3_f16, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f16 = df_ATTENDEES_AREAS_count_m2_f16.append(df_ATTENDEES_AREAS_count_m2_f16.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f16['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f16_Attendees_Specialty_count = pd.DataFrame(filtr_16_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f16_Attendees_Specialty_count = dfd17_f16_Attendees_Specialty_count.fillna('Unknown')
dfd17_f16_Attendees_Specialty_count['Percent-2017'] = (dfd17_f16_Attendees_Specialty_count['Total-2017'] / dfd17_f16_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f16_Attendees_Specialty_count['Percent-2017'] = dfd17_f16_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f16_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f16_Attendees_Specialty_count = pd.DataFrame(filtr_16_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f16_Attendees_Specialty_count = dfd18_f16_Attendees_Specialty_count.fillna('Unknown')
dfd18_f16_Attendees_Specialty_count['Percent-2018'] = (dfd18_f16_Attendees_Specialty_count['Total-2018'] / dfd18_f16_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f16_Attendees_Specialty_count['Percent-2018'] = dfd18_f16_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f16_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f16_Attendees_Specialty_count = pd.DataFrame(filtr_16_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f16_Attendees_Specialty_count = dfd19_f16_Attendees_Specialty_count.fillna('Unknown')
dfd19_f16_Attendees_Specialty_count['Percent-2019'] = (dfd19_f16_Attendees_Specialty_count['Total-2019'] / dfd19_f16_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f16_Attendees_Specialty_count['Percent-2019'] = dfd19_f16_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f16_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f16_Attendees_Specialty_count = pd.DataFrame(filtr_16_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f16_Attendees_Specialty_count = dfd21_f16_Attendees_Specialty_count.fillna('Unknown')
dfd21_f16_Attendees_Specialty_count['Percent-2021'] = (dfd21_f16_Attendees_Specialty_count['Total-2021'] / dfd21_f16_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f16_Attendees_Specialty_count['Percent-2021'] = dfd21_f16_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f16_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f16_Attendees_Specialty_count = pd.DataFrame(filtr_16_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f16_Attendees_Specialty_count = dfd22_f16_Attendees_Specialty_count.fillna('Unknown')
dfd22_f16_Attendees_Specialty_count['Percent-2022'] = (dfd22_f16_Attendees_Specialty_count['Total-2022'] / dfd22_f16_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f16_Attendees_Specialty_count['Percent-2022'] = dfd22_f16_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f16_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f16_Attendees_Specialty_count = pd.DataFrame(filtr_16_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f16_Attendees_Specialty_count = dfd23_f16_Attendees_Specialty_count.fillna('Unknown')
dfd23_f16_Attendees_Specialty_count['Percent-2023'] = (dfd23_f16_Attendees_Specialty_count['Total-2023'] / dfd23_f16_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f16_Attendees_Specialty_count['Percent-2023'] = dfd23_f16_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f16_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f16 = pd.DataFrame(pd.merge(dfd17_f16_Attendees_Specialty_count, dfd18_f16_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f16 = pd.DataFrame(pd.merge(dfd19_f16_Attendees_Specialty_count, dfd21_f16_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f16 = pd.DataFrame(pd.merge(dfd22_f16_Attendees_Specialty_count, dfd23_f16_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f16 = pd.DataFrame(pd.merge(df_Specialty_count_1_f16, df_Specialty_count_2_f16, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f16.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f16 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f16, df_Specialty_count_3_f16, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f16 = df_Specialty_count_m2_f16.append(df_Specialty_count_m2_f16.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f16['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f16['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f16['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f16 = Concat_Registrations_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f16['Total-2017'] = Concat_Registrations_count_f1_f16['Total-2017'].astype(int)
Concat_Registrations_count_f1_f16['Percent-2017'] = Concat_Registrations_count_f1_f16['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f16['7DEvolution-2017'] = Concat_Registrations_count_f1_f16['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f16['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f16['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f16 = Concat_Registrations_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f16['Total-2018'] = Concat_Registrations_count_f1_f16['Total-2018'].astype(int)
Concat_Registrations_count_f1_f16['Percent-2018'] = Concat_Registrations_count_f1_f16['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f16['7DEvolution-2018'] = Concat_Registrations_count_f1_f16['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f16['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f16['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f16 = Concat_Registrations_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f16['Total-2019'] = Concat_Registrations_count_f1_f16['Total-2019'].astype(int)
Concat_Registrations_count_f1_f16['Percent-2019'] = Concat_Registrations_count_f1_f16['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f16['7DEvolution-2019'] = Concat_Registrations_count_f1_f16['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f16['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f16['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f16 = Concat_Registrations_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f16['Total-2021'] = Concat_Registrations_count_f1_f16['Total-2021'].astype(int)
Concat_Registrations_count_f1_f16['Percent-2021'] = Concat_Registrations_count_f1_f16['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f16['7DEvolution-2021'] = Concat_Registrations_count_f1_f16['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f16['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f16['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f16 = Concat_Registrations_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f16['Total-2022'] = Concat_Registrations_count_f1_f16['Total-2022'].astype(int)
Concat_Registrations_count_f1_f16['Percent-2022'] = Concat_Registrations_count_f1_f16['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f16['7DEvolution-2022'] = Concat_Registrations_count_f1_f16['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f16['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f16['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f16 = Concat_Registrations_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f16['Total-2023'] = Concat_Registrations_count_f1_f16['Total-2023'].astype(int)
Concat_Registrations_count_f1_f16['Percent-2023'] = Concat_Registrations_count_f1_f16['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f16['7DEvolution-2023'] = Concat_Registrations_count_f1_f16['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f16['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f16['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f16 = Concat_ACQRET_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f16['Total-2018'] = Concat_ACQRET_count_f1_f16['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f16['ACQ-2018'] = Concat_ACQRET_count_f1_f16['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f16['Percent-2018'] = Concat_ACQRET_count_f1_f16['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f16['RET-2018'] = Concat_ACQRET_count_f1_f16['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f16['Percnt-2018'] = Concat_ACQRET_count_f1_f16['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f16['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f16['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f16 = Concat_ACQRET_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f16['Total-2019'] = Concat_ACQRET_count_f1_f16['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f16['ACQ-2019'] = Concat_ACQRET_count_f1_f16['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f16['Percent-2019'] = Concat_ACQRET_count_f1_f16['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f16['RET-2019'] = Concat_ACQRET_count_f1_f16['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f16['Percnt-2019'] = Concat_ACQRET_count_f1_f16['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f16['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f16['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f16 = Concat_ACQRET_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f16['Total-2021'] = Concat_ACQRET_count_f1_f16['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f16['ACQ-2021'] = Concat_ACQRET_count_f1_f16['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f16['Percent-2021'] = Concat_ACQRET_count_f1_f16['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f16['RET-2021'] = Concat_ACQRET_count_f1_f16['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f16['Percnt-2021'] = Concat_ACQRET_count_f1_f16['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f16['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f16['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f16 = Concat_ACQRET_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f16['Total-2022'] = Concat_ACQRET_count_f1_f16['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f16['ACQ-2022'] = Concat_ACQRET_count_f1_f16['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f16['Percent-2022'] = Concat_ACQRET_count_f1_f16['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f16['RET-2022'] = Concat_ACQRET_count_f1_f16['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f16['Percnt-2022'] = Concat_ACQRET_count_f1_f16['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f16['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f16['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f16 = Concat_ACQRET_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f16['Total-2023'] = Concat_ACQRET_count_f1_f16['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f16['ACQ-2023'] = Concat_ACQRET_count_f1_f16['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f16['Percent-2023'] = Concat_ACQRET_count_f1_f16['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f16['RET-2023'] = Concat_ACQRET_count_f1_f16['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f16['Percnt-2023'] = Concat_ACQRET_count_f1_f16['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f16['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f16['Total-2017'],errors='coerce')
Concat_REV_count_f1_f16 = Concat_REV_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f16['Total-2017'] = Concat_REV_count_f1_f16['Total-2017'].astype(int)
Concat_REV_count_f1_f16['Percent-2017'] = Concat_REV_count_f1_f16['Percent-2017'].astype(float)
Concat_REV_count_f1_f16['7DEvolution-2017'] = Concat_REV_count_f1_f16['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f16['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f16['Total-2018'],errors='coerce')
Concat_REV_count_f1_f16 = Concat_REV_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f16['Total-2018'] = Concat_REV_count_f1_f16['Total-2018'].astype(int)
Concat_REV_count_f1_f16['Percent-2018'] = Concat_REV_count_f1_f16['Percent-2018'].astype(float)
Concat_REV_count_f1_f16['7DEvolution-2018'] = Concat_REV_count_f1_f16['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f16['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f16['Total-2019'],errors='coerce')
Concat_REV_count_f1_f16 = Concat_REV_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f16['Total-2019'] = Concat_REV_count_f1_f16['Total-2019'].astype(int)
Concat_REV_count_f1_f16['Percent-2019'] = Concat_REV_count_f1_f16['Percent-2019'].astype(float)
Concat_REV_count_f1_f16['7DEvolution-2019'] = Concat_REV_count_f1_f16['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f16['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f16['Total-2022'],errors='coerce')
Concat_REV_count_f1_f16 = Concat_REV_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f16['Total-2022'] = Concat_REV_count_f1_f16['Total-2022'].astype(int)
Concat_REV_count_f1_f16['Percent-2022'] = Concat_REV_count_f1_f16['Percent-2022'].astype(float)
Concat_REV_count_f1_f16['7DEvolution-2022'] = Concat_REV_count_f1_f16['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f16['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f16['Total-2023'],errors='coerce')
Concat_REV_count_f1_f16 = Concat_REV_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f16['Total-2023'] = Concat_REV_count_f1_f16['Total-2023'].astype(int)
Concat_REV_count_f1_f16['Percent-2023'] = Concat_REV_count_f1_f16['Percent-2023'].astype(float)
Concat_REV_count_f1_f16['7DEvolution-2023'] = Concat_REV_count_f1_f16['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f16['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f16['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f16 = Concat_RegGRDel_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f16['Total-2017'] = Concat_RegGRDel_count_f1_f16['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f16['Percent-2017'] = Concat_RegGRDel_count_f1_f16['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f16['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f16['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f16['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f16['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f16 = Concat_RegGRDel_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f16['Total-2018'] = Concat_RegGRDel_count_f1_f16['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f16['Percent-2018'] = Concat_RegGRDel_count_f1_f16['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f16['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f16['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f16['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f16['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f16 = Concat_RegGRDel_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f16['Total-2019'] = Concat_RegGRDel_count_f1_f16['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f16['Percent-2019'] = Concat_RegGRDel_count_f1_f16['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f16['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f16['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f16['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f16['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f16 = Concat_RegGRDel_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f16['Total-2021'] = Concat_RegGRDel_count_f1_f16['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f16['Percent-2021'] = Concat_RegGRDel_count_f1_f16['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f16['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f16['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f16['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f16['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f16 = Concat_RegGRDel_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f16['Total-2022'] = Concat_RegGRDel_count_f1_f16['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f16['Percent-2022'] = Concat_RegGRDel_count_f1_f16['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f16['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f16['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f16['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f16['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f16 = Concat_RegGRDel_count_f1_f16.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f16['Total-2023'] = Concat_RegGRDel_count_f1_f16['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f16['Percent-2023'] = Concat_RegGRDel_count_f1_f16['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f16['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f16['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f16['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f16['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f16 = Conct_AC_RT_GRDel_f1_f16.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f16['Total-2018'] = Conct_AC_RT_GRDel_f1_f16['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f16['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f16['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f16['Percent-2018'] = Conct_AC_RT_GRDel_f1_f16['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f16['RET-2018'] = Conct_AC_RT_GRDel_f1_f16['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f16['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f16['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f16['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f16['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f16 = Conct_AC_RT_GRDel_f1_f16.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f16['Total-2019'] = Conct_AC_RT_GRDel_f1_f16['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f16['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f16['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f16['Percent-2019'] = Conct_AC_RT_GRDel_f1_f16['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f16['RET-2019'] = Conct_AC_RT_GRDel_f1_f16['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f16['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f16['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f16['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f16['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f16 = Conct_AC_RT_GRDel_f1_f16.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f16['Total-2021'] = Conct_AC_RT_GRDel_f1_f16['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f16['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f16['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f16['Percent-2021'] = Conct_AC_RT_GRDel_f1_f16['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f16['RET-2021'] = Conct_AC_RT_GRDel_f1_f16['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f16['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f16['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f16['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f16['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f16 = Conct_AC_RT_GRDel_f1_f16.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f16['Total-2022'] = Conct_AC_RT_GRDel_f1_f16['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f16['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f16['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f16['Percent-2022'] = Conct_AC_RT_GRDel_f1_f16['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f16['RET-2022'] = Conct_AC_RT_GRDel_f1_f16['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f16['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f16['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f16['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f16['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f16 = Conct_AC_RT_GRDel_f1_f16.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f16['Total-2023'] = Conct_AC_RT_GRDel_f1_f16['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f16['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f16['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f16['Percent-2023'] = Conct_AC_RT_GRDel_f1_f16['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f16['RET-2023'] = Conct_AC_RT_GRDel_f1_f16['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f16['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f16['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f16['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f16['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f16 = Conct_RV_GRDel_f1_f16.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f16['Total-2017'] = Conct_RV_GRDel_f1_f16['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f16['Percent-2017'] = Conct_RV_GRDel_f1_f16['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f16['7DEvolution-2017'] = Conct_RV_GRDel_f1_f16['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f16['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f16['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f16 = Conct_RV_GRDel_f1_f16.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f16['Total-2018'] = Conct_RV_GRDel_f1_f16['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f16['Percent-2018'] = Conct_RV_GRDel_f1_f16['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f16['7DEvolution-2018'] = Conct_RV_GRDel_f1_f16['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f16['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f16['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f16 = Conct_RV_GRDel_f1_f16.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f16['Total-2019'] = Conct_RV_GRDel_f1_f16['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f16['Percent-2019'] = Conct_RV_GRDel_f1_f16['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f16['7DEvolution-2019'] = Conct_RV_GRDel_f1_f16['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f16['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f16['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f16 = Conct_RV_GRDel_f1_f16.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f16['Total-2022'] = Conct_RV_GRDel_f1_f16['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f16['Percent-2022'] = Conct_RV_GRDel_f1_f16['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f16['7DEvolution-2022'] = Conct_RV_GRDel_f1_f16['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f16['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f16['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f16 = Conct_RV_GRDel_f1_f16.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f16['Total-2023'] = Conct_RV_GRDel_f1_f16['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f16['Percent-2023'] = Conct_RV_GRDel_f1_f16['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f16['7DEvolution-2023'] = Conct_RV_GRDel_f1_f16['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f16['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f16['Total-2017'],errors='coerce')
df_Profile_Count_m2_f16 = df_Profile_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f16['Total-2017'] = df_Profile_Count_m2_f16['Total-2017'].astype(int)
df_Profile_Count_m2_f16['Percent-2017'] = df_Profile_Count_m2_f16['Percent-2017'].astype(float)

df_Profile_Count_m2_f16['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f16['Total-2018'],errors='coerce')
df_Profile_Count_m2_f16 = df_Profile_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f16['Total-2018'] = df_Profile_Count_m2_f16['Total-2018'].astype(int)
df_Profile_Count_m2_f16['Percent-2018'] = df_Profile_Count_m2_f16['Percent-2018'].astype(float)

df_Profile_Count_m2_f16['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f16['Total-2019'],errors='coerce')
df_Profile_Count_m2_f16 = df_Profile_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f16['Total-2019'] = df_Profile_Count_m2_f16['Total-2019'].astype(int)
df_Profile_Count_m2_f16['Percent-2019'] = df_Profile_Count_m2_f16['Percent-2019'].astype(float)

df_Profile_Count_m2_f16['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f16['Total-2021'],errors='coerce')
df_Profile_Count_m2_f16 = df_Profile_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f16['Total-2021'] = df_Profile_Count_m2_f16['Total-2021'].astype(int)
df_Profile_Count_m2_f16['Percent-2021'] = df_Profile_Count_m2_f16['Percent-2021'].astype(float)

df_Profile_Count_m2_f16['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f16['Total-2022'],errors='coerce')
df_Profile_Count_m2_f16 = df_Profile_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f16['Total-2022'] = df_Profile_Count_m2_f16['Total-2022'].astype(int)
df_Profile_Count_m2_f16['Percent-2022'] = df_Profile_Count_m2_f16['Percent-2022'].astype(float)

df_Profile_Count_m2_f16['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f16['Total-2023'],errors='coerce')
df_Profile_Count_m2_f16 = df_Profile_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f16['Total-2023'] = df_Profile_Count_m2_f16['Total-2023'].astype(int)
df_Profile_Count_m2_f16['Percent-2023'] = df_Profile_Count_m2_f16['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f16['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f16['Total-2017'],errors='coerce')
df_Pass_Count_m2_f16 = df_Pass_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f16['Total-2017'] = df_Pass_Count_m2_f16['Total-2017'].astype(int)
df_Pass_Count_m2_f16['Percent-2017'] = df_Pass_Count_m2_f16['Percent-2017'].astype(float)

df_Pass_Count_m2_f16['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f16['Total-2018'],errors='coerce')
df_Pass_Count_m2_f16 = df_Pass_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f16['Total-2018'] = df_Pass_Count_m2_f16['Total-2018'].astype(int)
df_Pass_Count_m2_f16['Percent-2018'] = df_Pass_Count_m2_f16['Percent-2018'].astype(float)

df_Pass_Count_m2_f16['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f16['Total-2019'],errors='coerce')
df_Pass_Count_m2_f16 = df_Pass_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f16['Total-2019'] = df_Pass_Count_m2_f16['Total-2019'].astype(int)
df_Pass_Count_m2_f16['Percent-2019'] = df_Pass_Count_m2_f16['Percent-2019'].astype(float)

df_Pass_Count_m2_f16['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f16['Total-2021'],errors='coerce')
df_Pass_Count_m2_f16 = df_Pass_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f16['Total-2021'] = df_Pass_Count_m2_f16['Total-2021'].astype(int)
df_Pass_Count_m2_f16['Percent-2021'] = df_Pass_Count_m2_f16['Percent-2021'].astype(float)

df_Pass_Count_m2_f16['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f16['Total-2022'],errors='coerce')
df_Pass_Count_m2_f16 = df_Pass_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f16['Total-2022'] = df_Pass_Count_m2_f16['Total-2022'].astype(int)
df_Pass_Count_m2_f16['Percent-2022'] = df_Pass_Count_m2_f16['Percent-2022'].astype(float)

df_Pass_Count_m2_f16['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f16['Total-2023'],errors='coerce')
df_Pass_Count_m2_f16 = df_Pass_Count_m2_f16.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f16['Total-2023'] = df_Pass_Count_m2_f16['Total-2023'].astype(int)
df_Pass_Count_m2_f16['Percent-2023'] = df_Pass_Count_m2_f16['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f16['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f16['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f16 = dfAttendees_Country_Count_m2_f16.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f16['Total-2017'] = dfAttendees_Country_Count_m2_f16['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f16['Percent-2017'] = dfAttendees_Country_Count_m2_f16['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f16['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f16['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f16 = dfAttendees_Country_Count_m2_f16.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f16['Total-2018'] = dfAttendees_Country_Count_m2_f16['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f16['Percent-2018'] = dfAttendees_Country_Count_m2_f16['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f16['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f16['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f16 = dfAttendees_Country_Count_m2_f16.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f16['Total-2019'] = dfAttendees_Country_Count_m2_f16['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f16['Percent-2019'] = dfAttendees_Country_Count_m2_f16['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f16['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f16['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f16 = dfAttendees_Country_Count_m2_f16.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f16['Total-2021'] = dfAttendees_Country_Count_m2_f16['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f16['Percent-2021'] = dfAttendees_Country_Count_m2_f16['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f16['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f16['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f16 = dfAttendees_Country_Count_m2_f16.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f16['Total-2022'] = dfAttendees_Country_Count_m2_f16['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f16['Percent-2022'] = dfAttendees_Country_Count_m2_f16['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f16['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f16['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f16 = dfAttendees_Country_Count_m2_f16.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f16['Total-2023'] = dfAttendees_Country_Count_m2_f16['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f16['Percent-2023'] = dfAttendees_Country_Count_m2_f16['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f16['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f16['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f16 = df_ATTENDEES_AREAS_count_m2_f16.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f16['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f16['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f16['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f16['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f16['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f16['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f16 = df_ATTENDEES_AREAS_count_m2_f16.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f16['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f16['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f16['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f16['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f16['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f16['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f16 = df_ATTENDEES_AREAS_count_m2_f16.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f16['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f16['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f16['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f16['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f16['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f16['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f16 = df_ATTENDEES_AREAS_count_m2_f16.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f16['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f16['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f16['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f16['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f16['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f16['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f16 = df_ATTENDEES_AREAS_count_m2_f16.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f16['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f16['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f16['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f16['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f16['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f16['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f16 = df_ATTENDEES_AREAS_count_m2_f16.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f16['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f16['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f16['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f16['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f16['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f16['Total-2017'],errors='coerce')
df_Specialty_count_m2_f16 = df_Specialty_count_m2_f16.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f16['Total-2017'] = df_Specialty_count_m2_f16['Total-2017'].astype(int)
df_Specialty_count_m2_f16['Percent-2017'] = df_Specialty_count_m2_f16['Percent-2017'].astype(float)

df_Specialty_count_m2_f16['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f16['Total-2018'],errors='coerce')
df_Specialty_count_m2_f16 = df_Specialty_count_m2_f16.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f16['Total-2018'] = df_Specialty_count_m2_f16['Total-2018'].astype(int)
df_Specialty_count_m2_f16['Percent-2018'] = df_Specialty_count_m2_f16['Percent-2018'].astype(float)

df_Specialty_count_m2_f16['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f16['Total-2019'],errors='coerce')
df_Specialty_count_m2_f16 = df_Specialty_count_m2_f16.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f16['Total-2019'] = df_Specialty_count_m2_f16['Total-2019'].astype(int)
df_Specialty_count_m2_f16['Percent-2019'] = df_Specialty_count_m2_f16['Percent-2019'].astype(float)

df_Specialty_count_m2_f16['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f16['Total-2021'],errors='coerce')
df_Specialty_count_m2_f16 = df_Specialty_count_m2_f16.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f16['Total-2021'] = df_Specialty_count_m2_f16['Total-2021'].astype(int)
df_Specialty_count_m2_f16['Percent-2021'] = df_Specialty_count_m2_f16['Percent-2021'].astype(float)

df_Specialty_count_m2_f16['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f16['Total-2022'],errors='coerce')
df_Specialty_count_m2_f16 = df_Specialty_count_m2_f16.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f16['Total-2022'] = df_Specialty_count_m2_f16['Total-2022'].astype(int)
df_Specialty_count_m2_f16['Percent-2022'] = df_Specialty_count_m2_f16['Percent-2022'].astype(float)

df_Specialty_count_m2_f16['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f16['Total-2023'],errors='coerce')
df_Specialty_count_m2_f16 = df_Specialty_count_m2_f16.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f16['Total-2023'] = df_Specialty_count_m2_f16['Total-2023'].astype(int)
df_Specialty_count_m2_f16['Percent-2023'] = df_Specialty_count_m2_f16['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f16.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f16.dtypes)
#print(df_Specialty_count_m2_f16.dtypes)

#print(dfAttendees_Country_Count_m2_f16.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f16.dtypes)
#print(df_Specialty_count_m2_f16.dtypes)

# EXCEL FILE
writerf16 = pd.ExcelWriter(outputExcelFile_f16, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f16.to_excel\
    (writerf16, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f16.to_excel\
    (writerf16, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f16.to_excel\
    (writerf16, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f16.to_excel\
    (writerf16, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f16.to_excel\
    (writerf16, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f16.to_excel\
    (writerf16, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f16.to_excel\
    (writerf16, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f16.to_excel\
    (writerf16, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f16.to_excel\
    (writerf16, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f16.to_excel\
    (writerf16, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f16.to_excel\
    (writerf16, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf16.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f16)

workbook.save(outputExcelFile_f16)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 84 days**********************************************')
print('************************************End of 84 days**********************************************')
print('************************************End of 84 days**********************************************')
print('************************************End of 84 days**********************************************')
print('************************************End of 84 days**********************************************')
print('************************************End of 84 days**********************************************')
print('************************************End of 84 days**********************************************')
print('************************************End of 84 days**********************************************')
print('************************************End of 84 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f17_Registrations_count = pd.DataFrame(filter_17_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f17_Registrations_count = dfd17_f17_Registrations_count.fillna('Unknown')
dfd17_f17_Registrations_count['Percent-2017'] = (dfd17_f17_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f17_Registrations_count['Percent-2017'] = dfd17_f17_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f17_Registrations_count['7DEvolution-2017'] = dfd17_f17_Registrations_count['Total-2017'] - dfd17_f16_Registrations_count['Total-2017']
#print(tab(dfd17_f17_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f17_Registrations_count = pd.DataFrame(filter_17_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f17_Registrations_count = dfd18_f17_Registrations_count.fillna('Unknown')
dfd18_f17_Registrations_count['Percent-2018'] = (dfd18_f17_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f17_Registrations_count['Percent-2018'] = dfd18_f17_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f17_Registrations_count['7DEvolution-2018'] = dfd18_f17_Registrations_count['Total-2018'] - dfd18_f16_Registrations_count['Total-2018']
#print(tab(dfd18_f17_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f17_Registrations_count = pd.DataFrame(filter_17_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f17_Registrations_count = dfd19_f17_Registrations_count.fillna('Unknown')
dfd19_f17_Registrations_count['Percent-2019'] = (dfd19_f17_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f17_Registrations_count['Percent-2019'] = dfd19_f17_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f17_Registrations_count['7DEvolution-2019'] = dfd19_f17_Registrations_count['Total-2019'] - dfd19_f16_Registrations_count['Total-2019']
#print(tab(dfd19_f17_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f17_Registrations_count = pd.DataFrame(filter_17_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f17_Registrations_count = dfd21_f17_Registrations_count.fillna('Unknown')
dfd21_f17_Registrations_count['Percent-2021'] = (dfd21_f17_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f17_Registrations_count['Percent-2021'] = dfd21_f17_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f17_Registrations_count['7DEvolution-2021'] = dfd21_f17_Registrations_count['Total-2021'] - dfd21_f16_Registrations_count['Total-2021']
#print(tab(dfd21_f17_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f17_Registrations_count = pd.DataFrame(filter_17_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f17_Registrations_count = dfd22_f17_Registrations_count.fillna('Unknown')
dfd22_f17_Registrations_count['Percent-2022'] = (dfd22_f17_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f17_Registrations_count['Percent-2022'] = dfd22_f17_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f17_Registrations_count['7DEvolution-2022'] = dfd22_f17_Registrations_count['Total-2022'] - dfd22_f16_Registrations_count['Total-2022']
#print(tab(dfd22_f17_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_Registrations_count = pd.DataFrame(filter_17_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f17_Registrations_count = dfd23_f17_Registrations_count.fillna('Unknown')
dfd23_f17_Registrations_count['Percent-2023'] = (dfd23_f17_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f17_Registrations_count['Percent-2023'] = dfd23_f17_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f17_Registrations_count['7DEvolution-2023'] = dfd23_f17_Registrations_count['Total-2023'] - dfd23_f16_Registrations_count['Total-2023']
#print(tab(dfd23_f17_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f17_RegistrationsEvolution_count = pd.DataFrame(filter_17_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f17_RegistrationsEvolution_count = dfd23_f17_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f17_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f17_Registrations_count['Total-2023'] - dfd19_f17_Registrations_count['Total-2019'])/ dfd19_f17_Registrations_count['Total-2019'].sum()) * 100
dfd23_f17_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f17_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f17_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f17 = pd.DataFrame(pd.merge(dfd17_f17_Registrations_count, dfd18_f17_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f17 = pd.DataFrame(pd.merge(dfd19_f17_Registrations_count, dfd21_f17_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f17 = pd.DataFrame(pd.merge(dfd22_f17_Registrations_count, dfd23_f17_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f17 = pd.DataFrame(pd.merge(df_Registrations_count_1_f17, df_Registrations_count_2_f17, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f17 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f17, df_Registrations_count_3_f17, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f17 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f17, dfd23_f17_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f17 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17]
Concat_Registrations_count_f1_f17 = pd.concat(ConcatFrames_Registrations_count_f1_f17)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f17  = ConcatFrames_Registrations_count_f1_f17.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f17.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f17 = filter_17_df18[filter_17_df18['New customer'] == 1]
df_NewCustomer_df19_f17 = filter_17_df19[filter_17_df19['New customer'] == 1]
df_NewCustomer_df21_f17 = filter_17_df21[filter_17_df21['New customer'] == 1]
df_NewCustomer_df22_f17 = filter_17_df22[filter_17_df22['New customer'] == 1]
df_NewCustomer_df23_f17 = filter_17_df23[filter_17_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f17.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f17.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f17.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a17_ACQRET_count = pd.DataFrame(filter_17_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f17_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f17.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f17_ACQRET_count['Percent-2018'] = (dfd18_f17_ACQRET_count['ACQ-2018'] / dfd18_f17_Registrations_count['Total-2018'].sum()) * 100
dfd18_f17_ACQRET_count['Percent-2018'] = dfd18_f17_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f17_ACQRET_count['RET-2018'] = dfd18_a17_ACQRET_count['Total-2018'] - dfd18_f17_ACQRET_count['ACQ-2018']
dfd18_f17_ACQRET_count['Percnt-2018'] = (dfd18_f17_ACQRET_count['RET-2018'] / dfd18_a17_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f17_ACQRET_count['Percnt-2018'] = dfd18_f17_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f17_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a17_ACQRET_count = pd.DataFrame(filter_17_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f17_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f17.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f17_ACQRET_count['Percent-2019'] = (dfd19_f17_ACQRET_count['ACQ-2019'] / dfd19_f17_Registrations_count['Total-2019'].sum()) * 100
dfd19_f17_ACQRET_count['Percent-2019'] = dfd19_f17_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f17_ACQRET_count['RET-2019'] = dfd19_a17_ACQRET_count['Total-2019'] - dfd19_f17_ACQRET_count['ACQ-2019']
dfd19_f17_ACQRET_count['Percnt-2019'] = (dfd19_f17_ACQRET_count['RET-2019'] / dfd19_a17_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f17_ACQRET_count['Percnt-2019'] = dfd19_f17_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f17_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a17_ACQRET_count = pd.DataFrame(filter_17_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f17_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f17.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f17_ACQRET_count['Percent-2021'] = (dfd21_f17_ACQRET_count['ACQ-2021'] / dfd21_f17_Registrations_count['Total-2021'].sum()) * 100
dfd21_f17_ACQRET_count['Percent-2021'] = dfd21_f17_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f17_ACQRET_count['RET-2021'] = dfd21_a17_ACQRET_count['Total-2021'] - dfd21_f17_ACQRET_count['ACQ-2021']
dfd21_f17_ACQRET_count['Percnt-2021'] = (dfd21_f17_ACQRET_count['RET-2021'] / dfd21_a17_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f17_ACQRET_count['Percnt-2021'] = dfd21_f17_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f17_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a17_ACQRET_count = pd.DataFrame(filter_17_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f17_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f17.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f17_ACQRET_count['Percent-2022'] = (dfd22_f17_ACQRET_count['ACQ-2022'] / dfd22_f17_Registrations_count['Total-2022'].sum()) * 100
dfd22_f17_ACQRET_count['Percent-2022'] = dfd22_f17_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f17_ACQRET_count['RET-2022'] = dfd22_a17_ACQRET_count['Total-2022'] - dfd22_f17_ACQRET_count['ACQ-2022']
dfd22_f17_ACQRET_count['Percnt-2022'] = (dfd22_f17_ACQRET_count['RET-2022'] / dfd22_a17_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f17_ACQRET_count['Percnt-2022'] = dfd22_f17_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f17_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a17_ACQRET_count = pd.DataFrame(filter_17_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f17_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f17.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f17_ACQRET_count['Percent-2023'] = (dfd23_f17_ACQRET_count['ACQ-2023'] / dfd23_f17_Registrations_count['Total-2023'].sum()) * 100
dfd23_f17_ACQRET_count['Percent-2023'] = dfd23_f17_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f17_ACQRET_count['RET-2023'] = dfd23_a17_ACQRET_count['Total-2023'] - dfd23_f17_ACQRET_count['ACQ-2023']
dfd23_f17_ACQRET_count['Percnt-2023'] = (dfd23_f17_ACQRET_count['RET-2023'] / dfd23_a17_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f17_ACQRET_count['Percnt-2023'] = dfd23_f17_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f17_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f17 = pd.DataFrame(pd.merge(dfd18_a17_ACQRET_count, dfd18_f17_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f17 = pd.DataFrame(pd.merge(dfd19_a17_ACQRET_count, dfd19_f17_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f17 = pd.DataFrame(pd.merge(dfd21_a17_ACQRET_count, dfd21_f17_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f17 = pd.DataFrame(pd.merge(dfd22_a17_ACQRET_count, dfd22_f17_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_17_f17 = pd.DataFrame(pd.merge(dfd23_a17_ACQRET_count, dfd23_f17_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_17_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f17 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f17, df_ACQRET_count_2_f17, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f17 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f17, df_ACQRET_count_3_f17, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f17 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f17, df_ACQRET_count_4_f17, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f17 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f17, df_ACQRET_count_17_f17, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f17 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17]
Concat_ACQRET_count_f1_f17 = pd.concat(ConcatFrames_ACQRET_count_f1_f17)
#print(tab(Concat_ACQRET_count_f1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f17 = Concat_ACQRET_count_f1_f17[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f17_Revenue_calc = pd.DataFrame(filter_17_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f17_Revenue_calc['Percent-2017'] = (dfd17_f17_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f17_Revenue_calc['Percent-2017'] = dfd17_f17_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f17_Revenue_calc['7DEvolution-2017'] = dfd17_f17_Revenue_calc['Total-2017'] - dfd17_f16_Revenue_calc['Total-2017']
#print(tab(dfd17_f17_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f17_Revenue_calc = pd.DataFrame(filter_17_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f17_Revenue_calc['Percent-2018'] = (dfd18_f17_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f17_Revenue_calc['Percent-2018'] = dfd18_f17_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f17_Revenue_calc['7DEvolution-2018'] = dfd18_f17_Revenue_calc['Total-2018'] - dfd18_f16_Revenue_calc['Total-2018']
#print(tab(dfd18_f17_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f17_Revenue_calc = pd.DataFrame(filter_17_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f17_Revenue_calc['Percent-2019'] = (dfd19_f17_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f17_Revenue_calc['Percent-2019'] = dfd19_f17_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f17_Revenue_calc['7DEvolution-2019'] = dfd19_f17_Revenue_calc['Total-2019'] - dfd19_f16_Revenue_calc['Total-2019']
#print(tab(dfd19_f17_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f17_Revenue_calc = pd.DataFrame(filter_17_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f17_Revenue_calc['Percent-2021'] = (dfd21_f17_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f17_Revenue_calc['Percent-2021'] = dfd21_f17_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f17_Revenue_calc['7DEvolution-2021'] = dfd21_f17_Revenue_calc['Total-2021'] - dfd21_f16_Revenue_calc['Total-2021']
#print(tab(dfd21_f17_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f17_Revenue_calc = pd.DataFrame(filter_17_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f17_Revenue_calc['Percent-2022'] = (dfd22_f17_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f17_Revenue_calc['Percent-2022'] = dfd22_f17_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f17_Revenue_calc['7DEvolution-2022'] = dfd22_f17_Revenue_calc['Total-2022'] - dfd22_f16_Revenue_calc['Total-2022']
#print(tab(dfd22_f17_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_Revenue_calc = pd.DataFrame(filter_17_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f17_Revenue_calc['Percent-2023'] = (dfd23_f17_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f17_Revenue_calc['Percent-2023'] = dfd23_f17_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f17_Revenue_calc['7DEvolution-2023'] = dfd23_f17_Revenue_calc['Total-2023'] - dfd23_f16_Revenue_calc['Total-2023']
#print(tab(dfd23_f17_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f17_RevenueEvolution_calc = pd.DataFrame(filter_17_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f17_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f17_Revenue_calc['Total-2023'] - dfd19_f17_Revenue_calc['Total-2019'])/ dfd19_f17_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f17_RevenueEvolution_calc['Evolution-2023'] = dfd23_f17_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f17_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f17 = pd.DataFrame(pd.merge(dfd17_f17_Revenue_calc, dfd18_f17_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f17 = pd.DataFrame(pd.merge(dfd19_f17_Revenue_calc, dfd21_f17_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f17 = pd.DataFrame(pd.merge(dfd22_f17_Revenue_calc, dfd23_f17_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f17_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f17, df_Revenue_calc_2_f17, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f17Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f17_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f17_Evolution, df_Revenue_calc_3_f17, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f17Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f17 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f17_Evolution, dfd23_f17_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f17 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17]
Concat_REV_count_f1_f17 = pd.concat(ConcatFrames_REV_count_f1_f17)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f17_Registrations_GRDel = pd.DataFrame(filtr_17_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f17_Registrations_GRDel = dfd17_f17_Registrations_GRDel.fillna('Unknown')
dfd17_f17_Registrations_GRDel['Percent-2017'] = (dfd17_f17_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f17_Registrations_GRDel['Percent-2017'] = dfd17_f17_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f17_Registrations_GRDel['7DEvolution-2017'] = dfd17_f17_Registrations_GRDel['Total-2017'] - dfd17_f16_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f17_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f17_Registrations_GRDel = pd.DataFrame(filtr_17_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f17_Registrations_GRDel = dfd18_f17_Registrations_GRDel.fillna('Unknown')
dfd18_f17_Registrations_GRDel['Percent-2018'] = (dfd18_f17_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f17_Registrations_GRDel['Percent-2018'] = dfd18_f17_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f17_Registrations_GRDel['7DEvolution-2018'] = dfd18_f17_Registrations_GRDel['Total-2018'] - dfd18_f16_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f17_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f17_Registrations_GRDel = pd.DataFrame(filtr_17_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f17_Registrations_GRDel = dfd19_f17_Registrations_GRDel.fillna('Unknown')
dfd19_f17_Registrations_GRDel['Percent-2019'] = (dfd19_f17_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f17_Registrations_GRDel['Percent-2019'] = dfd19_f17_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f17_Registrations_GRDel['7DEvolution-2019'] = dfd19_f17_Registrations_GRDel['Total-2019'] - dfd19_f16_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f17_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f17_Registrations_GRDel = pd.DataFrame(filtr_17_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f17_Registrations_GRDel = dfd21_f17_Registrations_GRDel.fillna('Unknown')
dfd21_f17_Registrations_GRDel['Percent-2021'] = (dfd21_f17_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f17_Registrations_GRDel['Percent-2021'] = dfd21_f17_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f17_Registrations_GRDel['7DEvolution-2021'] = dfd21_f17_Registrations_GRDel['Total-2021'] - dfd21_f16_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f17_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f17_Registrations_GRDel = pd.DataFrame(filtr_17_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f17_Registrations_GRDel = dfd22_f17_Registrations_GRDel.fillna('Unknown')
dfd22_f17_Registrations_GRDel['Percent-2022'] = (dfd22_f17_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f17_Registrations_GRDel['Percent-2022'] = dfd22_f17_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f17_Registrations_GRDel['7DEvolution-2022'] = dfd22_f17_Registrations_GRDel['Total-2022'] - dfd22_f16_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f17_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_Registrations_GRDel = pd.DataFrame(filtr_17_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f17_Registrations_GRDel = dfd23_f17_Registrations_GRDel.fillna('Unknown')
dfd23_f17_Registrations_GRDel['Percent-2023'] = (dfd23_f17_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f17_Registrations_GRDel['Percent-2023'] = dfd23_f17_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f17_Registrations_GRDel['7DEvolution-2023'] = dfd23_f17_Registrations_GRDel['Total-2023'] - dfd23_f16_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f17_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f17_Registrations_Evol_GRDel = pd.DataFrame(filtr_17_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f17_Registrations_Evol_GRDel = dfd23_f17_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f17_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f17_Registrations_GRDel['Total-2023'] - dfd19_f17_Registrations_GRDel['Total-2019'])/ dfd19_f17_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f17_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f17 = pd.concat([dfd17_f17_Registrations_GRDel, dfd18_f17_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f17 = pd.DataFrame(pd.merge(dfd17_f17_Registrations_GRDel, dfd18_f17_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f17 = pd.DataFrame(pd.merge(dfd19_f17_Registrations_GRDel, dfd21_f17_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f17 = pd.DataFrame(pd.merge(dfd22_f17_Registrations_GRDel, dfd23_f17_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f17 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f17, df_Registrations_GRDel_2_f17, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_17_f17 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f17, df_Registrations_GRDel_3_f17, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f17 = pd.DataFrame(pd.merge(df_Registrations_GRDel_17_f17, dfd23_f17_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f17 = df_Registrations_GRDel_f17[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f17 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17]
Concat_RegGRDel_count_f1_f17 = pd.concat(ConcatFrames_RegGRDel_count_f1_f17)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f17 = filtr_17_df18_GRdel[filtr_17_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f17 = filtr_17_df19_GRdel[filtr_17_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f17 = filtr_17_df21_GRdel[filtr_17_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f17 = filtr_17_df22_GRdel[filtr_17_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f17 = filtr_17_df23_GRdel[filtr_17_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f17.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f17.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a17_AC_RT_GRDel = pd.DataFrame(filtr_17_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f17_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f17.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f17_AC_RT_GRDel['Percent-2018'] = (dfd18_f17_AC_RT_GRDel['ACQ-2018'] / dfd18_f17_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f17_AC_RT_GRDel['Percent-2018'] = dfd18_f17_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f17_AC_RT_GRDel['RET-2018'] = dfd18_a17_AC_RT_GRDel['Total-2018'] - dfd18_f17_AC_RT_GRDel['ACQ-2018']
dfd18_f17_AC_RT_GRDel['Percnt-2018'] = (dfd18_f17_AC_RT_GRDel['RET-2018'] / dfd18_a17_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f17_AC_RT_GRDel['Percnt-2018'] = dfd18_f17_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f17_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a17_AC_RT_GRDel = pd.DataFrame(filtr_17_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f17_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f17.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f17_AC_RT_GRDel['Percent-2019'] = (dfd19_f17_AC_RT_GRDel['ACQ-2019'] / dfd19_f17_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f17_AC_RT_GRDel['Percent-2019'] = dfd19_f17_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f17_AC_RT_GRDel['RET-2019'] = dfd19_a17_AC_RT_GRDel['Total-2019'] - dfd19_f17_AC_RT_GRDel['ACQ-2019']
dfd19_f17_AC_RT_GRDel['Percnt-2019'] = (dfd19_f17_AC_RT_GRDel['RET-2019'] / dfd19_a17_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f17_AC_RT_GRDel['Percnt-2019'] = dfd19_f17_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f17_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a17_AC_RT_GRDel = pd.DataFrame(filtr_17_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f17_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f17.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f17_AC_RT_GRDel['Percent-2021'] = (dfd21_f17_AC_RT_GRDel['ACQ-2021'] / dfd21_f17_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f17_AC_RT_GRDel['Percent-2021'] = dfd21_f17_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f17_AC_RT_GRDel['RET-2021'] = dfd21_a17_AC_RT_GRDel['Total-2021'] - dfd21_f17_AC_RT_GRDel['ACQ-2021']
dfd21_f17_AC_RT_GRDel['Percnt-2021'] = (dfd21_f17_AC_RT_GRDel['RET-2021'] / dfd21_a17_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f17_AC_RT_GRDel['Percnt-2021'] = dfd21_f17_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f17_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a17_AC_RT_GRDel = pd.DataFrame(filtr_17_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f17_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f17.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f17_AC_RT_GRDel['Percent-2022'] = (dfd22_f17_AC_RT_GRDel['ACQ-2022'] / dfd22_f17_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f17_AC_RT_GRDel['Percent-2022'] = dfd22_f17_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f17_AC_RT_GRDel['RET-2022'] = dfd22_a17_AC_RT_GRDel['Total-2022'] - dfd22_f17_AC_RT_GRDel['ACQ-2022']
dfd22_f17_AC_RT_GRDel['Percnt-2022'] = (dfd22_f17_AC_RT_GRDel['RET-2022'] / dfd22_a17_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f17_AC_RT_GRDel['Percnt-2022'] = dfd22_f17_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f17_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a17_AC_RT_GRDel = pd.DataFrame(filtr_17_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f17_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f17.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f17_AC_RT_GRDel['Percent-2023'] = (dfd23_f17_AC_RT_GRDel['ACQ-2023'] / dfd23_f17_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f17_AC_RT_GRDel['Percent-2023'] = dfd23_f17_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f17_AC_RT_GRDel['RET-2023'] = dfd23_a17_AC_RT_GRDel['Total-2023'] - dfd23_f17_AC_RT_GRDel['ACQ-2023']
dfd23_f17_AC_RT_GRDel['Percnt-2023'] = (dfd23_f17_AC_RT_GRDel['RET-2023'] / dfd23_a17_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f17_AC_RT_GRDel['Percnt-2023'] = dfd23_f17_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f17_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f17 = pd.DataFrame(pd.merge_ordered(dfd18_a17_AC_RT_GRDel, dfd18_f17_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f17 = pd.DataFrame(pd.merge_ordered(dfd19_a17_AC_RT_GRDel, dfd19_f17_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f17 = pd.DataFrame(pd.merge_ordered(dfd21_a17_AC_RT_GRDel, dfd21_f17_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f17 = pd.DataFrame(pd.merge_ordered(dfd22_a17_AC_RT_GRDel, dfd22_f17_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_17_f17 = pd.DataFrame(pd.merge_ordered(dfd23_a17_AC_RT_GRDel, dfd23_f17_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f17 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f17, df_AC_ET_GRDel_2_f17, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f17 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f17, df_AC_ET_GRDel_3_f17, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f17 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f17, df_AC_ET_GRDel_4_f17, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f17 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f17, df_AC_ET_GRDel_17_f17, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f17 = df_AC_RT_GRDel_M4_f17[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f17 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17]
Conct_AC_RT_GRDel_f1_f17 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f17)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_17_df17_GRdel = filtr_17_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f17_Revenu_GRDel = pd.DataFrame(filtr_17_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f17_Revenu_GRDel['Percent-2017'] = (dfd17_f17_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f17_Revenu_GRDel['Percent-2017'] = dfd17_f17_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f17_Revenu_GRDel['7DEvolution-2017'] = dfd17_f17_Revenu_GRDel['Total-2017'] - dfd17_f16_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f17_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_17_df18_GRdel = filtr_17_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f17_Revenu_GRDel = pd.DataFrame(filtr_17_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f17_Revenu_GRDel['Percent-2018'] = (dfd18_f17_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f17_Revenu_GRDel['Percent-2018'] = dfd18_f17_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f17_Revenu_GRDel['7DEvolution-2018'] = dfd18_f17_Revenu_GRDel['Total-2018'] - dfd18_f16_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f17_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_17_df19_GRdel = filtr_17_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f17_Revenu_GRDel = pd.DataFrame(filtr_17_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f17_Revenu_GRDel['Percent-2019'] = (dfd19_f17_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f17_Revenu_GRDel['Percent-2019'] = dfd19_f17_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f17_Revenu_GRDel['7DEvolution-2019'] = dfd19_f17_Revenu_GRDel['Total-2019'] - dfd19_f16_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f17_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_17_df21_GRdel = filtr_17_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f17_Revenu_GRDel = pd.DataFrame(filtr_17_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f17_Revenu_GRDel['Percent-2021'] = (dfd21_f17_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f17_Revenu_GRDel['Percent-2021'] = dfd21_f17_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f17_Revenu_GRDel['7DEvolution-2021'] = dfd21_f17_Revenu_GRDel['Total-2021'] - dfd21_f16_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f17_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_17_df22_GRdel = filtr_17_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f17_Revenu_GRDel = pd.DataFrame(filtr_17_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f17_Revenu_GRDel['Percent-2022'] = (dfd22_f17_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f17_Revenu_GRDel['Percent-2022'] = dfd22_f17_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f17_Revenu_GRDel['7DEvolution-2022'] = dfd22_f17_Revenu_GRDel['Total-2022'] - dfd22_f16_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f17_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_17_df23_GRdel = filtr_17_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f17_Revenu_GRDel = pd.DataFrame(filtr_17_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f17_Revenu_GRDel['Percent-2023'] = (dfd23_f17_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f17_Revenu_GRDel['Percent-2023'] = dfd23_f17_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f17_Revenu_GRDel['7DEvolution-2023'] = dfd23_f17_Revenu_GRDel['Total-2023'] - dfd23_f16_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f17_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f17_Revenu_Evlt_GRDel = pd.DataFrame(filtr_17_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f17_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f17_Revenu_GRDel['Total-2023'] - dfd19_f17_Revenu_GRDel['Total-2019'])/ dfd19_f17_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f17_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f17_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f17_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f17 = pd.DataFrame(pd.merge(dfd17_f17_Revenu_GRDel, dfd18_f17_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f17 = pd.DataFrame(pd.merge(dfd19_f17_Revenu_GRDel, dfd21_f17_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f17 = pd.DataFrame(pd.merge(dfd22_f17_Revenu_GRDel, dfd23_f17_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f17 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f17, df_Revenu_GRDel_2_f17, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_17_f17 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f17, df_Revenu_GRDel_3_f17, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f17 = pd.DataFrame(pd.merge(df_Revenu_GRDel_17_f17, dfd23_f17_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f17 = df_Revenu_GRDel_f17[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f17 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17]
Conct_RV_GRDel_f1_f17 = pd.concat(ConcatFra_RV_GRDel_f1_f17)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f17_Profile_count = pd.DataFrame(filtr_17_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f17_Profile_count = dfd17_f17_Profile_count.fillna('Unknown')
dfd17_f17_Profile_count['Percent-2017'] = (dfd17_f17_Profile_count['Total-2017'] / dfd17_f17_Profile_count['Total-2017'].sum()) * 100
dfd17_f17_Profile_count['Percent-2017'] = dfd17_f17_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f17_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f17_Profile_count = pd.DataFrame(filtr_17_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f17_Profile_count = dfd18_f17_Profile_count.fillna('Unknown')
dfd18_f17_Profile_count['Percent-2018'] = (dfd18_f17_Profile_count['Total-2018'] / dfd18_f17_Profile_count['Total-2018'].sum()) * 100
dfd18_f17_Profile_count['Percent-2018'] = dfd18_f17_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f17_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f17_Profile_count = pd.DataFrame(filtr_17_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f17_Profile_count = dfd19_f17_Profile_count.fillna('Unknown')
dfd19_f17_Profile_count['Percent-2019'] = (dfd19_f17_Profile_count['Total-2019'] / dfd19_f17_Profile_count['Total-2019'].sum()) * 100
dfd19_f17_Profile_count['Percent-2019'] = dfd19_f17_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f17_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f17_Profile_count = pd.DataFrame(filtr_17_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f17_Profile_count = dfd21_f17_Profile_count.fillna('Unknown')
dfd21_f17_Profile_count['Percent-2021'] = (dfd21_f17_Profile_count['Total-2021'] / dfd21_f17_Profile_count['Total-2021'].sum()) * 100
dfd21_f17_Profile_count['Percent-2021'] = dfd21_f17_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f17_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f17_Profile_count = pd.DataFrame(filtr_17_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f17_Profile_count = dfd22_f17_Profile_count.fillna('Unknown')
dfd22_f17_Profile_count['Percent-2022'] = (dfd22_f17_Profile_count['Total-2022'] / dfd22_f17_Profile_count['Total-2022'].sum()) * 100
dfd22_f17_Profile_count['Percent-2022'] = dfd22_f17_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f17_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_Profile_count = pd.DataFrame(filtr_17_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f17_Profile_count = dfd23_f17_Profile_count.fillna('Unknown')
dfd23_f17_Profile_count['Percent-2023'] = (dfd23_f17_Profile_count['Total-2023'] / dfd23_f17_Profile_count['Total-2023'].sum()) * 100
dfd23_f17_Profile_count['Percent-2023'] = dfd23_f17_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f17_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f17 = pd.DataFrame(pd.merge(dfd17_f17_Profile_count, dfd18_f17_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f17 = pd.DataFrame(pd.merge(dfd19_f17_Profile_count, dfd21_f17_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f17 = pd.DataFrame(pd.merge(dfd22_f17_Profile_count, dfd23_f17_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f17 = pd.DataFrame(pd.merge(df_Profile_Count_1_f17, df_Profile_Count_2_f17, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f17 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f17, df_Profile_Count_3_f17, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f17 = df_Profile_Count_m2_f17.append(df_Profile_Count_m2_f17.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f17['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f17_Pass_count = pd.DataFrame(filtr_17_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f17_Pass_count = dfd17_f17_Pass_count.fillna('Unknown')
dfd17_f17_Pass_count['Percent-2017'] = (dfd17_f17_Pass_count['Total-2017'] / dfd17_f17_Pass_count['Total-2017'].sum()) * 100
dfd17_f17_Pass_count['Percent-2017'] = dfd17_f17_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f17_Pass_count = pd.DataFrame(filtr_17_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f17_Pass_count = dfd18_f17_Pass_count.fillna('Unknown')
dfd18_f17_Pass_count['Percent-2018'] = (dfd18_f17_Pass_count['Total-2018'] / dfd18_f17_Pass_count['Total-2018'].sum()) * 100
dfd18_f17_Pass_count['Percent-2018'] = dfd18_f17_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f17_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f17_Pass_count = pd.DataFrame(filtr_17_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f17_Pass_count = dfd19_f17_Pass_count.fillna('Unknown')
dfd19_f17_Pass_count['Percent-2019'] = (dfd19_f17_Pass_count['Total-2019'] / dfd19_f17_Pass_count['Total-2019'].sum()) * 100
dfd19_f17_Pass_count['Percent-2019'] = dfd19_f17_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f17_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f17_Pass_count = pd.DataFrame(filtr_17_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f17_Pass_count = dfd21_f17_Pass_count.fillna('Unknown')
dfd21_f17_Pass_count['Percent-2021'] = (dfd21_f17_Pass_count['Total-2021'] / dfd21_f17_Pass_count['Total-2021'].sum()) * 100
dfd21_f17_Pass_count['Percent-2021'] = dfd21_f17_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f17_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f17_Pass_count = pd.DataFrame(filtr_17_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f17_Pass_count = dfd22_f17_Pass_count.fillna('Unknown')
dfd22_f17_Pass_count['Percent-2022'] = (dfd22_f17_Pass_count['Total-2022'] / dfd22_f17_Pass_count['Total-2022'].sum()) * 100
dfd22_f17_Pass_count['Percent-2022'] = dfd22_f17_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f17_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_Pass_count = pd.DataFrame(filtr_17_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f17_Pass_count = dfd23_f17_Pass_count.fillna('Unknown')
dfd23_f17_Pass_count['Percent-2023'] = (dfd23_f17_Pass_count['Total-2023'] / dfd23_f17_Pass_count['Total-2023'].sum()) * 100
dfd23_f17_Pass_count['Percent-2023'] = dfd23_f17_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f17_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f17 = pd.DataFrame(pd.merge(dfd17_f17_Pass_count, dfd18_f17_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f17 = pd.DataFrame(pd.merge(dfd19_f17_Pass_count, dfd21_f17_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f17 = pd.DataFrame(pd.merge(dfd22_f17_Pass_count, dfd23_f17_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f17 = pd.DataFrame(pd.merge(df_Pass_Count_1_f17, df_Pass_Count_2_f17, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f17 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f17, df_Pass_Count_3_f17, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f17 = df_Pass_Count_m2_f17.append(df_Pass_Count_m2_f17.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f17['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f17_Attendees_Country_count = pd.DataFrame(filtr_17_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f17_Attendees_Country_count = dfd17_f17_Attendees_Country_count.fillna('Unknown')
dfd17_f17_Attendees_Country_count['Percent-2017'] = (dfd17_f17_Attendees_Country_count['Total-2017'] / dfd17_f17_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f17_Attendees_Country_count['Percent-2017'] = dfd17_f17_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f17_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f17_Attendees_Country_count = pd.DataFrame(filtr_17_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f17_Attendees_Country_count = dfd18_f17_Attendees_Country_count.fillna('Unknown')
dfd18_f17_Attendees_Country_count['Percent-2018'] = (dfd18_f17_Attendees_Country_count['Total-2018'] / dfd18_f17_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f17_Attendees_Country_count['Percent-2018'] = dfd18_f17_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f17_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f17_Attendees_Country_count = pd.DataFrame(filtr_17_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f17_Attendees_Country_count = dfd19_f17_Attendees_Country_count.fillna('Unknown')
dfd19_f17_Attendees_Country_count['Percent-2019'] = (dfd19_f17_Attendees_Country_count['Total-2019'] / dfd19_f17_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f17_Attendees_Country_count['Percent-2019'] = dfd19_f17_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f17_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f17_Attendees_Country_count = pd.DataFrame(filtr_17_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f17_Attendees_Country_count = dfd21_f17_Attendees_Country_count.fillna('Unknown')
dfd21_f17_Attendees_Country_count['Percent-2021'] = (dfd21_f17_Attendees_Country_count['Total-2021'] / dfd21_f17_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f17_Attendees_Country_count['Percent-2021'] = dfd21_f17_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f17_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f17_Attendees_Country_count = pd.DataFrame(filtr_17_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f17_Attendees_Country_count = dfd22_f17_Attendees_Country_count.fillna('Unknown')
dfd22_f17_Attendees_Country_count['Percent-2022'] = (dfd22_f17_Attendees_Country_count['Total-2022'] / dfd22_f17_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f17_Attendees_Country_count['Percent-2022'] = dfd22_f17_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f17_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_Attendees_Country_count = pd.DataFrame(filtr_17_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f17_Attendees_Country_count = dfd23_f17_Attendees_Country_count.fillna('Unknown')
dfd23_f17_Attendees_Country_count['Percent-2023'] = (dfd23_f17_Attendees_Country_count['Total-2023'] / dfd23_f17_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f17_Attendees_Country_count['Percent-2023'] = dfd23_f17_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f17_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f17 = pd.DataFrame(pd.merge(dfd17_f17_Attendees_Country_count, dfd18_f17_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f17 = pd.DataFrame(pd.merge(dfd19_f17_Attendees_Country_count, dfd21_f17_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f17 = pd.DataFrame(pd.merge(dfd22_f17_Attendees_Country_count, dfd23_f17_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f17 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f17, dfAttendees_Country_Count_2_f17, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f17.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f17 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f17, dfAttendees_Country_Count_3_f17, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f17 = dfAttendees_Country_Count_m2_f17.append(dfAttendees_Country_Count_m2_f17.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f17['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f17_ATTENDEES_AREAS_count = pd.DataFrame(filtr_17_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f17_ATTENDEES_AREAS_count = dfd17_f17_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f17_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f17_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f17_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f17_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f17_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f17_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f17_ATTENDEES_AREAS_count = pd.DataFrame(filtr_17_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f17_ATTENDEES_AREAS_count = dfd18_f17_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f17_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f17_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f17_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f17_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f17_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f17_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f17_ATTENDEES_AREAS_count = pd.DataFrame(filtr_17_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f17_ATTENDEES_AREAS_count = dfd19_f17_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f17_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f17_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f17_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f17_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f17_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f17_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f17_ATTENDEES_AREAS_count = pd.DataFrame(filtr_17_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f17_ATTENDEES_AREAS_count = dfd21_f17_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f17_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f17_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f17_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f17_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f17_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f17_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f17_ATTENDEES_AREAS_count = pd.DataFrame(filtr_17_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f17_ATTENDEES_AREAS_count = dfd22_f17_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f17_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f17_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f17_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f17_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f17_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f17_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_ATTENDEES_AREAS_count = pd.DataFrame(filtr_17_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f17_ATTENDEES_AREAS_count = dfd23_f17_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f17_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f17_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f17_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f17_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f17_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f17_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f17 = pd.DataFrame(pd.merge(dfd17_f17_ATTENDEES_AREAS_count, dfd18_f17_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f17 = pd.DataFrame(pd.merge(dfd19_f17_ATTENDEES_AREAS_count, dfd21_f17_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f17 = pd.DataFrame(pd.merge(dfd22_f17_ATTENDEES_AREAS_count, dfd23_f17_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f17.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f17 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f17, df_ATTENDEES_AREAS_count_2_f17, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f17 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f17, df_ATTENDEES_AREAS_count_3_f17, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f17 = df_ATTENDEES_AREAS_count_m2_f17.append(df_ATTENDEES_AREAS_count_m2_f17.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f17['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f17_Attendees_Specialty_count = pd.DataFrame(filtr_17_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f17_Attendees_Specialty_count = dfd17_f17_Attendees_Specialty_count.fillna('Unknown')
dfd17_f17_Attendees_Specialty_count['Percent-2017'] = (dfd17_f17_Attendees_Specialty_count['Total-2017'] / dfd17_f17_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f17_Attendees_Specialty_count['Percent-2017'] = dfd17_f17_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f17_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f17_Attendees_Specialty_count = pd.DataFrame(filtr_17_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f17_Attendees_Specialty_count = dfd18_f17_Attendees_Specialty_count.fillna('Unknown')
dfd18_f17_Attendees_Specialty_count['Percent-2018'] = (dfd18_f17_Attendees_Specialty_count['Total-2018'] / dfd18_f17_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f17_Attendees_Specialty_count['Percent-2018'] = dfd18_f17_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f17_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f17_Attendees_Specialty_count = pd.DataFrame(filtr_17_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f17_Attendees_Specialty_count = dfd19_f17_Attendees_Specialty_count.fillna('Unknown')
dfd19_f17_Attendees_Specialty_count['Percent-2019'] = (dfd19_f17_Attendees_Specialty_count['Total-2019'] / dfd19_f17_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f17_Attendees_Specialty_count['Percent-2019'] = dfd19_f17_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f17_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f17_Attendees_Specialty_count = pd.DataFrame(filtr_17_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f17_Attendees_Specialty_count = dfd21_f17_Attendees_Specialty_count.fillna('Unknown')
dfd21_f17_Attendees_Specialty_count['Percent-2021'] = (dfd21_f17_Attendees_Specialty_count['Total-2021'] / dfd21_f17_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f17_Attendees_Specialty_count['Percent-2021'] = dfd21_f17_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f17_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f17_Attendees_Specialty_count = pd.DataFrame(filtr_17_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f17_Attendees_Specialty_count = dfd22_f17_Attendees_Specialty_count.fillna('Unknown')
dfd22_f17_Attendees_Specialty_count['Percent-2022'] = (dfd22_f17_Attendees_Specialty_count['Total-2022'] / dfd22_f17_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f17_Attendees_Specialty_count['Percent-2022'] = dfd22_f17_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f17_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f17_Attendees_Specialty_count = pd.DataFrame(filtr_17_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f17_Attendees_Specialty_count = dfd23_f17_Attendees_Specialty_count.fillna('Unknown')
dfd23_f17_Attendees_Specialty_count['Percent-2023'] = (dfd23_f17_Attendees_Specialty_count['Total-2023'] / dfd23_f17_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f17_Attendees_Specialty_count['Percent-2023'] = dfd23_f17_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f17_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f17 = pd.DataFrame(pd.merge(dfd17_f17_Attendees_Specialty_count, dfd18_f17_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f17 = pd.DataFrame(pd.merge(dfd19_f17_Attendees_Specialty_count, dfd21_f17_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f17 = pd.DataFrame(pd.merge(dfd22_f17_Attendees_Specialty_count, dfd23_f17_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f17 = pd.DataFrame(pd.merge(df_Specialty_count_1_f17, df_Specialty_count_2_f17, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f17.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f17 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f17, df_Specialty_count_3_f17, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f17 = df_Specialty_count_m2_f17.append(df_Specialty_count_m2_f17.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f17['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f17['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f17['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f17 = Concat_Registrations_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f17['Total-2017'] = Concat_Registrations_count_f1_f17['Total-2017'].astype(int)
Concat_Registrations_count_f1_f17['Percent-2017'] = Concat_Registrations_count_f1_f17['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f17['7DEvolution-2017'] = Concat_Registrations_count_f1_f17['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f17['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f17['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f17 = Concat_Registrations_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f17['Total-2018'] = Concat_Registrations_count_f1_f17['Total-2018'].astype(int)
Concat_Registrations_count_f1_f17['Percent-2018'] = Concat_Registrations_count_f1_f17['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f17['7DEvolution-2018'] = Concat_Registrations_count_f1_f17['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f17['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f17['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f17 = Concat_Registrations_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f17['Total-2019'] = Concat_Registrations_count_f1_f17['Total-2019'].astype(int)
Concat_Registrations_count_f1_f17['Percent-2019'] = Concat_Registrations_count_f1_f17['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f17['7DEvolution-2019'] = Concat_Registrations_count_f1_f17['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f17['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f17['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f17 = Concat_Registrations_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f17['Total-2021'] = Concat_Registrations_count_f1_f17['Total-2021'].astype(int)
Concat_Registrations_count_f1_f17['Percent-2021'] = Concat_Registrations_count_f1_f17['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f17['7DEvolution-2021'] = Concat_Registrations_count_f1_f17['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f17['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f17['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f17 = Concat_Registrations_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f17['Total-2022'] = Concat_Registrations_count_f1_f17['Total-2022'].astype(int)
Concat_Registrations_count_f1_f17['Percent-2022'] = Concat_Registrations_count_f1_f17['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f17['7DEvolution-2022'] = Concat_Registrations_count_f1_f17['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f17['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f17['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f17 = Concat_Registrations_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f17['Total-2023'] = Concat_Registrations_count_f1_f17['Total-2023'].astype(int)
Concat_Registrations_count_f1_f17['Percent-2023'] = Concat_Registrations_count_f1_f17['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f17['7DEvolution-2023'] = Concat_Registrations_count_f1_f17['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f17['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f17['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f17 = Concat_ACQRET_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f17['Total-2018'] = Concat_ACQRET_count_f1_f17['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f17['ACQ-2018'] = Concat_ACQRET_count_f1_f17['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f17['Percent-2018'] = Concat_ACQRET_count_f1_f17['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f17['RET-2018'] = Concat_ACQRET_count_f1_f17['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f17['Percnt-2018'] = Concat_ACQRET_count_f1_f17['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f17['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f17['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f17 = Concat_ACQRET_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f17['Total-2019'] = Concat_ACQRET_count_f1_f17['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f17['ACQ-2019'] = Concat_ACQRET_count_f1_f17['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f17['Percent-2019'] = Concat_ACQRET_count_f1_f17['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f17['RET-2019'] = Concat_ACQRET_count_f1_f17['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f17['Percnt-2019'] = Concat_ACQRET_count_f1_f17['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f17['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f17['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f17 = Concat_ACQRET_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f17['Total-2021'] = Concat_ACQRET_count_f1_f17['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f17['ACQ-2021'] = Concat_ACQRET_count_f1_f17['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f17['Percent-2021'] = Concat_ACQRET_count_f1_f17['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f17['RET-2021'] = Concat_ACQRET_count_f1_f17['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f17['Percnt-2021'] = Concat_ACQRET_count_f1_f17['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f17['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f17['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f17 = Concat_ACQRET_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f17['Total-2022'] = Concat_ACQRET_count_f1_f17['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f17['ACQ-2022'] = Concat_ACQRET_count_f1_f17['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f17['Percent-2022'] = Concat_ACQRET_count_f1_f17['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f17['RET-2022'] = Concat_ACQRET_count_f1_f17['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f17['Percnt-2022'] = Concat_ACQRET_count_f1_f17['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f17['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f17['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f17 = Concat_ACQRET_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f17['Total-2023'] = Concat_ACQRET_count_f1_f17['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f17['ACQ-2023'] = Concat_ACQRET_count_f1_f17['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f17['Percent-2023'] = Concat_ACQRET_count_f1_f17['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f17['RET-2023'] = Concat_ACQRET_count_f1_f17['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f17['Percnt-2023'] = Concat_ACQRET_count_f1_f17['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f17['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f17['Total-2017'],errors='coerce')
Concat_REV_count_f1_f17 = Concat_REV_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f17['Total-2017'] = Concat_REV_count_f1_f17['Total-2017'].astype(int)
Concat_REV_count_f1_f17['Percent-2017'] = Concat_REV_count_f1_f17['Percent-2017'].astype(float)
Concat_REV_count_f1_f17['7DEvolution-2017'] = Concat_REV_count_f1_f17['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f17['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f17['Total-2018'],errors='coerce')
Concat_REV_count_f1_f17 = Concat_REV_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f17['Total-2018'] = Concat_REV_count_f1_f17['Total-2018'].astype(int)
Concat_REV_count_f1_f17['Percent-2018'] = Concat_REV_count_f1_f17['Percent-2018'].astype(float)
Concat_REV_count_f1_f17['7DEvolution-2018'] = Concat_REV_count_f1_f17['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f17['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f17['Total-2019'],errors='coerce')
Concat_REV_count_f1_f17 = Concat_REV_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f17['Total-2019'] = Concat_REV_count_f1_f17['Total-2019'].astype(int)
Concat_REV_count_f1_f17['Percent-2019'] = Concat_REV_count_f1_f17['Percent-2019'].astype(float)
Concat_REV_count_f1_f17['7DEvolution-2019'] = Concat_REV_count_f1_f17['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f17['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f17['Total-2022'],errors='coerce')
Concat_REV_count_f1_f17 = Concat_REV_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f17['Total-2022'] = Concat_REV_count_f1_f17['Total-2022'].astype(int)
Concat_REV_count_f1_f17['Percent-2022'] = Concat_REV_count_f1_f17['Percent-2022'].astype(float)
Concat_REV_count_f1_f17['7DEvolution-2022'] = Concat_REV_count_f1_f17['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f17['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f17['Total-2023'],errors='coerce')
Concat_REV_count_f1_f17 = Concat_REV_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f17['Total-2023'] = Concat_REV_count_f1_f17['Total-2023'].astype(int)
Concat_REV_count_f1_f17['Percent-2023'] = Concat_REV_count_f1_f17['Percent-2023'].astype(float)
Concat_REV_count_f1_f17['7DEvolution-2023'] = Concat_REV_count_f1_f17['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f17['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f17['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f17 = Concat_RegGRDel_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f17['Total-2017'] = Concat_RegGRDel_count_f1_f17['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f17['Percent-2017'] = Concat_RegGRDel_count_f1_f17['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f17['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f17['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f17['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f17['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f17 = Concat_RegGRDel_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f17['Total-2018'] = Concat_RegGRDel_count_f1_f17['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f17['Percent-2018'] = Concat_RegGRDel_count_f1_f17['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f17['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f17['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f17['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f17['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f17 = Concat_RegGRDel_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f17['Total-2019'] = Concat_RegGRDel_count_f1_f17['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f17['Percent-2019'] = Concat_RegGRDel_count_f1_f17['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f17['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f17['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f17['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f17['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f17 = Concat_RegGRDel_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f17['Total-2021'] = Concat_RegGRDel_count_f1_f17['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f17['Percent-2021'] = Concat_RegGRDel_count_f1_f17['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f17['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f17['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f17['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f17['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f17 = Concat_RegGRDel_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f17['Total-2022'] = Concat_RegGRDel_count_f1_f17['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f17['Percent-2022'] = Concat_RegGRDel_count_f1_f17['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f17['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f17['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f17['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f17['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f17 = Concat_RegGRDel_count_f1_f17.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f17['Total-2023'] = Concat_RegGRDel_count_f1_f17['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f17['Percent-2023'] = Concat_RegGRDel_count_f1_f17['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f17['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f17['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f17['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f17['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f17 = Conct_AC_RT_GRDel_f1_f17.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f17['Total-2018'] = Conct_AC_RT_GRDel_f1_f17['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f17['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f17['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f17['Percent-2018'] = Conct_AC_RT_GRDel_f1_f17['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f17['RET-2018'] = Conct_AC_RT_GRDel_f1_f17['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f17['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f17['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f17['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f17['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f17 = Conct_AC_RT_GRDel_f1_f17.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f17['Total-2019'] = Conct_AC_RT_GRDel_f1_f17['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f17['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f17['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f17['Percent-2019'] = Conct_AC_RT_GRDel_f1_f17['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f17['RET-2019'] = Conct_AC_RT_GRDel_f1_f17['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f17['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f17['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f17['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f17['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f17 = Conct_AC_RT_GRDel_f1_f17.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f17['Total-2021'] = Conct_AC_RT_GRDel_f1_f17['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f17['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f17['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f17['Percent-2021'] = Conct_AC_RT_GRDel_f1_f17['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f17['RET-2021'] = Conct_AC_RT_GRDel_f1_f17['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f17['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f17['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f17['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f17['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f17 = Conct_AC_RT_GRDel_f1_f17.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f17['Total-2022'] = Conct_AC_RT_GRDel_f1_f17['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f17['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f17['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f17['Percent-2022'] = Conct_AC_RT_GRDel_f1_f17['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f17['RET-2022'] = Conct_AC_RT_GRDel_f1_f17['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f17['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f17['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f17['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f17['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f17 = Conct_AC_RT_GRDel_f1_f17.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f17['Total-2023'] = Conct_AC_RT_GRDel_f1_f17['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f17['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f17['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f17['Percent-2023'] = Conct_AC_RT_GRDel_f1_f17['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f17['RET-2023'] = Conct_AC_RT_GRDel_f1_f17['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f17['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f17['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f17['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f17['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f17 = Conct_RV_GRDel_f1_f17.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f17['Total-2017'] = Conct_RV_GRDel_f1_f17['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f17['Percent-2017'] = Conct_RV_GRDel_f1_f17['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f17['7DEvolution-2017'] = Conct_RV_GRDel_f1_f17['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f17['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f17['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f17 = Conct_RV_GRDel_f1_f17.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f17['Total-2018'] = Conct_RV_GRDel_f1_f17['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f17['Percent-2018'] = Conct_RV_GRDel_f1_f17['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f17['7DEvolution-2018'] = Conct_RV_GRDel_f1_f17['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f17['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f17['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f17 = Conct_RV_GRDel_f1_f17.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f17['Total-2019'] = Conct_RV_GRDel_f1_f17['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f17['Percent-2019'] = Conct_RV_GRDel_f1_f17['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f17['7DEvolution-2019'] = Conct_RV_GRDel_f1_f17['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f17['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f17['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f17 = Conct_RV_GRDel_f1_f17.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f17['Total-2022'] = Conct_RV_GRDel_f1_f17['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f17['Percent-2022'] = Conct_RV_GRDel_f1_f17['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f17['7DEvolution-2022'] = Conct_RV_GRDel_f1_f17['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f17['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f17['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f17 = Conct_RV_GRDel_f1_f17.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f17['Total-2023'] = Conct_RV_GRDel_f1_f17['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f17['Percent-2023'] = Conct_RV_GRDel_f1_f17['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f17['7DEvolution-2023'] = Conct_RV_GRDel_f1_f17['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f17['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f17['Total-2017'],errors='coerce')
df_Profile_Count_m2_f17 = df_Profile_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f17['Total-2017'] = df_Profile_Count_m2_f17['Total-2017'].astype(int)
df_Profile_Count_m2_f17['Percent-2017'] = df_Profile_Count_m2_f17['Percent-2017'].astype(float)

df_Profile_Count_m2_f17['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f17['Total-2018'],errors='coerce')
df_Profile_Count_m2_f17 = df_Profile_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f17['Total-2018'] = df_Profile_Count_m2_f17['Total-2018'].astype(int)
df_Profile_Count_m2_f17['Percent-2018'] = df_Profile_Count_m2_f17['Percent-2018'].astype(float)

df_Profile_Count_m2_f17['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f17['Total-2019'],errors='coerce')
df_Profile_Count_m2_f17 = df_Profile_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f17['Total-2019'] = df_Profile_Count_m2_f17['Total-2019'].astype(int)
df_Profile_Count_m2_f17['Percent-2019'] = df_Profile_Count_m2_f17['Percent-2019'].astype(float)

df_Profile_Count_m2_f17['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f17['Total-2021'],errors='coerce')
df_Profile_Count_m2_f17 = df_Profile_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f17['Total-2021'] = df_Profile_Count_m2_f17['Total-2021'].astype(int)
df_Profile_Count_m2_f17['Percent-2021'] = df_Profile_Count_m2_f17['Percent-2021'].astype(float)

df_Profile_Count_m2_f17['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f17['Total-2022'],errors='coerce')
df_Profile_Count_m2_f17 = df_Profile_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f17['Total-2022'] = df_Profile_Count_m2_f17['Total-2022'].astype(int)
df_Profile_Count_m2_f17['Percent-2022'] = df_Profile_Count_m2_f17['Percent-2022'].astype(float)

df_Profile_Count_m2_f17['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f17['Total-2023'],errors='coerce')
df_Profile_Count_m2_f17 = df_Profile_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f17['Total-2023'] = df_Profile_Count_m2_f17['Total-2023'].astype(int)
df_Profile_Count_m2_f17['Percent-2023'] = df_Profile_Count_m2_f17['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f17['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f17['Total-2017'],errors='coerce')
df_Pass_Count_m2_f17 = df_Pass_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f17['Total-2017'] = df_Pass_Count_m2_f17['Total-2017'].astype(int)
df_Pass_Count_m2_f17['Percent-2017'] = df_Pass_Count_m2_f17['Percent-2017'].astype(float)

df_Pass_Count_m2_f17['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f17['Total-2018'],errors='coerce')
df_Pass_Count_m2_f17 = df_Pass_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f17['Total-2018'] = df_Pass_Count_m2_f17['Total-2018'].astype(int)
df_Pass_Count_m2_f17['Percent-2018'] = df_Pass_Count_m2_f17['Percent-2018'].astype(float)

df_Pass_Count_m2_f17['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f17['Total-2019'],errors='coerce')
df_Pass_Count_m2_f17 = df_Pass_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f17['Total-2019'] = df_Pass_Count_m2_f17['Total-2019'].astype(int)
df_Pass_Count_m2_f17['Percent-2019'] = df_Pass_Count_m2_f17['Percent-2019'].astype(float)

df_Pass_Count_m2_f17['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f17['Total-2021'],errors='coerce')
df_Pass_Count_m2_f17 = df_Pass_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f17['Total-2021'] = df_Pass_Count_m2_f17['Total-2021'].astype(int)
df_Pass_Count_m2_f17['Percent-2021'] = df_Pass_Count_m2_f17['Percent-2021'].astype(float)

df_Pass_Count_m2_f17['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f17['Total-2022'],errors='coerce')
df_Pass_Count_m2_f17 = df_Pass_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f17['Total-2022'] = df_Pass_Count_m2_f17['Total-2022'].astype(int)
df_Pass_Count_m2_f17['Percent-2022'] = df_Pass_Count_m2_f17['Percent-2022'].astype(float)

df_Pass_Count_m2_f17['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f17['Total-2023'],errors='coerce')
df_Pass_Count_m2_f17 = df_Pass_Count_m2_f17.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f17['Total-2023'] = df_Pass_Count_m2_f17['Total-2023'].astype(int)
df_Pass_Count_m2_f17['Percent-2023'] = df_Pass_Count_m2_f17['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f17['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f17['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f17 = dfAttendees_Country_Count_m2_f17.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f17['Total-2017'] = dfAttendees_Country_Count_m2_f17['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f17['Percent-2017'] = dfAttendees_Country_Count_m2_f17['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f17['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f17['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f17 = dfAttendees_Country_Count_m2_f17.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f17['Total-2018'] = dfAttendees_Country_Count_m2_f17['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f17['Percent-2018'] = dfAttendees_Country_Count_m2_f17['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f17['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f17['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f17 = dfAttendees_Country_Count_m2_f17.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f17['Total-2019'] = dfAttendees_Country_Count_m2_f17['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f17['Percent-2019'] = dfAttendees_Country_Count_m2_f17['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f17['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f17['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f17 = dfAttendees_Country_Count_m2_f17.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f17['Total-2021'] = dfAttendees_Country_Count_m2_f17['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f17['Percent-2021'] = dfAttendees_Country_Count_m2_f17['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f17['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f17['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f17 = dfAttendees_Country_Count_m2_f17.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f17['Total-2022'] = dfAttendees_Country_Count_m2_f17['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f17['Percent-2022'] = dfAttendees_Country_Count_m2_f17['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f17['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f17['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f17 = dfAttendees_Country_Count_m2_f17.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f17['Total-2023'] = dfAttendees_Country_Count_m2_f17['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f17['Percent-2023'] = dfAttendees_Country_Count_m2_f17['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f17['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f17['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f17 = df_ATTENDEES_AREAS_count_m2_f17.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f17['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f17['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f17['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f17['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f17['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f17['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f17 = df_ATTENDEES_AREAS_count_m2_f17.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f17['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f17['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f17['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f17['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f17['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f17['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f17 = df_ATTENDEES_AREAS_count_m2_f17.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f17['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f17['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f17['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f17['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f17['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f17['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f17 = df_ATTENDEES_AREAS_count_m2_f17.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f17['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f17['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f17['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f17['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f17['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f17['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f17 = df_ATTENDEES_AREAS_count_m2_f17.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f17['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f17['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f17['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f17['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f17['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f17['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f17 = df_ATTENDEES_AREAS_count_m2_f17.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f17['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f17['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f17['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f17['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f17['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f17['Total-2017'],errors='coerce')
df_Specialty_count_m2_f17 = df_Specialty_count_m2_f17.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f17['Total-2017'] = df_Specialty_count_m2_f17['Total-2017'].astype(int)
df_Specialty_count_m2_f17['Percent-2017'] = df_Specialty_count_m2_f17['Percent-2017'].astype(float)

df_Specialty_count_m2_f17['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f17['Total-2018'],errors='coerce')
df_Specialty_count_m2_f17 = df_Specialty_count_m2_f17.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f17['Total-2018'] = df_Specialty_count_m2_f17['Total-2018'].astype(int)
df_Specialty_count_m2_f17['Percent-2018'] = df_Specialty_count_m2_f17['Percent-2018'].astype(float)

df_Specialty_count_m2_f17['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f17['Total-2019'],errors='coerce')
df_Specialty_count_m2_f17 = df_Specialty_count_m2_f17.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f17['Total-2019'] = df_Specialty_count_m2_f17['Total-2019'].astype(int)
df_Specialty_count_m2_f17['Percent-2019'] = df_Specialty_count_m2_f17['Percent-2019'].astype(float)

df_Specialty_count_m2_f17['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f17['Total-2021'],errors='coerce')
df_Specialty_count_m2_f17 = df_Specialty_count_m2_f17.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f17['Total-2021'] = df_Specialty_count_m2_f17['Total-2021'].astype(int)
df_Specialty_count_m2_f17['Percent-2021'] = df_Specialty_count_m2_f17['Percent-2021'].astype(float)

df_Specialty_count_m2_f17['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f17['Total-2022'],errors='coerce')
df_Specialty_count_m2_f17 = df_Specialty_count_m2_f17.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f17['Total-2022'] = df_Specialty_count_m2_f17['Total-2022'].astype(int)
df_Specialty_count_m2_f17['Percent-2022'] = df_Specialty_count_m2_f17['Percent-2022'].astype(float)

df_Specialty_count_m2_f17['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f17['Total-2023'],errors='coerce')
df_Specialty_count_m2_f17 = df_Specialty_count_m2_f17.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f17['Total-2023'] = df_Specialty_count_m2_f17['Total-2023'].astype(int)
df_Specialty_count_m2_f17['Percent-2023'] = df_Specialty_count_m2_f17['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f17.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f17.dtypes)
#print(df_Specialty_count_m2_f17.dtypes)

#print(dfAttendees_Country_Count_m2_f17.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f17.dtypes)
#print(df_Specialty_count_m2_f17.dtypes)

# EXCEL FILE
writerf17 = pd.ExcelWriter(outputExcelFile_f17, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f17.to_excel\
    (writerf17, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f17.to_excel\
    (writerf17, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f17.to_excel\
    (writerf17, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f17.to_excel\
    (writerf17, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f17.to_excel\
    (writerf17, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f17.to_excel\
    (writerf17, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f17.to_excel\
    (writerf17, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f17.to_excel\
    (writerf17, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f17.to_excel\
    (writerf17, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f17.to_excel\
    (writerf17, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f17.to_excel\
    (writerf17, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf17.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f17)

workbook.save(outputExcelFile_f17)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 77 days**********************************************')
print('************************************End of 77 days**********************************************')
print('************************************End of 77 days**********************************************')
print('************************************End of 77 days**********************************************')
print('************************************End of 77 days**********************************************')
print('************************************End of 77 days**********************************************')
print('************************************End of 77 days**********************************************')
print('************************************End of 77 days**********************************************')
print('************************************End of 77 days**********************************************')

#unit 1
#Total Number of Registrations
dfd17_f18_Registrations_count = pd.DataFrame(filter_18_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f18_Registrations_count = dfd17_f18_Registrations_count.fillna('Unknown')
dfd17_f18_Registrations_count['Percent-2017'] = (dfd17_f18_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f18_Registrations_count['Percent-2017'] = dfd17_f18_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f18_Registrations_count['7DEvolution-2017'] = dfd17_f18_Registrations_count['Total-2017'] - dfd17_f17_Registrations_count['Total-2017']
#print(tab(dfd17_f18_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f18_Registrations_count = pd.DataFrame(filter_18_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f18_Registrations_count = dfd18_f18_Registrations_count.fillna('Unknown')
dfd18_f18_Registrations_count['Percent-2018'] = (dfd18_f18_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f18_Registrations_count['Percent-2018'] = dfd18_f18_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f18_Registrations_count['7DEvolution-2018'] = dfd18_f18_Registrations_count['Total-2018'] - dfd18_f17_Registrations_count['Total-2018']
#print(tab(dfd18_f18_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f18_Registrations_count = pd.DataFrame(filter_18_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f18_Registrations_count = dfd19_f18_Registrations_count.fillna('Unknown')
dfd19_f18_Registrations_count['Percent-2019'] = (dfd19_f18_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f18_Registrations_count['Percent-2019'] = dfd19_f18_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f18_Registrations_count['7DEvolution-2019'] = dfd19_f18_Registrations_count['Total-2019'] - dfd19_f17_Registrations_count['Total-2019']
#print(tab(dfd19_f18_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f18_Registrations_count = pd.DataFrame(filter_18_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f18_Registrations_count = dfd21_f18_Registrations_count.fillna('Unknown')
dfd21_f18_Registrations_count['Percent-2021'] = (dfd21_f18_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f18_Registrations_count['Percent-2021'] = dfd21_f18_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f18_Registrations_count['7DEvolution-2021'] = dfd21_f18_Registrations_count['Total-2021'] - dfd21_f17_Registrations_count['Total-2021']
#print(tab(dfd21_f18_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f18_Registrations_count = pd.DataFrame(filter_18_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f18_Registrations_count = dfd22_f18_Registrations_count.fillna('Unknown')
dfd22_f18_Registrations_count['Percent-2022'] = (dfd22_f18_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f18_Registrations_count['Percent-2022'] = dfd22_f18_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f18_Registrations_count['7DEvolution-2022'] = dfd22_f18_Registrations_count['Total-2022'] - dfd22_f17_Registrations_count['Total-2022']
#print(tab(dfd22_f18_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_Registrations_count = pd.DataFrame(filter_18_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f18_Registrations_count = dfd23_f18_Registrations_count.fillna('Unknown')
dfd23_f18_Registrations_count['Percent-2023'] = (dfd23_f18_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f18_Registrations_count['Percent-2023'] = dfd23_f18_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f18_Registrations_count['7DEvolution-2023'] = dfd23_f18_Registrations_count['Total-2023'] - dfd23_f17_Registrations_count['Total-2023']
#print(tab(dfd23_f18_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f18_RegistrationsEvolution_count = pd.DataFrame(filter_18_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f18_RegistrationsEvolution_count = dfd23_f18_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f18_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f18_Registrations_count['Total-2023'] - dfd19_f18_Registrations_count['Total-2019'])/ dfd19_f18_Registrations_count['Total-2019'].sum()) * 100
dfd23_f18_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f18_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f18_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f18 = pd.DataFrame(pd.merge(dfd17_f18_Registrations_count, dfd18_f18_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f18 = pd.DataFrame(pd.merge(dfd19_f18_Registrations_count, dfd21_f18_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f18 = pd.DataFrame(pd.merge(dfd22_f18_Registrations_count, dfd23_f18_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f18 = pd.DataFrame(pd.merge(df_Registrations_count_1_f18, df_Registrations_count_2_f18, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f18 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f18, df_Registrations_count_3_f18, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f18 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f18, dfd23_f18_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f18 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17, df_Registrations_Merge_f18]
Concat_Registrations_count_f1_f18 = pd.concat(ConcatFrames_Registrations_count_f1_f18)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f18  = ConcatFrames_Registrations_count_f1_f18.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f18.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f18 = filter_18_df18[filter_18_df18['New customer'] == 1]
df_NewCustomer_df19_f18 = filter_18_df19[filter_18_df19['New customer'] == 1]
df_NewCustomer_df21_f18 = filter_18_df21[filter_18_df21['New customer'] == 1]
df_NewCustomer_df22_f18 = filter_18_df22[filter_18_df22['New customer'] == 1]
df_NewCustomer_df23_f18 = filter_18_df23[filter_18_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f18.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f18.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f18.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a18_ACQRET_count = pd.DataFrame(filter_18_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f18_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f18_ACQRET_count['Percent-2018'] = (dfd18_f18_ACQRET_count['ACQ-2018'] / dfd18_f18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f18_ACQRET_count['Percent-2018'] = dfd18_f18_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f18_ACQRET_count['RET-2018'] = dfd18_a18_ACQRET_count['Total-2018'] - dfd18_f18_ACQRET_count['ACQ-2018']
dfd18_f18_ACQRET_count['Percnt-2018'] = (dfd18_f18_ACQRET_count['RET-2018'] / dfd18_a18_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f18_ACQRET_count['Percnt-2018'] = dfd18_f18_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f18_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a18_ACQRET_count = pd.DataFrame(filter_18_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f18_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f18_ACQRET_count['Percent-2019'] = (dfd19_f18_ACQRET_count['ACQ-2019'] / dfd19_f18_Registrations_count['Total-2019'].sum()) * 100
dfd19_f18_ACQRET_count['Percent-2019'] = dfd19_f18_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f18_ACQRET_count['RET-2019'] = dfd19_a18_ACQRET_count['Total-2019'] - dfd19_f18_ACQRET_count['ACQ-2019']
dfd19_f18_ACQRET_count['Percnt-2019'] = (dfd19_f18_ACQRET_count['RET-2019'] / dfd19_a18_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f18_ACQRET_count['Percnt-2019'] = dfd19_f18_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f18_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a18_ACQRET_count = pd.DataFrame(filter_18_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f18_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f18_ACQRET_count['Percent-2021'] = (dfd21_f18_ACQRET_count['ACQ-2021'] / dfd21_f18_Registrations_count['Total-2021'].sum()) * 100
dfd21_f18_ACQRET_count['Percent-2021'] = dfd21_f18_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f18_ACQRET_count['RET-2021'] = dfd21_a18_ACQRET_count['Total-2021'] - dfd21_f18_ACQRET_count['ACQ-2021']
dfd21_f18_ACQRET_count['Percnt-2021'] = (dfd21_f18_ACQRET_count['RET-2021'] / dfd21_a18_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f18_ACQRET_count['Percnt-2021'] = dfd21_f18_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f18_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a18_ACQRET_count = pd.DataFrame(filter_18_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f18_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f18_ACQRET_count['Percent-2022'] = (dfd22_f18_ACQRET_count['ACQ-2022'] / dfd22_f18_Registrations_count['Total-2022'].sum()) * 100
dfd22_f18_ACQRET_count['Percent-2022'] = dfd22_f18_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f18_ACQRET_count['RET-2022'] = dfd22_a18_ACQRET_count['Total-2022'] - dfd22_f18_ACQRET_count['ACQ-2022']
dfd22_f18_ACQRET_count['Percnt-2022'] = (dfd22_f18_ACQRET_count['RET-2022'] / dfd22_a18_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f18_ACQRET_count['Percnt-2022'] = dfd22_f18_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f18_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a18_ACQRET_count = pd.DataFrame(filter_18_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f18_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f18_ACQRET_count['Percent-2023'] = (dfd23_f18_ACQRET_count['ACQ-2023'] / dfd23_f18_Registrations_count['Total-2023'].sum()) * 100
dfd23_f18_ACQRET_count['Percent-2023'] = dfd23_f18_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f18_ACQRET_count['RET-2023'] = dfd23_a18_ACQRET_count['Total-2023'] - dfd23_f18_ACQRET_count['ACQ-2023']
dfd23_f18_ACQRET_count['Percnt-2023'] = (dfd23_f18_ACQRET_count['RET-2023'] / dfd23_a18_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f18_ACQRET_count['Percnt-2023'] = dfd23_f18_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f18_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f18 = pd.DataFrame(pd.merge(dfd18_a18_ACQRET_count, dfd18_f18_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f18 = pd.DataFrame(pd.merge(dfd19_a18_ACQRET_count, dfd19_f18_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f18 = pd.DataFrame(pd.merge(dfd21_a18_ACQRET_count, dfd21_f18_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f18 = pd.DataFrame(pd.merge(dfd22_a18_ACQRET_count, dfd22_f18_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_18_f18 = pd.DataFrame(pd.merge(dfd23_a18_ACQRET_count, dfd23_f18_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_18_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f18 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f18, df_ACQRET_count_2_f18, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f18 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f18, df_ACQRET_count_3_f18, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f18 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f18, df_ACQRET_count_4_f18, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f18 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f18, df_ACQRET_count_18_f18, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f18 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17, df_ACQRET_count_M4_f18]
Concat_ACQRET_count_f1_f18 = pd.concat(ConcatFrames_ACQRET_count_f1_f18)
#print(tab(Concat_ACQRET_count_f1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f18 = Concat_ACQRET_count_f1_f18[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f18_Revenue_calc = pd.DataFrame(filter_18_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f18_Revenue_calc['Percent-2017'] = (dfd17_f18_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f18_Revenue_calc['Percent-2017'] = dfd17_f18_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f18_Revenue_calc['7DEvolution-2017'] = dfd17_f18_Revenue_calc['Total-2017'] - dfd17_f17_Revenue_calc['Total-2017']
#print(tab(dfd17_f18_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f18_Revenue_calc = pd.DataFrame(filter_18_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f18_Revenue_calc['Percent-2018'] = (dfd18_f18_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f18_Revenue_calc['Percent-2018'] = dfd18_f18_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f18_Revenue_calc['7DEvolution-2018'] = dfd18_f18_Revenue_calc['Total-2018'] - dfd18_f17_Revenue_calc['Total-2018']
#print(tab(dfd18_f18_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f18_Revenue_calc = pd.DataFrame(filter_18_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f18_Revenue_calc['Percent-2019'] = (dfd19_f18_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f18_Revenue_calc['Percent-2019'] = dfd19_f18_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f18_Revenue_calc['7DEvolution-2019'] = dfd19_f18_Revenue_calc['Total-2019'] - dfd19_f17_Revenue_calc['Total-2019']
#print(tab(dfd19_f18_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f18_Revenue_calc = pd.DataFrame(filter_18_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f18_Revenue_calc['Percent-2021'] = (dfd21_f18_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f18_Revenue_calc['Percent-2021'] = dfd21_f18_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f18_Revenue_calc['7DEvolution-2021'] = dfd21_f18_Revenue_calc['Total-2021'] - dfd21_f17_Revenue_calc['Total-2021']
#print(tab(dfd21_f18_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f18_Revenue_calc = pd.DataFrame(filter_18_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f18_Revenue_calc['Percent-2022'] = (dfd22_f18_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f18_Revenue_calc['Percent-2022'] = dfd22_f18_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f18_Revenue_calc['7DEvolution-2022'] = dfd22_f18_Revenue_calc['Total-2022'] - dfd22_f17_Revenue_calc['Total-2022']
#print(tab(dfd22_f18_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_Revenue_calc = pd.DataFrame(filter_18_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f18_Revenue_calc['Percent-2023'] = (dfd23_f18_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f18_Revenue_calc['Percent-2023'] = dfd23_f18_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f18_Revenue_calc['7DEvolution-2023'] = dfd23_f18_Revenue_calc['Total-2023'] - dfd23_f17_Revenue_calc['Total-2023']
#print(tab(dfd23_f18_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f18_RevenueEvolution_calc = pd.DataFrame(filter_18_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f18_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f18_Revenue_calc['Total-2023'] - dfd19_f18_Revenue_calc['Total-2019'])/ dfd19_f18_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f18_RevenueEvolution_calc['Evolution-2023'] = dfd23_f18_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f18_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f18 = pd.DataFrame(pd.merge(dfd17_f18_Revenue_calc, dfd18_f18_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f18 = pd.DataFrame(pd.merge(dfd19_f18_Revenue_calc, dfd21_f18_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f18 = pd.DataFrame(pd.merge(dfd22_f18_Revenue_calc, dfd23_f18_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f18_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f18, df_Revenue_calc_2_f18, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f18Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f18_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f18_Evolution, df_Revenue_calc_3_f18, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f18Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f18 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f18_Evolution, dfd23_f18_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f18 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17, df_Revenue_calc_f18]
Concat_REV_count_f1_f18 = pd.concat(ConcatFrames_REV_count_f1_f18)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f18_Registrations_GRDel = pd.DataFrame(filtr_18_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f18_Registrations_GRDel = dfd17_f18_Registrations_GRDel.fillna('Unknown')
dfd17_f18_Registrations_GRDel['Percent-2017'] = (dfd17_f18_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f18_Registrations_GRDel['Percent-2017'] = dfd17_f18_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f18_Registrations_GRDel['7DEvolution-2017'] = dfd17_f18_Registrations_GRDel['Total-2017'] - dfd17_f17_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f18_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f18_Registrations_GRDel = pd.DataFrame(filtr_18_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f18_Registrations_GRDel = dfd18_f18_Registrations_GRDel.fillna('Unknown')
dfd18_f18_Registrations_GRDel['Percent-2018'] = (dfd18_f18_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f18_Registrations_GRDel['Percent-2018'] = dfd18_f18_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f18_Registrations_GRDel['7DEvolution-2018'] = dfd18_f18_Registrations_GRDel['Total-2018'] - dfd18_f17_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f18_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f18_Registrations_GRDel = pd.DataFrame(filtr_18_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f18_Registrations_GRDel = dfd19_f18_Registrations_GRDel.fillna('Unknown')
dfd19_f18_Registrations_GRDel['Percent-2019'] = (dfd19_f18_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f18_Registrations_GRDel['Percent-2019'] = dfd19_f18_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f18_Registrations_GRDel['7DEvolution-2019'] = dfd19_f18_Registrations_GRDel['Total-2019'] - dfd19_f17_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f18_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f18_Registrations_GRDel = pd.DataFrame(filtr_18_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f18_Registrations_GRDel = dfd21_f18_Registrations_GRDel.fillna('Unknown')
dfd21_f18_Registrations_GRDel['Percent-2021'] = (dfd21_f18_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f18_Registrations_GRDel['Percent-2021'] = dfd21_f18_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f18_Registrations_GRDel['7DEvolution-2021'] = dfd21_f18_Registrations_GRDel['Total-2021'] - dfd21_f17_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f18_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f18_Registrations_GRDel = pd.DataFrame(filtr_18_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f18_Registrations_GRDel = dfd22_f18_Registrations_GRDel.fillna('Unknown')
dfd22_f18_Registrations_GRDel['Percent-2022'] = (dfd22_f18_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f18_Registrations_GRDel['Percent-2022'] = dfd22_f18_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f18_Registrations_GRDel['7DEvolution-2022'] = dfd22_f18_Registrations_GRDel['Total-2022'] - dfd22_f17_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f18_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_Registrations_GRDel = pd.DataFrame(filtr_18_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f18_Registrations_GRDel = dfd23_f18_Registrations_GRDel.fillna('Unknown')
dfd23_f18_Registrations_GRDel['Percent-2023'] = (dfd23_f18_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f18_Registrations_GRDel['Percent-2023'] = dfd23_f18_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f18_Registrations_GRDel['7DEvolution-2023'] = dfd23_f18_Registrations_GRDel['Total-2023'] - dfd23_f17_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f18_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f18_Registrations_Evol_GRDel = pd.DataFrame(filtr_18_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f18_Registrations_Evol_GRDel = dfd23_f18_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f18_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f18_Registrations_GRDel['Total-2023'] - dfd19_f18_Registrations_GRDel['Total-2019']) / dfd19_f18_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f18_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f18 = pd.concat([dfd17_f18_Registrations_GRDel, dfd18_f18_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f18 = pd.DataFrame(pd.merge(dfd17_f18_Registrations_GRDel, dfd18_f18_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f18 = pd.DataFrame(pd.merge(dfd19_f18_Registrations_GRDel, dfd21_f18_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f18 = pd.DataFrame(pd.merge(dfd22_f18_Registrations_GRDel, dfd23_f18_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f18 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f18, df_Registrations_GRDel_2_f18, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_18_f18 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f18, df_Registrations_GRDel_3_f18, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f18 = pd.DataFrame(pd.merge(df_Registrations_GRDel_18_f18, dfd23_f18_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f18 = df_Registrations_GRDel_f18[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f18 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17, df_Registrations_GRDel_f18]
Concat_RegGRDel_count_f1_f18 = pd.concat(ConcatFrames_RegGRDel_count_f1_f18)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f18 = filtr_18_df18_GRdel[filtr_18_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f18 = filtr_18_df19_GRdel[filtr_18_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f18 = filtr_18_df21_GRdel[filtr_18_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f18 = filtr_18_df22_GRdel[filtr_18_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f18 = filtr_18_df23_GRdel[filtr_18_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f18.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f18.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a18_AC_RT_GRDel = pd.DataFrame(filtr_18_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f18_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f18.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f18_AC_RT_GRDel['Percent-2018'] = (dfd18_f18_AC_RT_GRDel['ACQ-2018'] / dfd18_f18_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f18_AC_RT_GRDel['Percent-2018'] = dfd18_f18_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f18_AC_RT_GRDel['RET-2018'] = dfd18_a18_AC_RT_GRDel['Total-2018'] - dfd18_f18_AC_RT_GRDel['ACQ-2018']
dfd18_f18_AC_RT_GRDel['Percnt-2018'] = (dfd18_f18_AC_RT_GRDel['RET-2018'] / dfd18_a18_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f18_AC_RT_GRDel['Percnt-2018'] = dfd18_f18_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f18_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a18_AC_RT_GRDel = pd.DataFrame(filtr_18_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f18_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f18.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f18_AC_RT_GRDel['Percent-2019'] = (dfd19_f18_AC_RT_GRDel['ACQ-2019'] / dfd19_f18_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f18_AC_RT_GRDel['Percent-2019'] = dfd19_f18_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f18_AC_RT_GRDel['RET-2019'] = dfd19_a18_AC_RT_GRDel['Total-2019'] - dfd19_f18_AC_RT_GRDel['ACQ-2019']
dfd19_f18_AC_RT_GRDel['Percnt-2019'] = (dfd19_f18_AC_RT_GRDel['RET-2019'] / dfd19_a18_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f18_AC_RT_GRDel['Percnt-2019'] = dfd19_f18_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f18_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a18_AC_RT_GRDel = pd.DataFrame(filtr_18_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f18_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f18.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f18_AC_RT_GRDel['Percent-2021'] = (dfd21_f18_AC_RT_GRDel['ACQ-2021'] / dfd21_f18_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f18_AC_RT_GRDel['Percent-2021'] = dfd21_f18_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f18_AC_RT_GRDel['RET-2021'] = dfd21_a18_AC_RT_GRDel['Total-2021'] - dfd21_f18_AC_RT_GRDel['ACQ-2021']
dfd21_f18_AC_RT_GRDel['Percnt-2021'] = (dfd21_f18_AC_RT_GRDel['RET-2021'] / dfd21_a18_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f18_AC_RT_GRDel['Percnt-2021'] = dfd21_f18_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f18_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a18_AC_RT_GRDel = pd.DataFrame(filtr_18_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f18_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f18.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f18_AC_RT_GRDel['Percent-2022'] = (dfd22_f18_AC_RT_GRDel['ACQ-2022'] / dfd22_f18_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f18_AC_RT_GRDel['Percent-2022'] = dfd22_f18_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f18_AC_RT_GRDel['RET-2022'] = dfd22_a18_AC_RT_GRDel['Total-2022'] - dfd22_f18_AC_RT_GRDel['ACQ-2022']
dfd22_f18_AC_RT_GRDel['Percnt-2022'] = (dfd22_f18_AC_RT_GRDel['RET-2022'] / dfd22_a18_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f18_AC_RT_GRDel['Percnt-2022'] = dfd22_f18_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f18_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a18_AC_RT_GRDel = pd.DataFrame(filtr_18_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f18_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f18.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f18_AC_RT_GRDel['Percent-2023'] = (dfd23_f18_AC_RT_GRDel['ACQ-2023'] / dfd23_f18_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f18_AC_RT_GRDel['Percent-2023'] = dfd23_f18_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f18_AC_RT_GRDel['RET-2023'] = dfd23_a18_AC_RT_GRDel['Total-2023'] - dfd23_f18_AC_RT_GRDel['ACQ-2023']
dfd23_f18_AC_RT_GRDel['Percnt-2023'] = (dfd23_f18_AC_RT_GRDel['RET-2023'] / dfd23_a18_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f18_AC_RT_GRDel['Percnt-2023'] = dfd23_f18_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f18_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f18 = pd.DataFrame(pd.merge_ordered(dfd18_a18_AC_RT_GRDel, dfd18_f18_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f18 = pd.DataFrame(pd.merge_ordered(dfd19_a18_AC_RT_GRDel, dfd19_f18_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f18 = pd.DataFrame(pd.merge_ordered(dfd21_a18_AC_RT_GRDel, dfd21_f18_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f18 = pd.DataFrame(pd.merge_ordered(dfd22_a18_AC_RT_GRDel, dfd22_f18_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_18_f18 = pd.DataFrame(pd.merge_ordered(dfd23_a18_AC_RT_GRDel, dfd23_f18_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f18 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f18, df_AC_ET_GRDel_2_f18, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f18 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f18, df_AC_ET_GRDel_3_f18, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f18 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f18, df_AC_ET_GRDel_4_f18, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f18 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f18, df_AC_ET_GRDel_18_f18, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f18 = df_AC_RT_GRDel_M4_f18[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f18 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17, df_AC_RT_GRDel_M4_f18]
Conct_AC_RT_GRDel_f1_f18 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f18)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_18_df17_GRdel = filtr_18_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f18_Revenu_GRDel = pd.DataFrame(filtr_18_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f18_Revenu_GRDel['Percent-2017'] = (dfd17_f18_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f18_Revenu_GRDel['Percent-2017'] = dfd17_f18_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f18_Revenu_GRDel['7DEvolution-2017'] = dfd17_f18_Revenu_GRDel['Total-2017'] - dfd17_f17_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f18_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_18_df18_GRdel = filtr_18_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f18_Revenu_GRDel = pd.DataFrame(filtr_18_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f18_Revenu_GRDel['Percent-2018'] = (dfd18_f18_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f18_Revenu_GRDel['Percent-2018'] = dfd18_f18_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f18_Revenu_GRDel['7DEvolution-2018'] = dfd18_f18_Revenu_GRDel['Total-2018'] - dfd18_f17_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f18_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_18_df19_GRdel = filtr_18_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f18_Revenu_GRDel = pd.DataFrame(filtr_18_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f18_Revenu_GRDel['Percent-2019'] = (dfd19_f18_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f18_Revenu_GRDel['Percent-2019'] = dfd19_f18_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f18_Revenu_GRDel['7DEvolution-2019'] = dfd19_f18_Revenu_GRDel['Total-2019'] - dfd19_f17_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f18_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_18_df21_GRdel = filtr_18_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f18_Revenu_GRDel = pd.DataFrame(filtr_18_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f18_Revenu_GRDel['Percent-2021'] = (dfd21_f18_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f18_Revenu_GRDel['Percent-2021'] = dfd21_f18_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f18_Revenu_GRDel['7DEvolution-2021'] = dfd21_f18_Revenu_GRDel['Total-2021'] - dfd21_f17_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f18_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_18_df22_GRdel = filtr_18_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f18_Revenu_GRDel = pd.DataFrame(filtr_18_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f18_Revenu_GRDel['Percent-2022'] = (dfd22_f18_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f18_Revenu_GRDel['Percent-2022'] = dfd22_f18_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f18_Revenu_GRDel['7DEvolution-2022'] = dfd22_f18_Revenu_GRDel['Total-2022'] - dfd22_f17_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f18_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_18_df23_GRdel = filtr_18_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f18_Revenu_GRDel = pd.DataFrame(filtr_18_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f18_Revenu_GRDel['Percent-2023'] = (dfd23_f18_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f18_Revenu_GRDel['Percent-2023'] = dfd23_f18_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f18_Revenu_GRDel['7DEvolution-2023'] = dfd23_f18_Revenu_GRDel['Total-2023'] - dfd23_f17_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f18_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f18_Revenu_Evlt_GRDel = pd.DataFrame(filtr_18_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f18_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f18_Revenu_GRDel['Total-2023'] - dfd19_f18_Revenu_GRDel['Total-2019'])/ dfd19_f18_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f18_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f18_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f18_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f18 = pd.DataFrame(pd.merge(dfd17_f18_Revenu_GRDel, dfd18_f18_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f18 = pd.DataFrame(pd.merge(dfd19_f18_Revenu_GRDel, dfd21_f18_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f18 = pd.DataFrame(pd.merge(dfd22_f18_Revenu_GRDel, dfd23_f18_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f18 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f18, df_Revenu_GRDel_2_f18, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_18_f18 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f18, df_Revenu_GRDel_3_f18, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f18 = pd.DataFrame(pd.merge(df_Revenu_GRDel_18_f18, dfd23_f18_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f18 = df_Revenu_GRDel_f18[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f18 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17, df_Revenu_GRDel_f18]
Conct_RV_GRDel_f1_f18 = pd.concat(ConcatFra_RV_GRDel_f1_f18)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f18_Profile_count = pd.DataFrame(filtr_18_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f18_Profile_count = dfd17_f18_Profile_count.fillna('Unknown')
dfd17_f18_Profile_count['Percent-2017'] = (dfd17_f18_Profile_count['Total-2017'] / dfd17_f18_Profile_count['Total-2017'].sum()) * 100
dfd17_f18_Profile_count['Percent-2017'] = dfd17_f18_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f18_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f18_Profile_count = pd.DataFrame(filtr_18_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f18_Profile_count = dfd18_f18_Profile_count.fillna('Unknown')
dfd18_f18_Profile_count['Percent-2018'] = (dfd18_f18_Profile_count['Total-2018'] / dfd18_f18_Profile_count['Total-2018'].sum()) * 100
dfd18_f18_Profile_count['Percent-2018'] = dfd18_f18_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f18_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f18_Profile_count = pd.DataFrame(filtr_18_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f18_Profile_count = dfd19_f18_Profile_count.fillna('Unknown')
dfd19_f18_Profile_count['Percent-2019'] = (dfd19_f18_Profile_count['Total-2019'] / dfd19_f18_Profile_count['Total-2019'].sum()) * 100
dfd19_f18_Profile_count['Percent-2019'] = dfd19_f18_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f18_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f18_Profile_count = pd.DataFrame(filtr_18_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f18_Profile_count = dfd21_f18_Profile_count.fillna('Unknown')
dfd21_f18_Profile_count['Percent-2021'] = (dfd21_f18_Profile_count['Total-2021'] / dfd21_f18_Profile_count['Total-2021'].sum()) * 100
dfd21_f18_Profile_count['Percent-2021'] = dfd21_f18_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f18_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f18_Profile_count = pd.DataFrame(filtr_18_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f18_Profile_count = dfd22_f18_Profile_count.fillna('Unknown')
dfd22_f18_Profile_count['Percent-2022'] = (dfd22_f18_Profile_count['Total-2022'] / dfd22_f18_Profile_count['Total-2022'].sum()) * 100
dfd22_f18_Profile_count['Percent-2022'] = dfd22_f18_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f18_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_Profile_count = pd.DataFrame(filtr_18_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f18_Profile_count = dfd23_f18_Profile_count.fillna('Unknown')
dfd23_f18_Profile_count['Percent-2023'] = (dfd23_f18_Profile_count['Total-2023'] / dfd23_f18_Profile_count['Total-2023'].sum()) * 100
dfd23_f18_Profile_count['Percent-2023'] = dfd23_f18_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f18_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f18 = pd.DataFrame(pd.merge(dfd17_f18_Profile_count, dfd18_f18_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f18 = pd.DataFrame(pd.merge(dfd19_f18_Profile_count, dfd21_f18_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f18 = pd.DataFrame(pd.merge(dfd22_f18_Profile_count, dfd23_f18_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f18 = pd.DataFrame(pd.merge(df_Profile_Count_1_f18, df_Profile_Count_2_f18, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f18 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f18, df_Profile_Count_3_f18, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f18 = df_Profile_Count_m2_f18.append(df_Profile_Count_m2_f18.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f18['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f18_Pass_count = pd.DataFrame(filtr_18_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f18_Pass_count = dfd17_f18_Pass_count.fillna('Unknown')
dfd17_f18_Pass_count['Percent-2017'] = (dfd17_f18_Pass_count['Total-2017'] / dfd17_f18_Pass_count['Total-2017'].sum()) * 100
dfd17_f18_Pass_count['Percent-2017'] = dfd17_f18_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f18_Pass_count = pd.DataFrame(filtr_18_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f18_Pass_count = dfd18_f18_Pass_count.fillna('Unknown')
dfd18_f18_Pass_count['Percent-2018'] = (dfd18_f18_Pass_count['Total-2018'] / dfd18_f18_Pass_count['Total-2018'].sum()) * 100
dfd18_f18_Pass_count['Percent-2018'] = dfd18_f18_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f18_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f18_Pass_count = pd.DataFrame(filtr_18_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f18_Pass_count = dfd19_f18_Pass_count.fillna('Unknown')
dfd19_f18_Pass_count['Percent-2019'] = (dfd19_f18_Pass_count['Total-2019'] / dfd19_f18_Pass_count['Total-2019'].sum()) * 100
dfd19_f18_Pass_count['Percent-2019'] = dfd19_f18_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f18_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f18_Pass_count = pd.DataFrame(filtr_18_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f18_Pass_count = dfd21_f18_Pass_count.fillna('Unknown')
dfd21_f18_Pass_count['Percent-2021'] = (dfd21_f18_Pass_count['Total-2021'] / dfd21_f18_Pass_count['Total-2021'].sum()) * 100
dfd21_f18_Pass_count['Percent-2021'] = dfd21_f18_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f18_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f18_Pass_count = pd.DataFrame(filtr_18_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f18_Pass_count = dfd22_f18_Pass_count.fillna('Unknown')
dfd22_f18_Pass_count['Percent-2022'] = (dfd22_f18_Pass_count['Total-2022'] / dfd22_f18_Pass_count['Total-2022'].sum()) * 100
dfd22_f18_Pass_count['Percent-2022'] = dfd22_f18_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f18_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_Pass_count = pd.DataFrame(filtr_18_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f18_Pass_count = dfd23_f18_Pass_count.fillna('Unknown')
dfd23_f18_Pass_count['Percent-2023'] = (dfd23_f18_Pass_count['Total-2023'] / dfd23_f18_Pass_count['Total-2023'].sum()) * 100
dfd23_f18_Pass_count['Percent-2023'] = dfd23_f18_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f18_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f18 = pd.DataFrame(pd.merge(dfd17_f18_Pass_count, dfd18_f18_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f18 = pd.DataFrame(pd.merge(dfd19_f18_Pass_count, dfd21_f18_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f18 = pd.DataFrame(pd.merge(dfd22_f18_Pass_count, dfd23_f18_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f18 = pd.DataFrame(pd.merge(df_Pass_Count_1_f18, df_Pass_Count_2_f18, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f18 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f18, df_Pass_Count_3_f18, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f18 = df_Pass_Count_m2_f18.append(df_Pass_Count_m2_f18.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f18['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f18_Attendees_Country_count = pd.DataFrame(filtr_18_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f18_Attendees_Country_count = dfd17_f18_Attendees_Country_count.fillna('Unknown')
dfd17_f18_Attendees_Country_count['Percent-2017'] = (dfd17_f18_Attendees_Country_count['Total-2017'] / dfd17_f18_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f18_Attendees_Country_count['Percent-2017'] = dfd17_f18_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f18_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f18_Attendees_Country_count = pd.DataFrame(filtr_18_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f18_Attendees_Country_count = dfd18_f18_Attendees_Country_count.fillna('Unknown')
dfd18_f18_Attendees_Country_count['Percent-2018'] = (dfd18_f18_Attendees_Country_count['Total-2018'] / dfd18_f18_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f18_Attendees_Country_count['Percent-2018'] = dfd18_f18_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f18_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f18_Attendees_Country_count = pd.DataFrame(filtr_18_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f18_Attendees_Country_count = dfd19_f18_Attendees_Country_count.fillna('Unknown')
dfd19_f18_Attendees_Country_count['Percent-2019'] = (dfd19_f18_Attendees_Country_count['Total-2019'] / dfd19_f18_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f18_Attendees_Country_count['Percent-2019'] = dfd19_f18_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f18_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f18_Attendees_Country_count = pd.DataFrame(filtr_18_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f18_Attendees_Country_count = dfd21_f18_Attendees_Country_count.fillna('Unknown')
dfd21_f18_Attendees_Country_count['Percent-2021'] = (dfd21_f18_Attendees_Country_count['Total-2021'] / dfd21_f18_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f18_Attendees_Country_count['Percent-2021'] = dfd21_f18_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f18_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f18_Attendees_Country_count = pd.DataFrame(filtr_18_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f18_Attendees_Country_count = dfd22_f18_Attendees_Country_count.fillna('Unknown')
dfd22_f18_Attendees_Country_count['Percent-2022'] = (dfd22_f18_Attendees_Country_count['Total-2022'] / dfd22_f18_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f18_Attendees_Country_count['Percent-2022'] = dfd22_f18_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f18_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_Attendees_Country_count = pd.DataFrame(filtr_18_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f18_Attendees_Country_count = dfd23_f18_Attendees_Country_count.fillna('Unknown')
dfd23_f18_Attendees_Country_count['Percent-2023'] = (dfd23_f18_Attendees_Country_count['Total-2023'] / dfd23_f18_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f18_Attendees_Country_count['Percent-2023'] = dfd23_f18_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f18_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f18 = pd.DataFrame(pd.merge(dfd17_f18_Attendees_Country_count, dfd18_f18_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f18 = pd.DataFrame(pd.merge(dfd19_f18_Attendees_Country_count, dfd21_f18_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f18 = pd.DataFrame(pd.merge(dfd22_f18_Attendees_Country_count, dfd23_f18_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f18 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f18, dfAttendees_Country_Count_2_f18, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f18.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f18 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f18, dfAttendees_Country_Count_3_f18, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f18 = dfAttendees_Country_Count_m2_f18.append(dfAttendees_Country_Count_m2_f18.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f18['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f18_ATTENDEES_AREAS_count = pd.DataFrame(filtr_18_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f18_ATTENDEES_AREAS_count = dfd17_f18_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f18_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f18_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f18_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f18_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f18_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f18_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f18_ATTENDEES_AREAS_count = pd.DataFrame(filtr_18_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f18_ATTENDEES_AREAS_count = dfd18_f18_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f18_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f18_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f18_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f18_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f18_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f18_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f18_ATTENDEES_AREAS_count = pd.DataFrame(filtr_18_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f18_ATTENDEES_AREAS_count = dfd19_f18_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f18_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f18_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f18_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f18_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f18_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f18_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f18_ATTENDEES_AREAS_count = pd.DataFrame(filtr_18_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f18_ATTENDEES_AREAS_count = dfd21_f18_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f18_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f18_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f18_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f18_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f18_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f18_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f18_ATTENDEES_AREAS_count = pd.DataFrame(filtr_18_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f18_ATTENDEES_AREAS_count = dfd22_f18_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f18_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f18_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f18_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f18_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f18_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f18_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_ATTENDEES_AREAS_count = pd.DataFrame(filtr_18_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f18_ATTENDEES_AREAS_count = dfd23_f18_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f18_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f18_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f18_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f18_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f18_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f18_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f18 = pd.DataFrame(pd.merge(dfd17_f18_ATTENDEES_AREAS_count, dfd18_f18_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f18 = pd.DataFrame(pd.merge(dfd19_f18_ATTENDEES_AREAS_count, dfd21_f18_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f18 = pd.DataFrame(pd.merge(dfd22_f18_ATTENDEES_AREAS_count, dfd23_f18_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f18.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f18 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f18, df_ATTENDEES_AREAS_count_2_f18, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f18 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f18, df_ATTENDEES_AREAS_count_3_f18, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f18 = df_ATTENDEES_AREAS_count_m2_f18.append(df_ATTENDEES_AREAS_count_m2_f18.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f18['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f18_Attendees_Specialty_count = pd.DataFrame(filtr_18_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f18_Attendees_Specialty_count = dfd17_f18_Attendees_Specialty_count.fillna('Unknown')
dfd17_f18_Attendees_Specialty_count['Percent-2017'] = (dfd17_f18_Attendees_Specialty_count['Total-2017'] / dfd17_f18_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f18_Attendees_Specialty_count['Percent-2017'] = dfd17_f18_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f18_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f18_Attendees_Specialty_count = pd.DataFrame(filtr_18_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f18_Attendees_Specialty_count = dfd18_f18_Attendees_Specialty_count.fillna('Unknown')
dfd18_f18_Attendees_Specialty_count['Percent-2018'] = (dfd18_f18_Attendees_Specialty_count['Total-2018'] / dfd18_f18_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f18_Attendees_Specialty_count['Percent-2018'] = dfd18_f18_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f18_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f18_Attendees_Specialty_count = pd.DataFrame(filtr_18_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f18_Attendees_Specialty_count = dfd19_f18_Attendees_Specialty_count.fillna('Unknown')
dfd19_f18_Attendees_Specialty_count['Percent-2019'] = (dfd19_f18_Attendees_Specialty_count['Total-2019'] / dfd19_f18_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f18_Attendees_Specialty_count['Percent-2019'] = dfd19_f18_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f18_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f18_Attendees_Specialty_count = pd.DataFrame(filtr_18_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f18_Attendees_Specialty_count = dfd21_f18_Attendees_Specialty_count.fillna('Unknown')
dfd21_f18_Attendees_Specialty_count['Percent-2021'] = (dfd21_f18_Attendees_Specialty_count['Total-2021'] / dfd21_f18_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f18_Attendees_Specialty_count['Percent-2021'] = dfd21_f18_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f18_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f18_Attendees_Specialty_count = pd.DataFrame(filtr_18_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f18_Attendees_Specialty_count = dfd22_f18_Attendees_Specialty_count.fillna('Unknown')
dfd22_f18_Attendees_Specialty_count['Percent-2022'] = (dfd22_f18_Attendees_Specialty_count['Total-2022'] / dfd22_f18_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f18_Attendees_Specialty_count['Percent-2022'] = dfd22_f18_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f18_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f18_Attendees_Specialty_count = pd.DataFrame(filtr_18_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f18_Attendees_Specialty_count = dfd23_f18_Attendees_Specialty_count.fillna('Unknown')
dfd23_f18_Attendees_Specialty_count['Percent-2023'] = (dfd23_f18_Attendees_Specialty_count['Total-2023'] / dfd23_f18_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f18_Attendees_Specialty_count['Percent-2023'] = dfd23_f18_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f18_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f18 = pd.DataFrame(pd.merge(dfd17_f18_Attendees_Specialty_count, dfd18_f18_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f18 = pd.DataFrame(pd.merge(dfd19_f18_Attendees_Specialty_count, dfd21_f18_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f18 = pd.DataFrame(pd.merge(dfd22_f18_Attendees_Specialty_count, dfd23_f18_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f18 = pd.DataFrame(pd.merge(df_Specialty_count_1_f18, df_Specialty_count_2_f18, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f18.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f18 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f18, df_Specialty_count_3_f18, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f18 = df_Specialty_count_m2_f18.append(df_Specialty_count_m2_f18.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f18['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f18['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f18['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f18 = Concat_Registrations_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f18['Total-2017'] = Concat_Registrations_count_f1_f18['Total-2017'].astype(int)
Concat_Registrations_count_f1_f18['Percent-2017'] = Concat_Registrations_count_f1_f18['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f18['7DEvolution-2017'] = Concat_Registrations_count_f1_f18['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f18['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f18['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f18 = Concat_Registrations_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f18['Total-2018'] = Concat_Registrations_count_f1_f18['Total-2018'].astype(int)
Concat_Registrations_count_f1_f18['Percent-2018'] = Concat_Registrations_count_f1_f18['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f18['7DEvolution-2018'] = Concat_Registrations_count_f1_f18['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f18['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f18['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f18 = Concat_Registrations_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f18['Total-2019'] = Concat_Registrations_count_f1_f18['Total-2019'].astype(int)
Concat_Registrations_count_f1_f18['Percent-2019'] = Concat_Registrations_count_f1_f18['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f18['7DEvolution-2019'] = Concat_Registrations_count_f1_f18['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f18['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f18['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f18 = Concat_Registrations_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f18['Total-2021'] = Concat_Registrations_count_f1_f18['Total-2021'].astype(int)
Concat_Registrations_count_f1_f18['Percent-2021'] = Concat_Registrations_count_f1_f18['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f18['7DEvolution-2021'] = Concat_Registrations_count_f1_f18['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f18['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f18['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f18 = Concat_Registrations_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f18['Total-2022'] = Concat_Registrations_count_f1_f18['Total-2022'].astype(int)
Concat_Registrations_count_f1_f18['Percent-2022'] = Concat_Registrations_count_f1_f18['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f18['7DEvolution-2022'] = Concat_Registrations_count_f1_f18['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f18['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f18['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f18 = Concat_Registrations_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f18['Total-2023'] = Concat_Registrations_count_f1_f18['Total-2023'].astype(int)
Concat_Registrations_count_f1_f18['Percent-2023'] = Concat_Registrations_count_f1_f18['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f18['7DEvolution-2023'] = Concat_Registrations_count_f1_f18['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f18['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f18['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f18 = Concat_ACQRET_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f18['Total-2018'] = Concat_ACQRET_count_f1_f18['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f18['ACQ-2018'] = Concat_ACQRET_count_f1_f18['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f18['Percent-2018'] = Concat_ACQRET_count_f1_f18['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f18['RET-2018'] = Concat_ACQRET_count_f1_f18['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f18['Percnt-2018'] = Concat_ACQRET_count_f1_f18['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f18['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f18['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f18 = Concat_ACQRET_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f18['Total-2019'] = Concat_ACQRET_count_f1_f18['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f18['ACQ-2019'] = Concat_ACQRET_count_f1_f18['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f18['Percent-2019'] = Concat_ACQRET_count_f1_f18['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f18['RET-2019'] = Concat_ACQRET_count_f1_f18['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f18['Percnt-2019'] = Concat_ACQRET_count_f1_f18['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f18['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f18['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f18 = Concat_ACQRET_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f18['Total-2021'] = Concat_ACQRET_count_f1_f18['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f18['ACQ-2021'] = Concat_ACQRET_count_f1_f18['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f18['Percent-2021'] = Concat_ACQRET_count_f1_f18['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f18['RET-2021'] = Concat_ACQRET_count_f1_f18['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f18['Percnt-2021'] = Concat_ACQRET_count_f1_f18['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f18['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f18['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f18 = Concat_ACQRET_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f18['Total-2022'] = Concat_ACQRET_count_f1_f18['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f18['ACQ-2022'] = Concat_ACQRET_count_f1_f18['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f18['Percent-2022'] = Concat_ACQRET_count_f1_f18['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f18['RET-2022'] = Concat_ACQRET_count_f1_f18['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f18['Percnt-2022'] = Concat_ACQRET_count_f1_f18['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f18['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f18['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f18 = Concat_ACQRET_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f18['Total-2023'] = Concat_ACQRET_count_f1_f18['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f18['ACQ-2023'] = Concat_ACQRET_count_f1_f18['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f18['Percent-2023'] = Concat_ACQRET_count_f1_f18['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f18['RET-2023'] = Concat_ACQRET_count_f1_f18['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f18['Percnt-2023'] = Concat_ACQRET_count_f1_f18['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f18['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f18['Total-2017'],errors='coerce')
Concat_REV_count_f1_f18 = Concat_REV_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f18['Total-2017'] = Concat_REV_count_f1_f18['Total-2017'].astype(int)
Concat_REV_count_f1_f18['Percent-2017'] = Concat_REV_count_f1_f18['Percent-2017'].astype(float)
Concat_REV_count_f1_f18['7DEvolution-2017'] = Concat_REV_count_f1_f18['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f18['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f18['Total-2018'],errors='coerce')
Concat_REV_count_f1_f18 = Concat_REV_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f18['Total-2018'] = Concat_REV_count_f1_f18['Total-2018'].astype(int)
Concat_REV_count_f1_f18['Percent-2018'] = Concat_REV_count_f1_f18['Percent-2018'].astype(float)
Concat_REV_count_f1_f18['7DEvolution-2018'] = Concat_REV_count_f1_f18['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f18['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f18['Total-2019'],errors='coerce')
Concat_REV_count_f1_f18 = Concat_REV_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f18['Total-2019'] = Concat_REV_count_f1_f18['Total-2019'].astype(int)
Concat_REV_count_f1_f18['Percent-2019'] = Concat_REV_count_f1_f18['Percent-2019'].astype(float)
Concat_REV_count_f1_f18['7DEvolution-2019'] = Concat_REV_count_f1_f18['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f18['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f18['Total-2022'],errors='coerce')
Concat_REV_count_f1_f18 = Concat_REV_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f18['Total-2022'] = Concat_REV_count_f1_f18['Total-2022'].astype(int)
Concat_REV_count_f1_f18['Percent-2022'] = Concat_REV_count_f1_f18['Percent-2022'].astype(float)
Concat_REV_count_f1_f18['7DEvolution-2022'] = Concat_REV_count_f1_f18['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f18['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f18['Total-2023'],errors='coerce')
Concat_REV_count_f1_f18 = Concat_REV_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f18['Total-2023'] = Concat_REV_count_f1_f18['Total-2023'].astype(int)
Concat_REV_count_f1_f18['Percent-2023'] = Concat_REV_count_f1_f18['Percent-2023'].astype(float)
Concat_REV_count_f1_f18['7DEvolution-2023'] = Concat_REV_count_f1_f18['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f18['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f18['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f18 = Concat_RegGRDel_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f18['Total-2017'] = Concat_RegGRDel_count_f1_f18['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f18['Percent-2017'] = Concat_RegGRDel_count_f1_f18['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f18['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f18['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f18['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f18['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f18 = Concat_RegGRDel_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f18['Total-2018'] = Concat_RegGRDel_count_f1_f18['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f18['Percent-2018'] = Concat_RegGRDel_count_f1_f18['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f18['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f18['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f18['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f18['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f18 = Concat_RegGRDel_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f18['Total-2019'] = Concat_RegGRDel_count_f1_f18['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f18['Percent-2019'] = Concat_RegGRDel_count_f1_f18['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f18['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f18['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f18['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f18['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f18 = Concat_RegGRDel_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f18['Total-2021'] = Concat_RegGRDel_count_f1_f18['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f18['Percent-2021'] = Concat_RegGRDel_count_f1_f18['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f18['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f18['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f18['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f18['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f18 = Concat_RegGRDel_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f18['Total-2022'] = Concat_RegGRDel_count_f1_f18['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f18['Percent-2022'] = Concat_RegGRDel_count_f1_f18['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f18['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f18['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f18['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f18['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f18 = Concat_RegGRDel_count_f1_f18.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f18['Total-2023'] = Concat_RegGRDel_count_f1_f18['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f18['Percent-2023'] = Concat_RegGRDel_count_f1_f18['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f18['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f18['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f18['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f18['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f18 = Conct_AC_RT_GRDel_f1_f18.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f18['Total-2018'] = Conct_AC_RT_GRDel_f1_f18['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f18['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f18['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f18['Percent-2018'] = Conct_AC_RT_GRDel_f1_f18['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f18['RET-2018'] = Conct_AC_RT_GRDel_f1_f18['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f18['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f18['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f18['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f18['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f18 = Conct_AC_RT_GRDel_f1_f18.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f18['Total-2019'] = Conct_AC_RT_GRDel_f1_f18['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f18['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f18['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f18['Percent-2019'] = Conct_AC_RT_GRDel_f1_f18['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f18['RET-2019'] = Conct_AC_RT_GRDel_f1_f18['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f18['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f18['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f18['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f18['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f18 = Conct_AC_RT_GRDel_f1_f18.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f18['Total-2021'] = Conct_AC_RT_GRDel_f1_f18['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f18['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f18['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f18['Percent-2021'] = Conct_AC_RT_GRDel_f1_f18['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f18['RET-2021'] = Conct_AC_RT_GRDel_f1_f18['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f18['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f18['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f18['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f18['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f18 = Conct_AC_RT_GRDel_f1_f18.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f18['Total-2022'] = Conct_AC_RT_GRDel_f1_f18['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f18['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f18['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f18['Percent-2022'] = Conct_AC_RT_GRDel_f1_f18['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f18['RET-2022'] = Conct_AC_RT_GRDel_f1_f18['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f18['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f18['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f18['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f18['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f18 = Conct_AC_RT_GRDel_f1_f18.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f18['Total-2023'] = Conct_AC_RT_GRDel_f1_f18['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f18['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f18['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f18['Percent-2023'] = Conct_AC_RT_GRDel_f1_f18['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f18['RET-2023'] = Conct_AC_RT_GRDel_f1_f18['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f18['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f18['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f18['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f18['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f18 = Conct_RV_GRDel_f1_f18.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f18['Total-2017'] = Conct_RV_GRDel_f1_f18['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f18['Percent-2017'] = Conct_RV_GRDel_f1_f18['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f18['7DEvolution-2017'] = Conct_RV_GRDel_f1_f18['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f18['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f18['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f18 = Conct_RV_GRDel_f1_f18.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f18['Total-2018'] = Conct_RV_GRDel_f1_f18['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f18['Percent-2018'] = Conct_RV_GRDel_f1_f18['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f18['7DEvolution-2018'] = Conct_RV_GRDel_f1_f18['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f18['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f18['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f18 = Conct_RV_GRDel_f1_f18.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f18['Total-2019'] = Conct_RV_GRDel_f1_f18['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f18['Percent-2019'] = Conct_RV_GRDel_f1_f18['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f18['7DEvolution-2019'] = Conct_RV_GRDel_f1_f18['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f18['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f18['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f18 = Conct_RV_GRDel_f1_f18.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f18['Total-2022'] = Conct_RV_GRDel_f1_f18['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f18['Percent-2022'] = Conct_RV_GRDel_f1_f18['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f18['7DEvolution-2022'] = Conct_RV_GRDel_f1_f18['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f18['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f18['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f18 = Conct_RV_GRDel_f1_f18.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f18['Total-2023'] = Conct_RV_GRDel_f1_f18['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f18['Percent-2023'] = Conct_RV_GRDel_f1_f18['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f18['7DEvolution-2023'] = Conct_RV_GRDel_f1_f18['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f18['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f18['Total-2017'],errors='coerce')
df_Profile_Count_m2_f18 = df_Profile_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f18['Total-2017'] = df_Profile_Count_m2_f18['Total-2017'].astype(int)
df_Profile_Count_m2_f18['Percent-2017'] = df_Profile_Count_m2_f18['Percent-2017'].astype(float)

df_Profile_Count_m2_f18['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f18['Total-2018'],errors='coerce')
df_Profile_Count_m2_f18 = df_Profile_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f18['Total-2018'] = df_Profile_Count_m2_f18['Total-2018'].astype(int)
df_Profile_Count_m2_f18['Percent-2018'] = df_Profile_Count_m2_f18['Percent-2018'].astype(float)

df_Profile_Count_m2_f18['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f18['Total-2019'],errors='coerce')
df_Profile_Count_m2_f18 = df_Profile_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f18['Total-2019'] = df_Profile_Count_m2_f18['Total-2019'].astype(int)
df_Profile_Count_m2_f18['Percent-2019'] = df_Profile_Count_m2_f18['Percent-2019'].astype(float)

df_Profile_Count_m2_f18['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f18['Total-2021'],errors='coerce')
df_Profile_Count_m2_f18 = df_Profile_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f18['Total-2021'] = df_Profile_Count_m2_f18['Total-2021'].astype(int)
df_Profile_Count_m2_f18['Percent-2021'] = df_Profile_Count_m2_f18['Percent-2021'].astype(float)

df_Profile_Count_m2_f18['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f18['Total-2022'],errors='coerce')
df_Profile_Count_m2_f18 = df_Profile_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f18['Total-2022'] = df_Profile_Count_m2_f18['Total-2022'].astype(int)
df_Profile_Count_m2_f18['Percent-2022'] = df_Profile_Count_m2_f18['Percent-2022'].astype(float)

df_Profile_Count_m2_f18['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f18['Total-2023'],errors='coerce')
df_Profile_Count_m2_f18 = df_Profile_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f18['Total-2023'] = df_Profile_Count_m2_f18['Total-2023'].astype(int)
df_Profile_Count_m2_f18['Percent-2023'] = df_Profile_Count_m2_f18['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f18['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f18['Total-2017'],errors='coerce')
df_Pass_Count_m2_f18 = df_Pass_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f18['Total-2017'] = df_Pass_Count_m2_f18['Total-2017'].astype(int)
df_Pass_Count_m2_f18['Percent-2017'] = df_Pass_Count_m2_f18['Percent-2017'].astype(float)

df_Pass_Count_m2_f18['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f18['Total-2018'],errors='coerce')
df_Pass_Count_m2_f18 = df_Pass_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f18['Total-2018'] = df_Pass_Count_m2_f18['Total-2018'].astype(int)
df_Pass_Count_m2_f18['Percent-2018'] = df_Pass_Count_m2_f18['Percent-2018'].astype(float)

df_Pass_Count_m2_f18['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f18['Total-2019'],errors='coerce')
df_Pass_Count_m2_f18 = df_Pass_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f18['Total-2019'] = df_Pass_Count_m2_f18['Total-2019'].astype(int)
df_Pass_Count_m2_f18['Percent-2019'] = df_Pass_Count_m2_f18['Percent-2019'].astype(float)

df_Pass_Count_m2_f18['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f18['Total-2021'],errors='coerce')
df_Pass_Count_m2_f18 = df_Pass_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f18['Total-2021'] = df_Pass_Count_m2_f18['Total-2021'].astype(int)
df_Pass_Count_m2_f18['Percent-2021'] = df_Pass_Count_m2_f18['Percent-2021'].astype(float)

df_Pass_Count_m2_f18['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f18['Total-2022'],errors='coerce')
df_Pass_Count_m2_f18 = df_Pass_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f18['Total-2022'] = df_Pass_Count_m2_f18['Total-2022'].astype(int)
df_Pass_Count_m2_f18['Percent-2022'] = df_Pass_Count_m2_f18['Percent-2022'].astype(float)

df_Pass_Count_m2_f18['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f18['Total-2023'],errors='coerce')
df_Pass_Count_m2_f18 = df_Pass_Count_m2_f18.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f18['Total-2023'] = df_Pass_Count_m2_f18['Total-2023'].astype(int)
df_Pass_Count_m2_f18['Percent-2023'] = df_Pass_Count_m2_f18['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f18['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f18['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f18 = dfAttendees_Country_Count_m2_f18.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f18['Total-2017'] = dfAttendees_Country_Count_m2_f18['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f18['Percent-2017'] = dfAttendees_Country_Count_m2_f18['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f18['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f18['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f18 = dfAttendees_Country_Count_m2_f18.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f18['Total-2018'] = dfAttendees_Country_Count_m2_f18['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f18['Percent-2018'] = dfAttendees_Country_Count_m2_f18['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f18['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f18['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f18 = dfAttendees_Country_Count_m2_f18.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f18['Total-2019'] = dfAttendees_Country_Count_m2_f18['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f18['Percent-2019'] = dfAttendees_Country_Count_m2_f18['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f18['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f18['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f18 = dfAttendees_Country_Count_m2_f18.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f18['Total-2021'] = dfAttendees_Country_Count_m2_f18['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f18['Percent-2021'] = dfAttendees_Country_Count_m2_f18['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f18['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f18['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f18 = dfAttendees_Country_Count_m2_f18.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f18['Total-2022'] = dfAttendees_Country_Count_m2_f18['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f18['Percent-2022'] = dfAttendees_Country_Count_m2_f18['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f18['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f18['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f18 = dfAttendees_Country_Count_m2_f18.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f18['Total-2023'] = dfAttendees_Country_Count_m2_f18['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f18['Percent-2023'] = dfAttendees_Country_Count_m2_f18['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f18['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f18['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f18 = df_ATTENDEES_AREAS_count_m2_f18.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f18['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f18['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f18['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f18['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f18['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f18['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f18 = df_ATTENDEES_AREAS_count_m2_f18.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f18['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f18['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f18['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f18['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f18['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f18['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f18 = df_ATTENDEES_AREAS_count_m2_f18.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f18['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f18['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f18['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f18['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f18['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f18['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f18 = df_ATTENDEES_AREAS_count_m2_f18.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f18['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f18['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f18['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f18['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f18['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f18['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f18 = df_ATTENDEES_AREAS_count_m2_f18.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f18['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f18['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f18['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f18['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f18['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f18['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f18 = df_ATTENDEES_AREAS_count_m2_f18.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f18['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f18['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f18['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f18['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f18['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f18['Total-2017'],errors='coerce')
df_Specialty_count_m2_f18 = df_Specialty_count_m2_f18.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f18['Total-2017'] = df_Specialty_count_m2_f18['Total-2017'].astype(int)
df_Specialty_count_m2_f18['Percent-2017'] = df_Specialty_count_m2_f18['Percent-2017'].astype(float)

df_Specialty_count_m2_f18['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f18['Total-2018'],errors='coerce')
df_Specialty_count_m2_f18 = df_Specialty_count_m2_f18.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f18['Total-2018'] = df_Specialty_count_m2_f18['Total-2018'].astype(int)
df_Specialty_count_m2_f18['Percent-2018'] = df_Specialty_count_m2_f18['Percent-2018'].astype(float)

df_Specialty_count_m2_f18['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f18['Total-2019'],errors='coerce')
df_Specialty_count_m2_f18 = df_Specialty_count_m2_f18.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f18['Total-2019'] = df_Specialty_count_m2_f18['Total-2019'].astype(int)
df_Specialty_count_m2_f18['Percent-2019'] = df_Specialty_count_m2_f18['Percent-2019'].astype(float)

df_Specialty_count_m2_f18['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f18['Total-2021'],errors='coerce')
df_Specialty_count_m2_f18 = df_Specialty_count_m2_f18.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f18['Total-2021'] = df_Specialty_count_m2_f18['Total-2021'].astype(int)
df_Specialty_count_m2_f18['Percent-2021'] = df_Specialty_count_m2_f18['Percent-2021'].astype(float)

df_Specialty_count_m2_f18['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f18['Total-2022'],errors='coerce')
df_Specialty_count_m2_f18 = df_Specialty_count_m2_f18.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f18['Total-2022'] = df_Specialty_count_m2_f18['Total-2022'].astype(int)
df_Specialty_count_m2_f18['Percent-2022'] = df_Specialty_count_m2_f18['Percent-2022'].astype(float)

df_Specialty_count_m2_f18['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f18['Total-2023'],errors='coerce')
df_Specialty_count_m2_f18 = df_Specialty_count_m2_f18.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f18['Total-2023'] = df_Specialty_count_m2_f18['Total-2023'].astype(int)
df_Specialty_count_m2_f18['Percent-2023'] = df_Specialty_count_m2_f18['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f18.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f18.dtypes)
#print(df_Specialty_count_m2_f18.dtypes)

#print(dfAttendees_Country_Count_m2_f18.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f18.dtypes)
#print(df_Specialty_count_m2_f18.dtypes)

# EXCEL FILE
writerf18 = pd.ExcelWriter(outputExcelFile_f18, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f18.to_excel\
    (writerf18, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f18.to_excel\
    (writerf18, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f18.to_excel\
    (writerf18, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f18.to_excel\
    (writerf18, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f18.to_excel\
    (writerf18, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f18.to_excel\
    (writerf18, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f18.to_excel\
    (writerf18, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f18.to_excel\
    (writerf18, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f18.to_excel\
    (writerf18, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f18.to_excel\
    (writerf18, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f18.to_excel\
    (writerf18, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf18.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f18)

workbook.save(outputExcelFile_f18)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 70 days**********************************************')
print('************************************End of 70 days**********************************************')
print('************************************End of 70 days**********************************************')
print('************************************End of 70 days**********************************************')
print('************************************End of 70 days**********************************************')
print('************************************End of 70 days**********************************************')
print('************************************End of 70 days**********************************************')
print('************************************End of 70 days**********************************************')
print('************************************End of 70 days**********************************************')

#unit 1
#Total Number of Registrations
dfd17_f19_Registrations_count = pd.DataFrame(filter_19_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f19_Registrations_count = dfd17_f19_Registrations_count.fillna('Unknown')
dfd17_f19_Registrations_count['Percent-2017'] = (dfd17_f19_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f19_Registrations_count['Percent-2017'] = dfd17_f19_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f19_Registrations_count['7DEvolution-2017'] = dfd17_f19_Registrations_count['Total-2017'] - dfd17_f18_Registrations_count['Total-2017']
#print(tab(dfd17_f19_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f19_Registrations_count = pd.DataFrame(filter_19_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f19_Registrations_count = dfd18_f19_Registrations_count.fillna('Unknown')
dfd18_f19_Registrations_count['Percent-2018'] = (dfd18_f19_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f19_Registrations_count['Percent-2018'] = dfd18_f19_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f19_Registrations_count['7DEvolution-2018'] = dfd18_f19_Registrations_count['Total-2018'] - dfd18_f18_Registrations_count['Total-2018']
#print(tab(dfd18_f19_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f19_Registrations_count = pd.DataFrame(filter_19_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f19_Registrations_count = dfd19_f19_Registrations_count.fillna('Unknown')
dfd19_f19_Registrations_count['Percent-2019'] = (dfd19_f19_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f19_Registrations_count['Percent-2019'] = dfd19_f19_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f19_Registrations_count['7DEvolution-2019'] = dfd19_f19_Registrations_count['Total-2019'] - dfd19_f18_Registrations_count['Total-2019']
#print(tab(dfd19_f19_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f19_Registrations_count = pd.DataFrame(filter_19_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f19_Registrations_count = dfd21_f19_Registrations_count.fillna('Unknown')
dfd21_f19_Registrations_count['Percent-2021'] = (dfd21_f19_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f19_Registrations_count['Percent-2021'] = dfd21_f19_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f19_Registrations_count['7DEvolution-2021'] = dfd21_f19_Registrations_count['Total-2021'] - dfd21_f18_Registrations_count['Total-2021']
#print(tab(dfd21_f19_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f19_Registrations_count = pd.DataFrame(filter_19_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f19_Registrations_count = dfd22_f19_Registrations_count.fillna('Unknown')
dfd22_f19_Registrations_count['Percent-2022'] = (dfd22_f19_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f19_Registrations_count['Percent-2022'] = dfd22_f19_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f19_Registrations_count['7DEvolution-2022'] = dfd22_f19_Registrations_count['Total-2022'] - dfd22_f18_Registrations_count['Total-2022']
#print(tab(dfd22_f19_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_Registrations_count = pd.DataFrame(filter_19_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f19_Registrations_count = dfd23_f19_Registrations_count.fillna('Unknown')
dfd23_f19_Registrations_count['Percent-2023'] = (dfd23_f19_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f19_Registrations_count['Percent-2023'] = dfd23_f19_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f19_Registrations_count['7DEvolution-2023'] = dfd23_f19_Registrations_count['Total-2023'] - dfd23_f18_Registrations_count['Total-2023']
#print(tab(dfd23_f19_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f19_RegistrationsEvolution_count = pd.DataFrame(filter_19_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f19_RegistrationsEvolution_count = dfd23_f19_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f19_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f19_Registrations_count['Total-2023'] - dfd19_f19_Registrations_count['Total-2019'])/ dfd19_f19_Registrations_count['Total-2019'].sum()) * 100
dfd23_f19_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f19_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f19_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f19 = pd.DataFrame(pd.merge(dfd17_f19_Registrations_count, dfd18_f19_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f19 = pd.DataFrame(pd.merge(dfd19_f19_Registrations_count, dfd21_f19_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f19 = pd.DataFrame(pd.merge(dfd22_f19_Registrations_count, dfd23_f19_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f19 = pd.DataFrame(pd.merge(df_Registrations_count_1_f19, df_Registrations_count_2_f19, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f19 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f19, df_Registrations_count_3_f19, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f19 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f19, dfd23_f19_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f19 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17, df_Registrations_Merge_f18, df_Registrations_Merge_f19]
Concat_Registrations_count_f1_f19 = pd.concat(ConcatFrames_Registrations_count_f1_f19)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f19  = ConcatFrames_Registrations_count_f1_f19.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f19.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f19 = filter_19_df18[filter_19_df18['New customer'] == 1]
df_NewCustomer_df19_f19 = filter_19_df19[filter_19_df19['New customer'] == 1]
df_NewCustomer_df21_f19 = filter_19_df21[filter_19_df21['New customer'] == 1]
df_NewCustomer_df22_f19 = filter_19_df22[filter_19_df22['New customer'] == 1]
df_NewCustomer_df23_f19 = filter_19_df23[filter_19_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f19.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f19.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f19.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a19_ACQRET_count = pd.DataFrame(filter_19_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f19_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f19_ACQRET_count['Percent-2018'] = (dfd18_f19_ACQRET_count['ACQ-2018'] / dfd18_f19_Registrations_count['Total-2018'].sum()) * 100
dfd18_f19_ACQRET_count['Percent-2018'] = dfd18_f19_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f19_ACQRET_count['RET-2018'] = dfd18_a19_ACQRET_count['Total-2018'] - dfd18_f19_ACQRET_count['ACQ-2018']
dfd18_f19_ACQRET_count['Percnt-2018'] = (dfd18_f19_ACQRET_count['RET-2018'] / dfd18_a19_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f19_ACQRET_count['Percnt-2018'] = dfd18_f19_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f19_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a19_ACQRET_count = pd.DataFrame(filter_19_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f19_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f19_ACQRET_count['Percent-2019'] = (dfd19_f19_ACQRET_count['ACQ-2019'] / dfd19_f19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f19_ACQRET_count['Percent-2019'] = dfd19_f19_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f19_ACQRET_count['RET-2019'] = dfd19_a19_ACQRET_count['Total-2019'] - dfd19_f19_ACQRET_count['ACQ-2019']
dfd19_f19_ACQRET_count['Percnt-2019'] = (dfd19_f19_ACQRET_count['RET-2019'] / dfd19_a19_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f19_ACQRET_count['Percnt-2019'] = dfd19_f19_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f19_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a19_ACQRET_count = pd.DataFrame(filter_19_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f19_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f19_ACQRET_count['Percent-2021'] = (dfd21_f19_ACQRET_count['ACQ-2021'] / dfd21_f19_Registrations_count['Total-2021'].sum()) * 100
dfd21_f19_ACQRET_count['Percent-2021'] = dfd21_f19_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f19_ACQRET_count['RET-2021'] = dfd21_a19_ACQRET_count['Total-2021'] - dfd21_f19_ACQRET_count['ACQ-2021']
dfd21_f19_ACQRET_count['Percnt-2021'] = (dfd21_f19_ACQRET_count['RET-2021'] / dfd21_a19_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f19_ACQRET_count['Percnt-2021'] = dfd21_f19_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f19_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a19_ACQRET_count = pd.DataFrame(filter_19_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f19_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f19_ACQRET_count['Percent-2022'] = (dfd22_f19_ACQRET_count['ACQ-2022'] / dfd22_f19_Registrations_count['Total-2022'].sum()) * 100
dfd22_f19_ACQRET_count['Percent-2022'] = dfd22_f19_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f19_ACQRET_count['RET-2022'] = dfd22_a19_ACQRET_count['Total-2022'] - dfd22_f19_ACQRET_count['ACQ-2022']
dfd22_f19_ACQRET_count['Percnt-2022'] = (dfd22_f19_ACQRET_count['RET-2022'] / dfd22_a19_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f19_ACQRET_count['Percnt-2022'] = dfd22_f19_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f19_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a19_ACQRET_count = pd.DataFrame(filter_19_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f19_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f19_ACQRET_count['Percent-2023'] = (dfd23_f19_ACQRET_count['ACQ-2023'] / dfd23_f19_Registrations_count['Total-2023'].sum()) * 100
dfd23_f19_ACQRET_count['Percent-2023'] = dfd23_f19_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f19_ACQRET_count['RET-2023'] = dfd23_a19_ACQRET_count['Total-2023'] - dfd23_f19_ACQRET_count['ACQ-2023']
dfd23_f19_ACQRET_count['Percnt-2023'] = (dfd23_f19_ACQRET_count['RET-2023'] / dfd23_a19_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f19_ACQRET_count['Percnt-2023'] = dfd23_f19_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f19_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f19 = pd.DataFrame(pd.merge(dfd18_a19_ACQRET_count, dfd18_f19_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f19 = pd.DataFrame(pd.merge(dfd19_a19_ACQRET_count, dfd19_f19_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f19 = pd.DataFrame(pd.merge(dfd21_a19_ACQRET_count, dfd21_f19_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f19 = pd.DataFrame(pd.merge(dfd22_a19_ACQRET_count, dfd22_f19_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_19_f19 = pd.DataFrame(pd.merge(dfd23_a19_ACQRET_count, dfd23_f19_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_19_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f19 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f19, df_ACQRET_count_2_f19, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f19 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f19, df_ACQRET_count_3_f19, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f19 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f19, df_ACQRET_count_4_f19, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f19 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f19, df_ACQRET_count_19_f19, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f19 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17, df_ACQRET_count_M4_f18, df_ACQRET_count_M4_f19]
Concat_ACQRET_count_f1_f19 = pd.concat(ConcatFrames_ACQRET_count_f1_f19)
#print(tab(Concat_ACQRET_count_f1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f19 = Concat_ACQRET_count_f1_f19[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f19_Revenue_calc = pd.DataFrame(filter_19_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f19_Revenue_calc['Percent-2017'] = (dfd17_f19_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f19_Revenue_calc['Percent-2017'] = dfd17_f19_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f19_Revenue_calc['7DEvolution-2017'] = dfd17_f19_Revenue_calc['Total-2017'] - dfd17_f18_Revenue_calc['Total-2017']
#print(tab(dfd17_f19_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f19_Revenue_calc = pd.DataFrame(filter_19_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f19_Revenue_calc['Percent-2018'] = (dfd18_f19_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f19_Revenue_calc['Percent-2018'] = dfd18_f19_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f19_Revenue_calc['7DEvolution-2018'] = dfd18_f19_Revenue_calc['Total-2018'] - dfd18_f18_Revenue_calc['Total-2018']
#print(tab(dfd18_f19_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f19_Revenue_calc = pd.DataFrame(filter_19_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f19_Revenue_calc['Percent-2019'] = (dfd19_f19_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f19_Revenue_calc['Percent-2019'] = dfd19_f19_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f19_Revenue_calc['7DEvolution-2019'] = dfd19_f19_Revenue_calc['Total-2019'] - dfd19_f18_Revenue_calc['Total-2019']
#print(tab(dfd19_f19_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f19_Revenue_calc = pd.DataFrame(filter_19_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f19_Revenue_calc['Percent-2021'] = (dfd21_f19_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f19_Revenue_calc['Percent-2021'] = dfd21_f19_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f19_Revenue_calc['7DEvolution-2021'] = dfd21_f19_Revenue_calc['Total-2021'] - dfd21_f18_Revenue_calc['Total-2021']
#print(tab(dfd21_f19_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f19_Revenue_calc = pd.DataFrame(filter_19_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f19_Revenue_calc['Percent-2022'] = (dfd22_f19_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f19_Revenue_calc['Percent-2022'] = dfd22_f19_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f19_Revenue_calc['7DEvolution-2022'] = dfd22_f19_Revenue_calc['Total-2022'] - dfd22_f18_Revenue_calc['Total-2022']
#print(tab(dfd22_f19_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_Revenue_calc = pd.DataFrame(filter_19_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f19_Revenue_calc['Percent-2023'] = (dfd23_f19_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f19_Revenue_calc['Percent-2023'] = dfd23_f19_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f19_Revenue_calc['7DEvolution-2023'] = dfd23_f19_Revenue_calc['Total-2023'] - dfd23_f18_Revenue_calc['Total-2023']
#print(tab(dfd23_f19_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f19_RevenueEvolution_calc = pd.DataFrame(filter_19_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f19_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f19_Revenue_calc['Total-2023'] - dfd19_f19_Revenue_calc['Total-2019'])/ dfd19_f19_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f19_RevenueEvolution_calc['Evolution-2023'] = dfd23_f19_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f19_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f19 = pd.DataFrame(pd.merge(dfd17_f19_Revenue_calc, dfd18_f19_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f19 = pd.DataFrame(pd.merge(dfd19_f19_Revenue_calc, dfd21_f19_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f19 = pd.DataFrame(pd.merge(dfd22_f19_Revenue_calc, dfd23_f19_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f19_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f19, df_Revenue_calc_2_f19, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f19Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f19_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f19_Evolution, df_Revenue_calc_3_f19, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f19Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f19 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f19_Evolution, dfd23_f19_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f19 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17, df_Revenue_calc_f18, df_Revenue_calc_f19]
Concat_REV_count_f1_f19 = pd.concat(ConcatFrames_REV_count_f1_f19)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f19_Registrations_GRDel = pd.DataFrame(filtr_19_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f19_Registrations_GRDel = dfd17_f19_Registrations_GRDel.fillna('Unknown')
dfd17_f19_Registrations_GRDel['Percent-2017'] = (dfd17_f19_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f19_Registrations_GRDel['Percent-2017'] = dfd17_f19_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f19_Registrations_GRDel['7DEvolution-2017'] = dfd17_f19_Registrations_GRDel['Total-2017'] - dfd17_f18_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f19_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f19_Registrations_GRDel = pd.DataFrame(filtr_19_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f19_Registrations_GRDel = dfd18_f19_Registrations_GRDel.fillna('Unknown')
dfd18_f19_Registrations_GRDel['Percent-2018'] = (dfd18_f19_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f19_Registrations_GRDel['Percent-2018'] = dfd18_f19_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f19_Registrations_GRDel['7DEvolution-2018'] = dfd18_f19_Registrations_GRDel['Total-2018'] - dfd18_f18_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f19_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f19_Registrations_GRDel = pd.DataFrame(filtr_19_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f19_Registrations_GRDel = dfd19_f19_Registrations_GRDel.fillna('Unknown')
dfd19_f19_Registrations_GRDel['Percent-2019'] = (dfd19_f19_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f19_Registrations_GRDel['Percent-2019'] = dfd19_f19_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f19_Registrations_GRDel['7DEvolution-2019'] = dfd19_f19_Registrations_GRDel['Total-2019'] - dfd19_f18_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f19_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f19_Registrations_GRDel = pd.DataFrame(filtr_19_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f19_Registrations_GRDel = dfd21_f19_Registrations_GRDel.fillna('Unknown')
dfd21_f19_Registrations_GRDel['Percent-2021'] = (dfd21_f19_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f19_Registrations_GRDel['Percent-2021'] = dfd21_f19_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f19_Registrations_GRDel['7DEvolution-2021'] = dfd21_f19_Registrations_GRDel['Total-2021'] - dfd21_f18_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f19_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f19_Registrations_GRDel = pd.DataFrame(filtr_19_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f19_Registrations_GRDel = dfd22_f19_Registrations_GRDel.fillna('Unknown')
dfd22_f19_Registrations_GRDel['Percent-2022'] = (dfd22_f19_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f19_Registrations_GRDel['Percent-2022'] = dfd22_f19_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f19_Registrations_GRDel['7DEvolution-2022'] = dfd22_f19_Registrations_GRDel['Total-2022'] - dfd22_f18_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f19_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_Registrations_GRDel = pd.DataFrame(filtr_19_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f19_Registrations_GRDel = dfd23_f19_Registrations_GRDel.fillna('Unknown')
dfd23_f19_Registrations_GRDel['Percent-2023'] = (dfd23_f19_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f19_Registrations_GRDel['Percent-2023'] = dfd23_f19_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f19_Registrations_GRDel['7DEvolution-2023'] = dfd23_f19_Registrations_GRDel['Total-2023'] - dfd23_f18_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f19_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f19_Registrations_Evol_GRDel = pd.DataFrame(filtr_19_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f19_Registrations_Evol_GRDel = dfd23_f19_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f19_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f19_Registrations_GRDel['Total-2023'] - dfd19_f19_Registrations_GRDel['Total-2019']) / dfd19_f19_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f19_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f19 = pd.concat([dfd17_f19_Registrations_GRDel, dfd18_f19_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f19 = pd.DataFrame(pd.merge(dfd17_f19_Registrations_GRDel, dfd18_f19_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f19 = pd.DataFrame(pd.merge(dfd19_f19_Registrations_GRDel, dfd21_f19_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f19 = pd.DataFrame(pd.merge(dfd22_f19_Registrations_GRDel, dfd23_f19_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f19 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f19, df_Registrations_GRDel_2_f19, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_19_f19 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f19, df_Registrations_GRDel_3_f19, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f19 = pd.DataFrame(pd.merge(df_Registrations_GRDel_19_f19, dfd23_f19_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f19 = df_Registrations_GRDel_f19[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f19 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17, df_Registrations_GRDel_f18, df_Registrations_GRDel_f19]
Concat_RegGRDel_count_f1_f19 = pd.concat(ConcatFrames_RegGRDel_count_f1_f19)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f19 = filtr_19_df18_GRdel[filtr_19_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f19 = filtr_19_df19_GRdel[filtr_19_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f19 = filtr_19_df21_GRdel[filtr_19_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f19 = filtr_19_df22_GRdel[filtr_19_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f19 = filtr_19_df23_GRdel[filtr_19_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f19.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f19.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a19_AC_RT_GRDel = pd.DataFrame(filtr_19_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f19_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f19.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f19_AC_RT_GRDel['Percent-2018'] = (dfd18_f19_AC_RT_GRDel['ACQ-2018'] / dfd18_f19_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f19_AC_RT_GRDel['Percent-2018'] = dfd18_f19_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f19_AC_RT_GRDel['RET-2018'] = dfd18_a19_AC_RT_GRDel['Total-2018'] - dfd18_f19_AC_RT_GRDel['ACQ-2018']
dfd18_f19_AC_RT_GRDel['Percnt-2018'] = (dfd18_f19_AC_RT_GRDel['RET-2018'] / dfd18_a19_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f19_AC_RT_GRDel['Percnt-2018'] = dfd18_f19_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f19_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a19_AC_RT_GRDel = pd.DataFrame(filtr_19_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f19_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f19.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f19_AC_RT_GRDel['Percent-2019'] = (dfd19_f19_AC_RT_GRDel['ACQ-2019'] / dfd19_f19_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f19_AC_RT_GRDel['Percent-2019'] = dfd19_f19_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f19_AC_RT_GRDel['RET-2019'] = dfd19_a19_AC_RT_GRDel['Total-2019'] - dfd19_f19_AC_RT_GRDel['ACQ-2019']
dfd19_f19_AC_RT_GRDel['Percnt-2019'] = (dfd19_f19_AC_RT_GRDel['RET-2019'] / dfd19_a19_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f19_AC_RT_GRDel['Percnt-2019'] = dfd19_f19_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f19_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a19_AC_RT_GRDel = pd.DataFrame(filtr_19_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f19_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f19.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f19_AC_RT_GRDel['Percent-2021'] = (dfd21_f19_AC_RT_GRDel['ACQ-2021'] / dfd21_f19_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f19_AC_RT_GRDel['Percent-2021'] = dfd21_f19_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f19_AC_RT_GRDel['RET-2021'] = dfd21_a19_AC_RT_GRDel['Total-2021'] - dfd21_f19_AC_RT_GRDel['ACQ-2021']
dfd21_f19_AC_RT_GRDel['Percnt-2021'] = (dfd21_f19_AC_RT_GRDel['RET-2021'] / dfd21_a19_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f19_AC_RT_GRDel['Percnt-2021'] = dfd21_f19_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f19_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a19_AC_RT_GRDel = pd.DataFrame(filtr_19_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f19_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f19.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f19_AC_RT_GRDel['Percent-2022'] = (dfd22_f19_AC_RT_GRDel['ACQ-2022'] / dfd22_f19_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f19_AC_RT_GRDel['Percent-2022'] = dfd22_f19_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f19_AC_RT_GRDel['RET-2022'] = dfd22_a19_AC_RT_GRDel['Total-2022'] - dfd22_f19_AC_RT_GRDel['ACQ-2022']
dfd22_f19_AC_RT_GRDel['Percnt-2022'] = (dfd22_f19_AC_RT_GRDel['RET-2022'] / dfd22_a19_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f19_AC_RT_GRDel['Percnt-2022'] = dfd22_f19_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f19_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a19_AC_RT_GRDel = pd.DataFrame(filtr_19_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f19_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f19.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f19_AC_RT_GRDel['Percent-2023'] = (dfd23_f19_AC_RT_GRDel['ACQ-2023'] / dfd23_f19_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f19_AC_RT_GRDel['Percent-2023'] = dfd23_f19_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f19_AC_RT_GRDel['RET-2023'] = dfd23_a19_AC_RT_GRDel['Total-2023'] - dfd23_f19_AC_RT_GRDel['ACQ-2023']
dfd23_f19_AC_RT_GRDel['Percnt-2023'] = (dfd23_f19_AC_RT_GRDel['RET-2023'] / dfd23_a19_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f19_AC_RT_GRDel['Percnt-2023'] = dfd23_f19_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f19_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f19 = pd.DataFrame(pd.merge_ordered(dfd18_a19_AC_RT_GRDel, dfd18_f19_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f19 = pd.DataFrame(pd.merge_ordered(dfd19_a19_AC_RT_GRDel, dfd19_f19_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f19 = pd.DataFrame(pd.merge_ordered(dfd21_a19_AC_RT_GRDel, dfd21_f19_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f19 = pd.DataFrame(pd.merge_ordered(dfd22_a19_AC_RT_GRDel, dfd22_f19_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_19_f19 = pd.DataFrame(pd.merge_ordered(dfd23_a19_AC_RT_GRDel, dfd23_f19_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f19 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f19, df_AC_ET_GRDel_2_f19, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f19 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f19, df_AC_ET_GRDel_3_f19, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f19 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f19, df_AC_ET_GRDel_4_f19, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f19 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f19, df_AC_ET_GRDel_19_f19, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f19 = df_AC_RT_GRDel_M4_f19[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f19 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17, df_AC_RT_GRDel_M4_f18, df_AC_RT_GRDel_M4_f19]
Conct_AC_RT_GRDel_f1_f19 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f19)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_19_df17_GRdel = filtr_19_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f19_Revenu_GRDel = pd.DataFrame(filtr_19_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f19_Revenu_GRDel['Percent-2017'] = (dfd17_f19_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f19_Revenu_GRDel['Percent-2017'] = dfd17_f19_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f19_Revenu_GRDel['7DEvolution-2017'] = dfd17_f19_Revenu_GRDel['Total-2017'] - dfd17_f18_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f19_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_19_df18_GRdel = filtr_19_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f19_Revenu_GRDel = pd.DataFrame(filtr_19_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f19_Revenu_GRDel['Percent-2018'] = (dfd18_f19_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f19_Revenu_GRDel['Percent-2018'] = dfd18_f19_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f19_Revenu_GRDel['7DEvolution-2018'] = dfd18_f19_Revenu_GRDel['Total-2018'] - dfd18_f18_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f19_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_19_df19_GRdel = filtr_19_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f19_Revenu_GRDel = pd.DataFrame(filtr_19_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f19_Revenu_GRDel['Percent-2019'] = (dfd19_f19_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f19_Revenu_GRDel['Percent-2019'] = dfd19_f19_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f19_Revenu_GRDel['7DEvolution-2019'] = dfd19_f19_Revenu_GRDel['Total-2019'] - dfd19_f18_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f19_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_19_df21_GRdel = filtr_19_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f19_Revenu_GRDel = pd.DataFrame(filtr_19_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f19_Revenu_GRDel['Percent-2021'] = (dfd21_f19_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f19_Revenu_GRDel['Percent-2021'] = dfd21_f19_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f19_Revenu_GRDel['7DEvolution-2021'] = dfd21_f19_Revenu_GRDel['Total-2021'] - dfd21_f18_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f19_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_19_df22_GRdel = filtr_19_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f19_Revenu_GRDel = pd.DataFrame(filtr_19_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f19_Revenu_GRDel['Percent-2022'] = (dfd22_f19_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f19_Revenu_GRDel['Percent-2022'] = dfd22_f19_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f19_Revenu_GRDel['7DEvolution-2022'] = dfd22_f19_Revenu_GRDel['Total-2022'] - dfd22_f18_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f19_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_19_df23_GRdel = filtr_19_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f19_Revenu_GRDel = pd.DataFrame(filtr_19_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f19_Revenu_GRDel['Percent-2023'] = (dfd23_f19_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f19_Revenu_GRDel['Percent-2023'] = dfd23_f19_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f19_Revenu_GRDel['7DEvolution-2023'] = dfd23_f19_Revenu_GRDel['Total-2023'] - dfd23_f18_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f19_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f19_Revenu_Evlt_GRDel = pd.DataFrame(filtr_19_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f19_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f19_Revenu_GRDel['Total-2023'] - dfd19_f19_Revenu_GRDel['Total-2019'])/ dfd19_f19_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f19_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f19_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f19_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f19 = pd.DataFrame(pd.merge(dfd17_f19_Revenu_GRDel, dfd18_f19_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f19 = pd.DataFrame(pd.merge(dfd19_f19_Revenu_GRDel, dfd21_f19_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f19 = pd.DataFrame(pd.merge(dfd22_f19_Revenu_GRDel, dfd23_f19_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f19 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f19, df_Revenu_GRDel_2_f19, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_19_f19 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f19, df_Revenu_GRDel_3_f19, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f19 = pd.DataFrame(pd.merge(df_Revenu_GRDel_19_f19, dfd23_f19_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f19 = df_Revenu_GRDel_f19[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f19 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17, df_Revenu_GRDel_f18, df_Revenu_GRDel_f19]
Conct_RV_GRDel_f1_f19 = pd.concat(ConcatFra_RV_GRDel_f1_f19)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f19_Profile_count = pd.DataFrame(filtr_19_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f19_Profile_count = dfd17_f19_Profile_count.fillna('Unknown')
dfd17_f19_Profile_count['Percent-2017'] = (dfd17_f19_Profile_count['Total-2017'] / dfd17_f19_Profile_count['Total-2017'].sum()) * 100
dfd17_f19_Profile_count['Percent-2017'] = dfd17_f19_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f19_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f19_Profile_count = pd.DataFrame(filtr_19_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f19_Profile_count = dfd18_f19_Profile_count.fillna('Unknown')
dfd18_f19_Profile_count['Percent-2018'] = (dfd18_f19_Profile_count['Total-2018'] / dfd18_f19_Profile_count['Total-2018'].sum()) * 100
dfd18_f19_Profile_count['Percent-2018'] = dfd18_f19_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f19_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f19_Profile_count = pd.DataFrame(filtr_19_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f19_Profile_count = dfd19_f19_Profile_count.fillna('Unknown')
dfd19_f19_Profile_count['Percent-2019'] = (dfd19_f19_Profile_count['Total-2019'] / dfd19_f19_Profile_count['Total-2019'].sum()) * 100
dfd19_f19_Profile_count['Percent-2019'] = dfd19_f19_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f19_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f19_Profile_count = pd.DataFrame(filtr_19_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f19_Profile_count = dfd21_f19_Profile_count.fillna('Unknown')
dfd21_f19_Profile_count['Percent-2021'] = (dfd21_f19_Profile_count['Total-2021'] / dfd21_f19_Profile_count['Total-2021'].sum()) * 100
dfd21_f19_Profile_count['Percent-2021'] = dfd21_f19_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f19_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f19_Profile_count = pd.DataFrame(filtr_19_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f19_Profile_count = dfd22_f19_Profile_count.fillna('Unknown')
dfd22_f19_Profile_count['Percent-2022'] = (dfd22_f19_Profile_count['Total-2022'] / dfd22_f19_Profile_count['Total-2022'].sum()) * 100
dfd22_f19_Profile_count['Percent-2022'] = dfd22_f19_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f19_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_Profile_count = pd.DataFrame(filtr_19_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f19_Profile_count = dfd23_f19_Profile_count.fillna('Unknown')
dfd23_f19_Profile_count['Percent-2023'] = (dfd23_f19_Profile_count['Total-2023'] / dfd23_f19_Profile_count['Total-2023'].sum()) * 100
dfd23_f19_Profile_count['Percent-2023'] = dfd23_f19_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f19_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f19 = pd.DataFrame(pd.merge(dfd17_f19_Profile_count, dfd18_f19_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f19 = pd.DataFrame(pd.merge(dfd19_f19_Profile_count, dfd21_f19_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f19 = pd.DataFrame(pd.merge(dfd22_f19_Profile_count, dfd23_f19_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f19 = pd.DataFrame(pd.merge(df_Profile_Count_1_f19, df_Profile_Count_2_f19, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f19 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f19, df_Profile_Count_3_f19, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f19 = df_Profile_Count_m2_f19.append(df_Profile_Count_m2_f19.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f19['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f19_Pass_count = pd.DataFrame(filtr_19_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f19_Pass_count = dfd17_f19_Pass_count.fillna('Unknown')
dfd17_f19_Pass_count['Percent-2017'] = (dfd17_f19_Pass_count['Total-2017'] / dfd17_f19_Pass_count['Total-2017'].sum()) * 100
dfd17_f19_Pass_count['Percent-2017'] = dfd17_f19_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f19_Pass_count = pd.DataFrame(filtr_19_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f19_Pass_count = dfd18_f19_Pass_count.fillna('Unknown')
dfd18_f19_Pass_count['Percent-2018'] = (dfd18_f19_Pass_count['Total-2018'] / dfd18_f19_Pass_count['Total-2018'].sum()) * 100
dfd18_f19_Pass_count['Percent-2018'] = dfd18_f19_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f19_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f19_Pass_count = pd.DataFrame(filtr_19_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f19_Pass_count = dfd19_f19_Pass_count.fillna('Unknown')
dfd19_f19_Pass_count['Percent-2019'] = (dfd19_f19_Pass_count['Total-2019'] / dfd19_f19_Pass_count['Total-2019'].sum()) * 100
dfd19_f19_Pass_count['Percent-2019'] = dfd19_f19_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f19_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f19_Pass_count = pd.DataFrame(filtr_19_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f19_Pass_count = dfd21_f19_Pass_count.fillna('Unknown')
dfd21_f19_Pass_count['Percent-2021'] = (dfd21_f19_Pass_count['Total-2021'] / dfd21_f19_Pass_count['Total-2021'].sum()) * 100
dfd21_f19_Pass_count['Percent-2021'] = dfd21_f19_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f19_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f19_Pass_count = pd.DataFrame(filtr_19_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f19_Pass_count = dfd22_f19_Pass_count.fillna('Unknown')
dfd22_f19_Pass_count['Percent-2022'] = (dfd22_f19_Pass_count['Total-2022'] / dfd22_f19_Pass_count['Total-2022'].sum()) * 100
dfd22_f19_Pass_count['Percent-2022'] = dfd22_f19_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f19_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_Pass_count = pd.DataFrame(filtr_19_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f19_Pass_count = dfd23_f19_Pass_count.fillna('Unknown')
dfd23_f19_Pass_count['Percent-2023'] = (dfd23_f19_Pass_count['Total-2023'] / dfd23_f19_Pass_count['Total-2023'].sum()) * 100
dfd23_f19_Pass_count['Percent-2023'] = dfd23_f19_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f19_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f19 = pd.DataFrame(pd.merge(dfd17_f19_Pass_count, dfd18_f19_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f19 = pd.DataFrame(pd.merge(dfd19_f19_Pass_count, dfd21_f19_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f19 = pd.DataFrame(pd.merge(dfd22_f19_Pass_count, dfd23_f19_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f19 = pd.DataFrame(pd.merge(df_Pass_Count_1_f19, df_Pass_Count_2_f19, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f19 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f19, df_Pass_Count_3_f19, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f19 = df_Pass_Count_m2_f19.append(df_Pass_Count_m2_f19.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f19['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f19_Attendees_Country_count = pd.DataFrame(filtr_19_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f19_Attendees_Country_count = dfd17_f19_Attendees_Country_count.fillna('Unknown')
dfd17_f19_Attendees_Country_count['Percent-2017'] = (dfd17_f19_Attendees_Country_count['Total-2017'] / dfd17_f19_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f19_Attendees_Country_count['Percent-2017'] = dfd17_f19_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f19_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f19_Attendees_Country_count = pd.DataFrame(filtr_19_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f19_Attendees_Country_count = dfd18_f19_Attendees_Country_count.fillna('Unknown')
dfd18_f19_Attendees_Country_count['Percent-2018'] = (dfd18_f19_Attendees_Country_count['Total-2018'] / dfd18_f19_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f19_Attendees_Country_count['Percent-2018'] = dfd18_f19_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f19_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f19_Attendees_Country_count = pd.DataFrame(filtr_19_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f19_Attendees_Country_count = dfd19_f19_Attendees_Country_count.fillna('Unknown')
dfd19_f19_Attendees_Country_count['Percent-2019'] = (dfd19_f19_Attendees_Country_count['Total-2019'] / dfd19_f19_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f19_Attendees_Country_count['Percent-2019'] = dfd19_f19_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f19_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f19_Attendees_Country_count = pd.DataFrame(filtr_19_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f19_Attendees_Country_count = dfd21_f19_Attendees_Country_count.fillna('Unknown')
dfd21_f19_Attendees_Country_count['Percent-2021'] = (dfd21_f19_Attendees_Country_count['Total-2021'] / dfd21_f19_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f19_Attendees_Country_count['Percent-2021'] = dfd21_f19_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f19_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f19_Attendees_Country_count = pd.DataFrame(filtr_19_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f19_Attendees_Country_count = dfd22_f19_Attendees_Country_count.fillna('Unknown')
dfd22_f19_Attendees_Country_count['Percent-2022'] = (dfd22_f19_Attendees_Country_count['Total-2022'] / dfd22_f19_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f19_Attendees_Country_count['Percent-2022'] = dfd22_f19_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f19_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_Attendees_Country_count = pd.DataFrame(filtr_19_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f19_Attendees_Country_count = dfd23_f19_Attendees_Country_count.fillna('Unknown')
dfd23_f19_Attendees_Country_count['Percent-2023'] = (dfd23_f19_Attendees_Country_count['Total-2023'] / dfd23_f19_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f19_Attendees_Country_count['Percent-2023'] = dfd23_f19_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f19_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f19 = pd.DataFrame(pd.merge(dfd17_f19_Attendees_Country_count, dfd18_f19_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f19 = pd.DataFrame(pd.merge(dfd19_f19_Attendees_Country_count, dfd21_f19_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f19 = pd.DataFrame(pd.merge(dfd22_f19_Attendees_Country_count, dfd23_f19_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f19 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f19, dfAttendees_Country_Count_2_f19, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f19.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f19 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f19, dfAttendees_Country_Count_3_f19, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f19 = dfAttendees_Country_Count_m2_f19.append(dfAttendees_Country_Count_m2_f19.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f19['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f19_ATTENDEES_AREAS_count = pd.DataFrame(filtr_19_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f19_ATTENDEES_AREAS_count = dfd17_f19_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f19_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f19_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f19_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f19_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f19_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f19_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f19_ATTENDEES_AREAS_count = pd.DataFrame(filtr_19_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f19_ATTENDEES_AREAS_count = dfd18_f19_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f19_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f19_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f19_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f19_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f19_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f19_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f19_ATTENDEES_AREAS_count = pd.DataFrame(filtr_19_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f19_ATTENDEES_AREAS_count = dfd19_f19_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f19_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f19_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f19_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f19_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f19_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f19_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f19_ATTENDEES_AREAS_count = pd.DataFrame(filtr_19_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f19_ATTENDEES_AREAS_count = dfd21_f19_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f19_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f19_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f19_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f19_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f19_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f19_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f19_ATTENDEES_AREAS_count = pd.DataFrame(filtr_19_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f19_ATTENDEES_AREAS_count = dfd22_f19_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f19_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f19_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f19_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f19_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f19_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f19_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_ATTENDEES_AREAS_count = pd.DataFrame(filtr_19_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f19_ATTENDEES_AREAS_count = dfd23_f19_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f19_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f19_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f19_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f19_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f19_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f19_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f19 = pd.DataFrame(pd.merge(dfd17_f19_ATTENDEES_AREAS_count, dfd18_f19_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f19 = pd.DataFrame(pd.merge(dfd19_f19_ATTENDEES_AREAS_count, dfd21_f19_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f19 = pd.DataFrame(pd.merge(dfd22_f19_ATTENDEES_AREAS_count, dfd23_f19_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f19.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f19 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f19, df_ATTENDEES_AREAS_count_2_f19, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f19 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f19, df_ATTENDEES_AREAS_count_3_f19, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f19 = df_ATTENDEES_AREAS_count_m2_f19.append(df_ATTENDEES_AREAS_count_m2_f19.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f19['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f19_Attendees_Specialty_count = pd.DataFrame(filtr_19_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f19_Attendees_Specialty_count = dfd17_f19_Attendees_Specialty_count.fillna('Unknown')
dfd17_f19_Attendees_Specialty_count['Percent-2017'] = (dfd17_f19_Attendees_Specialty_count['Total-2017'] / dfd17_f19_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f19_Attendees_Specialty_count['Percent-2017'] = dfd17_f19_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f19_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f19_Attendees_Specialty_count = pd.DataFrame(filtr_19_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f19_Attendees_Specialty_count = dfd18_f19_Attendees_Specialty_count.fillna('Unknown')
dfd18_f19_Attendees_Specialty_count['Percent-2018'] = (dfd18_f19_Attendees_Specialty_count['Total-2018'] / dfd18_f19_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f19_Attendees_Specialty_count['Percent-2018'] = dfd18_f19_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f19_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f19_Attendees_Specialty_count = pd.DataFrame(filtr_19_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f19_Attendees_Specialty_count = dfd19_f19_Attendees_Specialty_count.fillna('Unknown')
dfd19_f19_Attendees_Specialty_count['Percent-2019'] = (dfd19_f19_Attendees_Specialty_count['Total-2019'] / dfd19_f19_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f19_Attendees_Specialty_count['Percent-2019'] = dfd19_f19_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f19_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f19_Attendees_Specialty_count = pd.DataFrame(filtr_19_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f19_Attendees_Specialty_count = dfd21_f19_Attendees_Specialty_count.fillna('Unknown')
dfd21_f19_Attendees_Specialty_count['Percent-2021'] = (dfd21_f19_Attendees_Specialty_count['Total-2021'] / dfd21_f19_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f19_Attendees_Specialty_count['Percent-2021'] = dfd21_f19_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f19_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f19_Attendees_Specialty_count = pd.DataFrame(filtr_19_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f19_Attendees_Specialty_count = dfd22_f19_Attendees_Specialty_count.fillna('Unknown')
dfd22_f19_Attendees_Specialty_count['Percent-2022'] = (dfd22_f19_Attendees_Specialty_count['Total-2022'] / dfd22_f19_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f19_Attendees_Specialty_count['Percent-2022'] = dfd22_f19_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f19_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f19_Attendees_Specialty_count = pd.DataFrame(filtr_19_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f19_Attendees_Specialty_count = dfd23_f19_Attendees_Specialty_count.fillna('Unknown')
dfd23_f19_Attendees_Specialty_count['Percent-2023'] = (dfd23_f19_Attendees_Specialty_count['Total-2023'] / dfd23_f19_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f19_Attendees_Specialty_count['Percent-2023'] = dfd23_f19_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f19_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f19 = pd.DataFrame(pd.merge(dfd17_f19_Attendees_Specialty_count, dfd18_f19_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f19 = pd.DataFrame(pd.merge(dfd19_f19_Attendees_Specialty_count, dfd21_f19_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f19 = pd.DataFrame(pd.merge(dfd22_f19_Attendees_Specialty_count, dfd23_f19_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f19 = pd.DataFrame(pd.merge(df_Specialty_count_1_f19, df_Specialty_count_2_f19, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f19.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f19 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f19, df_Specialty_count_3_f19, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f19 = df_Specialty_count_m2_f19.append(df_Specialty_count_m2_f19.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f19['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f19['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f19['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f19 = Concat_Registrations_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f19['Total-2017'] = Concat_Registrations_count_f1_f19['Total-2017'].astype(int)
Concat_Registrations_count_f1_f19['Percent-2017'] = Concat_Registrations_count_f1_f19['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f19['7DEvolution-2017'] = Concat_Registrations_count_f1_f19['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f19['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f19['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f19 = Concat_Registrations_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f19['Total-2018'] = Concat_Registrations_count_f1_f19['Total-2018'].astype(int)
Concat_Registrations_count_f1_f19['Percent-2018'] = Concat_Registrations_count_f1_f19['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f19['7DEvolution-2018'] = Concat_Registrations_count_f1_f19['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f19['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f19['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f19 = Concat_Registrations_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f19['Total-2019'] = Concat_Registrations_count_f1_f19['Total-2019'].astype(int)
Concat_Registrations_count_f1_f19['Percent-2019'] = Concat_Registrations_count_f1_f19['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f19['7DEvolution-2019'] = Concat_Registrations_count_f1_f19['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f19['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f19['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f19 = Concat_Registrations_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f19['Total-2021'] = Concat_Registrations_count_f1_f19['Total-2021'].astype(int)
Concat_Registrations_count_f1_f19['Percent-2021'] = Concat_Registrations_count_f1_f19['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f19['7DEvolution-2021'] = Concat_Registrations_count_f1_f19['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f19['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f19['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f19 = Concat_Registrations_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f19['Total-2022'] = Concat_Registrations_count_f1_f19['Total-2022'].astype(int)
Concat_Registrations_count_f1_f19['Percent-2022'] = Concat_Registrations_count_f1_f19['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f19['7DEvolution-2022'] = Concat_Registrations_count_f1_f19['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f19['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f19['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f19 = Concat_Registrations_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f19['Total-2023'] = Concat_Registrations_count_f1_f19['Total-2023'].astype(int)
Concat_Registrations_count_f1_f19['Percent-2023'] = Concat_Registrations_count_f1_f19['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f19['7DEvolution-2023'] = Concat_Registrations_count_f1_f19['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f19['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f19['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f19 = Concat_ACQRET_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f19['Total-2018'] = Concat_ACQRET_count_f1_f19['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f19['ACQ-2018'] = Concat_ACQRET_count_f1_f19['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f19['Percent-2018'] = Concat_ACQRET_count_f1_f19['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f19['RET-2018'] = Concat_ACQRET_count_f1_f19['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f19['Percnt-2018'] = Concat_ACQRET_count_f1_f19['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f19['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f19['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f19 = Concat_ACQRET_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f19['Total-2019'] = Concat_ACQRET_count_f1_f19['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f19['ACQ-2019'] = Concat_ACQRET_count_f1_f19['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f19['Percent-2019'] = Concat_ACQRET_count_f1_f19['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f19['RET-2019'] = Concat_ACQRET_count_f1_f19['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f19['Percnt-2019'] = Concat_ACQRET_count_f1_f19['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f19['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f19['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f19 = Concat_ACQRET_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f19['Total-2021'] = Concat_ACQRET_count_f1_f19['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f19['ACQ-2021'] = Concat_ACQRET_count_f1_f19['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f19['Percent-2021'] = Concat_ACQRET_count_f1_f19['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f19['RET-2021'] = Concat_ACQRET_count_f1_f19['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f19['Percnt-2021'] = Concat_ACQRET_count_f1_f19['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f19['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f19['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f19 = Concat_ACQRET_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f19['Total-2022'] = Concat_ACQRET_count_f1_f19['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f19['ACQ-2022'] = Concat_ACQRET_count_f1_f19['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f19['Percent-2022'] = Concat_ACQRET_count_f1_f19['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f19['RET-2022'] = Concat_ACQRET_count_f1_f19['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f19['Percnt-2022'] = Concat_ACQRET_count_f1_f19['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f19['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f19['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f19 = Concat_ACQRET_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f19['Total-2023'] = Concat_ACQRET_count_f1_f19['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f19['ACQ-2023'] = Concat_ACQRET_count_f1_f19['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f19['Percent-2023'] = Concat_ACQRET_count_f1_f19['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f19['RET-2023'] = Concat_ACQRET_count_f1_f19['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f19['Percnt-2023'] = Concat_ACQRET_count_f1_f19['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f19['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f19['Total-2017'],errors='coerce')
Concat_REV_count_f1_f19 = Concat_REV_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f19['Total-2017'] = Concat_REV_count_f1_f19['Total-2017'].astype(int)
Concat_REV_count_f1_f19['Percent-2017'] = Concat_REV_count_f1_f19['Percent-2017'].astype(float)
Concat_REV_count_f1_f19['7DEvolution-2017'] = Concat_REV_count_f1_f19['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f19['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f19['Total-2018'],errors='coerce')
Concat_REV_count_f1_f19 = Concat_REV_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f19['Total-2018'] = Concat_REV_count_f1_f19['Total-2018'].astype(int)
Concat_REV_count_f1_f19['Percent-2018'] = Concat_REV_count_f1_f19['Percent-2018'].astype(float)
Concat_REV_count_f1_f19['7DEvolution-2018'] = Concat_REV_count_f1_f19['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f19['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f19['Total-2019'],errors='coerce')
Concat_REV_count_f1_f19 = Concat_REV_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f19['Total-2019'] = Concat_REV_count_f1_f19['Total-2019'].astype(int)
Concat_REV_count_f1_f19['Percent-2019'] = Concat_REV_count_f1_f19['Percent-2019'].astype(float)
Concat_REV_count_f1_f19['7DEvolution-2019'] = Concat_REV_count_f1_f19['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f19['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f19['Total-2022'],errors='coerce')
Concat_REV_count_f1_f19 = Concat_REV_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f19['Total-2022'] = Concat_REV_count_f1_f19['Total-2022'].astype(int)
Concat_REV_count_f1_f19['Percent-2022'] = Concat_REV_count_f1_f19['Percent-2022'].astype(float)
Concat_REV_count_f1_f19['7DEvolution-2022'] = Concat_REV_count_f1_f19['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f19['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f19['Total-2023'],errors='coerce')
Concat_REV_count_f1_f19 = Concat_REV_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f19['Total-2023'] = Concat_REV_count_f1_f19['Total-2023'].astype(int)
Concat_REV_count_f1_f19['Percent-2023'] = Concat_REV_count_f1_f19['Percent-2023'].astype(float)
Concat_REV_count_f1_f19['7DEvolution-2023'] = Concat_REV_count_f1_f19['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f19['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f19['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f19 = Concat_RegGRDel_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f19['Total-2017'] = Concat_RegGRDel_count_f1_f19['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f19['Percent-2017'] = Concat_RegGRDel_count_f1_f19['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f19['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f19['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f19['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f19['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f19 = Concat_RegGRDel_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f19['Total-2018'] = Concat_RegGRDel_count_f1_f19['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f19['Percent-2018'] = Concat_RegGRDel_count_f1_f19['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f19['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f19['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f19['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f19['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f19 = Concat_RegGRDel_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f19['Total-2019'] = Concat_RegGRDel_count_f1_f19['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f19['Percent-2019'] = Concat_RegGRDel_count_f1_f19['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f19['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f19['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f19['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f19['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f19 = Concat_RegGRDel_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f19['Total-2021'] = Concat_RegGRDel_count_f1_f19['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f19['Percent-2021'] = Concat_RegGRDel_count_f1_f19['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f19['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f19['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f19['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f19['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f19 = Concat_RegGRDel_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f19['Total-2022'] = Concat_RegGRDel_count_f1_f19['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f19['Percent-2022'] = Concat_RegGRDel_count_f1_f19['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f19['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f19['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f19['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f19['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f19 = Concat_RegGRDel_count_f1_f19.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f19['Total-2023'] = Concat_RegGRDel_count_f1_f19['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f19['Percent-2023'] = Concat_RegGRDel_count_f1_f19['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f19['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f19['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f19['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f19['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f19 = Conct_AC_RT_GRDel_f1_f19.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f19['Total-2018'] = Conct_AC_RT_GRDel_f1_f19['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f19['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f19['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f19['Percent-2018'] = Conct_AC_RT_GRDel_f1_f19['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f19['RET-2018'] = Conct_AC_RT_GRDel_f1_f19['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f19['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f19['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f19['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f19['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f19 = Conct_AC_RT_GRDel_f1_f19.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f19['Total-2019'] = Conct_AC_RT_GRDel_f1_f19['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f19['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f19['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f19['Percent-2019'] = Conct_AC_RT_GRDel_f1_f19['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f19['RET-2019'] = Conct_AC_RT_GRDel_f1_f19['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f19['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f19['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f19['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f19['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f19 = Conct_AC_RT_GRDel_f1_f19.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f19['Total-2021'] = Conct_AC_RT_GRDel_f1_f19['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f19['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f19['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f19['Percent-2021'] = Conct_AC_RT_GRDel_f1_f19['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f19['RET-2021'] = Conct_AC_RT_GRDel_f1_f19['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f19['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f19['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f19['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f19['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f19 = Conct_AC_RT_GRDel_f1_f19.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f19['Total-2022'] = Conct_AC_RT_GRDel_f1_f19['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f19['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f19['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f19['Percent-2022'] = Conct_AC_RT_GRDel_f1_f19['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f19['RET-2022'] = Conct_AC_RT_GRDel_f1_f19['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f19['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f19['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f19['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f19['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f19 = Conct_AC_RT_GRDel_f1_f19.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f19['Total-2023'] = Conct_AC_RT_GRDel_f1_f19['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f19['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f19['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f19['Percent-2023'] = Conct_AC_RT_GRDel_f1_f19['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f19['RET-2023'] = Conct_AC_RT_GRDel_f1_f19['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f19['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f19['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f19['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f19['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f19 = Conct_RV_GRDel_f1_f19.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f19['Total-2017'] = Conct_RV_GRDel_f1_f19['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f19['Percent-2017'] = Conct_RV_GRDel_f1_f19['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f19['7DEvolution-2017'] = Conct_RV_GRDel_f1_f19['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f19['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f19['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f19 = Conct_RV_GRDel_f1_f19.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f19['Total-2018'] = Conct_RV_GRDel_f1_f19['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f19['Percent-2018'] = Conct_RV_GRDel_f1_f19['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f19['7DEvolution-2018'] = Conct_RV_GRDel_f1_f19['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f19['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f19['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f19 = Conct_RV_GRDel_f1_f19.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f19['Total-2019'] = Conct_RV_GRDel_f1_f19['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f19['Percent-2019'] = Conct_RV_GRDel_f1_f19['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f19['7DEvolution-2019'] = Conct_RV_GRDel_f1_f19['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f19['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f19['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f19 = Conct_RV_GRDel_f1_f19.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f19['Total-2022'] = Conct_RV_GRDel_f1_f19['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f19['Percent-2022'] = Conct_RV_GRDel_f1_f19['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f19['7DEvolution-2022'] = Conct_RV_GRDel_f1_f19['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f19['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f19['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f19 = Conct_RV_GRDel_f1_f19.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f19['Total-2023'] = Conct_RV_GRDel_f1_f19['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f19['Percent-2023'] = Conct_RV_GRDel_f1_f19['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f19['7DEvolution-2023'] = Conct_RV_GRDel_f1_f19['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f19['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f19['Total-2017'],errors='coerce')
df_Profile_Count_m2_f19 = df_Profile_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f19['Total-2017'] = df_Profile_Count_m2_f19['Total-2017'].astype(int)
df_Profile_Count_m2_f19['Percent-2017'] = df_Profile_Count_m2_f19['Percent-2017'].astype(float)

df_Profile_Count_m2_f19['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f19['Total-2018'],errors='coerce')
df_Profile_Count_m2_f19 = df_Profile_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f19['Total-2018'] = df_Profile_Count_m2_f19['Total-2018'].astype(int)
df_Profile_Count_m2_f19['Percent-2018'] = df_Profile_Count_m2_f19['Percent-2018'].astype(float)

df_Profile_Count_m2_f19['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f19['Total-2019'],errors='coerce')
df_Profile_Count_m2_f19 = df_Profile_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f19['Total-2019'] = df_Profile_Count_m2_f19['Total-2019'].astype(int)
df_Profile_Count_m2_f19['Percent-2019'] = df_Profile_Count_m2_f19['Percent-2019'].astype(float)

df_Profile_Count_m2_f19['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f19['Total-2021'],errors='coerce')
df_Profile_Count_m2_f19 = df_Profile_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f19['Total-2021'] = df_Profile_Count_m2_f19['Total-2021'].astype(int)
df_Profile_Count_m2_f19['Percent-2021'] = df_Profile_Count_m2_f19['Percent-2021'].astype(float)

df_Profile_Count_m2_f19['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f19['Total-2022'],errors='coerce')
df_Profile_Count_m2_f19 = df_Profile_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f19['Total-2022'] = df_Profile_Count_m2_f19['Total-2022'].astype(int)
df_Profile_Count_m2_f19['Percent-2022'] = df_Profile_Count_m2_f19['Percent-2022'].astype(float)

df_Profile_Count_m2_f19['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f19['Total-2023'],errors='coerce')
df_Profile_Count_m2_f19 = df_Profile_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f19['Total-2023'] = df_Profile_Count_m2_f19['Total-2023'].astype(int)
df_Profile_Count_m2_f19['Percent-2023'] = df_Profile_Count_m2_f19['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f19['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f19['Total-2017'],errors='coerce')
df_Pass_Count_m2_f19 = df_Pass_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f19['Total-2017'] = df_Pass_Count_m2_f19['Total-2017'].astype(int)
df_Pass_Count_m2_f19['Percent-2017'] = df_Pass_Count_m2_f19['Percent-2017'].astype(float)

df_Pass_Count_m2_f19['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f19['Total-2018'],errors='coerce')
df_Pass_Count_m2_f19 = df_Pass_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f19['Total-2018'] = df_Pass_Count_m2_f19['Total-2018'].astype(int)
df_Pass_Count_m2_f19['Percent-2018'] = df_Pass_Count_m2_f19['Percent-2018'].astype(float)

df_Pass_Count_m2_f19['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f19['Total-2019'],errors='coerce')
df_Pass_Count_m2_f19 = df_Pass_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f19['Total-2019'] = df_Pass_Count_m2_f19['Total-2019'].astype(int)
df_Pass_Count_m2_f19['Percent-2019'] = df_Pass_Count_m2_f19['Percent-2019'].astype(float)

df_Pass_Count_m2_f19['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f19['Total-2021'],errors='coerce')
df_Pass_Count_m2_f19 = df_Pass_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f19['Total-2021'] = df_Pass_Count_m2_f19['Total-2021'].astype(int)
df_Pass_Count_m2_f19['Percent-2021'] = df_Pass_Count_m2_f19['Percent-2021'].astype(float)

df_Pass_Count_m2_f19['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f19['Total-2022'],errors='coerce')
df_Pass_Count_m2_f19 = df_Pass_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f19['Total-2022'] = df_Pass_Count_m2_f19['Total-2022'].astype(int)
df_Pass_Count_m2_f19['Percent-2022'] = df_Pass_Count_m2_f19['Percent-2022'].astype(float)

df_Pass_Count_m2_f19['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f19['Total-2023'],errors='coerce')
df_Pass_Count_m2_f19 = df_Pass_Count_m2_f19.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f19['Total-2023'] = df_Pass_Count_m2_f19['Total-2023'].astype(int)
df_Pass_Count_m2_f19['Percent-2023'] = df_Pass_Count_m2_f19['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f19['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f19['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f19 = dfAttendees_Country_Count_m2_f19.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f19['Total-2017'] = dfAttendees_Country_Count_m2_f19['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f19['Percent-2017'] = dfAttendees_Country_Count_m2_f19['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f19['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f19['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f19 = dfAttendees_Country_Count_m2_f19.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f19['Total-2018'] = dfAttendees_Country_Count_m2_f19['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f19['Percent-2018'] = dfAttendees_Country_Count_m2_f19['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f19['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f19['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f19 = dfAttendees_Country_Count_m2_f19.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f19['Total-2019'] = dfAttendees_Country_Count_m2_f19['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f19['Percent-2019'] = dfAttendees_Country_Count_m2_f19['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f19['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f19['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f19 = dfAttendees_Country_Count_m2_f19.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f19['Total-2021'] = dfAttendees_Country_Count_m2_f19['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f19['Percent-2021'] = dfAttendees_Country_Count_m2_f19['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f19['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f19['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f19 = dfAttendees_Country_Count_m2_f19.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f19['Total-2022'] = dfAttendees_Country_Count_m2_f19['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f19['Percent-2022'] = dfAttendees_Country_Count_m2_f19['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f19['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f19['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f19 = dfAttendees_Country_Count_m2_f19.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f19['Total-2023'] = dfAttendees_Country_Count_m2_f19['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f19['Percent-2023'] = dfAttendees_Country_Count_m2_f19['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f19['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f19['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f19 = df_ATTENDEES_AREAS_count_m2_f19.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f19['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f19['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f19['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f19['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f19['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f19['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f19 = df_ATTENDEES_AREAS_count_m2_f19.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f19['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f19['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f19['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f19['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f19['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f19['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f19 = df_ATTENDEES_AREAS_count_m2_f19.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f19['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f19['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f19['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f19['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f19['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f19['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f19 = df_ATTENDEES_AREAS_count_m2_f19.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f19['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f19['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f19['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f19['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f19['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f19['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f19 = df_ATTENDEES_AREAS_count_m2_f19.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f19['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f19['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f19['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f19['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f19['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f19['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f19 = df_ATTENDEES_AREAS_count_m2_f19.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f19['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f19['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f19['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f19['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f19['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f19['Total-2017'],errors='coerce')
df_Specialty_count_m2_f19 = df_Specialty_count_m2_f19.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f19['Total-2017'] = df_Specialty_count_m2_f19['Total-2017'].astype(int)
df_Specialty_count_m2_f19['Percent-2017'] = df_Specialty_count_m2_f19['Percent-2017'].astype(float)

df_Specialty_count_m2_f19['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f19['Total-2018'],errors='coerce')
df_Specialty_count_m2_f19 = df_Specialty_count_m2_f19.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f19['Total-2018'] = df_Specialty_count_m2_f19['Total-2018'].astype(int)
df_Specialty_count_m2_f19['Percent-2018'] = df_Specialty_count_m2_f19['Percent-2018'].astype(float)

df_Specialty_count_m2_f19['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f19['Total-2019'],errors='coerce')
df_Specialty_count_m2_f19 = df_Specialty_count_m2_f19.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f19['Total-2019'] = df_Specialty_count_m2_f19['Total-2019'].astype(int)
df_Specialty_count_m2_f19['Percent-2019'] = df_Specialty_count_m2_f19['Percent-2019'].astype(float)

df_Specialty_count_m2_f19['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f19['Total-2021'],errors='coerce')
df_Specialty_count_m2_f19 = df_Specialty_count_m2_f19.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f19['Total-2021'] = df_Specialty_count_m2_f19['Total-2021'].astype(int)
df_Specialty_count_m2_f19['Percent-2021'] = df_Specialty_count_m2_f19['Percent-2021'].astype(float)

df_Specialty_count_m2_f19['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f19['Total-2022'],errors='coerce')
df_Specialty_count_m2_f19 = df_Specialty_count_m2_f19.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f19['Total-2022'] = df_Specialty_count_m2_f19['Total-2022'].astype(int)
df_Specialty_count_m2_f19['Percent-2022'] = df_Specialty_count_m2_f19['Percent-2022'].astype(float)

df_Specialty_count_m2_f19['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f19['Total-2023'],errors='coerce')
df_Specialty_count_m2_f19 = df_Specialty_count_m2_f19.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f19['Total-2023'] = df_Specialty_count_m2_f19['Total-2023'].astype(int)
df_Specialty_count_m2_f19['Percent-2023'] = df_Specialty_count_m2_f19['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f19.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f19.dtypes)
#print(df_Specialty_count_m2_f19.dtypes)

#print(dfAttendees_Country_Count_m2_f19.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f19.dtypes)
#print(df_Specialty_count_m2_f19.dtypes)

# EXCEL FILE
writerf19 = pd.ExcelWriter(outputExcelFile_f19, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f19.to_excel\
    (writerf19, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f19.to_excel\
    (writerf19, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f19.to_excel\
    (writerf19, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f19.to_excel\
    (writerf19, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f19.to_excel\
    (writerf19, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f19.to_excel\
    (writerf19, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f19.to_excel\
    (writerf19, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f19.to_excel\
    (writerf19, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f19.to_excel\
    (writerf19, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f19.to_excel\
    (writerf19, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f19.to_excel\
    (writerf19, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf19.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f19)

workbook.save(outputExcelFile_f19)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 63 days**********************************************')
print('************************************End of 63 days**********************************************')
print('************************************End of 63 days**********************************************')
print('************************************End of 63 days**********************************************')
print('************************************End of 63 days**********************************************')
print('************************************End of 63 days**********************************************')
print('************************************End of 63 days**********************************************')
print('************************************End of 63 days**********************************************')
print('************************************End of 63 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f20_Registrations_count = pd.DataFrame(filter_20_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f20_Registrations_count = dfd17_f20_Registrations_count.fillna('Unknown')
dfd17_f20_Registrations_count['Percent-2017'] = (dfd17_f20_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f20_Registrations_count['Percent-2017'] = dfd17_f20_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f20_Registrations_count['7DEvolution-2017'] = dfd17_f20_Registrations_count['Total-2017'] - dfd17_f19_Registrations_count['Total-2017']
#print(tab(dfd17_f20_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f20_Registrations_count = pd.DataFrame(filter_20_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f20_Registrations_count = dfd18_f20_Registrations_count.fillna('Unknown')
dfd18_f20_Registrations_count['Percent-2018'] = (dfd18_f20_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f20_Registrations_count['Percent-2018'] = dfd18_f20_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f20_Registrations_count['7DEvolution-2018'] = dfd18_f20_Registrations_count['Total-2018'] - dfd18_f19_Registrations_count['Total-2018']
#print(tab(dfd18_f20_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f20_Registrations_count = pd.DataFrame(filter_20_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f20_Registrations_count = dfd19_f20_Registrations_count.fillna('Unknown')
dfd19_f20_Registrations_count['Percent-2019'] = (dfd19_f20_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f20_Registrations_count['Percent-2019'] = dfd19_f20_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f20_Registrations_count['7DEvolution-2019'] = dfd19_f20_Registrations_count['Total-2019'] - dfd19_f19_Registrations_count['Total-2019']
#print(tab(dfd19_f20_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f20_Registrations_count = pd.DataFrame(filter_20_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f20_Registrations_count = dfd21_f20_Registrations_count.fillna('Unknown')
dfd21_f20_Registrations_count['Percent-2021'] = (dfd21_f20_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f20_Registrations_count['Percent-2021'] = dfd21_f20_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f20_Registrations_count['7DEvolution-2021'] = dfd21_f20_Registrations_count['Total-2021'] - dfd21_f19_Registrations_count['Total-2021']
#print(tab(dfd21_f20_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f20_Registrations_count = pd.DataFrame(filter_20_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f20_Registrations_count = dfd22_f20_Registrations_count.fillna('Unknown')
dfd22_f20_Registrations_count['Percent-2022'] = (dfd22_f20_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f20_Registrations_count['Percent-2022'] = dfd22_f20_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f20_Registrations_count['7DEvolution-2022'] = dfd22_f20_Registrations_count['Total-2022'] - dfd22_f19_Registrations_count['Total-2022']
#print(tab(dfd22_f20_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_Registrations_count = pd.DataFrame(filter_20_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f20_Registrations_count = dfd23_f20_Registrations_count.fillna('Unknown')
dfd23_f20_Registrations_count['Percent-2023'] = (dfd23_f20_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f20_Registrations_count['Percent-2023'] = dfd23_f20_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f20_Registrations_count['7DEvolution-2023'] = dfd23_f20_Registrations_count['Total-2023'] - dfd23_f19_Registrations_count['Total-2023']
#print(tab(dfd23_f20_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f20_RegistrationsEvolution_count = pd.DataFrame(filter_20_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f20_RegistrationsEvolution_count = dfd23_f20_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f20_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f20_Registrations_count['Total-2023'] - dfd19_f20_Registrations_count['Total-2019'])/ dfd19_f20_Registrations_count['Total-2019'].sum()) * 100
dfd23_f20_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f20_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f20_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f20 = pd.DataFrame(pd.merge(dfd17_f20_Registrations_count, dfd18_f20_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f20 = pd.DataFrame(pd.merge(dfd19_f20_Registrations_count, dfd21_f20_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f20 = pd.DataFrame(pd.merge(dfd22_f20_Registrations_count, dfd23_f20_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f20 = pd.DataFrame(pd.merge(df_Registrations_count_1_f20, df_Registrations_count_2_f20, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f20 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f20, df_Registrations_count_3_f20, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f20 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f20, dfd23_f20_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f20 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17, df_Registrations_Merge_f18, df_Registrations_Merge_f19, df_Registrations_Merge_f20]
Concat_Registrations_count_f1_f20 = pd.concat(ConcatFrames_Registrations_count_f1_f20)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f20  = ConcatFrames_Registrations_count_f1_f20.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f20.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f20 = filter_20_df18[filter_20_df18['New customer'] == 1]
df_NewCustomer_df19_f20 = filter_20_df19[filter_20_df19['New customer'] == 1]
df_NewCustomer_df21_f20 = filter_20_df21[filter_20_df21['New customer'] == 1]
df_NewCustomer_df22_f20 = filter_20_df22[filter_20_df22['New customer'] == 1]
df_NewCustomer_df23_f20 = filter_20_df23[filter_20_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f20.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f20.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f20.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a20_ACQRET_count = pd.DataFrame(filter_20_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f20_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f20.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f20_ACQRET_count['Percent-2018'] = (dfd18_f20_ACQRET_count['ACQ-2018'] / dfd18_f20_Registrations_count['Total-2018'].sum()) * 100
dfd18_f20_ACQRET_count['Percent-2018'] = dfd18_f20_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f20_ACQRET_count['RET-2018'] = dfd18_a20_ACQRET_count['Total-2018'] - dfd18_f20_ACQRET_count['ACQ-2018']
dfd18_f20_ACQRET_count['Percnt-2018'] = (dfd18_f20_ACQRET_count['RET-2018'] / dfd18_a20_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f20_ACQRET_count['Percnt-2018'] = dfd18_f20_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f20_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a20_ACQRET_count = pd.DataFrame(filter_20_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f20_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f20.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f20_ACQRET_count['Percent-2019'] = (dfd19_f20_ACQRET_count['ACQ-2019'] / dfd19_f20_Registrations_count['Total-2019'].sum()) * 100
dfd19_f20_ACQRET_count['Percent-2019'] = dfd19_f20_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f20_ACQRET_count['RET-2019'] = dfd19_a20_ACQRET_count['Total-2019'] - dfd19_f20_ACQRET_count['ACQ-2019']
dfd19_f20_ACQRET_count['Percnt-2019'] = (dfd19_f20_ACQRET_count['RET-2019'] / dfd19_a20_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f20_ACQRET_count['Percnt-2019'] = dfd19_f20_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f20_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a20_ACQRET_count = pd.DataFrame(filter_20_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f20_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f20.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f20_ACQRET_count['Percent-2021'] = (dfd21_f20_ACQRET_count['ACQ-2021'] / dfd21_f20_Registrations_count['Total-2021'].sum()) * 100
dfd21_f20_ACQRET_count['Percent-2021'] = dfd21_f20_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f20_ACQRET_count['RET-2021'] = dfd21_a20_ACQRET_count['Total-2021'] - dfd21_f20_ACQRET_count['ACQ-2021']
dfd21_f20_ACQRET_count['Percnt-2021'] = (dfd21_f20_ACQRET_count['RET-2021'] / dfd21_a20_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f20_ACQRET_count['Percnt-2021'] = dfd21_f20_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f20_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a20_ACQRET_count = pd.DataFrame(filter_20_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f20_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f20.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f20_ACQRET_count['Percent-2022'] = (dfd22_f20_ACQRET_count['ACQ-2022'] / dfd22_f20_Registrations_count['Total-2022'].sum()) * 100
dfd22_f20_ACQRET_count['Percent-2022'] = dfd22_f20_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f20_ACQRET_count['RET-2022'] = dfd22_a20_ACQRET_count['Total-2022'] - dfd22_f20_ACQRET_count['ACQ-2022']
dfd22_f20_ACQRET_count['Percnt-2022'] = (dfd22_f20_ACQRET_count['RET-2022'] / dfd22_a20_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f20_ACQRET_count['Percnt-2022'] = dfd22_f20_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f20_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a20_ACQRET_count = pd.DataFrame(filter_20_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f20_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f20.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f20_ACQRET_count['Percent-2023'] = (dfd23_f20_ACQRET_count['ACQ-2023'] / dfd23_f20_Registrations_count['Total-2023'].sum()) * 100
dfd23_f20_ACQRET_count['Percent-2023'] = dfd23_f20_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f20_ACQRET_count['RET-2023'] = dfd23_a20_ACQRET_count['Total-2023'] - dfd23_f20_ACQRET_count['ACQ-2023']
dfd23_f20_ACQRET_count['Percnt-2023'] = (dfd23_f20_ACQRET_count['RET-2023'] / dfd23_a20_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f20_ACQRET_count['Percnt-2023'] = dfd23_f20_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f20_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f20 = pd.DataFrame(pd.merge(dfd18_a20_ACQRET_count, dfd18_f20_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f20 = pd.DataFrame(pd.merge(dfd19_a20_ACQRET_count, dfd19_f20_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f20 = pd.DataFrame(pd.merge(dfd21_a20_ACQRET_count, dfd21_f20_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f20 = pd.DataFrame(pd.merge(dfd22_a20_ACQRET_count, dfd22_f20_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_20_f20 = pd.DataFrame(pd.merge(dfd23_a20_ACQRET_count, dfd23_f20_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_20_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f20 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f20, df_ACQRET_count_2_f20, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f20 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f20, df_ACQRET_count_3_f20, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f20 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f20, df_ACQRET_count_4_f20, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f20 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f20, df_ACQRET_count_20_f20, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f20 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17, df_ACQRET_count_M4_f18, df_ACQRET_count_M4_f19, df_ACQRET_count_M4_f20]
Concat_ACQRET_count_f1_f20 = pd.concat(ConcatFrames_ACQRET_count_f1_f20)
#print(tab(Concat_ACQRET_count_f1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f20 = Concat_ACQRET_count_f1_f20[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f20_Revenue_calc = pd.DataFrame(filter_20_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f20_Revenue_calc['Percent-2017'] = (dfd17_f20_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f20_Revenue_calc['Percent-2017'] = dfd17_f20_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f20_Revenue_calc['7DEvolution-2017'] = dfd17_f20_Revenue_calc['Total-2017'] - dfd17_f19_Revenue_calc['Total-2017']
#print(tab(dfd17_f20_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f20_Revenue_calc = pd.DataFrame(filter_20_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f20_Revenue_calc['Percent-2018'] = (dfd18_f20_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f20_Revenue_calc['Percent-2018'] = dfd18_f20_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f20_Revenue_calc['7DEvolution-2018'] = dfd18_f20_Revenue_calc['Total-2018'] - dfd18_f19_Revenue_calc['Total-2018']
#print(tab(dfd18_f20_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f20_Revenue_calc = pd.DataFrame(filter_20_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f20_Revenue_calc['Percent-2019'] = (dfd19_f20_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f20_Revenue_calc['Percent-2019'] = dfd19_f20_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f20_Revenue_calc['7DEvolution-2019'] = dfd19_f20_Revenue_calc['Total-2019'] - dfd19_f19_Revenue_calc['Total-2019']
#print(tab(dfd19_f20_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f20_Revenue_calc = pd.DataFrame(filter_20_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f20_Revenue_calc['Percent-2021'] = (dfd21_f20_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f20_Revenue_calc['Percent-2021'] = dfd21_f20_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f20_Revenue_calc['7DEvolution-2021'] = dfd21_f20_Revenue_calc['Total-2021'] - dfd21_f19_Revenue_calc['Total-2021']
#print(tab(dfd21_f20_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f20_Revenue_calc = pd.DataFrame(filter_20_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f20_Revenue_calc['Percent-2022'] = (dfd22_f20_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f20_Revenue_calc['Percent-2022'] = dfd22_f20_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f20_Revenue_calc['7DEvolution-2022'] = dfd22_f20_Revenue_calc['Total-2022'] - dfd22_f19_Revenue_calc['Total-2022']
#print(tab(dfd22_f20_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_Revenue_calc = pd.DataFrame(filter_20_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f20_Revenue_calc['Percent-2023'] = (dfd23_f20_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f20_Revenue_calc['Percent-2023'] = dfd23_f20_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f20_Revenue_calc['7DEvolution-2023'] = dfd23_f20_Revenue_calc['Total-2023'] - dfd23_f19_Revenue_calc['Total-2023']
#print(tab(dfd23_f20_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f20_RevenueEvolution_calc = pd.DataFrame(filter_20_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f20_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f20_Revenue_calc['Total-2023'] - dfd19_f20_Revenue_calc['Total-2019'])/ dfd19_f20_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f20_RevenueEvolution_calc['Evolution-2023'] = dfd23_f20_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f20_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f20 = pd.DataFrame(pd.merge(dfd17_f20_Revenue_calc, dfd18_f20_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f20 = pd.DataFrame(pd.merge(dfd19_f20_Revenue_calc, dfd21_f20_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f20 = pd.DataFrame(pd.merge(dfd22_f20_Revenue_calc, dfd23_f20_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f20_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f20, df_Revenue_calc_2_f20, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f20Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f20_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f20_Evolution, df_Revenue_calc_3_f20, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f20Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f20 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f20_Evolution, dfd23_f20_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f20 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17, df_Revenue_calc_f18, df_Revenue_calc_f19, df_Revenue_calc_f20]
Concat_REV_count_f1_f20 = pd.concat(ConcatFrames_REV_count_f1_f20)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f20_Registrations_GRDel = pd.DataFrame(filtr_20_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f20_Registrations_GRDel = dfd17_f20_Registrations_GRDel.fillna('Unknown')
dfd17_f20_Registrations_GRDel['Percent-2017'] = (dfd17_f20_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f20_Registrations_GRDel['Percent-2017'] = dfd17_f20_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f20_Registrations_GRDel['7DEvolution-2017'] = dfd17_f20_Registrations_GRDel['Total-2017'] - dfd17_f19_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f20_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f20_Registrations_GRDel = pd.DataFrame(filtr_20_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f20_Registrations_GRDel = dfd18_f20_Registrations_GRDel.fillna('Unknown')
dfd18_f20_Registrations_GRDel['Percent-2018'] = (dfd18_f20_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f20_Registrations_GRDel['Percent-2018'] = dfd18_f20_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f20_Registrations_GRDel['7DEvolution-2018'] = dfd18_f20_Registrations_GRDel['Total-2018'] - dfd18_f19_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f20_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f20_Registrations_GRDel = pd.DataFrame(filtr_20_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f20_Registrations_GRDel = dfd19_f20_Registrations_GRDel.fillna('Unknown')
dfd19_f20_Registrations_GRDel['Percent-2019'] = (dfd19_f20_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f20_Registrations_GRDel['Percent-2019'] = dfd19_f20_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f20_Registrations_GRDel['7DEvolution-2019'] = dfd19_f20_Registrations_GRDel['Total-2019'] - dfd19_f19_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f20_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f20_Registrations_GRDel = pd.DataFrame(filtr_20_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f20_Registrations_GRDel = dfd21_f20_Registrations_GRDel.fillna('Unknown')
dfd21_f20_Registrations_GRDel['Percent-2021'] = (dfd21_f20_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f20_Registrations_GRDel['Percent-2021'] = dfd21_f20_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f20_Registrations_GRDel['7DEvolution-2021'] = dfd21_f20_Registrations_GRDel['Total-2021'] - dfd21_f19_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f20_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f20_Registrations_GRDel = pd.DataFrame(filtr_20_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f20_Registrations_GRDel = dfd22_f20_Registrations_GRDel.fillna('Unknown')
dfd22_f20_Registrations_GRDel['Percent-2022'] = (dfd22_f20_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f20_Registrations_GRDel['Percent-2022'] = dfd22_f20_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f20_Registrations_GRDel['7DEvolution-2022'] = dfd22_f20_Registrations_GRDel['Total-2022'] - dfd22_f19_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f20_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_Registrations_GRDel = pd.DataFrame(filtr_20_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f20_Registrations_GRDel = dfd23_f20_Registrations_GRDel.fillna('Unknown')
dfd23_f20_Registrations_GRDel['Percent-2023'] = (dfd23_f20_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f20_Registrations_GRDel['Percent-2023'] = dfd23_f20_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f20_Registrations_GRDel['7DEvolution-2023'] = dfd23_f20_Registrations_GRDel['Total-2023'] - dfd23_f19_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f20_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f20_Registrations_Evol_GRDel = pd.DataFrame(filtr_20_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f20_Registrations_Evol_GRDel = dfd23_f20_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f20_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f20_Registrations_GRDel['Total-2023'] - dfd19_f20_Registrations_GRDel['Total-2019']) / dfd19_f20_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f20_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f20 = pd.concat([dfd17_f20_Registrations_GRDel, dfd18_f20_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f20 = pd.DataFrame(pd.merge(dfd17_f20_Registrations_GRDel, dfd18_f20_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f20 = pd.DataFrame(pd.merge(dfd19_f20_Registrations_GRDel, dfd21_f20_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f20 = pd.DataFrame(pd.merge(dfd22_f20_Registrations_GRDel, dfd23_f20_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f20 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f20, df_Registrations_GRDel_2_f20, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_20_f20 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f20, df_Registrations_GRDel_3_f20, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f20 = pd.DataFrame(pd.merge(df_Registrations_GRDel_20_f20, dfd23_f20_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f20 = df_Registrations_GRDel_f20[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f20 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17, df_Registrations_GRDel_f18, df_Registrations_GRDel_f19, df_Registrations_GRDel_f20]
Concat_RegGRDel_count_f1_f20 = pd.concat(ConcatFrames_RegGRDel_count_f1_f20)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f20 = filtr_20_df18_GRdel[filtr_20_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f20 = filtr_20_df19_GRdel[filtr_20_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f20 = filtr_20_df21_GRdel[filtr_20_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f20 = filtr_20_df22_GRdel[filtr_20_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f20 = filtr_20_df23_GRdel[filtr_20_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f20.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f20.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a20_AC_RT_GRDel = pd.DataFrame(filtr_20_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f20_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f20.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f20_AC_RT_GRDel['Percent-2018'] = (dfd18_f20_AC_RT_GRDel['ACQ-2018'] / dfd18_f20_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f20_AC_RT_GRDel['Percent-2018'] = dfd18_f20_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f20_AC_RT_GRDel['RET-2018'] = dfd18_a20_AC_RT_GRDel['Total-2018'] - dfd18_f20_AC_RT_GRDel['ACQ-2018']
dfd18_f20_AC_RT_GRDel['Percnt-2018'] = (dfd18_f20_AC_RT_GRDel['RET-2018'] / dfd18_a20_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f20_AC_RT_GRDel['Percnt-2018'] = dfd18_f20_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f20_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a20_AC_RT_GRDel = pd.DataFrame(filtr_20_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f20_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f20.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f20_AC_RT_GRDel['Percent-2019'] = (dfd19_f20_AC_RT_GRDel['ACQ-2019'] / dfd19_f20_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f20_AC_RT_GRDel['Percent-2019'] = dfd19_f20_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f20_AC_RT_GRDel['RET-2019'] = dfd19_a20_AC_RT_GRDel['Total-2019'] - dfd19_f20_AC_RT_GRDel['ACQ-2019']
dfd19_f20_AC_RT_GRDel['Percnt-2019'] = (dfd19_f20_AC_RT_GRDel['RET-2019'] / dfd19_a20_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f20_AC_RT_GRDel['Percnt-2019'] = dfd19_f20_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f20_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a20_AC_RT_GRDel = pd.DataFrame(filtr_20_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f20_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f20.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f20_AC_RT_GRDel['Percent-2021'] = (dfd21_f20_AC_RT_GRDel['ACQ-2021'] / dfd21_f20_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f20_AC_RT_GRDel['Percent-2021'] = dfd21_f20_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f20_AC_RT_GRDel['RET-2021'] = dfd21_a20_AC_RT_GRDel['Total-2021'] - dfd21_f20_AC_RT_GRDel['ACQ-2021']
dfd21_f20_AC_RT_GRDel['Percnt-2021'] = (dfd21_f20_AC_RT_GRDel['RET-2021'] / dfd21_a20_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f20_AC_RT_GRDel['Percnt-2021'] = dfd21_f20_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f20_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a20_AC_RT_GRDel = pd.DataFrame(filtr_20_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f20_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f20.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f20_AC_RT_GRDel['Percent-2022'] = (dfd22_f20_AC_RT_GRDel['ACQ-2022'] / dfd22_f20_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f20_AC_RT_GRDel['Percent-2022'] = dfd22_f20_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f20_AC_RT_GRDel['RET-2022'] = dfd22_a20_AC_RT_GRDel['Total-2022'] - dfd22_f20_AC_RT_GRDel['ACQ-2022']
dfd22_f20_AC_RT_GRDel['Percnt-2022'] = (dfd22_f20_AC_RT_GRDel['RET-2022'] / dfd22_a20_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f20_AC_RT_GRDel['Percnt-2022'] = dfd22_f20_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f20_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a20_AC_RT_GRDel = pd.DataFrame(filtr_20_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f20_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f20.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f20_AC_RT_GRDel['Percent-2023'] = (dfd23_f20_AC_RT_GRDel['ACQ-2023'] / dfd23_f20_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f20_AC_RT_GRDel['Percent-2023'] = dfd23_f20_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f20_AC_RT_GRDel['RET-2023'] = dfd23_a20_AC_RT_GRDel['Total-2023'] - dfd23_f20_AC_RT_GRDel['ACQ-2023']
dfd23_f20_AC_RT_GRDel['Percnt-2023'] = (dfd23_f20_AC_RT_GRDel['RET-2023'] / dfd23_a20_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f20_AC_RT_GRDel['Percnt-2023'] = dfd23_f20_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f20_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f20 = pd.DataFrame(pd.merge_ordered(dfd18_a20_AC_RT_GRDel, dfd18_f20_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f20 = pd.DataFrame(pd.merge_ordered(dfd19_a20_AC_RT_GRDel, dfd19_f20_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f20 = pd.DataFrame(pd.merge_ordered(dfd21_a20_AC_RT_GRDel, dfd21_f20_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f20 = pd.DataFrame(pd.merge_ordered(dfd22_a20_AC_RT_GRDel, dfd22_f20_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_20_f20 = pd.DataFrame(pd.merge_ordered(dfd23_a20_AC_RT_GRDel, dfd23_f20_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f20 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f20, df_AC_ET_GRDel_2_f20, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f20 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f20, df_AC_ET_GRDel_3_f20, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f20 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f20, df_AC_ET_GRDel_4_f20, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f20 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f20, df_AC_ET_GRDel_20_f20, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f20 = df_AC_RT_GRDel_M4_f20[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f20 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17, df_AC_RT_GRDel_M4_f18, df_AC_RT_GRDel_M4_f19, df_AC_RT_GRDel_M4_f20]
Conct_AC_RT_GRDel_f1_f20 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f20)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_20_df17_GRdel = filtr_20_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f20_Revenu_GRDel = pd.DataFrame(filtr_20_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f20_Revenu_GRDel['Percent-2017'] = (dfd17_f20_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f20_Revenu_GRDel['Percent-2017'] = dfd17_f20_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f20_Revenu_GRDel['7DEvolution-2017'] = dfd17_f20_Revenu_GRDel['Total-2017'] - dfd17_f19_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f20_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_20_df18_GRdel = filtr_20_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f20_Revenu_GRDel = pd.DataFrame(filtr_20_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f20_Revenu_GRDel['Percent-2018'] = (dfd18_f20_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f20_Revenu_GRDel['Percent-2018'] = dfd18_f20_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f20_Revenu_GRDel['7DEvolution-2018'] = dfd18_f20_Revenu_GRDel['Total-2018'] - dfd18_f19_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f20_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_20_df19_GRdel = filtr_20_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f20_Revenu_GRDel = pd.DataFrame(filtr_20_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f20_Revenu_GRDel['Percent-2019'] = (dfd19_f20_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f20_Revenu_GRDel['Percent-2019'] = dfd19_f20_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f20_Revenu_GRDel['7DEvolution-2019'] = dfd19_f20_Revenu_GRDel['Total-2019'] - dfd19_f19_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f20_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_20_df21_GRdel = filtr_20_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f20_Revenu_GRDel = pd.DataFrame(filtr_20_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f20_Revenu_GRDel['Percent-2021'] = (dfd21_f20_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f20_Revenu_GRDel['Percent-2021'] = dfd21_f20_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f20_Revenu_GRDel['7DEvolution-2021'] = dfd21_f20_Revenu_GRDel['Total-2021'] - dfd21_f19_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f20_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_20_df22_GRdel = filtr_20_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f20_Revenu_GRDel = pd.DataFrame(filtr_20_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f20_Revenu_GRDel['Percent-2022'] = (dfd22_f20_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f20_Revenu_GRDel['Percent-2022'] = dfd22_f20_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f20_Revenu_GRDel['7DEvolution-2022'] = dfd22_f20_Revenu_GRDel['Total-2022'] - dfd22_f19_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f20_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_20_df23_GRdel = filtr_20_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f20_Revenu_GRDel = pd.DataFrame(filtr_20_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f20_Revenu_GRDel['Percent-2023'] = (dfd23_f20_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f20_Revenu_GRDel['Percent-2023'] = dfd23_f20_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f20_Revenu_GRDel['7DEvolution-2023'] = dfd23_f20_Revenu_GRDel['Total-2023'] - dfd23_f19_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f20_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f20_Revenu_Evlt_GRDel = pd.DataFrame(filtr_20_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f20_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f20_Revenu_GRDel['Total-2023'] - dfd19_f20_Revenu_GRDel['Total-2019'])/ dfd19_f20_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f20_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f20_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f20_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f20 = pd.DataFrame(pd.merge(dfd17_f20_Revenu_GRDel, dfd18_f20_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f20 = pd.DataFrame(pd.merge(dfd19_f20_Revenu_GRDel, dfd21_f20_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f20 = pd.DataFrame(pd.merge(dfd22_f20_Revenu_GRDel, dfd23_f20_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f20 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f20, df_Revenu_GRDel_2_f20, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_20_f20 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f20, df_Revenu_GRDel_3_f20, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f20 = pd.DataFrame(pd.merge(df_Revenu_GRDel_20_f20, dfd23_f20_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f20 = df_Revenu_GRDel_f20[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f20 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17, df_Revenu_GRDel_f18, df_Revenu_GRDel_f19, df_Revenu_GRDel_f20]
Conct_RV_GRDel_f1_f20 = pd.concat(ConcatFra_RV_GRDel_f1_f20)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f20_Profile_count = pd.DataFrame(filtr_20_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f20_Profile_count = dfd17_f20_Profile_count.fillna('Unknown')
dfd17_f20_Profile_count['Percent-2017'] = (dfd17_f20_Profile_count['Total-2017'] / dfd17_f20_Profile_count['Total-2017'].sum()) * 100
dfd17_f20_Profile_count['Percent-2017'] = dfd17_f20_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f20_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f20_Profile_count = pd.DataFrame(filtr_20_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f20_Profile_count = dfd18_f20_Profile_count.fillna('Unknown')
dfd18_f20_Profile_count['Percent-2018'] = (dfd18_f20_Profile_count['Total-2018'] / dfd18_f20_Profile_count['Total-2018'].sum()) * 100
dfd18_f20_Profile_count['Percent-2018'] = dfd18_f20_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f20_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f20_Profile_count = pd.DataFrame(filtr_20_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f20_Profile_count = dfd19_f20_Profile_count.fillna('Unknown')
dfd19_f20_Profile_count['Percent-2019'] = (dfd19_f20_Profile_count['Total-2019'] / dfd19_f20_Profile_count['Total-2019'].sum()) * 100
dfd19_f20_Profile_count['Percent-2019'] = dfd19_f20_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f20_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f20_Profile_count = pd.DataFrame(filtr_20_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f20_Profile_count = dfd21_f20_Profile_count.fillna('Unknown')
dfd21_f20_Profile_count['Percent-2021'] = (dfd21_f20_Profile_count['Total-2021'] / dfd21_f20_Profile_count['Total-2021'].sum()) * 100
dfd21_f20_Profile_count['Percent-2021'] = dfd21_f20_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f20_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f20_Profile_count = pd.DataFrame(filtr_20_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f20_Profile_count = dfd22_f20_Profile_count.fillna('Unknown')
dfd22_f20_Profile_count['Percent-2022'] = (dfd22_f20_Profile_count['Total-2022'] / dfd22_f20_Profile_count['Total-2022'].sum()) * 100
dfd22_f20_Profile_count['Percent-2022'] = dfd22_f20_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f20_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_Profile_count = pd.DataFrame(filtr_20_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f20_Profile_count = dfd23_f20_Profile_count.fillna('Unknown')
dfd23_f20_Profile_count['Percent-2023'] = (dfd23_f20_Profile_count['Total-2023'] / dfd23_f20_Profile_count['Total-2023'].sum()) * 100
dfd23_f20_Profile_count['Percent-2023'] = dfd23_f20_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f20_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f20 = pd.DataFrame(pd.merge(dfd17_f20_Profile_count, dfd18_f20_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f20 = pd.DataFrame(pd.merge(dfd19_f20_Profile_count, dfd21_f20_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f20 = pd.DataFrame(pd.merge(dfd22_f20_Profile_count, dfd23_f20_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f20 = pd.DataFrame(pd.merge(df_Profile_Count_1_f20, df_Profile_Count_2_f20, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f20 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f20, df_Profile_Count_3_f20, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f20 = df_Profile_Count_m2_f20.append(df_Profile_Count_m2_f20.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f20['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f20_Pass_count = pd.DataFrame(filtr_20_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f20_Pass_count = dfd17_f20_Pass_count.fillna('Unknown')
dfd17_f20_Pass_count['Percent-2017'] = (dfd17_f20_Pass_count['Total-2017'] / dfd17_f20_Pass_count['Total-2017'].sum()) * 100
dfd17_f20_Pass_count['Percent-2017'] = dfd17_f20_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f20_Pass_count = pd.DataFrame(filtr_20_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f20_Pass_count = dfd18_f20_Pass_count.fillna('Unknown')
dfd18_f20_Pass_count['Percent-2018'] = (dfd18_f20_Pass_count['Total-2018'] / dfd18_f20_Pass_count['Total-2018'].sum()) * 100
dfd18_f20_Pass_count['Percent-2018'] = dfd18_f20_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f20_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f20_Pass_count = pd.DataFrame(filtr_20_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f20_Pass_count = dfd19_f20_Pass_count.fillna('Unknown')
dfd19_f20_Pass_count['Percent-2019'] = (dfd19_f20_Pass_count['Total-2019'] / dfd19_f20_Pass_count['Total-2019'].sum()) * 100
dfd19_f20_Pass_count['Percent-2019'] = dfd19_f20_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f20_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f20_Pass_count = pd.DataFrame(filtr_20_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f20_Pass_count = dfd21_f20_Pass_count.fillna('Unknown')
dfd21_f20_Pass_count['Percent-2021'] = (dfd21_f20_Pass_count['Total-2021'] / dfd21_f20_Pass_count['Total-2021'].sum()) * 100
dfd21_f20_Pass_count['Percent-2021'] = dfd21_f20_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f20_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f20_Pass_count = pd.DataFrame(filtr_20_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f20_Pass_count = dfd22_f20_Pass_count.fillna('Unknown')
dfd22_f20_Pass_count['Percent-2022'] = (dfd22_f20_Pass_count['Total-2022'] / dfd22_f20_Pass_count['Total-2022'].sum()) * 100
dfd22_f20_Pass_count['Percent-2022'] = dfd22_f20_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f20_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_Pass_count = pd.DataFrame(filtr_20_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f20_Pass_count = dfd23_f20_Pass_count.fillna('Unknown')
dfd23_f20_Pass_count['Percent-2023'] = (dfd23_f20_Pass_count['Total-2023'] / dfd23_f20_Pass_count['Total-2023'].sum()) * 100
dfd23_f20_Pass_count['Percent-2023'] = dfd23_f20_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f20_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f20 = pd.DataFrame(pd.merge(dfd17_f20_Pass_count, dfd18_f20_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f20 = pd.DataFrame(pd.merge(dfd19_f20_Pass_count, dfd21_f20_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f20 = pd.DataFrame(pd.merge(dfd22_f20_Pass_count, dfd23_f20_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f20 = pd.DataFrame(pd.merge(df_Pass_Count_1_f20, df_Pass_Count_2_f20, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f20 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f20, df_Pass_Count_3_f20, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f20 = df_Pass_Count_m2_f20.append(df_Pass_Count_m2_f20.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f20['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f20_Attendees_Country_count = pd.DataFrame(filtr_20_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f20_Attendees_Country_count = dfd17_f20_Attendees_Country_count.fillna('Unknown')
dfd17_f20_Attendees_Country_count['Percent-2017'] = (dfd17_f20_Attendees_Country_count['Total-2017'] / dfd17_f20_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f20_Attendees_Country_count['Percent-2017'] = dfd17_f20_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f20_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f20_Attendees_Country_count = pd.DataFrame(filtr_20_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f20_Attendees_Country_count = dfd18_f20_Attendees_Country_count.fillna('Unknown')
dfd18_f20_Attendees_Country_count['Percent-2018'] = (dfd18_f20_Attendees_Country_count['Total-2018'] / dfd18_f20_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f20_Attendees_Country_count['Percent-2018'] = dfd18_f20_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f20_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f20_Attendees_Country_count = pd.DataFrame(filtr_20_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f20_Attendees_Country_count = dfd19_f20_Attendees_Country_count.fillna('Unknown')
dfd19_f20_Attendees_Country_count['Percent-2019'] = (dfd19_f20_Attendees_Country_count['Total-2019'] / dfd19_f20_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f20_Attendees_Country_count['Percent-2019'] = dfd19_f20_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f20_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f20_Attendees_Country_count = pd.DataFrame(filtr_20_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f20_Attendees_Country_count = dfd21_f20_Attendees_Country_count.fillna('Unknown')
dfd21_f20_Attendees_Country_count['Percent-2021'] = (dfd21_f20_Attendees_Country_count['Total-2021'] / dfd21_f20_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f20_Attendees_Country_count['Percent-2021'] = dfd21_f20_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f20_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f20_Attendees_Country_count = pd.DataFrame(filtr_20_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f20_Attendees_Country_count = dfd22_f20_Attendees_Country_count.fillna('Unknown')
dfd22_f20_Attendees_Country_count['Percent-2022'] = (dfd22_f20_Attendees_Country_count['Total-2022'] / dfd22_f20_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f20_Attendees_Country_count['Percent-2022'] = dfd22_f20_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f20_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_Attendees_Country_count = pd.DataFrame(filtr_20_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f20_Attendees_Country_count = dfd23_f20_Attendees_Country_count.fillna('Unknown')
dfd23_f20_Attendees_Country_count['Percent-2023'] = (dfd23_f20_Attendees_Country_count['Total-2023'] / dfd23_f20_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f20_Attendees_Country_count['Percent-2023'] = dfd23_f20_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f20_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f20 = pd.DataFrame(pd.merge(dfd17_f20_Attendees_Country_count, dfd18_f20_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f20 = pd.DataFrame(pd.merge(dfd19_f20_Attendees_Country_count, dfd21_f20_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f20 = pd.DataFrame(pd.merge(dfd22_f20_Attendees_Country_count, dfd23_f20_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f20 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f20, dfAttendees_Country_Count_2_f20, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f20.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f20 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f20, dfAttendees_Country_Count_3_f20, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f20 = dfAttendees_Country_Count_m2_f20.append(dfAttendees_Country_Count_m2_f20.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f20['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f20_ATTENDEES_AREAS_count = pd.DataFrame(filtr_20_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f20_ATTENDEES_AREAS_count = dfd17_f20_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f20_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f20_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f20_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f20_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f20_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f20_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f20_ATTENDEES_AREAS_count = pd.DataFrame(filtr_20_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f20_ATTENDEES_AREAS_count = dfd18_f20_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f20_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f20_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f20_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f20_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f20_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f20_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f20_ATTENDEES_AREAS_count = pd.DataFrame(filtr_20_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f20_ATTENDEES_AREAS_count = dfd19_f20_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f20_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f20_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f20_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f20_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f20_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f20_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f20_ATTENDEES_AREAS_count = pd.DataFrame(filtr_20_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f20_ATTENDEES_AREAS_count = dfd21_f20_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f20_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f20_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f20_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f20_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f20_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f20_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f20_ATTENDEES_AREAS_count = pd.DataFrame(filtr_20_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f20_ATTENDEES_AREAS_count = dfd22_f20_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f20_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f20_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f20_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f20_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f20_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f20_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_ATTENDEES_AREAS_count = pd.DataFrame(filtr_20_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f20_ATTENDEES_AREAS_count = dfd23_f20_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f20_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f20_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f20_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f20_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f20_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f20_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f20 = pd.DataFrame(pd.merge(dfd17_f20_ATTENDEES_AREAS_count, dfd18_f20_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f20 = pd.DataFrame(pd.merge(dfd19_f20_ATTENDEES_AREAS_count, dfd21_f20_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f20 = pd.DataFrame(pd.merge(dfd22_f20_ATTENDEES_AREAS_count, dfd23_f20_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f20.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f20 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f20, df_ATTENDEES_AREAS_count_2_f20, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f20 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f20, df_ATTENDEES_AREAS_count_3_f20, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f20 = df_ATTENDEES_AREAS_count_m2_f20.append(df_ATTENDEES_AREAS_count_m2_f20.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f20['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f20_Attendees_Specialty_count = pd.DataFrame(filtr_20_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f20_Attendees_Specialty_count = dfd17_f20_Attendees_Specialty_count.fillna('Unknown')
dfd17_f20_Attendees_Specialty_count['Percent-2017'] = (dfd17_f20_Attendees_Specialty_count['Total-2017'] / dfd17_f20_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f20_Attendees_Specialty_count['Percent-2017'] = dfd17_f20_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f20_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f20_Attendees_Specialty_count = pd.DataFrame(filtr_20_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f20_Attendees_Specialty_count = dfd18_f20_Attendees_Specialty_count.fillna('Unknown')
dfd18_f20_Attendees_Specialty_count['Percent-2018'] = (dfd18_f20_Attendees_Specialty_count['Total-2018'] / dfd18_f20_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f20_Attendees_Specialty_count['Percent-2018'] = dfd18_f20_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f20_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f20_Attendees_Specialty_count = pd.DataFrame(filtr_20_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f20_Attendees_Specialty_count = dfd19_f20_Attendees_Specialty_count.fillna('Unknown')
dfd19_f20_Attendees_Specialty_count['Percent-2019'] = (dfd19_f20_Attendees_Specialty_count['Total-2019'] / dfd19_f20_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f20_Attendees_Specialty_count['Percent-2019'] = dfd19_f20_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f20_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f20_Attendees_Specialty_count = pd.DataFrame(filtr_20_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f20_Attendees_Specialty_count = dfd21_f20_Attendees_Specialty_count.fillna('Unknown')
dfd21_f20_Attendees_Specialty_count['Percent-2021'] = (dfd21_f20_Attendees_Specialty_count['Total-2021'] / dfd21_f20_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f20_Attendees_Specialty_count['Percent-2021'] = dfd21_f20_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f20_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f20_Attendees_Specialty_count = pd.DataFrame(filtr_20_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f20_Attendees_Specialty_count = dfd22_f20_Attendees_Specialty_count.fillna('Unknown')
dfd22_f20_Attendees_Specialty_count['Percent-2022'] = (dfd22_f20_Attendees_Specialty_count['Total-2022'] / dfd22_f20_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f20_Attendees_Specialty_count['Percent-2022'] = dfd22_f20_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f20_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f20_Attendees_Specialty_count = pd.DataFrame(filtr_20_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f20_Attendees_Specialty_count = dfd23_f20_Attendees_Specialty_count.fillna('Unknown')
dfd23_f20_Attendees_Specialty_count['Percent-2023'] = (dfd23_f20_Attendees_Specialty_count['Total-2023'] / dfd23_f20_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f20_Attendees_Specialty_count['Percent-2023'] = dfd23_f20_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f20_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f20 = pd.DataFrame(pd.merge(dfd17_f20_Attendees_Specialty_count, dfd18_f20_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f20 = pd.DataFrame(pd.merge(dfd19_f20_Attendees_Specialty_count, dfd21_f20_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f20 = pd.DataFrame(pd.merge(dfd22_f20_Attendees_Specialty_count, dfd23_f20_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f20 = pd.DataFrame(pd.merge(df_Specialty_count_1_f20, df_Specialty_count_2_f20, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f20.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f20 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f20, df_Specialty_count_3_f20, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f20 = df_Specialty_count_m2_f20.append(df_Specialty_count_m2_f20.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f20['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f20['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f20['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f20 = Concat_Registrations_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f20['Total-2017'] = Concat_Registrations_count_f1_f20['Total-2017'].astype(int)
Concat_Registrations_count_f1_f20['Percent-2017'] = Concat_Registrations_count_f1_f20['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f20['7DEvolution-2017'] = Concat_Registrations_count_f1_f20['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f20['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f20['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f20 = Concat_Registrations_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f20['Total-2018'] = Concat_Registrations_count_f1_f20['Total-2018'].astype(int)
Concat_Registrations_count_f1_f20['Percent-2018'] = Concat_Registrations_count_f1_f20['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f20['7DEvolution-2018'] = Concat_Registrations_count_f1_f20['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f20['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f20['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f20 = Concat_Registrations_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f20['Total-2019'] = Concat_Registrations_count_f1_f20['Total-2019'].astype(int)
Concat_Registrations_count_f1_f20['Percent-2019'] = Concat_Registrations_count_f1_f20['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f20['7DEvolution-2019'] = Concat_Registrations_count_f1_f20['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f20['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f20['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f20 = Concat_Registrations_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f20['Total-2021'] = Concat_Registrations_count_f1_f20['Total-2021'].astype(int)
Concat_Registrations_count_f1_f20['Percent-2021'] = Concat_Registrations_count_f1_f20['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f20['7DEvolution-2021'] = Concat_Registrations_count_f1_f20['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f20['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f20['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f20 = Concat_Registrations_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f20['Total-2022'] = Concat_Registrations_count_f1_f20['Total-2022'].astype(int)
Concat_Registrations_count_f1_f20['Percent-2022'] = Concat_Registrations_count_f1_f20['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f20['7DEvolution-2022'] = Concat_Registrations_count_f1_f20['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f20['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f20['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f20 = Concat_Registrations_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f20['Total-2023'] = Concat_Registrations_count_f1_f20['Total-2023'].astype(int)
Concat_Registrations_count_f1_f20['Percent-2023'] = Concat_Registrations_count_f1_f20['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f20['7DEvolution-2023'] = Concat_Registrations_count_f1_f20['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f20['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f20['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f20 = Concat_ACQRET_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f20['Total-2018'] = Concat_ACQRET_count_f1_f20['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f20['ACQ-2018'] = Concat_ACQRET_count_f1_f20['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f20['Percent-2018'] = Concat_ACQRET_count_f1_f20['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f20['RET-2018'] = Concat_ACQRET_count_f1_f20['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f20['Percnt-2018'] = Concat_ACQRET_count_f1_f20['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f20['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f20['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f20 = Concat_ACQRET_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f20['Total-2019'] = Concat_ACQRET_count_f1_f20['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f20['ACQ-2019'] = Concat_ACQRET_count_f1_f20['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f20['Percent-2019'] = Concat_ACQRET_count_f1_f20['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f20['RET-2019'] = Concat_ACQRET_count_f1_f20['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f20['Percnt-2019'] = Concat_ACQRET_count_f1_f20['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f20['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f20['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f20 = Concat_ACQRET_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f20['Total-2021'] = Concat_ACQRET_count_f1_f20['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f20['ACQ-2021'] = Concat_ACQRET_count_f1_f20['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f20['Percent-2021'] = Concat_ACQRET_count_f1_f20['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f20['RET-2021'] = Concat_ACQRET_count_f1_f20['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f20['Percnt-2021'] = Concat_ACQRET_count_f1_f20['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f20['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f20['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f20 = Concat_ACQRET_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f20['Total-2022'] = Concat_ACQRET_count_f1_f20['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f20['ACQ-2022'] = Concat_ACQRET_count_f1_f20['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f20['Percent-2022'] = Concat_ACQRET_count_f1_f20['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f20['RET-2022'] = Concat_ACQRET_count_f1_f20['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f20['Percnt-2022'] = Concat_ACQRET_count_f1_f20['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f20['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f20['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f20 = Concat_ACQRET_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f20['Total-2023'] = Concat_ACQRET_count_f1_f20['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f20['ACQ-2023'] = Concat_ACQRET_count_f1_f20['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f20['Percent-2023'] = Concat_ACQRET_count_f1_f20['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f20['RET-2023'] = Concat_ACQRET_count_f1_f20['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f20['Percnt-2023'] = Concat_ACQRET_count_f1_f20['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f20['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f20['Total-2017'],errors='coerce')
Concat_REV_count_f1_f20 = Concat_REV_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f20['Total-2017'] = Concat_REV_count_f1_f20['Total-2017'].astype(int)
Concat_REV_count_f1_f20['Percent-2017'] = Concat_REV_count_f1_f20['Percent-2017'].astype(float)
Concat_REV_count_f1_f20['7DEvolution-2017'] = Concat_REV_count_f1_f20['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f20['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f20['Total-2018'],errors='coerce')
Concat_REV_count_f1_f20 = Concat_REV_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f20['Total-2018'] = Concat_REV_count_f1_f20['Total-2018'].astype(int)
Concat_REV_count_f1_f20['Percent-2018'] = Concat_REV_count_f1_f20['Percent-2018'].astype(float)
Concat_REV_count_f1_f20['7DEvolution-2018'] = Concat_REV_count_f1_f20['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f20['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f20['Total-2019'],errors='coerce')
Concat_REV_count_f1_f20 = Concat_REV_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f20['Total-2019'] = Concat_REV_count_f1_f20['Total-2019'].astype(int)
Concat_REV_count_f1_f20['Percent-2019'] = Concat_REV_count_f1_f20['Percent-2019'].astype(float)
Concat_REV_count_f1_f20['7DEvolution-2019'] = Concat_REV_count_f1_f20['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f20['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f20['Total-2022'],errors='coerce')
Concat_REV_count_f1_f20 = Concat_REV_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f20['Total-2022'] = Concat_REV_count_f1_f20['Total-2022'].astype(int)
Concat_REV_count_f1_f20['Percent-2022'] = Concat_REV_count_f1_f20['Percent-2022'].astype(float)
Concat_REV_count_f1_f20['7DEvolution-2022'] = Concat_REV_count_f1_f20['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f20['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f20['Total-2023'],errors='coerce')
Concat_REV_count_f1_f20 = Concat_REV_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f20['Total-2023'] = Concat_REV_count_f1_f20['Total-2023'].astype(int)
Concat_REV_count_f1_f20['Percent-2023'] = Concat_REV_count_f1_f20['Percent-2023'].astype(float)
Concat_REV_count_f1_f20['7DEvolution-2023'] = Concat_REV_count_f1_f20['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f20['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f20['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f20 = Concat_RegGRDel_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f20['Total-2017'] = Concat_RegGRDel_count_f1_f20['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f20['Percent-2017'] = Concat_RegGRDel_count_f1_f20['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f20['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f20['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f20['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f20['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f20 = Concat_RegGRDel_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f20['Total-2018'] = Concat_RegGRDel_count_f1_f20['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f20['Percent-2018'] = Concat_RegGRDel_count_f1_f20['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f20['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f20['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f20['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f20['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f20 = Concat_RegGRDel_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f20['Total-2019'] = Concat_RegGRDel_count_f1_f20['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f20['Percent-2019'] = Concat_RegGRDel_count_f1_f20['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f20['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f20['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f20['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f20['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f20 = Concat_RegGRDel_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f20['Total-2021'] = Concat_RegGRDel_count_f1_f20['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f20['Percent-2021'] = Concat_RegGRDel_count_f1_f20['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f20['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f20['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f20['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f20['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f20 = Concat_RegGRDel_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f20['Total-2022'] = Concat_RegGRDel_count_f1_f20['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f20['Percent-2022'] = Concat_RegGRDel_count_f1_f20['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f20['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f20['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f20['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f20['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f20 = Concat_RegGRDel_count_f1_f20.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f20['Total-2023'] = Concat_RegGRDel_count_f1_f20['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f20['Percent-2023'] = Concat_RegGRDel_count_f1_f20['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f20['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f20['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f20['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f20['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f20 = Conct_AC_RT_GRDel_f1_f20.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f20['Total-2018'] = Conct_AC_RT_GRDel_f1_f20['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f20['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f20['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f20['Percent-2018'] = Conct_AC_RT_GRDel_f1_f20['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f20['RET-2018'] = Conct_AC_RT_GRDel_f1_f20['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f20['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f20['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f20['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f20['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f20 = Conct_AC_RT_GRDel_f1_f20.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f20['Total-2019'] = Conct_AC_RT_GRDel_f1_f20['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f20['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f20['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f20['Percent-2019'] = Conct_AC_RT_GRDel_f1_f20['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f20['RET-2019'] = Conct_AC_RT_GRDel_f1_f20['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f20['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f20['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f20['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f20['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f20 = Conct_AC_RT_GRDel_f1_f20.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f20['Total-2021'] = Conct_AC_RT_GRDel_f1_f20['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f20['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f20['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f20['Percent-2021'] = Conct_AC_RT_GRDel_f1_f20['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f20['RET-2021'] = Conct_AC_RT_GRDel_f1_f20['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f20['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f20['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f20['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f20['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f20 = Conct_AC_RT_GRDel_f1_f20.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f20['Total-2022'] = Conct_AC_RT_GRDel_f1_f20['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f20['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f20['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f20['Percent-2022'] = Conct_AC_RT_GRDel_f1_f20['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f20['RET-2022'] = Conct_AC_RT_GRDel_f1_f20['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f20['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f20['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f20['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f20['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f20 = Conct_AC_RT_GRDel_f1_f20.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f20['Total-2023'] = Conct_AC_RT_GRDel_f1_f20['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f20['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f20['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f20['Percent-2023'] = Conct_AC_RT_GRDel_f1_f20['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f20['RET-2023'] = Conct_AC_RT_GRDel_f1_f20['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f20['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f20['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f20['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f20['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f20 = Conct_RV_GRDel_f1_f20.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f20['Total-2017'] = Conct_RV_GRDel_f1_f20['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f20['Percent-2017'] = Conct_RV_GRDel_f1_f20['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f20['7DEvolution-2017'] = Conct_RV_GRDel_f1_f20['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f20['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f20['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f20 = Conct_RV_GRDel_f1_f20.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f20['Total-2018'] = Conct_RV_GRDel_f1_f20['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f20['Percent-2018'] = Conct_RV_GRDel_f1_f20['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f20['7DEvolution-2018'] = Conct_RV_GRDel_f1_f20['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f20['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f20['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f20 = Conct_RV_GRDel_f1_f20.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f20['Total-2019'] = Conct_RV_GRDel_f1_f20['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f20['Percent-2019'] = Conct_RV_GRDel_f1_f20['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f20['7DEvolution-2019'] = Conct_RV_GRDel_f1_f20['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f20['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f20['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f20 = Conct_RV_GRDel_f1_f20.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f20['Total-2022'] = Conct_RV_GRDel_f1_f20['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f20['Percent-2022'] = Conct_RV_GRDel_f1_f20['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f20['7DEvolution-2022'] = Conct_RV_GRDel_f1_f20['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f20['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f20['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f20 = Conct_RV_GRDel_f1_f20.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f20['Total-2023'] = Conct_RV_GRDel_f1_f20['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f20['Percent-2023'] = Conct_RV_GRDel_f1_f20['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f20['7DEvolution-2023'] = Conct_RV_GRDel_f1_f20['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f20['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f20['Total-2017'],errors='coerce')
df_Profile_Count_m2_f20 = df_Profile_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f20['Total-2017'] = df_Profile_Count_m2_f20['Total-2017'].astype(int)
df_Profile_Count_m2_f20['Percent-2017'] = df_Profile_Count_m2_f20['Percent-2017'].astype(float)

df_Profile_Count_m2_f20['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f20['Total-2018'],errors='coerce')
df_Profile_Count_m2_f20 = df_Profile_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f20['Total-2018'] = df_Profile_Count_m2_f20['Total-2018'].astype(int)
df_Profile_Count_m2_f20['Percent-2018'] = df_Profile_Count_m2_f20['Percent-2018'].astype(float)

df_Profile_Count_m2_f20['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f20['Total-2019'],errors='coerce')
df_Profile_Count_m2_f20 = df_Profile_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f20['Total-2019'] = df_Profile_Count_m2_f20['Total-2019'].astype(int)
df_Profile_Count_m2_f20['Percent-2019'] = df_Profile_Count_m2_f20['Percent-2019'].astype(float)

df_Profile_Count_m2_f20['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f20['Total-2021'],errors='coerce')
df_Profile_Count_m2_f20 = df_Profile_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f20['Total-2021'] = df_Profile_Count_m2_f20['Total-2021'].astype(int)
df_Profile_Count_m2_f20['Percent-2021'] = df_Profile_Count_m2_f20['Percent-2021'].astype(float)

df_Profile_Count_m2_f20['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f20['Total-2022'],errors='coerce')
df_Profile_Count_m2_f20 = df_Profile_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f20['Total-2022'] = df_Profile_Count_m2_f20['Total-2022'].astype(int)
df_Profile_Count_m2_f20['Percent-2022'] = df_Profile_Count_m2_f20['Percent-2022'].astype(float)

df_Profile_Count_m2_f20['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f20['Total-2023'],errors='coerce')
df_Profile_Count_m2_f20 = df_Profile_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f20['Total-2023'] = df_Profile_Count_m2_f20['Total-2023'].astype(int)
df_Profile_Count_m2_f20['Percent-2023'] = df_Profile_Count_m2_f20['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f20['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f20['Total-2017'],errors='coerce')
df_Pass_Count_m2_f20 = df_Pass_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f20['Total-2017'] = df_Pass_Count_m2_f20['Total-2017'].astype(int)
df_Pass_Count_m2_f20['Percent-2017'] = df_Pass_Count_m2_f20['Percent-2017'].astype(float)

df_Pass_Count_m2_f20['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f20['Total-2018'],errors='coerce')
df_Pass_Count_m2_f20 = df_Pass_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f20['Total-2018'] = df_Pass_Count_m2_f20['Total-2018'].astype(int)
df_Pass_Count_m2_f20['Percent-2018'] = df_Pass_Count_m2_f20['Percent-2018'].astype(float)

df_Pass_Count_m2_f20['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f20['Total-2019'],errors='coerce')
df_Pass_Count_m2_f20 = df_Pass_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f20['Total-2019'] = df_Pass_Count_m2_f20['Total-2019'].astype(int)
df_Pass_Count_m2_f20['Percent-2019'] = df_Pass_Count_m2_f20['Percent-2019'].astype(float)

df_Pass_Count_m2_f20['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f20['Total-2021'],errors='coerce')
df_Pass_Count_m2_f20 = df_Pass_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f20['Total-2021'] = df_Pass_Count_m2_f20['Total-2021'].astype(int)
df_Pass_Count_m2_f20['Percent-2021'] = df_Pass_Count_m2_f20['Percent-2021'].astype(float)

df_Pass_Count_m2_f20['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f20['Total-2022'],errors='coerce')
df_Pass_Count_m2_f20 = df_Pass_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f20['Total-2022'] = df_Pass_Count_m2_f20['Total-2022'].astype(int)
df_Pass_Count_m2_f20['Percent-2022'] = df_Pass_Count_m2_f20['Percent-2022'].astype(float)

df_Pass_Count_m2_f20['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f20['Total-2023'],errors='coerce')
df_Pass_Count_m2_f20 = df_Pass_Count_m2_f20.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f20['Total-2023'] = df_Pass_Count_m2_f20['Total-2023'].astype(int)
df_Pass_Count_m2_f20['Percent-2023'] = df_Pass_Count_m2_f20['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f20['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f20['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f20 = dfAttendees_Country_Count_m2_f20.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f20['Total-2017'] = dfAttendees_Country_Count_m2_f20['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f20['Percent-2017'] = dfAttendees_Country_Count_m2_f20['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f20['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f20['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f20 = dfAttendees_Country_Count_m2_f20.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f20['Total-2018'] = dfAttendees_Country_Count_m2_f20['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f20['Percent-2018'] = dfAttendees_Country_Count_m2_f20['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f20['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f20['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f20 = dfAttendees_Country_Count_m2_f20.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f20['Total-2019'] = dfAttendees_Country_Count_m2_f20['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f20['Percent-2019'] = dfAttendees_Country_Count_m2_f20['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f20['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f20['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f20 = dfAttendees_Country_Count_m2_f20.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f20['Total-2021'] = dfAttendees_Country_Count_m2_f20['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f20['Percent-2021'] = dfAttendees_Country_Count_m2_f20['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f20['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f20['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f20 = dfAttendees_Country_Count_m2_f20.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f20['Total-2022'] = dfAttendees_Country_Count_m2_f20['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f20['Percent-2022'] = dfAttendees_Country_Count_m2_f20['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f20['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f20['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f20 = dfAttendees_Country_Count_m2_f20.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f20['Total-2023'] = dfAttendees_Country_Count_m2_f20['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f20['Percent-2023'] = dfAttendees_Country_Count_m2_f20['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f20['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f20['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f20 = df_ATTENDEES_AREAS_count_m2_f20.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f20['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f20['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f20['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f20['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f20['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f20['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f20 = df_ATTENDEES_AREAS_count_m2_f20.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f20['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f20['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f20['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f20['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f20['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f20['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f20 = df_ATTENDEES_AREAS_count_m2_f20.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f20['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f20['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f20['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f20['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f20['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f20['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f20 = df_ATTENDEES_AREAS_count_m2_f20.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f20['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f20['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f20['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f20['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f20['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f20['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f20 = df_ATTENDEES_AREAS_count_m2_f20.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f20['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f20['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f20['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f20['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f20['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f20['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f20 = df_ATTENDEES_AREAS_count_m2_f20.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f20['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f20['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f20['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f20['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f20['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f20['Total-2017'],errors='coerce')
df_Specialty_count_m2_f20 = df_Specialty_count_m2_f20.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f20['Total-2017'] = df_Specialty_count_m2_f20['Total-2017'].astype(int)
df_Specialty_count_m2_f20['Percent-2017'] = df_Specialty_count_m2_f20['Percent-2017'].astype(float)

df_Specialty_count_m2_f20['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f20['Total-2018'],errors='coerce')
df_Specialty_count_m2_f20 = df_Specialty_count_m2_f20.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f20['Total-2018'] = df_Specialty_count_m2_f20['Total-2018'].astype(int)
df_Specialty_count_m2_f20['Percent-2018'] = df_Specialty_count_m2_f20['Percent-2018'].astype(float)

df_Specialty_count_m2_f20['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f20['Total-2019'],errors='coerce')
df_Specialty_count_m2_f20 = df_Specialty_count_m2_f20.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f20['Total-2019'] = df_Specialty_count_m2_f20['Total-2019'].astype(int)
df_Specialty_count_m2_f20['Percent-2019'] = df_Specialty_count_m2_f20['Percent-2019'].astype(float)

df_Specialty_count_m2_f20['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f20['Total-2021'],errors='coerce')
df_Specialty_count_m2_f20 = df_Specialty_count_m2_f20.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f20['Total-2021'] = df_Specialty_count_m2_f20['Total-2021'].astype(int)
df_Specialty_count_m2_f20['Percent-2021'] = df_Specialty_count_m2_f20['Percent-2021'].astype(float)

df_Specialty_count_m2_f20['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f20['Total-2022'],errors='coerce')
df_Specialty_count_m2_f20 = df_Specialty_count_m2_f20.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f20['Total-2022'] = df_Specialty_count_m2_f20['Total-2022'].astype(int)
df_Specialty_count_m2_f20['Percent-2022'] = df_Specialty_count_m2_f20['Percent-2022'].astype(float)

df_Specialty_count_m2_f20['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f20['Total-2023'],errors='coerce')
df_Specialty_count_m2_f20 = df_Specialty_count_m2_f20.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f20['Total-2023'] = df_Specialty_count_m2_f20['Total-2023'].astype(int)
df_Specialty_count_m2_f20['Percent-2023'] = df_Specialty_count_m2_f20['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f20.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f20.dtypes)
#print(df_Specialty_count_m2_f20.dtypes)

#print(dfAttendees_Country_Count_m2_f20.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f20.dtypes)
#print(df_Specialty_count_m2_f20.dtypes)

# EXCEL FILE
writerf20 = pd.ExcelWriter(outputExcelFile_f20, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f20.to_excel\
    (writerf20, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f20.to_excel\
    (writerf20, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f20.to_excel\
    (writerf20, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f20.to_excel\
    (writerf20, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f20.to_excel\
    (writerf20, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f20.to_excel\
    (writerf20, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f20.to_excel\
    (writerf20, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f20.to_excel\
    (writerf20, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f20.to_excel\
    (writerf20, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f20.to_excel\
    (writerf20, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f20.to_excel\
    (writerf20, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf20.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f20)

workbook.save(outputExcelFile_f20)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 56 days**********************************************')
print('************************************End of 56 days**********************************************')
print('************************************End of 56 days**********************************************')
print('************************************End of 56 days**********************************************')
print('************************************End of 56 days**********************************************')
print('************************************End of 56 days**********************************************')
print('************************************End of 56 days**********************************************')
print('************************************End of 56 days**********************************************')
print('************************************End of 56 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f21_Registrations_count = pd.DataFrame(filter_21_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f21_Registrations_count = dfd17_f21_Registrations_count.fillna('Unknown')
dfd17_f21_Registrations_count['Percent-2017'] = (dfd17_f21_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f21_Registrations_count['Percent-2017'] = dfd17_f21_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f21_Registrations_count['7DEvolution-2017'] = dfd17_f21_Registrations_count['Total-2017'] - dfd17_f20_Registrations_count['Total-2017']
#print(tab(dfd17_f21_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f21_Registrations_count = pd.DataFrame(filter_21_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f21_Registrations_count = dfd18_f21_Registrations_count.fillna('Unknown')
dfd18_f21_Registrations_count['Percent-2018'] = (dfd18_f21_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f21_Registrations_count['Percent-2018'] = dfd18_f21_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f21_Registrations_count['7DEvolution-2018'] = dfd18_f21_Registrations_count['Total-2018'] - dfd18_f20_Registrations_count['Total-2018']
#print(tab(dfd18_f21_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f21_Registrations_count = pd.DataFrame(filter_21_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f21_Registrations_count = dfd19_f21_Registrations_count.fillna('Unknown')
dfd19_f21_Registrations_count['Percent-2019'] = (dfd19_f21_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f21_Registrations_count['Percent-2019'] = dfd19_f21_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f21_Registrations_count['7DEvolution-2019'] = dfd19_f21_Registrations_count['Total-2019'] - dfd19_f20_Registrations_count['Total-2019']
#print(tab(dfd19_f21_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f21_Registrations_count = pd.DataFrame(filter_21_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f21_Registrations_count = dfd21_f21_Registrations_count.fillna('Unknown')
dfd21_f21_Registrations_count['Percent-2021'] = (dfd21_f21_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f21_Registrations_count['Percent-2021'] = dfd21_f21_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f21_Registrations_count['7DEvolution-2021'] = dfd21_f21_Registrations_count['Total-2021'] - dfd21_f20_Registrations_count['Total-2021']
#print(tab(dfd21_f21_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f21_Registrations_count = pd.DataFrame(filter_21_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f21_Registrations_count = dfd22_f21_Registrations_count.fillna('Unknown')
dfd22_f21_Registrations_count['Percent-2022'] = (dfd22_f21_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f21_Registrations_count['Percent-2022'] = dfd22_f21_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f21_Registrations_count['7DEvolution-2022'] = dfd22_f21_Registrations_count['Total-2022'] - dfd22_f20_Registrations_count['Total-2022']
#print(tab(dfd22_f21_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_Registrations_count = pd.DataFrame(filter_21_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f21_Registrations_count = dfd23_f21_Registrations_count.fillna('Unknown')
dfd23_f21_Registrations_count['Percent-2023'] = (dfd23_f21_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f21_Registrations_count['Percent-2023'] = dfd23_f21_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f21_Registrations_count['7DEvolution-2023'] = dfd23_f21_Registrations_count['Total-2023'] - dfd23_f20_Registrations_count['Total-2023']
#print(tab(dfd23_f21_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f21_RegistrationsEvolution_count = pd.DataFrame(filter_21_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f21_RegistrationsEvolution_count = dfd23_f21_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f21_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f21_Registrations_count['Total-2023'] - dfd19_f21_Registrations_count['Total-2019'])/ dfd19_f21_Registrations_count['Total-2019'].sum()) * 100
dfd23_f21_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f21_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f21_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f21 = pd.DataFrame(pd.merge(dfd17_f21_Registrations_count, dfd18_f21_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f21 = pd.DataFrame(pd.merge(dfd19_f21_Registrations_count, dfd21_f21_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f21 = pd.DataFrame(pd.merge(dfd22_f21_Registrations_count, dfd23_f21_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f21 = pd.DataFrame(pd.merge(df_Registrations_count_1_f21, df_Registrations_count_2_f21, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f21 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f21, df_Registrations_count_3_f21, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f21 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f21, dfd23_f21_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f21 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17, df_Registrations_Merge_f18, df_Registrations_Merge_f19, df_Registrations_Merge_f20,
                                           df_Registrations_Merge_f21]
Concat_Registrations_count_f1_f21 = pd.concat(ConcatFrames_Registrations_count_f1_f21)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f21  = ConcatFrames_Registrations_count_f1_f21.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f21.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f21 = filter_21_df18[filter_21_df18['New customer'] == 1]
df_NewCustomer_df19_f21 = filter_21_df19[filter_21_df19['New customer'] == 1]
df_NewCustomer_df21_f21 = filter_21_df21[filter_21_df21['New customer'] == 1]
df_NewCustomer_df22_f21 = filter_21_df22[filter_21_df22['New customer'] == 1]
df_NewCustomer_df23_f21 = filter_21_df23[filter_21_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f21.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f21.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f21.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a21_ACQRET_count = pd.DataFrame(filter_21_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f21_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f21_ACQRET_count['Percent-2018'] = (dfd18_f21_ACQRET_count['ACQ-2018'] / dfd18_f21_Registrations_count['Total-2018'].sum()) * 100
dfd18_f21_ACQRET_count['Percent-2018'] = dfd18_f21_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f21_ACQRET_count['RET-2018'] = dfd18_a21_ACQRET_count['Total-2018'] - dfd18_f21_ACQRET_count['ACQ-2018']
dfd18_f21_ACQRET_count['Percnt-2018'] = (dfd18_f21_ACQRET_count['RET-2018'] / dfd18_a21_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f21_ACQRET_count['Percnt-2018'] = dfd18_f21_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f21_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a21_ACQRET_count = pd.DataFrame(filter_21_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f21_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f21_ACQRET_count['Percent-2019'] = (dfd19_f21_ACQRET_count['ACQ-2019'] / dfd19_f21_Registrations_count['Total-2019'].sum()) * 100
dfd19_f21_ACQRET_count['Percent-2019'] = dfd19_f21_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f21_ACQRET_count['RET-2019'] = dfd19_a21_ACQRET_count['Total-2019'] - dfd19_f21_ACQRET_count['ACQ-2019']
dfd19_f21_ACQRET_count['Percnt-2019'] = (dfd19_f21_ACQRET_count['RET-2019'] / dfd19_a21_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f21_ACQRET_count['Percnt-2019'] = dfd19_f21_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f21_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a21_ACQRET_count = pd.DataFrame(filter_21_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f21_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f21_ACQRET_count['Percent-2021'] = (dfd21_f21_ACQRET_count['ACQ-2021'] / dfd21_f21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f21_ACQRET_count['Percent-2021'] = dfd21_f21_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f21_ACQRET_count['RET-2021'] = dfd21_a21_ACQRET_count['Total-2021'] - dfd21_f21_ACQRET_count['ACQ-2021']
dfd21_f21_ACQRET_count['Percnt-2021'] = (dfd21_f21_ACQRET_count['RET-2021'] / dfd21_a21_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f21_ACQRET_count['Percnt-2021'] = dfd21_f21_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f21_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a21_ACQRET_count = pd.DataFrame(filter_21_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f21_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f21_ACQRET_count['Percent-2022'] = (dfd22_f21_ACQRET_count['ACQ-2022'] / dfd22_f21_Registrations_count['Total-2022'].sum()) * 100
dfd22_f21_ACQRET_count['Percent-2022'] = dfd22_f21_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f21_ACQRET_count['RET-2022'] = dfd22_a21_ACQRET_count['Total-2022'] - dfd22_f21_ACQRET_count['ACQ-2022']
dfd22_f21_ACQRET_count['Percnt-2022'] = (dfd22_f21_ACQRET_count['RET-2022'] / dfd22_a21_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f21_ACQRET_count['Percnt-2022'] = dfd22_f21_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f21_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a21_ACQRET_count = pd.DataFrame(filter_21_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f21_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f21_ACQRET_count['Percent-2023'] = (dfd23_f21_ACQRET_count['ACQ-2023'] / dfd23_f21_Registrations_count['Total-2023'].sum()) * 100
dfd23_f21_ACQRET_count['Percent-2023'] = dfd23_f21_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f21_ACQRET_count['RET-2023'] = dfd23_a21_ACQRET_count['Total-2023'] - dfd23_f21_ACQRET_count['ACQ-2023']
dfd23_f21_ACQRET_count['Percnt-2023'] = (dfd23_f21_ACQRET_count['RET-2023'] / dfd23_a21_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f21_ACQRET_count['Percnt-2023'] = dfd23_f21_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f21_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f21 = pd.DataFrame(pd.merge(dfd18_a21_ACQRET_count, dfd18_f21_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f21 = pd.DataFrame(pd.merge(dfd19_a21_ACQRET_count, dfd19_f21_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f21 = pd.DataFrame(pd.merge(dfd21_a21_ACQRET_count, dfd21_f21_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f21 = pd.DataFrame(pd.merge(dfd22_a21_ACQRET_count, dfd22_f21_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_21_f21 = pd.DataFrame(pd.merge(dfd23_a21_ACQRET_count, dfd23_f21_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_21_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f21 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f21, df_ACQRET_count_2_f21, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f21 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f21, df_ACQRET_count_3_f21, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f21 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f21, df_ACQRET_count_4_f21, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f21 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f21, df_ACQRET_count_21_f21, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f21 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17, df_ACQRET_count_M4_f18, df_ACQRET_count_M4_f19, df_ACQRET_count_M4_f20,
                                    df_ACQRET_count_M4_f21]
Concat_ACQRET_count_f1_f21 = pd.concat(ConcatFrames_ACQRET_count_f1_f21)
#print(tab(Concat_ACQRET_count_f1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f21 = Concat_ACQRET_count_f1_f21[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f21_Revenue_calc = pd.DataFrame(filter_21_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f21_Revenue_calc['Percent-2017'] = (dfd17_f21_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f21_Revenue_calc['Percent-2017'] = dfd17_f21_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f21_Revenue_calc['7DEvolution-2017'] = dfd17_f21_Revenue_calc['Total-2017'] - dfd17_f20_Revenue_calc['Total-2017']
#print(tab(dfd17_f21_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f21_Revenue_calc = pd.DataFrame(filter_21_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f21_Revenue_calc['Percent-2018'] = (dfd18_f21_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f21_Revenue_calc['Percent-2018'] = dfd18_f21_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f21_Revenue_calc['7DEvolution-2018'] = dfd18_f21_Revenue_calc['Total-2018'] - dfd18_f20_Revenue_calc['Total-2018']
#print(tab(dfd18_f21_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f21_Revenue_calc = pd.DataFrame(filter_21_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f21_Revenue_calc['Percent-2019'] = (dfd19_f21_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f21_Revenue_calc['Percent-2019'] = dfd19_f21_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f21_Revenue_calc['7DEvolution-2019'] = dfd19_f21_Revenue_calc['Total-2019'] - dfd19_f20_Revenue_calc['Total-2019']
#print(tab(dfd19_f21_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f21_Revenue_calc = pd.DataFrame(filter_21_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f21_Revenue_calc['Percent-2021'] = (dfd21_f21_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f21_Revenue_calc['Percent-2021'] = dfd21_f21_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f21_Revenue_calc['7DEvolution-2021'] = dfd21_f21_Revenue_calc['Total-2021'] - dfd21_f20_Revenue_calc['Total-2021']
#print(tab(dfd21_f21_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f21_Revenue_calc = pd.DataFrame(filter_21_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f21_Revenue_calc['Percent-2022'] = (dfd22_f21_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f21_Revenue_calc['Percent-2022'] = dfd22_f21_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f21_Revenue_calc['7DEvolution-2022'] = dfd22_f21_Revenue_calc['Total-2022'] - dfd22_f20_Revenue_calc['Total-2022']
#print(tab(dfd22_f21_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_Revenue_calc = pd.DataFrame(filter_21_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f21_Revenue_calc['Percent-2023'] = (dfd23_f21_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f21_Revenue_calc['Percent-2023'] = dfd23_f21_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f21_Revenue_calc['7DEvolution-2023'] = dfd23_f21_Revenue_calc['Total-2023'] - dfd23_f20_Revenue_calc['Total-2023']
#print(tab(dfd23_f21_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f21_RevenueEvolution_calc = pd.DataFrame(filter_21_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f21_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f21_Revenue_calc['Total-2023'] - dfd19_f21_Revenue_calc['Total-2019'])/ dfd19_f21_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f21_RevenueEvolution_calc['Evolution-2023'] = dfd23_f21_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f21_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f21 = pd.DataFrame(pd.merge(dfd17_f21_Revenue_calc, dfd18_f21_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f21 = pd.DataFrame(pd.merge(dfd19_f21_Revenue_calc, dfd21_f21_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f21 = pd.DataFrame(pd.merge(dfd22_f21_Revenue_calc, dfd23_f21_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f21_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f21, df_Revenue_calc_2_f21, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f21Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f21_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f21_Evolution, df_Revenue_calc_3_f21, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f21Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f21 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f21_Evolution, dfd23_f21_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f21 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17, df_Revenue_calc_f18, df_Revenue_calc_f19, df_Revenue_calc_f20,
                                 df_Revenue_calc_f21]
Concat_REV_count_f1_f21 = pd.concat(ConcatFrames_REV_count_f1_f21)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f21_Registrations_GRDel = pd.DataFrame(filtr_21_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f21_Registrations_GRDel = dfd17_f21_Registrations_GRDel.fillna('Unknown')
dfd17_f21_Registrations_GRDel['Percent-2017'] = (dfd17_f21_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f21_Registrations_GRDel['Percent-2017'] = dfd17_f21_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f21_Registrations_GRDel['7DEvolution-2017'] = dfd17_f21_Registrations_GRDel['Total-2017'] - dfd17_f20_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f21_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f21_Registrations_GRDel = pd.DataFrame(filtr_21_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f21_Registrations_GRDel = dfd18_f21_Registrations_GRDel.fillna('Unknown')
dfd18_f21_Registrations_GRDel['Percent-2018'] = (dfd18_f21_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f21_Registrations_GRDel['Percent-2018'] = dfd18_f21_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f21_Registrations_GRDel['7DEvolution-2018'] = dfd18_f21_Registrations_GRDel['Total-2018'] - dfd18_f20_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f21_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f21_Registrations_GRDel = pd.DataFrame(filtr_21_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f21_Registrations_GRDel = dfd19_f21_Registrations_GRDel.fillna('Unknown')
dfd19_f21_Registrations_GRDel['Percent-2019'] = (dfd19_f21_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f21_Registrations_GRDel['Percent-2019'] = dfd19_f21_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f21_Registrations_GRDel['7DEvolution-2019'] = dfd19_f21_Registrations_GRDel['Total-2019'] - dfd19_f20_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f21_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f21_Registrations_GRDel = pd.DataFrame(filtr_21_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f21_Registrations_GRDel = dfd21_f21_Registrations_GRDel.fillna('Unknown')
dfd21_f21_Registrations_GRDel['Percent-2021'] = (dfd21_f21_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f21_Registrations_GRDel['Percent-2021'] = dfd21_f21_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f21_Registrations_GRDel['7DEvolution-2021'] = dfd21_f21_Registrations_GRDel['Total-2021'] - dfd21_f20_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f21_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f21_Registrations_GRDel = pd.DataFrame(filtr_21_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f21_Registrations_GRDel = dfd22_f21_Registrations_GRDel.fillna('Unknown')
dfd22_f21_Registrations_GRDel['Percent-2022'] = (dfd22_f21_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f21_Registrations_GRDel['Percent-2022'] = dfd22_f21_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f21_Registrations_GRDel['7DEvolution-2022'] = dfd22_f21_Registrations_GRDel['Total-2022'] - dfd22_f20_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f21_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_Registrations_GRDel = pd.DataFrame(filtr_21_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f21_Registrations_GRDel = dfd23_f21_Registrations_GRDel.fillna('Unknown')
dfd23_f21_Registrations_GRDel['Percent-2023'] = (dfd23_f21_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f21_Registrations_GRDel['Percent-2023'] = dfd23_f21_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f21_Registrations_GRDel['7DEvolution-2023'] = dfd23_f21_Registrations_GRDel['Total-2023'] - dfd23_f20_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f21_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f21_Registrations_Evol_GRDel = pd.DataFrame(filtr_21_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f21_Registrations_Evol_GRDel = dfd23_f21_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f21_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f21_Registrations_GRDel['Total-2023'] - dfd19_f21_Registrations_GRDel['Total-2019']) / dfd19_f21_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f21_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f21 = pd.concat([dfd17_f21_Registrations_GRDel, dfd18_f21_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f21 = pd.DataFrame(pd.merge(dfd17_f21_Registrations_GRDel, dfd18_f21_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f21 = pd.DataFrame(pd.merge(dfd19_f21_Registrations_GRDel, dfd21_f21_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f21 = pd.DataFrame(pd.merge(dfd22_f21_Registrations_GRDel, dfd23_f21_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f21 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f21, df_Registrations_GRDel_2_f21, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_21_f21 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f21, df_Registrations_GRDel_3_f21, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f21 = pd.DataFrame(pd.merge(df_Registrations_GRDel_21_f21, dfd23_f21_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f21 = df_Registrations_GRDel_f21[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f21 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17, df_Registrations_GRDel_f18, df_Registrations_GRDel_f19, df_Registrations_GRDel_f20,
                                      df_Registrations_GRDel_f21]
Concat_RegGRDel_count_f1_f21 = pd.concat(ConcatFrames_RegGRDel_count_f1_f21)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f21 = filtr_21_df18_GRdel[filtr_21_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f21 = filtr_21_df19_GRdel[filtr_21_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f21 = filtr_21_df21_GRdel[filtr_21_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f21 = filtr_21_df22_GRdel[filtr_21_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f21 = filtr_21_df23_GRdel[filtr_21_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f21.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f21.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a21_AC_RT_GRDel = pd.DataFrame(filtr_21_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f21_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f21.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f21_AC_RT_GRDel['Percent-2018'] = (dfd18_f21_AC_RT_GRDel['ACQ-2018'] / dfd18_f21_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f21_AC_RT_GRDel['Percent-2018'] = dfd18_f21_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f21_AC_RT_GRDel['RET-2018'] = dfd18_a21_AC_RT_GRDel['Total-2018'] - dfd18_f21_AC_RT_GRDel['ACQ-2018']
dfd18_f21_AC_RT_GRDel['Percnt-2018'] = (dfd18_f21_AC_RT_GRDel['RET-2018'] / dfd18_a21_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f21_AC_RT_GRDel['Percnt-2018'] = dfd18_f21_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f21_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a21_AC_RT_GRDel = pd.DataFrame(filtr_21_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f21_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f21.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f21_AC_RT_GRDel['Percent-2019'] = (dfd19_f21_AC_RT_GRDel['ACQ-2019'] / dfd19_f21_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f21_AC_RT_GRDel['Percent-2019'] = dfd19_f21_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f21_AC_RT_GRDel['RET-2019'] = dfd19_a21_AC_RT_GRDel['Total-2019'] - dfd19_f21_AC_RT_GRDel['ACQ-2019']
dfd19_f21_AC_RT_GRDel['Percnt-2019'] = (dfd19_f21_AC_RT_GRDel['RET-2019'] / dfd19_a21_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f21_AC_RT_GRDel['Percnt-2019'] = dfd19_f21_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f21_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a21_AC_RT_GRDel = pd.DataFrame(filtr_21_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f21_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f21.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f21_AC_RT_GRDel['Percent-2021'] = (dfd21_f21_AC_RT_GRDel['ACQ-2021'] / dfd21_f21_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f21_AC_RT_GRDel['Percent-2021'] = dfd21_f21_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f21_AC_RT_GRDel['RET-2021'] = dfd21_a21_AC_RT_GRDel['Total-2021'] - dfd21_f21_AC_RT_GRDel['ACQ-2021']
dfd21_f21_AC_RT_GRDel['Percnt-2021'] = (dfd21_f21_AC_RT_GRDel['RET-2021'] / dfd21_a21_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f21_AC_RT_GRDel['Percnt-2021'] = dfd21_f21_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f21_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a21_AC_RT_GRDel = pd.DataFrame(filtr_21_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f21_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f21.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f21_AC_RT_GRDel['Percent-2022'] = (dfd22_f21_AC_RT_GRDel['ACQ-2022'] / dfd22_f21_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f21_AC_RT_GRDel['Percent-2022'] = dfd22_f21_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f21_AC_RT_GRDel['RET-2022'] = dfd22_a21_AC_RT_GRDel['Total-2022'] - dfd22_f21_AC_RT_GRDel['ACQ-2022']
dfd22_f21_AC_RT_GRDel['Percnt-2022'] = (dfd22_f21_AC_RT_GRDel['RET-2022'] / dfd22_a21_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f21_AC_RT_GRDel['Percnt-2022'] = dfd22_f21_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f21_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a21_AC_RT_GRDel = pd.DataFrame(filtr_21_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f21_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f21.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f21_AC_RT_GRDel['Percent-2023'] = (dfd23_f21_AC_RT_GRDel['ACQ-2023'] / dfd23_f21_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f21_AC_RT_GRDel['Percent-2023'] = dfd23_f21_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f21_AC_RT_GRDel['RET-2023'] = dfd23_a21_AC_RT_GRDel['Total-2023'] - dfd23_f21_AC_RT_GRDel['ACQ-2023']
dfd23_f21_AC_RT_GRDel['Percnt-2023'] = (dfd23_f21_AC_RT_GRDel['RET-2023'] / dfd23_a21_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f21_AC_RT_GRDel['Percnt-2023'] = dfd23_f21_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f21_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f21 = pd.DataFrame(pd.merge_ordered(dfd18_a21_AC_RT_GRDel, dfd18_f21_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f21 = pd.DataFrame(pd.merge_ordered(dfd19_a21_AC_RT_GRDel, dfd19_f21_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f21 = pd.DataFrame(pd.merge_ordered(dfd21_a21_AC_RT_GRDel, dfd21_f21_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f21 = pd.DataFrame(pd.merge_ordered(dfd22_a21_AC_RT_GRDel, dfd22_f21_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_21_f21 = pd.DataFrame(pd.merge_ordered(dfd23_a21_AC_RT_GRDel, dfd23_f21_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f21 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f21, df_AC_ET_GRDel_2_f21, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f21 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f21, df_AC_ET_GRDel_3_f21, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f21 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f21, df_AC_ET_GRDel_4_f21, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f21 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f21, df_AC_ET_GRDel_21_f21, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f21 = df_AC_RT_GRDel_M4_f21[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f21 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17, df_AC_RT_GRDel_M4_f18, df_AC_RT_GRDel_M4_f19, df_AC_RT_GRDel_M4_f20,
                               df_AC_RT_GRDel_M4_f21]
Conct_AC_RT_GRDel_f1_f21 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f21)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_21_df17_GRdel = filtr_21_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f21_Revenu_GRDel = pd.DataFrame(filtr_21_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f21_Revenu_GRDel['Percent-2017'] = (dfd17_f21_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f21_Revenu_GRDel['Percent-2017'] = dfd17_f21_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f21_Revenu_GRDel['7DEvolution-2017'] = dfd17_f21_Revenu_GRDel['Total-2017'] - dfd17_f20_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f21_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_21_df18_GRdel = filtr_21_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f21_Revenu_GRDel = pd.DataFrame(filtr_21_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f21_Revenu_GRDel['Percent-2018'] = (dfd18_f21_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f21_Revenu_GRDel['Percent-2018'] = dfd18_f21_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f21_Revenu_GRDel['7DEvolution-2018'] = dfd18_f21_Revenu_GRDel['Total-2018'] - dfd18_f20_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f21_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_21_df19_GRdel = filtr_21_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f21_Revenu_GRDel = pd.DataFrame(filtr_21_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f21_Revenu_GRDel['Percent-2019'] = (dfd19_f21_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f21_Revenu_GRDel['Percent-2019'] = dfd19_f21_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f21_Revenu_GRDel['7DEvolution-2019'] = dfd19_f21_Revenu_GRDel['Total-2019'] - dfd19_f20_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f21_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_21_df21_GRdel = filtr_21_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f21_Revenu_GRDel = pd.DataFrame(filtr_21_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f21_Revenu_GRDel['Percent-2021'] = (dfd21_f21_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f21_Revenu_GRDel['Percent-2021'] = dfd21_f21_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f21_Revenu_GRDel['7DEvolution-2021'] = dfd21_f21_Revenu_GRDel['Total-2021'] - dfd21_f20_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f21_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_21_df22_GRdel = filtr_21_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f21_Revenu_GRDel = pd.DataFrame(filtr_21_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f21_Revenu_GRDel['Percent-2022'] = (dfd22_f21_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f21_Revenu_GRDel['Percent-2022'] = dfd22_f21_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f21_Revenu_GRDel['7DEvolution-2022'] = dfd22_f21_Revenu_GRDel['Total-2022'] - dfd22_f20_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f21_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_21_df23_GRdel = filtr_21_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f21_Revenu_GRDel = pd.DataFrame(filtr_21_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f21_Revenu_GRDel['Percent-2023'] = (dfd23_f21_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f21_Revenu_GRDel['Percent-2023'] = dfd23_f21_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f21_Revenu_GRDel['7DEvolution-2023'] = dfd23_f21_Revenu_GRDel['Total-2023'] - dfd23_f20_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f21_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f21_Revenu_Evlt_GRDel = pd.DataFrame(filtr_21_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f21_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f21_Revenu_GRDel['Total-2023'] - dfd19_f21_Revenu_GRDel['Total-2019'])/ dfd19_f21_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f21_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f21_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f21_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f21 = pd.DataFrame(pd.merge(dfd17_f21_Revenu_GRDel, dfd18_f21_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f21 = pd.DataFrame(pd.merge(dfd19_f21_Revenu_GRDel, dfd21_f21_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f21 = pd.DataFrame(pd.merge(dfd22_f21_Revenu_GRDel, dfd23_f21_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f21 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f21, df_Revenu_GRDel_2_f21, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_21_f21 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f21, df_Revenu_GRDel_3_f21, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f21 = pd.DataFrame(pd.merge(df_Revenu_GRDel_21_f21, dfd23_f21_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f21 = df_Revenu_GRDel_f21[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f21 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17, df_Revenu_GRDel_f18, df_Revenu_GRDel_f19, df_Revenu_GRDel_f20,
                             df_Revenu_GRDel_f21]
Conct_RV_GRDel_f1_f21 = pd.concat(ConcatFra_RV_GRDel_f1_f21)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f21_Profile_count = pd.DataFrame(filtr_21_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f21_Profile_count = dfd17_f21_Profile_count.fillna('Unknown')
dfd17_f21_Profile_count['Percent-2017'] = (dfd17_f21_Profile_count['Total-2017'] / dfd17_f21_Profile_count['Total-2017'].sum()) * 100
dfd17_f21_Profile_count['Percent-2017'] = dfd17_f21_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f21_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f21_Profile_count = pd.DataFrame(filtr_21_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f21_Profile_count = dfd18_f21_Profile_count.fillna('Unknown')
dfd18_f21_Profile_count['Percent-2018'] = (dfd18_f21_Profile_count['Total-2018'] / dfd18_f21_Profile_count['Total-2018'].sum()) * 100
dfd18_f21_Profile_count['Percent-2018'] = dfd18_f21_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f21_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f21_Profile_count = pd.DataFrame(filtr_21_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f21_Profile_count = dfd19_f21_Profile_count.fillna('Unknown')
dfd19_f21_Profile_count['Percent-2019'] = (dfd19_f21_Profile_count['Total-2019'] / dfd19_f21_Profile_count['Total-2019'].sum()) * 100
dfd19_f21_Profile_count['Percent-2019'] = dfd19_f21_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f21_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f21_Profile_count = pd.DataFrame(filtr_21_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f21_Profile_count = dfd21_f21_Profile_count.fillna('Unknown')
dfd21_f21_Profile_count['Percent-2021'] = (dfd21_f21_Profile_count['Total-2021'] / dfd21_f21_Profile_count['Total-2021'].sum()) * 100
dfd21_f21_Profile_count['Percent-2021'] = dfd21_f21_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f21_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f21_Profile_count = pd.DataFrame(filtr_21_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f21_Profile_count = dfd22_f21_Profile_count.fillna('Unknown')
dfd22_f21_Profile_count['Percent-2022'] = (dfd22_f21_Profile_count['Total-2022'] / dfd22_f21_Profile_count['Total-2022'].sum()) * 100
dfd22_f21_Profile_count['Percent-2022'] = dfd22_f21_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f21_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_Profile_count = pd.DataFrame(filtr_21_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f21_Profile_count = dfd23_f21_Profile_count.fillna('Unknown')
dfd23_f21_Profile_count['Percent-2023'] = (dfd23_f21_Profile_count['Total-2023'] / dfd23_f21_Profile_count['Total-2023'].sum()) * 100
dfd23_f21_Profile_count['Percent-2023'] = dfd23_f21_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f21_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f21 = pd.DataFrame(pd.merge(dfd17_f21_Profile_count, dfd18_f21_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f21 = pd.DataFrame(pd.merge(dfd19_f21_Profile_count, dfd21_f21_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f21 = pd.DataFrame(pd.merge(dfd22_f21_Profile_count, dfd23_f21_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f21 = pd.DataFrame(pd.merge(df_Profile_Count_1_f21, df_Profile_Count_2_f21, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f21 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f21, df_Profile_Count_3_f21, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f21 = df_Profile_Count_m2_f21.append(df_Profile_Count_m2_f21.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f21['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f21_Pass_count = pd.DataFrame(filtr_21_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f21_Pass_count = dfd17_f21_Pass_count.fillna('Unknown')
dfd17_f21_Pass_count['Percent-2017'] = (dfd17_f21_Pass_count['Total-2017'] / dfd17_f21_Pass_count['Total-2017'].sum()) * 100
dfd17_f21_Pass_count['Percent-2017'] = dfd17_f21_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f21_Pass_count = pd.DataFrame(filtr_21_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f21_Pass_count = dfd18_f21_Pass_count.fillna('Unknown')
dfd18_f21_Pass_count['Percent-2018'] = (dfd18_f21_Pass_count['Total-2018'] / dfd18_f21_Pass_count['Total-2018'].sum()) * 100
dfd18_f21_Pass_count['Percent-2018'] = dfd18_f21_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f21_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f21_Pass_count = pd.DataFrame(filtr_21_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f21_Pass_count = dfd19_f21_Pass_count.fillna('Unknown')
dfd19_f21_Pass_count['Percent-2019'] = (dfd19_f21_Pass_count['Total-2019'] / dfd19_f21_Pass_count['Total-2019'].sum()) * 100
dfd19_f21_Pass_count['Percent-2019'] = dfd19_f21_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f21_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f21_Pass_count = pd.DataFrame(filtr_21_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f21_Pass_count = dfd21_f21_Pass_count.fillna('Unknown')
dfd21_f21_Pass_count['Percent-2021'] = (dfd21_f21_Pass_count['Total-2021'] / dfd21_f21_Pass_count['Total-2021'].sum()) * 100
dfd21_f21_Pass_count['Percent-2021'] = dfd21_f21_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f21_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f21_Pass_count = pd.DataFrame(filtr_21_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f21_Pass_count = dfd22_f21_Pass_count.fillna('Unknown')
dfd22_f21_Pass_count['Percent-2022'] = (dfd22_f21_Pass_count['Total-2022'] / dfd22_f21_Pass_count['Total-2022'].sum()) * 100
dfd22_f21_Pass_count['Percent-2022'] = dfd22_f21_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f21_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_Pass_count = pd.DataFrame(filtr_21_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f21_Pass_count = dfd23_f21_Pass_count.fillna('Unknown')
dfd23_f21_Pass_count['Percent-2023'] = (dfd23_f21_Pass_count['Total-2023'] / dfd23_f21_Pass_count['Total-2023'].sum()) * 100
dfd23_f21_Pass_count['Percent-2023'] = dfd23_f21_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f21_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f21 = pd.DataFrame(pd.merge(dfd17_f21_Pass_count, dfd18_f21_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f21 = pd.DataFrame(pd.merge(dfd19_f21_Pass_count, dfd21_f21_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f21 = pd.DataFrame(pd.merge(dfd22_f21_Pass_count, dfd23_f21_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f21 = pd.DataFrame(pd.merge(df_Pass_Count_1_f21, df_Pass_Count_2_f21, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f21 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f21, df_Pass_Count_3_f21, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f21 = df_Pass_Count_m2_f21.append(df_Pass_Count_m2_f21.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f21['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f21_Attendees_Country_count = pd.DataFrame(filtr_21_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f21_Attendees_Country_count = dfd17_f21_Attendees_Country_count.fillna('Unknown')
dfd17_f21_Attendees_Country_count['Percent-2017'] = (dfd17_f21_Attendees_Country_count['Total-2017'] / dfd17_f21_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f21_Attendees_Country_count['Percent-2017'] = dfd17_f21_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f21_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f21_Attendees_Country_count = pd.DataFrame(filtr_21_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f21_Attendees_Country_count = dfd18_f21_Attendees_Country_count.fillna('Unknown')
dfd18_f21_Attendees_Country_count['Percent-2018'] = (dfd18_f21_Attendees_Country_count['Total-2018'] / dfd18_f21_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f21_Attendees_Country_count['Percent-2018'] = dfd18_f21_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f21_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f21_Attendees_Country_count = pd.DataFrame(filtr_21_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f21_Attendees_Country_count = dfd19_f21_Attendees_Country_count.fillna('Unknown')
dfd19_f21_Attendees_Country_count['Percent-2019'] = (dfd19_f21_Attendees_Country_count['Total-2019'] / dfd19_f21_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f21_Attendees_Country_count['Percent-2019'] = dfd19_f21_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f21_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f21_Attendees_Country_count = pd.DataFrame(filtr_21_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f21_Attendees_Country_count = dfd21_f21_Attendees_Country_count.fillna('Unknown')
dfd21_f21_Attendees_Country_count['Percent-2021'] = (dfd21_f21_Attendees_Country_count['Total-2021'] / dfd21_f21_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f21_Attendees_Country_count['Percent-2021'] = dfd21_f21_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f21_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f21_Attendees_Country_count = pd.DataFrame(filtr_21_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f21_Attendees_Country_count = dfd22_f21_Attendees_Country_count.fillna('Unknown')
dfd22_f21_Attendees_Country_count['Percent-2022'] = (dfd22_f21_Attendees_Country_count['Total-2022'] / dfd22_f21_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f21_Attendees_Country_count['Percent-2022'] = dfd22_f21_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f21_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_Attendees_Country_count = pd.DataFrame(filtr_21_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f21_Attendees_Country_count = dfd23_f21_Attendees_Country_count.fillna('Unknown')
dfd23_f21_Attendees_Country_count['Percent-2023'] = (dfd23_f21_Attendees_Country_count['Total-2023'] / dfd23_f21_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f21_Attendees_Country_count['Percent-2023'] = dfd23_f21_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f21_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f21 = pd.DataFrame(pd.merge(dfd17_f21_Attendees_Country_count, dfd18_f21_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f21 = pd.DataFrame(pd.merge(dfd19_f21_Attendees_Country_count, dfd21_f21_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f21 = pd.DataFrame(pd.merge(dfd22_f21_Attendees_Country_count, dfd23_f21_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f21 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f21, dfAttendees_Country_Count_2_f21, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f21.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f21 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f21, dfAttendees_Country_Count_3_f21, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f21 = dfAttendees_Country_Count_m2_f21.append(dfAttendees_Country_Count_m2_f21.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f21['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f21_ATTENDEES_AREAS_count = pd.DataFrame(filtr_21_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f21_ATTENDEES_AREAS_count = dfd17_f21_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f21_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f21_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f21_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f21_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f21_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f21_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f21_ATTENDEES_AREAS_count = pd.DataFrame(filtr_21_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f21_ATTENDEES_AREAS_count = dfd18_f21_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f21_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f21_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f21_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f21_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f21_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f21_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f21_ATTENDEES_AREAS_count = pd.DataFrame(filtr_21_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f21_ATTENDEES_AREAS_count = dfd19_f21_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f21_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f21_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f21_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f21_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f21_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f21_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f21_ATTENDEES_AREAS_count = pd.DataFrame(filtr_21_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f21_ATTENDEES_AREAS_count = dfd21_f21_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f21_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f21_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f21_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f21_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f21_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f21_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f21_ATTENDEES_AREAS_count = pd.DataFrame(filtr_21_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f21_ATTENDEES_AREAS_count = dfd22_f21_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f21_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f21_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f21_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f21_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f21_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f21_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_ATTENDEES_AREAS_count = pd.DataFrame(filtr_21_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f21_ATTENDEES_AREAS_count = dfd23_f21_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f21_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f21_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f21_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f21_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f21_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f21_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f21 = pd.DataFrame(pd.merge(dfd17_f21_ATTENDEES_AREAS_count, dfd18_f21_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f21 = pd.DataFrame(pd.merge(dfd19_f21_ATTENDEES_AREAS_count, dfd21_f21_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f21 = pd.DataFrame(pd.merge(dfd22_f21_ATTENDEES_AREAS_count, dfd23_f21_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f21.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f21 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f21, df_ATTENDEES_AREAS_count_2_f21, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f21 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f21, df_ATTENDEES_AREAS_count_3_f21, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f21 = df_ATTENDEES_AREAS_count_m2_f21.append(df_ATTENDEES_AREAS_count_m2_f21.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f21['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f21_Attendees_Specialty_count = pd.DataFrame(filtr_21_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f21_Attendees_Specialty_count = dfd17_f21_Attendees_Specialty_count.fillna('Unknown')
dfd17_f21_Attendees_Specialty_count['Percent-2017'] = (dfd17_f21_Attendees_Specialty_count['Total-2017'] / dfd17_f21_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f21_Attendees_Specialty_count['Percent-2017'] = dfd17_f21_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f21_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f21_Attendees_Specialty_count = pd.DataFrame(filtr_21_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f21_Attendees_Specialty_count = dfd18_f21_Attendees_Specialty_count.fillna('Unknown')
dfd18_f21_Attendees_Specialty_count['Percent-2018'] = (dfd18_f21_Attendees_Specialty_count['Total-2018'] / dfd18_f21_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f21_Attendees_Specialty_count['Percent-2018'] = dfd18_f21_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f21_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f21_Attendees_Specialty_count = pd.DataFrame(filtr_21_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f21_Attendees_Specialty_count = dfd19_f21_Attendees_Specialty_count.fillna('Unknown')
dfd19_f21_Attendees_Specialty_count['Percent-2019'] = (dfd19_f21_Attendees_Specialty_count['Total-2019'] / dfd19_f21_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f21_Attendees_Specialty_count['Percent-2019'] = dfd19_f21_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f21_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f21_Attendees_Specialty_count = pd.DataFrame(filtr_21_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f21_Attendees_Specialty_count = dfd21_f21_Attendees_Specialty_count.fillna('Unknown')
dfd21_f21_Attendees_Specialty_count['Percent-2021'] = (dfd21_f21_Attendees_Specialty_count['Total-2021'] / dfd21_f21_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f21_Attendees_Specialty_count['Percent-2021'] = dfd21_f21_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f21_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f21_Attendees_Specialty_count = pd.DataFrame(filtr_21_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f21_Attendees_Specialty_count = dfd22_f21_Attendees_Specialty_count.fillna('Unknown')
dfd22_f21_Attendees_Specialty_count['Percent-2022'] = (dfd22_f21_Attendees_Specialty_count['Total-2022'] / dfd22_f21_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f21_Attendees_Specialty_count['Percent-2022'] = dfd22_f21_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f21_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f21_Attendees_Specialty_count = pd.DataFrame(filtr_21_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f21_Attendees_Specialty_count = dfd23_f21_Attendees_Specialty_count.fillna('Unknown')
dfd23_f21_Attendees_Specialty_count['Percent-2023'] = (dfd23_f21_Attendees_Specialty_count['Total-2023'] / dfd23_f21_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f21_Attendees_Specialty_count['Percent-2023'] = dfd23_f21_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f21_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f21 = pd.DataFrame(pd.merge(dfd17_f21_Attendees_Specialty_count, dfd18_f21_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f21 = pd.DataFrame(pd.merge(dfd19_f21_Attendees_Specialty_count, dfd21_f21_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f21 = pd.DataFrame(pd.merge(dfd22_f21_Attendees_Specialty_count, dfd23_f21_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f21 = pd.DataFrame(pd.merge(df_Specialty_count_1_f21, df_Specialty_count_2_f21, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f21.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f21 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f21, df_Specialty_count_3_f21, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f21 = df_Specialty_count_m2_f21.append(df_Specialty_count_m2_f21.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f21['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f21['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f21['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f21 = Concat_Registrations_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f21['Total-2017'] = Concat_Registrations_count_f1_f21['Total-2017'].astype(int)
Concat_Registrations_count_f1_f21['Percent-2017'] = Concat_Registrations_count_f1_f21['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f21['7DEvolution-2017'] = Concat_Registrations_count_f1_f21['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f21['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f21['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f21 = Concat_Registrations_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f21['Total-2018'] = Concat_Registrations_count_f1_f21['Total-2018'].astype(int)
Concat_Registrations_count_f1_f21['Percent-2018'] = Concat_Registrations_count_f1_f21['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f21['7DEvolution-2018'] = Concat_Registrations_count_f1_f21['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f21['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f21['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f21 = Concat_Registrations_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f21['Total-2019'] = Concat_Registrations_count_f1_f21['Total-2019'].astype(int)
Concat_Registrations_count_f1_f21['Percent-2019'] = Concat_Registrations_count_f1_f21['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f21['7DEvolution-2019'] = Concat_Registrations_count_f1_f21['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f21['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f21['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f21 = Concat_Registrations_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f21['Total-2021'] = Concat_Registrations_count_f1_f21['Total-2021'].astype(int)
Concat_Registrations_count_f1_f21['Percent-2021'] = Concat_Registrations_count_f1_f21['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f21['7DEvolution-2021'] = Concat_Registrations_count_f1_f21['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f21['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f21['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f21 = Concat_Registrations_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f21['Total-2022'] = Concat_Registrations_count_f1_f21['Total-2022'].astype(int)
Concat_Registrations_count_f1_f21['Percent-2022'] = Concat_Registrations_count_f1_f21['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f21['7DEvolution-2022'] = Concat_Registrations_count_f1_f21['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f21['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f21['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f21 = Concat_Registrations_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f21['Total-2023'] = Concat_Registrations_count_f1_f21['Total-2023'].astype(int)
Concat_Registrations_count_f1_f21['Percent-2023'] = Concat_Registrations_count_f1_f21['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f21['7DEvolution-2023'] = Concat_Registrations_count_f1_f21['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f21['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f21['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f21 = Concat_ACQRET_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f21['Total-2018'] = Concat_ACQRET_count_f1_f21['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f21['ACQ-2018'] = Concat_ACQRET_count_f1_f21['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f21['Percent-2018'] = Concat_ACQRET_count_f1_f21['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f21['RET-2018'] = Concat_ACQRET_count_f1_f21['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f21['Percnt-2018'] = Concat_ACQRET_count_f1_f21['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f21['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f21['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f21 = Concat_ACQRET_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f21['Total-2019'] = Concat_ACQRET_count_f1_f21['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f21['ACQ-2019'] = Concat_ACQRET_count_f1_f21['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f21['Percent-2019'] = Concat_ACQRET_count_f1_f21['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f21['RET-2019'] = Concat_ACQRET_count_f1_f21['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f21['Percnt-2019'] = Concat_ACQRET_count_f1_f21['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f21['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f21['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f21 = Concat_ACQRET_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f21['Total-2021'] = Concat_ACQRET_count_f1_f21['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f21['ACQ-2021'] = Concat_ACQRET_count_f1_f21['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f21['Percent-2021'] = Concat_ACQRET_count_f1_f21['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f21['RET-2021'] = Concat_ACQRET_count_f1_f21['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f21['Percnt-2021'] = Concat_ACQRET_count_f1_f21['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f21['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f21['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f21 = Concat_ACQRET_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f21['Total-2022'] = Concat_ACQRET_count_f1_f21['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f21['ACQ-2022'] = Concat_ACQRET_count_f1_f21['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f21['Percent-2022'] = Concat_ACQRET_count_f1_f21['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f21['RET-2022'] = Concat_ACQRET_count_f1_f21['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f21['Percnt-2022'] = Concat_ACQRET_count_f1_f21['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f21['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f21['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f21 = Concat_ACQRET_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f21['Total-2023'] = Concat_ACQRET_count_f1_f21['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f21['ACQ-2023'] = Concat_ACQRET_count_f1_f21['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f21['Percent-2023'] = Concat_ACQRET_count_f1_f21['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f21['RET-2023'] = Concat_ACQRET_count_f1_f21['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f21['Percnt-2023'] = Concat_ACQRET_count_f1_f21['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f21['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f21['Total-2017'],errors='coerce')
Concat_REV_count_f1_f21 = Concat_REV_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f21['Total-2017'] = Concat_REV_count_f1_f21['Total-2017'].astype(int)
Concat_REV_count_f1_f21['Percent-2017'] = Concat_REV_count_f1_f21['Percent-2017'].astype(float)
Concat_REV_count_f1_f21['7DEvolution-2017'] = Concat_REV_count_f1_f21['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f21['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f21['Total-2018'],errors='coerce')
Concat_REV_count_f1_f21 = Concat_REV_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f21['Total-2018'] = Concat_REV_count_f1_f21['Total-2018'].astype(int)
Concat_REV_count_f1_f21['Percent-2018'] = Concat_REV_count_f1_f21['Percent-2018'].astype(float)
Concat_REV_count_f1_f21['7DEvolution-2018'] = Concat_REV_count_f1_f21['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f21['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f21['Total-2019'],errors='coerce')
Concat_REV_count_f1_f21 = Concat_REV_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f21['Total-2019'] = Concat_REV_count_f1_f21['Total-2019'].astype(int)
Concat_REV_count_f1_f21['Percent-2019'] = Concat_REV_count_f1_f21['Percent-2019'].astype(float)
Concat_REV_count_f1_f21['7DEvolution-2019'] = Concat_REV_count_f1_f21['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f21['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f21['Total-2022'],errors='coerce')
Concat_REV_count_f1_f21 = Concat_REV_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f21['Total-2022'] = Concat_REV_count_f1_f21['Total-2022'].astype(int)
Concat_REV_count_f1_f21['Percent-2022'] = Concat_REV_count_f1_f21['Percent-2022'].astype(float)
Concat_REV_count_f1_f21['7DEvolution-2022'] = Concat_REV_count_f1_f21['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f21['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f21['Total-2023'],errors='coerce')
Concat_REV_count_f1_f21 = Concat_REV_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f21['Total-2023'] = Concat_REV_count_f1_f21['Total-2023'].astype(int)
Concat_REV_count_f1_f21['Percent-2023'] = Concat_REV_count_f1_f21['Percent-2023'].astype(float)
Concat_REV_count_f1_f21['7DEvolution-2023'] = Concat_REV_count_f1_f21['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f21['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f21['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f21 = Concat_RegGRDel_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f21['Total-2017'] = Concat_RegGRDel_count_f1_f21['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f21['Percent-2017'] = Concat_RegGRDel_count_f1_f21['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f21['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f21['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f21['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f21['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f21 = Concat_RegGRDel_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f21['Total-2018'] = Concat_RegGRDel_count_f1_f21['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f21['Percent-2018'] = Concat_RegGRDel_count_f1_f21['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f21['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f21['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f21['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f21['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f21 = Concat_RegGRDel_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f21['Total-2019'] = Concat_RegGRDel_count_f1_f21['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f21['Percent-2019'] = Concat_RegGRDel_count_f1_f21['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f21['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f21['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f21['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f21['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f21 = Concat_RegGRDel_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f21['Total-2021'] = Concat_RegGRDel_count_f1_f21['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f21['Percent-2021'] = Concat_RegGRDel_count_f1_f21['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f21['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f21['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f21['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f21['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f21 = Concat_RegGRDel_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f21['Total-2022'] = Concat_RegGRDel_count_f1_f21['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f21['Percent-2022'] = Concat_RegGRDel_count_f1_f21['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f21['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f21['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f21['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f21['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f21 = Concat_RegGRDel_count_f1_f21.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f21['Total-2023'] = Concat_RegGRDel_count_f1_f21['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f21['Percent-2023'] = Concat_RegGRDel_count_f1_f21['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f21['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f21['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f21['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f21['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f21 = Conct_AC_RT_GRDel_f1_f21.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f21['Total-2018'] = Conct_AC_RT_GRDel_f1_f21['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f21['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f21['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f21['Percent-2018'] = Conct_AC_RT_GRDel_f1_f21['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f21['RET-2018'] = Conct_AC_RT_GRDel_f1_f21['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f21['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f21['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f21['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f21['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f21 = Conct_AC_RT_GRDel_f1_f21.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f21['Total-2019'] = Conct_AC_RT_GRDel_f1_f21['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f21['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f21['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f21['Percent-2019'] = Conct_AC_RT_GRDel_f1_f21['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f21['RET-2019'] = Conct_AC_RT_GRDel_f1_f21['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f21['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f21['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f21['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f21['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f21 = Conct_AC_RT_GRDel_f1_f21.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f21['Total-2021'] = Conct_AC_RT_GRDel_f1_f21['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f21['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f21['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f21['Percent-2021'] = Conct_AC_RT_GRDel_f1_f21['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f21['RET-2021'] = Conct_AC_RT_GRDel_f1_f21['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f21['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f21['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f21['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f21['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f21 = Conct_AC_RT_GRDel_f1_f21.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f21['Total-2022'] = Conct_AC_RT_GRDel_f1_f21['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f21['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f21['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f21['Percent-2022'] = Conct_AC_RT_GRDel_f1_f21['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f21['RET-2022'] = Conct_AC_RT_GRDel_f1_f21['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f21['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f21['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f21['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f21['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f21 = Conct_AC_RT_GRDel_f1_f21.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f21['Total-2023'] = Conct_AC_RT_GRDel_f1_f21['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f21['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f21['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f21['Percent-2023'] = Conct_AC_RT_GRDel_f1_f21['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f21['RET-2023'] = Conct_AC_RT_GRDel_f1_f21['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f21['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f21['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f21['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f21['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f21 = Conct_RV_GRDel_f1_f21.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f21['Total-2017'] = Conct_RV_GRDel_f1_f21['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f21['Percent-2017'] = Conct_RV_GRDel_f1_f21['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f21['7DEvolution-2017'] = Conct_RV_GRDel_f1_f21['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f21['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f21['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f21 = Conct_RV_GRDel_f1_f21.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f21['Total-2018'] = Conct_RV_GRDel_f1_f21['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f21['Percent-2018'] = Conct_RV_GRDel_f1_f21['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f21['7DEvolution-2018'] = Conct_RV_GRDel_f1_f21['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f21['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f21['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f21 = Conct_RV_GRDel_f1_f21.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f21['Total-2019'] = Conct_RV_GRDel_f1_f21['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f21['Percent-2019'] = Conct_RV_GRDel_f1_f21['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f21['7DEvolution-2019'] = Conct_RV_GRDel_f1_f21['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f21['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f21['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f21 = Conct_RV_GRDel_f1_f21.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f21['Total-2022'] = Conct_RV_GRDel_f1_f21['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f21['Percent-2022'] = Conct_RV_GRDel_f1_f21['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f21['7DEvolution-2022'] = Conct_RV_GRDel_f1_f21['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f21['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f21['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f21 = Conct_RV_GRDel_f1_f21.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f21['Total-2023'] = Conct_RV_GRDel_f1_f21['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f21['Percent-2023'] = Conct_RV_GRDel_f1_f21['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f21['7DEvolution-2023'] = Conct_RV_GRDel_f1_f21['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f21['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f21['Total-2017'],errors='coerce')
df_Profile_Count_m2_f21 = df_Profile_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f21['Total-2017'] = df_Profile_Count_m2_f21['Total-2017'].astype(int)
df_Profile_Count_m2_f21['Percent-2017'] = df_Profile_Count_m2_f21['Percent-2017'].astype(float)

df_Profile_Count_m2_f21['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f21['Total-2018'],errors='coerce')
df_Profile_Count_m2_f21 = df_Profile_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f21['Total-2018'] = df_Profile_Count_m2_f21['Total-2018'].astype(int)
df_Profile_Count_m2_f21['Percent-2018'] = df_Profile_Count_m2_f21['Percent-2018'].astype(float)

df_Profile_Count_m2_f21['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f21['Total-2019'],errors='coerce')
df_Profile_Count_m2_f21 = df_Profile_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f21['Total-2019'] = df_Profile_Count_m2_f21['Total-2019'].astype(int)
df_Profile_Count_m2_f21['Percent-2019'] = df_Profile_Count_m2_f21['Percent-2019'].astype(float)

df_Profile_Count_m2_f21['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f21['Total-2021'],errors='coerce')
df_Profile_Count_m2_f21 = df_Profile_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f21['Total-2021'] = df_Profile_Count_m2_f21['Total-2021'].astype(int)
df_Profile_Count_m2_f21['Percent-2021'] = df_Profile_Count_m2_f21['Percent-2021'].astype(float)

df_Profile_Count_m2_f21['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f21['Total-2022'],errors='coerce')
df_Profile_Count_m2_f21 = df_Profile_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f21['Total-2022'] = df_Profile_Count_m2_f21['Total-2022'].astype(int)
df_Profile_Count_m2_f21['Percent-2022'] = df_Profile_Count_m2_f21['Percent-2022'].astype(float)

df_Profile_Count_m2_f21['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f21['Total-2023'],errors='coerce')
df_Profile_Count_m2_f21 = df_Profile_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f21['Total-2023'] = df_Profile_Count_m2_f21['Total-2023'].astype(int)
df_Profile_Count_m2_f21['Percent-2023'] = df_Profile_Count_m2_f21['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f21['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f21['Total-2017'],errors='coerce')
df_Pass_Count_m2_f21 = df_Pass_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f21['Total-2017'] = df_Pass_Count_m2_f21['Total-2017'].astype(int)
df_Pass_Count_m2_f21['Percent-2017'] = df_Pass_Count_m2_f21['Percent-2017'].astype(float)

df_Pass_Count_m2_f21['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f21['Total-2018'],errors='coerce')
df_Pass_Count_m2_f21 = df_Pass_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f21['Total-2018'] = df_Pass_Count_m2_f21['Total-2018'].astype(int)
df_Pass_Count_m2_f21['Percent-2018'] = df_Pass_Count_m2_f21['Percent-2018'].astype(float)

df_Pass_Count_m2_f21['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f21['Total-2019'],errors='coerce')
df_Pass_Count_m2_f21 = df_Pass_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f21['Total-2019'] = df_Pass_Count_m2_f21['Total-2019'].astype(int)
df_Pass_Count_m2_f21['Percent-2019'] = df_Pass_Count_m2_f21['Percent-2019'].astype(float)

df_Pass_Count_m2_f21['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f21['Total-2021'],errors='coerce')
df_Pass_Count_m2_f21 = df_Pass_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f21['Total-2021'] = df_Pass_Count_m2_f21['Total-2021'].astype(int)
df_Pass_Count_m2_f21['Percent-2021'] = df_Pass_Count_m2_f21['Percent-2021'].astype(float)

df_Pass_Count_m2_f21['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f21['Total-2022'],errors='coerce')
df_Pass_Count_m2_f21 = df_Pass_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f21['Total-2022'] = df_Pass_Count_m2_f21['Total-2022'].astype(int)
df_Pass_Count_m2_f21['Percent-2022'] = df_Pass_Count_m2_f21['Percent-2022'].astype(float)

df_Pass_Count_m2_f21['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f21['Total-2023'],errors='coerce')
df_Pass_Count_m2_f21 = df_Pass_Count_m2_f21.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f21['Total-2023'] = df_Pass_Count_m2_f21['Total-2023'].astype(int)
df_Pass_Count_m2_f21['Percent-2023'] = df_Pass_Count_m2_f21['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f21['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f21['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f21 = dfAttendees_Country_Count_m2_f21.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f21['Total-2017'] = dfAttendees_Country_Count_m2_f21['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f21['Percent-2017'] = dfAttendees_Country_Count_m2_f21['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f21['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f21['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f21 = dfAttendees_Country_Count_m2_f21.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f21['Total-2018'] = dfAttendees_Country_Count_m2_f21['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f21['Percent-2018'] = dfAttendees_Country_Count_m2_f21['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f21['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f21['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f21 = dfAttendees_Country_Count_m2_f21.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f21['Total-2019'] = dfAttendees_Country_Count_m2_f21['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f21['Percent-2019'] = dfAttendees_Country_Count_m2_f21['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f21['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f21['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f21 = dfAttendees_Country_Count_m2_f21.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f21['Total-2021'] = dfAttendees_Country_Count_m2_f21['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f21['Percent-2021'] = dfAttendees_Country_Count_m2_f21['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f21['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f21['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f21 = dfAttendees_Country_Count_m2_f21.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f21['Total-2022'] = dfAttendees_Country_Count_m2_f21['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f21['Percent-2022'] = dfAttendees_Country_Count_m2_f21['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f21['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f21['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f21 = dfAttendees_Country_Count_m2_f21.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f21['Total-2023'] = dfAttendees_Country_Count_m2_f21['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f21['Percent-2023'] = dfAttendees_Country_Count_m2_f21['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f21['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f21['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f21 = df_ATTENDEES_AREAS_count_m2_f21.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f21['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f21['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f21['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f21['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f21['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f21['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f21 = df_ATTENDEES_AREAS_count_m2_f21.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f21['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f21['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f21['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f21['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f21['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f21['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f21 = df_ATTENDEES_AREAS_count_m2_f21.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f21['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f21['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f21['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f21['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f21['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f21['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f21 = df_ATTENDEES_AREAS_count_m2_f21.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f21['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f21['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f21['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f21['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f21['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f21['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f21 = df_ATTENDEES_AREAS_count_m2_f21.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f21['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f21['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f21['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f21['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f21['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f21['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f21 = df_ATTENDEES_AREAS_count_m2_f21.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f21['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f21['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f21['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f21['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f21['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f21['Total-2017'],errors='coerce')
df_Specialty_count_m2_f21 = df_Specialty_count_m2_f21.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f21['Total-2017'] = df_Specialty_count_m2_f21['Total-2017'].astype(int)
df_Specialty_count_m2_f21['Percent-2017'] = df_Specialty_count_m2_f21['Percent-2017'].astype(float)

df_Specialty_count_m2_f21['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f21['Total-2018'],errors='coerce')
df_Specialty_count_m2_f21 = df_Specialty_count_m2_f21.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f21['Total-2018'] = df_Specialty_count_m2_f21['Total-2018'].astype(int)
df_Specialty_count_m2_f21['Percent-2018'] = df_Specialty_count_m2_f21['Percent-2018'].astype(float)

df_Specialty_count_m2_f21['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f21['Total-2019'],errors='coerce')
df_Specialty_count_m2_f21 = df_Specialty_count_m2_f21.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f21['Total-2019'] = df_Specialty_count_m2_f21['Total-2019'].astype(int)
df_Specialty_count_m2_f21['Percent-2019'] = df_Specialty_count_m2_f21['Percent-2019'].astype(float)

df_Specialty_count_m2_f21['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f21['Total-2021'],errors='coerce')
df_Specialty_count_m2_f21 = df_Specialty_count_m2_f21.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f21['Total-2021'] = df_Specialty_count_m2_f21['Total-2021'].astype(int)
df_Specialty_count_m2_f21['Percent-2021'] = df_Specialty_count_m2_f21['Percent-2021'].astype(float)

df_Specialty_count_m2_f21['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f21['Total-2022'],errors='coerce')
df_Specialty_count_m2_f21 = df_Specialty_count_m2_f21.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f21['Total-2022'] = df_Specialty_count_m2_f21['Total-2022'].astype(int)
df_Specialty_count_m2_f21['Percent-2022'] = df_Specialty_count_m2_f21['Percent-2022'].astype(float)

df_Specialty_count_m2_f21['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f21['Total-2023'],errors='coerce')
df_Specialty_count_m2_f21 = df_Specialty_count_m2_f21.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f21['Total-2023'] = df_Specialty_count_m2_f21['Total-2023'].astype(int)
df_Specialty_count_m2_f21['Percent-2023'] = df_Specialty_count_m2_f21['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f21.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f21.dtypes)
#print(df_Specialty_count_m2_f21.dtypes)

#print(dfAttendees_Country_Count_m2_f21.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f21.dtypes)
#print(df_Specialty_count_m2_f21.dtypes)

# EXCEL FILE
writerf21 = pd.ExcelWriter(outputExcelFile_f21, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f21.to_excel\
    (writerf21, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f21.to_excel\
    (writerf21, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f21.to_excel\
    (writerf21, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f21.to_excel\
    (writerf21, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f21.to_excel\
    (writerf21, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f21.to_excel\
    (writerf21, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f21.to_excel\
    (writerf21, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f21.to_excel\
    (writerf21, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f21.to_excel\
    (writerf21, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f21.to_excel\
    (writerf21, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f21.to_excel\
    (writerf21, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf21.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f21)

workbook.save(outputExcelFile_f21)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 49 days**********************************************')
print('************************************End of 49 days**********************************************')
print('************************************End of 49 days**********************************************')
print('************************************End of 49 days**********************************************')
print('************************************End of 49 days**********************************************')
print('************************************End of 49 days**********************************************')
print('************************************End of 49 days**********************************************')
print('************************************End of 49 days**********************************************')
print('************************************End of 49 days**********************************************')

#unit 1
#Total Number of Registrations
dfd17_f22_Registrations_count = pd.DataFrame(filter_22_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f22_Registrations_count = dfd17_f22_Registrations_count.fillna('Unknown')
dfd17_f22_Registrations_count['Percent-2017'] = (dfd17_f22_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f22_Registrations_count['Percent-2017'] = dfd17_f22_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f22_Registrations_count['7DEvolution-2017'] = dfd17_f22_Registrations_count['Total-2017'] - dfd17_f21_Registrations_count['Total-2017']
#print(tab(dfd17_f22_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f22_Registrations_count = pd.DataFrame(filter_22_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f22_Registrations_count = dfd18_f22_Registrations_count.fillna('Unknown')
dfd18_f22_Registrations_count['Percent-2018'] = (dfd18_f22_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f22_Registrations_count['Percent-2018'] = dfd18_f22_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f22_Registrations_count['7DEvolution-2018'] = dfd18_f22_Registrations_count['Total-2018'] - dfd18_f21_Registrations_count['Total-2018']
#print(tab(dfd18_f22_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f22_Registrations_count = pd.DataFrame(filter_22_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f22_Registrations_count = dfd19_f22_Registrations_count.fillna('Unknown')
dfd19_f22_Registrations_count['Percent-2019'] = (dfd19_f22_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f22_Registrations_count['Percent-2019'] = dfd19_f22_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f22_Registrations_count['7DEvolution-2019'] = dfd19_f22_Registrations_count['Total-2019'] - dfd19_f21_Registrations_count['Total-2019']
#print(tab(dfd19_f22_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f22_Registrations_count = pd.DataFrame(filter_22_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f22_Registrations_count = dfd21_f22_Registrations_count.fillna('Unknown')
dfd21_f22_Registrations_count['Percent-2021'] = (dfd21_f22_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f22_Registrations_count['Percent-2021'] = dfd21_f22_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f22_Registrations_count['7DEvolution-2021'] = dfd21_f22_Registrations_count['Total-2021'] - dfd21_f21_Registrations_count['Total-2021']
#print(tab(dfd21_f22_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f22_Registrations_count = pd.DataFrame(filter_22_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f22_Registrations_count = dfd22_f22_Registrations_count.fillna('Unknown')
dfd22_f22_Registrations_count['Percent-2022'] = (dfd22_f22_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f22_Registrations_count['Percent-2022'] = dfd22_f22_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f22_Registrations_count['7DEvolution-2022'] = dfd22_f22_Registrations_count['Total-2022'] - dfd22_f21_Registrations_count['Total-2022']
#print(tab(dfd22_f22_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_Registrations_count = pd.DataFrame(filter_22_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f22_Registrations_count = dfd23_f22_Registrations_count.fillna('Unknown')
dfd23_f22_Registrations_count['Percent-2023'] = (dfd23_f22_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f22_Registrations_count['Percent-2023'] = dfd23_f22_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f22_Registrations_count['7DEvolution-2023'] = dfd23_f22_Registrations_count['Total-2023'] - dfd23_f21_Registrations_count['Total-2023']
#print(tab(dfd23_f22_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f22_RegistrationsEvolution_count = pd.DataFrame(filter_22_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f22_RegistrationsEvolution_count = dfd23_f22_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f22_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f22_Registrations_count['Total-2023'] - dfd19_f22_Registrations_count['Total-2019'])/ dfd19_f22_Registrations_count['Total-2019'].sum()) * 100
dfd23_f22_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f22_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f22_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f22 = pd.DataFrame(pd.merge(dfd17_f22_Registrations_count, dfd18_f22_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f22 = pd.DataFrame(pd.merge(dfd19_f22_Registrations_count, dfd21_f22_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f22 = pd.DataFrame(pd.merge(dfd22_f22_Registrations_count, dfd23_f22_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f22 = pd.DataFrame(pd.merge(df_Registrations_count_1_f22, df_Registrations_count_2_f22, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f22 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f22, df_Registrations_count_3_f22, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f22 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f22, dfd23_f22_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f22 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17, df_Registrations_Merge_f18, df_Registrations_Merge_f19, df_Registrations_Merge_f20,
                                           df_Registrations_Merge_f21, df_Registrations_Merge_f22]
Concat_Registrations_count_f1_f22 = pd.concat(ConcatFrames_Registrations_count_f1_f22)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f22  = ConcatFrames_Registrations_count_f1_f22.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f22.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f22 = filter_22_df18[filter_22_df18['New customer'] == 1]
df_NewCustomer_df19_f22 = filter_22_df19[filter_22_df19['New customer'] == 1]
df_NewCustomer_df21_f22 = filter_22_df21[filter_22_df21['New customer'] == 1]
df_NewCustomer_df22_f22 = filter_22_df22[filter_22_df22['New customer'] == 1]
df_NewCustomer_df23_f22 = filter_22_df23[filter_22_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f22.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f22.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f22.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a22_ACQRET_count = pd.DataFrame(filter_22_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f22_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f22_ACQRET_count['Percent-2018'] = (dfd18_f22_ACQRET_count['ACQ-2018'] / dfd18_f22_Registrations_count['Total-2018'].sum()) * 100
dfd18_f22_ACQRET_count['Percent-2018'] = dfd18_f22_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f22_ACQRET_count['RET-2018'] = dfd18_a22_ACQRET_count['Total-2018'] - dfd18_f22_ACQRET_count['ACQ-2018']
dfd18_f22_ACQRET_count['Percnt-2018'] = (dfd18_f22_ACQRET_count['RET-2018'] / dfd18_a22_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f22_ACQRET_count['Percnt-2018'] = dfd18_f22_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f22_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a22_ACQRET_count = pd.DataFrame(filter_22_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f22_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f22_ACQRET_count['Percent-2019'] = (dfd19_f22_ACQRET_count['ACQ-2019'] / dfd19_f22_Registrations_count['Total-2019'].sum()) * 100
dfd19_f22_ACQRET_count['Percent-2019'] = dfd19_f22_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f22_ACQRET_count['RET-2019'] = dfd19_a22_ACQRET_count['Total-2019'] - dfd19_f22_ACQRET_count['ACQ-2019']
dfd19_f22_ACQRET_count['Percnt-2019'] = (dfd19_f22_ACQRET_count['RET-2019'] / dfd19_a22_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f22_ACQRET_count['Percnt-2019'] = dfd19_f22_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f22_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a22_ACQRET_count = pd.DataFrame(filter_22_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f22_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f22_ACQRET_count['Percent-2021'] = (dfd21_f22_ACQRET_count['ACQ-2021'] / dfd21_f22_Registrations_count['Total-2021'].sum()) * 100
dfd21_f22_ACQRET_count['Percent-2021'] = dfd21_f22_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f22_ACQRET_count['RET-2021'] = dfd21_a22_ACQRET_count['Total-2021'] - dfd21_f22_ACQRET_count['ACQ-2021']
dfd21_f22_ACQRET_count['Percnt-2021'] = (dfd21_f22_ACQRET_count['RET-2021'] / dfd21_a22_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f22_ACQRET_count['Percnt-2021'] = dfd21_f22_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f22_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a22_ACQRET_count = pd.DataFrame(filter_22_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f22_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f22_ACQRET_count['Percent-2022'] = (dfd22_f22_ACQRET_count['ACQ-2022'] / dfd22_f22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f22_ACQRET_count['Percent-2022'] = dfd22_f22_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f22_ACQRET_count['RET-2022'] = dfd22_a22_ACQRET_count['Total-2022'] - dfd22_f22_ACQRET_count['ACQ-2022']
dfd22_f22_ACQRET_count['Percnt-2022'] = (dfd22_f22_ACQRET_count['RET-2022'] / dfd22_a22_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f22_ACQRET_count['Percnt-2022'] = dfd22_f22_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f22_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a22_ACQRET_count = pd.DataFrame(filter_22_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f22_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f22_ACQRET_count['Percent-2023'] = (dfd23_f22_ACQRET_count['ACQ-2023'] / dfd23_f22_Registrations_count['Total-2023'].sum()) * 100
dfd23_f22_ACQRET_count['Percent-2023'] = dfd23_f22_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f22_ACQRET_count['RET-2023'] = dfd23_a22_ACQRET_count['Total-2023'] - dfd23_f22_ACQRET_count['ACQ-2023']
dfd23_f22_ACQRET_count['Percnt-2023'] = (dfd23_f22_ACQRET_count['RET-2023'] / dfd23_a22_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f22_ACQRET_count['Percnt-2023'] = dfd23_f22_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f22_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f22 = pd.DataFrame(pd.merge(dfd18_a22_ACQRET_count, dfd18_f22_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f22 = pd.DataFrame(pd.merge(dfd19_a22_ACQRET_count, dfd19_f22_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f22 = pd.DataFrame(pd.merge(dfd21_a22_ACQRET_count, dfd21_f22_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f22 = pd.DataFrame(pd.merge(dfd22_a22_ACQRET_count, dfd22_f22_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_22_f22 = pd.DataFrame(pd.merge(dfd23_a22_ACQRET_count, dfd23_f22_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_22_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f22 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f22, df_ACQRET_count_2_f22, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f22 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f22, df_ACQRET_count_3_f22, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f22 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f22, df_ACQRET_count_4_f22, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f22 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f22, df_ACQRET_count_22_f22, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f22 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17, df_ACQRET_count_M4_f18, df_ACQRET_count_M4_f19, df_ACQRET_count_M4_f20,
                                    df_ACQRET_count_M4_f21, df_ACQRET_count_M4_f22]
Concat_ACQRET_count_f1_f22 = pd.concat(ConcatFrames_ACQRET_count_f1_f22)
#print(tab(Concat_ACQRET_count_f1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f22 = Concat_ACQRET_count_f1_f22[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f22_Revenue_calc = pd.DataFrame(filter_22_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f22_Revenue_calc['Percent-2017'] = (dfd17_f22_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f22_Revenue_calc['Percent-2017'] = dfd17_f22_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f22_Revenue_calc['7DEvolution-2017'] = dfd17_f22_Revenue_calc['Total-2017'] - dfd17_f21_Revenue_calc['Total-2017']
#print(tab(dfd17_f22_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f22_Revenue_calc = pd.DataFrame(filter_22_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f22_Revenue_calc['Percent-2018'] = (dfd18_f22_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f22_Revenue_calc['Percent-2018'] = dfd18_f22_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f22_Revenue_calc['7DEvolution-2018'] = dfd18_f22_Revenue_calc['Total-2018'] - dfd18_f21_Revenue_calc['Total-2018']
#print(tab(dfd18_f22_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f22_Revenue_calc = pd.DataFrame(filter_22_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f22_Revenue_calc['Percent-2019'] = (dfd19_f22_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f22_Revenue_calc['Percent-2019'] = dfd19_f22_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f22_Revenue_calc['7DEvolution-2019'] = dfd19_f22_Revenue_calc['Total-2019'] - dfd19_f21_Revenue_calc['Total-2019']
#print(tab(dfd19_f22_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f22_Revenue_calc = pd.DataFrame(filter_22_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f22_Revenue_calc['Percent-2021'] = (dfd21_f22_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f22_Revenue_calc['Percent-2021'] = dfd21_f22_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f22_Revenue_calc['7DEvolution-2021'] = dfd21_f22_Revenue_calc['Total-2021'] - dfd21_f21_Revenue_calc['Total-2021']
#print(tab(dfd21_f22_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f22_Revenue_calc = pd.DataFrame(filter_22_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f22_Revenue_calc['Percent-2022'] = (dfd22_f22_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f22_Revenue_calc['Percent-2022'] = dfd22_f22_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f22_Revenue_calc['7DEvolution-2022'] = dfd22_f22_Revenue_calc['Total-2022'] - dfd22_f21_Revenue_calc['Total-2022']
#print(tab(dfd22_f22_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_Revenue_calc = pd.DataFrame(filter_22_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f22_Revenue_calc['Percent-2023'] = (dfd23_f22_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f22_Revenue_calc['Percent-2023'] = dfd23_f22_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f22_Revenue_calc['7DEvolution-2023'] = dfd23_f22_Revenue_calc['Total-2023'] - dfd23_f21_Revenue_calc['Total-2023']
#print(tab(dfd23_f22_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f22_RevenueEvolution_calc = pd.DataFrame(filter_22_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f22_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f22_Revenue_calc['Total-2023'] - dfd19_f22_Revenue_calc['Total-2019'])/ dfd19_f22_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f22_RevenueEvolution_calc['Evolution-2023'] = dfd23_f22_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f22_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f22 = pd.DataFrame(pd.merge(dfd17_f22_Revenue_calc, dfd18_f22_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f22 = pd.DataFrame(pd.merge(dfd19_f22_Revenue_calc, dfd21_f22_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f22 = pd.DataFrame(pd.merge(dfd22_f22_Revenue_calc, dfd23_f22_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f22_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f22, df_Revenue_calc_2_f22, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f22Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f22_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f22_Evolution, df_Revenue_calc_3_f22, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f22Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f22 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f22_Evolution, dfd23_f22_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f22 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17, df_Revenue_calc_f18, df_Revenue_calc_f19, df_Revenue_calc_f20,
                                 df_Revenue_calc_f21, df_Revenue_calc_f22]
Concat_REV_count_f1_f22 = pd.concat(ConcatFrames_REV_count_f1_f22)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f22_Registrations_GRDel = pd.DataFrame(filtr_22_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f22_Registrations_GRDel = dfd17_f22_Registrations_GRDel.fillna('Unknown')
dfd17_f22_Registrations_GRDel['Percent-2017'] = (dfd17_f22_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f22_Registrations_GRDel['Percent-2017'] = dfd17_f22_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f22_Registrations_GRDel['7DEvolution-2017'] = dfd17_f22_Registrations_GRDel['Total-2017'] - dfd17_f21_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f22_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f22_Registrations_GRDel = pd.DataFrame(filtr_22_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f22_Registrations_GRDel = dfd18_f22_Registrations_GRDel.fillna('Unknown')
dfd18_f22_Registrations_GRDel['Percent-2018'] = (dfd18_f22_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f22_Registrations_GRDel['Percent-2018'] = dfd18_f22_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f22_Registrations_GRDel['7DEvolution-2018'] = dfd18_f22_Registrations_GRDel['Total-2018'] - dfd18_f21_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f22_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f22_Registrations_GRDel = pd.DataFrame(filtr_22_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f22_Registrations_GRDel = dfd19_f22_Registrations_GRDel.fillna('Unknown')
dfd19_f22_Registrations_GRDel['Percent-2019'] = (dfd19_f22_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f22_Registrations_GRDel['Percent-2019'] = dfd19_f22_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f22_Registrations_GRDel['7DEvolution-2019'] = dfd19_f22_Registrations_GRDel['Total-2019'] - dfd19_f21_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f22_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f22_Registrations_GRDel = pd.DataFrame(filtr_22_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f22_Registrations_GRDel = dfd21_f22_Registrations_GRDel.fillna('Unknown')
dfd21_f22_Registrations_GRDel['Percent-2021'] = (dfd21_f22_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f22_Registrations_GRDel['Percent-2021'] = dfd21_f22_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f22_Registrations_GRDel['7DEvolution-2021'] = dfd21_f22_Registrations_GRDel['Total-2021'] - dfd21_f21_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f22_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f22_Registrations_GRDel = pd.DataFrame(filtr_22_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f22_Registrations_GRDel = dfd22_f22_Registrations_GRDel.fillna('Unknown')
dfd22_f22_Registrations_GRDel['Percent-2022'] = (dfd22_f22_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f22_Registrations_GRDel['Percent-2022'] = dfd22_f22_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f22_Registrations_GRDel['7DEvolution-2022'] = dfd22_f22_Registrations_GRDel['Total-2022'] - dfd22_f21_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f22_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_Registrations_GRDel = pd.DataFrame(filtr_22_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f22_Registrations_GRDel = dfd23_f22_Registrations_GRDel.fillna('Unknown')
dfd23_f22_Registrations_GRDel['Percent-2023'] = (dfd23_f22_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f22_Registrations_GRDel['Percent-2023'] = dfd23_f22_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f22_Registrations_GRDel['7DEvolution-2023'] = dfd23_f22_Registrations_GRDel['Total-2023'] - dfd23_f21_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f22_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f22_Registrations_Evol_GRDel = pd.DataFrame(filtr_22_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f22_Registrations_Evol_GRDel = dfd23_f22_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f22_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f22_Registrations_GRDel['Total-2023'] - dfd19_f22_Registrations_GRDel['Total-2019'])/ dfd19_f22_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f22_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f22 = pd.concat([dfd17_f22_Registrations_GRDel, dfd18_f22_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f22 = pd.DataFrame(pd.merge(dfd17_f22_Registrations_GRDel, dfd18_f22_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f22 = pd.DataFrame(pd.merge(dfd19_f22_Registrations_GRDel, dfd21_f22_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f22 = pd.DataFrame(pd.merge(dfd22_f22_Registrations_GRDel, dfd23_f22_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f22 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f22, df_Registrations_GRDel_2_f22, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_22_f22 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f22, df_Registrations_GRDel_3_f22, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f22 = pd.DataFrame(pd.merge(df_Registrations_GRDel_22_f22, dfd23_f22_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f22 = df_Registrations_GRDel_f22[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f22 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17, df_Registrations_GRDel_f18, df_Registrations_GRDel_f19, df_Registrations_GRDel_f20,
                                      df_Registrations_GRDel_f21, df_Registrations_GRDel_f22]
Concat_RegGRDel_count_f1_f22 = pd.concat(ConcatFrames_RegGRDel_count_f1_f22)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f22 = filtr_22_df18_GRdel[filtr_22_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f22 = filtr_22_df19_GRdel[filtr_22_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f22 = filtr_22_df21_GRdel[filtr_22_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f22 = filtr_22_df22_GRdel[filtr_22_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f22 = filtr_22_df23_GRdel[filtr_22_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f22.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f22.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a22_AC_RT_GRDel = pd.DataFrame(filtr_22_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f22_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f22.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f22_AC_RT_GRDel['Percent-2018'] = (dfd18_f22_AC_RT_GRDel['ACQ-2018'] / dfd18_f22_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f22_AC_RT_GRDel['Percent-2018'] = dfd18_f22_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f22_AC_RT_GRDel['RET-2018'] = dfd18_a22_AC_RT_GRDel['Total-2018'] - dfd18_f22_AC_RT_GRDel['ACQ-2018']
dfd18_f22_AC_RT_GRDel['Percnt-2018'] = (dfd18_f22_AC_RT_GRDel['RET-2018'] / dfd18_a22_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f22_AC_RT_GRDel['Percnt-2018'] = dfd18_f22_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f22_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a22_AC_RT_GRDel = pd.DataFrame(filtr_22_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f22_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f22.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f22_AC_RT_GRDel['Percent-2019'] = (dfd19_f22_AC_RT_GRDel['ACQ-2019'] / dfd19_f22_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f22_AC_RT_GRDel['Percent-2019'] = dfd19_f22_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f22_AC_RT_GRDel['RET-2019'] = dfd19_a22_AC_RT_GRDel['Total-2019'] - dfd19_f22_AC_RT_GRDel['ACQ-2019']
dfd19_f22_AC_RT_GRDel['Percnt-2019'] = (dfd19_f22_AC_RT_GRDel['RET-2019'] / dfd19_a22_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f22_AC_RT_GRDel['Percnt-2019'] = dfd19_f22_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f22_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a22_AC_RT_GRDel = pd.DataFrame(filtr_22_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f22_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f22.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f22_AC_RT_GRDel['Percent-2021'] = (dfd21_f22_AC_RT_GRDel['ACQ-2021'] / dfd21_f22_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f22_AC_RT_GRDel['Percent-2021'] = dfd21_f22_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f22_AC_RT_GRDel['RET-2021'] = dfd21_a22_AC_RT_GRDel['Total-2021'] - dfd21_f22_AC_RT_GRDel['ACQ-2021']
dfd21_f22_AC_RT_GRDel['Percnt-2021'] = (dfd21_f22_AC_RT_GRDel['RET-2021'] / dfd21_a22_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f22_AC_RT_GRDel['Percnt-2021'] = dfd21_f22_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f22_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a22_AC_RT_GRDel = pd.DataFrame(filtr_22_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f22_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f22.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f22_AC_RT_GRDel['Percent-2022'] = (dfd22_f22_AC_RT_GRDel['ACQ-2022'] / dfd22_f22_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f22_AC_RT_GRDel['Percent-2022'] = dfd22_f22_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f22_AC_RT_GRDel['RET-2022'] = dfd22_a22_AC_RT_GRDel['Total-2022'] - dfd22_f22_AC_RT_GRDel['ACQ-2022']
dfd22_f22_AC_RT_GRDel['Percnt-2022'] = (dfd22_f22_AC_RT_GRDel['RET-2022'] / dfd22_a22_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f22_AC_RT_GRDel['Percnt-2022'] = dfd22_f22_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f22_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a22_AC_RT_GRDel = pd.DataFrame(filtr_22_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f22_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f22.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f22_AC_RT_GRDel['Percent-2023'] = (dfd23_f22_AC_RT_GRDel['ACQ-2023'] / dfd23_f22_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f22_AC_RT_GRDel['Percent-2023'] = dfd23_f22_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f22_AC_RT_GRDel['RET-2023'] = dfd23_a22_AC_RT_GRDel['Total-2023'] - dfd23_f22_AC_RT_GRDel['ACQ-2023']
dfd23_f22_AC_RT_GRDel['Percnt-2023'] = (dfd23_f22_AC_RT_GRDel['RET-2023'] / dfd23_a22_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f22_AC_RT_GRDel['Percnt-2023'] = dfd23_f22_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f22_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f22 = pd.DataFrame(pd.merge_ordered(dfd18_a22_AC_RT_GRDel, dfd18_f22_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f22 = pd.DataFrame(pd.merge_ordered(dfd19_a22_AC_RT_GRDel, dfd19_f22_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f22 = pd.DataFrame(pd.merge_ordered(dfd21_a22_AC_RT_GRDel, dfd21_f22_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f22 = pd.DataFrame(pd.merge_ordered(dfd22_a22_AC_RT_GRDel, dfd22_f22_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_22_f22 = pd.DataFrame(pd.merge_ordered(dfd23_a22_AC_RT_GRDel, dfd23_f22_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f22 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f22, df_AC_ET_GRDel_2_f22, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f22 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f22, df_AC_ET_GRDel_3_f22, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f22 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f22, df_AC_ET_GRDel_4_f22, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f22 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f22, df_AC_ET_GRDel_22_f22, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f22 = df_AC_RT_GRDel_M4_f22[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f22 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17, df_AC_RT_GRDel_M4_f18, df_AC_RT_GRDel_M4_f19, df_AC_RT_GRDel_M4_f20,
                               df_AC_RT_GRDel_M4_f21, df_AC_RT_GRDel_M4_f22]
Conct_AC_RT_GRDel_f1_f22 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f22)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_22_df17_GRdel = filtr_22_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f22_Revenu_GRDel = pd.DataFrame(filtr_22_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f22_Revenu_GRDel['Percent-2017'] = (dfd17_f22_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f22_Revenu_GRDel['Percent-2017'] = dfd17_f22_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f22_Revenu_GRDel['7DEvolution-2017'] = dfd17_f22_Revenu_GRDel['Total-2017'] - dfd17_f21_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f22_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_22_df18_GRdel = filtr_22_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f22_Revenu_GRDel = pd.DataFrame(filtr_22_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f22_Revenu_GRDel['Percent-2018'] = (dfd18_f22_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f22_Revenu_GRDel['Percent-2018'] = dfd18_f22_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f22_Revenu_GRDel['7DEvolution-2018'] = dfd18_f22_Revenu_GRDel['Total-2018'] - dfd18_f21_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f22_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_22_df19_GRdel = filtr_22_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f22_Revenu_GRDel = pd.DataFrame(filtr_22_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f22_Revenu_GRDel['Percent-2019'] = (dfd19_f22_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f22_Revenu_GRDel['Percent-2019'] = dfd19_f22_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f22_Revenu_GRDel['7DEvolution-2019'] = dfd19_f22_Revenu_GRDel['Total-2019'] - dfd19_f21_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f22_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_22_df21_GRdel = filtr_22_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f22_Revenu_GRDel = pd.DataFrame(filtr_22_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f22_Revenu_GRDel['Percent-2021'] = (dfd21_f22_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f22_Revenu_GRDel['Percent-2021'] = dfd21_f22_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f22_Revenu_GRDel['7DEvolution-2021'] = dfd21_f22_Revenu_GRDel['Total-2021'] - dfd21_f21_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f22_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_22_df22_GRdel = filtr_22_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f22_Revenu_GRDel = pd.DataFrame(filtr_22_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f22_Revenu_GRDel['Percent-2022'] = (dfd22_f22_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f22_Revenu_GRDel['Percent-2022'] = dfd22_f22_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f22_Revenu_GRDel['7DEvolution-2022'] = dfd22_f22_Revenu_GRDel['Total-2022'] - dfd22_f21_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f22_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_22_df23_GRdel = filtr_22_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f22_Revenu_GRDel = pd.DataFrame(filtr_22_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f22_Revenu_GRDel['Percent-2023'] = (dfd23_f22_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f22_Revenu_GRDel['Percent-2023'] = dfd23_f22_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f22_Revenu_GRDel['7DEvolution-2023'] = dfd23_f22_Revenu_GRDel['Total-2023'] - dfd23_f21_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f22_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f22_Revenu_Evlt_GRDel = pd.DataFrame(filtr_22_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f22_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f22_Revenu_GRDel['Total-2023'] - dfd19_f22_Revenu_GRDel['Total-2019'])/ dfd19_f22_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f22_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f22_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f22_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f22 = pd.DataFrame(pd.merge(dfd17_f22_Revenu_GRDel, dfd18_f22_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f22 = pd.DataFrame(pd.merge(dfd19_f22_Revenu_GRDel, dfd21_f22_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f22 = pd.DataFrame(pd.merge(dfd22_f22_Revenu_GRDel, dfd23_f22_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f22 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f22, df_Revenu_GRDel_2_f22, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_22_f22 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f22, df_Revenu_GRDel_3_f22, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f22 = pd.DataFrame(pd.merge(df_Revenu_GRDel_22_f22, dfd23_f22_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f22 = df_Revenu_GRDel_f22[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f22 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17, df_Revenu_GRDel_f18, df_Revenu_GRDel_f19, df_Revenu_GRDel_f20,
                             df_Revenu_GRDel_f21, df_Revenu_GRDel_f22]
Conct_RV_GRDel_f1_f22 = pd.concat(ConcatFra_RV_GRDel_f1_f22)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f22_Profile_count = pd.DataFrame(filtr_22_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f22_Profile_count = dfd17_f22_Profile_count.fillna('Unknown')
dfd17_f22_Profile_count['Percent-2017'] = (dfd17_f22_Profile_count['Total-2017'] / dfd17_f22_Profile_count['Total-2017'].sum()) * 100
dfd17_f22_Profile_count['Percent-2017'] = dfd17_f22_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f22_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f22_Profile_count = pd.DataFrame(filtr_22_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f22_Profile_count = dfd18_f22_Profile_count.fillna('Unknown')
dfd18_f22_Profile_count['Percent-2018'] = (dfd18_f22_Profile_count['Total-2018'] / dfd18_f22_Profile_count['Total-2018'].sum()) * 100
dfd18_f22_Profile_count['Percent-2018'] = dfd18_f22_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f22_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f22_Profile_count = pd.DataFrame(filtr_22_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f22_Profile_count = dfd19_f22_Profile_count.fillna('Unknown')
dfd19_f22_Profile_count['Percent-2019'] = (dfd19_f22_Profile_count['Total-2019'] / dfd19_f22_Profile_count['Total-2019'].sum()) * 100
dfd19_f22_Profile_count['Percent-2019'] = dfd19_f22_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f22_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f22_Profile_count = pd.DataFrame(filtr_22_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f22_Profile_count = dfd21_f22_Profile_count.fillna('Unknown')
dfd21_f22_Profile_count['Percent-2021'] = (dfd21_f22_Profile_count['Total-2021'] / dfd21_f22_Profile_count['Total-2021'].sum()) * 100
dfd21_f22_Profile_count['Percent-2021'] = dfd21_f22_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f22_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f22_Profile_count = pd.DataFrame(filtr_22_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f22_Profile_count = dfd22_f22_Profile_count.fillna('Unknown')
dfd22_f22_Profile_count['Percent-2022'] = (dfd22_f22_Profile_count['Total-2022'] / dfd22_f22_Profile_count['Total-2022'].sum()) * 100
dfd22_f22_Profile_count['Percent-2022'] = dfd22_f22_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f22_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_Profile_count = pd.DataFrame(filtr_22_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f22_Profile_count = dfd23_f22_Profile_count.fillna('Unknown')
dfd23_f22_Profile_count['Percent-2023'] = (dfd23_f22_Profile_count['Total-2023'] / dfd23_f22_Profile_count['Total-2023'].sum()) * 100
dfd23_f22_Profile_count['Percent-2023'] = dfd23_f22_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f22_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f22 = pd.DataFrame(pd.merge(dfd17_f22_Profile_count, dfd18_f22_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f22 = pd.DataFrame(pd.merge(dfd19_f22_Profile_count, dfd21_f22_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f22 = pd.DataFrame(pd.merge(dfd22_f22_Profile_count, dfd23_f22_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f22 = pd.DataFrame(pd.merge(df_Profile_Count_1_f22, df_Profile_Count_2_f22, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f22 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f22, df_Profile_Count_3_f22, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f22 = df_Profile_Count_m2_f22.append(df_Profile_Count_m2_f22.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f22['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f22_Pass_count = pd.DataFrame(filtr_22_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f22_Pass_count = dfd17_f22_Pass_count.fillna('Unknown')
dfd17_f22_Pass_count['Percent-2017'] = (dfd17_f22_Pass_count['Total-2017'] / dfd17_f22_Pass_count['Total-2017'].sum()) * 100
dfd17_f22_Pass_count['Percent-2017'] = dfd17_f22_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f22_Pass_count = pd.DataFrame(filtr_22_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f22_Pass_count = dfd18_f22_Pass_count.fillna('Unknown')
dfd18_f22_Pass_count['Percent-2018'] = (dfd18_f22_Pass_count['Total-2018'] / dfd18_f22_Pass_count['Total-2018'].sum()) * 100
dfd18_f22_Pass_count['Percent-2018'] = dfd18_f22_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f22_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f22_Pass_count = pd.DataFrame(filtr_22_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f22_Pass_count = dfd19_f22_Pass_count.fillna('Unknown')
dfd19_f22_Pass_count['Percent-2019'] = (dfd19_f22_Pass_count['Total-2019'] / dfd19_f22_Pass_count['Total-2019'].sum()) * 100
dfd19_f22_Pass_count['Percent-2019'] = dfd19_f22_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f22_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f22_Pass_count = pd.DataFrame(filtr_22_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f22_Pass_count = dfd21_f22_Pass_count.fillna('Unknown')
dfd21_f22_Pass_count['Percent-2021'] = (dfd21_f22_Pass_count['Total-2021'] / dfd21_f22_Pass_count['Total-2021'].sum()) * 100
dfd21_f22_Pass_count['Percent-2021'] = dfd21_f22_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f22_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f22_Pass_count = pd.DataFrame(filtr_22_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f22_Pass_count = dfd22_f22_Pass_count.fillna('Unknown')
dfd22_f22_Pass_count['Percent-2022'] = (dfd22_f22_Pass_count['Total-2022'] / dfd22_f22_Pass_count['Total-2022'].sum()) * 100
dfd22_f22_Pass_count['Percent-2022'] = dfd22_f22_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f22_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_Pass_count = pd.DataFrame(filtr_22_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f22_Pass_count = dfd23_f22_Pass_count.fillna('Unknown')
dfd23_f22_Pass_count['Percent-2023'] = (dfd23_f22_Pass_count['Total-2023'] / dfd23_f22_Pass_count['Total-2023'].sum()) * 100
dfd23_f22_Pass_count['Percent-2023'] = dfd23_f22_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f22_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f22 = pd.DataFrame(pd.merge(dfd17_f22_Pass_count, dfd18_f22_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f22 = pd.DataFrame(pd.merge(dfd19_f22_Pass_count, dfd21_f22_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f22 = pd.DataFrame(pd.merge(dfd22_f22_Pass_count, dfd23_f22_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f22 = pd.DataFrame(pd.merge(df_Pass_Count_1_f22, df_Pass_Count_2_f22, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f22 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f22, df_Pass_Count_3_f22, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f22 = df_Pass_Count_m2_f22.append(df_Pass_Count_m2_f22.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f22['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f22_Attendees_Country_count = pd.DataFrame(filtr_22_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f22_Attendees_Country_count = dfd17_f22_Attendees_Country_count.fillna('Unknown')
dfd17_f22_Attendees_Country_count['Percent-2017'] = (dfd17_f22_Attendees_Country_count['Total-2017'] / dfd17_f22_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f22_Attendees_Country_count['Percent-2017'] = dfd17_f22_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f22_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f22_Attendees_Country_count = pd.DataFrame(filtr_22_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f22_Attendees_Country_count = dfd18_f22_Attendees_Country_count.fillna('Unknown')
dfd18_f22_Attendees_Country_count['Percent-2018'] = (dfd18_f22_Attendees_Country_count['Total-2018'] / dfd18_f22_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f22_Attendees_Country_count['Percent-2018'] = dfd18_f22_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f22_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f22_Attendees_Country_count = pd.DataFrame(filtr_22_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f22_Attendees_Country_count = dfd19_f22_Attendees_Country_count.fillna('Unknown')
dfd19_f22_Attendees_Country_count['Percent-2019'] = (dfd19_f22_Attendees_Country_count['Total-2019'] / dfd19_f22_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f22_Attendees_Country_count['Percent-2019'] = dfd19_f22_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f22_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f22_Attendees_Country_count = pd.DataFrame(filtr_22_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f22_Attendees_Country_count = dfd21_f22_Attendees_Country_count.fillna('Unknown')
dfd21_f22_Attendees_Country_count['Percent-2021'] = (dfd21_f22_Attendees_Country_count['Total-2021'] / dfd21_f22_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f22_Attendees_Country_count['Percent-2021'] = dfd21_f22_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f22_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f22_Attendees_Country_count = pd.DataFrame(filtr_22_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f22_Attendees_Country_count = dfd22_f22_Attendees_Country_count.fillna('Unknown')
dfd22_f22_Attendees_Country_count['Percent-2022'] = (dfd22_f22_Attendees_Country_count['Total-2022'] / dfd22_f22_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f22_Attendees_Country_count['Percent-2022'] = dfd22_f22_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f22_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_Attendees_Country_count = pd.DataFrame(filtr_22_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f22_Attendees_Country_count = dfd23_f22_Attendees_Country_count.fillna('Unknown')
dfd23_f22_Attendees_Country_count['Percent-2023'] = (dfd23_f22_Attendees_Country_count['Total-2023'] / dfd23_f22_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f22_Attendees_Country_count['Percent-2023'] = dfd23_f22_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f22_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f22 = pd.DataFrame(pd.merge(dfd17_f22_Attendees_Country_count, dfd18_f22_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f22 = pd.DataFrame(pd.merge(dfd19_f22_Attendees_Country_count, dfd21_f22_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f22 = pd.DataFrame(pd.merge(dfd22_f22_Attendees_Country_count, dfd23_f22_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f22 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f22, dfAttendees_Country_Count_2_f22, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f22.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f22 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f22, dfAttendees_Country_Count_3_f22, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f22 = dfAttendees_Country_Count_m2_f22.append(dfAttendees_Country_Count_m2_f22.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f22['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f22_ATTENDEES_AREAS_count = pd.DataFrame(filtr_22_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f22_ATTENDEES_AREAS_count = dfd17_f22_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f22_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f22_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f22_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f22_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f22_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f22_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f22_ATTENDEES_AREAS_count = pd.DataFrame(filtr_22_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f22_ATTENDEES_AREAS_count = dfd18_f22_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f22_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f22_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f22_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f22_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f22_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f22_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f22_ATTENDEES_AREAS_count = pd.DataFrame(filtr_22_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f22_ATTENDEES_AREAS_count = dfd19_f22_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f22_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f22_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f22_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f22_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f22_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f22_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f22_ATTENDEES_AREAS_count = pd.DataFrame(filtr_22_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f22_ATTENDEES_AREAS_count = dfd21_f22_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f22_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f22_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f22_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f22_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f22_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f22_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f22_ATTENDEES_AREAS_count = pd.DataFrame(filtr_22_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f22_ATTENDEES_AREAS_count = dfd22_f22_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f22_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f22_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f22_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f22_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f22_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f22_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_ATTENDEES_AREAS_count = pd.DataFrame(filtr_22_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f22_ATTENDEES_AREAS_count = dfd23_f22_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f22_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f22_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f22_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f22_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f22_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f22_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f22 = pd.DataFrame(pd.merge(dfd17_f22_ATTENDEES_AREAS_count, dfd18_f22_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f22 = pd.DataFrame(pd.merge(dfd19_f22_ATTENDEES_AREAS_count, dfd21_f22_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f22 = pd.DataFrame(pd.merge(dfd22_f22_ATTENDEES_AREAS_count, dfd23_f22_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f22.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f22 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f22, df_ATTENDEES_AREAS_count_2_f22, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f22 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f22, df_ATTENDEES_AREAS_count_3_f22, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f22 = df_ATTENDEES_AREAS_count_m2_f22.append(df_ATTENDEES_AREAS_count_m2_f22.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f22['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f22_Attendees_Specialty_count = pd.DataFrame(filtr_22_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f22_Attendees_Specialty_count = dfd17_f22_Attendees_Specialty_count.fillna('Unknown')
dfd17_f22_Attendees_Specialty_count['Percent-2017'] = (dfd17_f22_Attendees_Specialty_count['Total-2017'] / dfd17_f22_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f22_Attendees_Specialty_count['Percent-2017'] = dfd17_f22_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f22_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f22_Attendees_Specialty_count = pd.DataFrame(filtr_22_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f22_Attendees_Specialty_count = dfd18_f22_Attendees_Specialty_count.fillna('Unknown')
dfd18_f22_Attendees_Specialty_count['Percent-2018'] = (dfd18_f22_Attendees_Specialty_count['Total-2018'] / dfd18_f22_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f22_Attendees_Specialty_count['Percent-2018'] = dfd18_f22_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f22_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f22_Attendees_Specialty_count = pd.DataFrame(filtr_22_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f22_Attendees_Specialty_count = dfd19_f22_Attendees_Specialty_count.fillna('Unknown')
dfd19_f22_Attendees_Specialty_count['Percent-2019'] = (dfd19_f22_Attendees_Specialty_count['Total-2019'] / dfd19_f22_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f22_Attendees_Specialty_count['Percent-2019'] = dfd19_f22_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f22_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f22_Attendees_Specialty_count = pd.DataFrame(filtr_22_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f22_Attendees_Specialty_count = dfd21_f22_Attendees_Specialty_count.fillna('Unknown')
dfd21_f22_Attendees_Specialty_count['Percent-2021'] = (dfd21_f22_Attendees_Specialty_count['Total-2021'] / dfd21_f22_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f22_Attendees_Specialty_count['Percent-2021'] = dfd21_f22_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f22_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f22_Attendees_Specialty_count = pd.DataFrame(filtr_22_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f22_Attendees_Specialty_count = dfd22_f22_Attendees_Specialty_count.fillna('Unknown')
dfd22_f22_Attendees_Specialty_count['Percent-2022'] = (dfd22_f22_Attendees_Specialty_count['Total-2022'] / dfd22_f22_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f22_Attendees_Specialty_count['Percent-2022'] = dfd22_f22_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f22_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f22_Attendees_Specialty_count = pd.DataFrame(filtr_22_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f22_Attendees_Specialty_count = dfd23_f22_Attendees_Specialty_count.fillna('Unknown')
dfd23_f22_Attendees_Specialty_count['Percent-2023'] = (dfd23_f22_Attendees_Specialty_count['Total-2023'] / dfd23_f22_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f22_Attendees_Specialty_count['Percent-2023'] = dfd23_f22_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f22_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f22 = pd.DataFrame(pd.merge(dfd17_f22_Attendees_Specialty_count, dfd18_f22_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f22 = pd.DataFrame(pd.merge(dfd19_f22_Attendees_Specialty_count, dfd21_f22_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f22 = pd.DataFrame(pd.merge(dfd22_f22_Attendees_Specialty_count, dfd23_f22_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f22 = pd.DataFrame(pd.merge(df_Specialty_count_1_f22, df_Specialty_count_2_f22, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f22.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f22 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f22, df_Specialty_count_3_f22, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f22 = df_Specialty_count_m2_f22.append(df_Specialty_count_m2_f22.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f22['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f22['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f22['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f22 = Concat_Registrations_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f22['Total-2017'] = Concat_Registrations_count_f1_f22['Total-2017'].astype(int)
Concat_Registrations_count_f1_f22['Percent-2017'] = Concat_Registrations_count_f1_f22['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f22['7DEvolution-2017'] = Concat_Registrations_count_f1_f22['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f22['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f22['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f22 = Concat_Registrations_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f22['Total-2018'] = Concat_Registrations_count_f1_f22['Total-2018'].astype(int)
Concat_Registrations_count_f1_f22['Percent-2018'] = Concat_Registrations_count_f1_f22['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f22['7DEvolution-2018'] = Concat_Registrations_count_f1_f22['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f22['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f22['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f22 = Concat_Registrations_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f22['Total-2019'] = Concat_Registrations_count_f1_f22['Total-2019'].astype(int)
Concat_Registrations_count_f1_f22['Percent-2019'] = Concat_Registrations_count_f1_f22['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f22['7DEvolution-2019'] = Concat_Registrations_count_f1_f22['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f22['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f22['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f22 = Concat_Registrations_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f22['Total-2021'] = Concat_Registrations_count_f1_f22['Total-2021'].astype(int)
Concat_Registrations_count_f1_f22['Percent-2021'] = Concat_Registrations_count_f1_f22['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f22['7DEvolution-2021'] = Concat_Registrations_count_f1_f22['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f22['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f22['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f22 = Concat_Registrations_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f22['Total-2022'] = Concat_Registrations_count_f1_f22['Total-2022'].astype(int)
Concat_Registrations_count_f1_f22['Percent-2022'] = Concat_Registrations_count_f1_f22['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f22['7DEvolution-2022'] = Concat_Registrations_count_f1_f22['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f22['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f22['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f22 = Concat_Registrations_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f22['Total-2023'] = Concat_Registrations_count_f1_f22['Total-2023'].astype(int)
Concat_Registrations_count_f1_f22['Percent-2023'] = Concat_Registrations_count_f1_f22['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f22['7DEvolution-2023'] = Concat_Registrations_count_f1_f22['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f22['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f22['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f22 = Concat_ACQRET_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f22['Total-2018'] = Concat_ACQRET_count_f1_f22['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f22['ACQ-2018'] = Concat_ACQRET_count_f1_f22['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f22['Percent-2018'] = Concat_ACQRET_count_f1_f22['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f22['RET-2018'] = Concat_ACQRET_count_f1_f22['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f22['Percnt-2018'] = Concat_ACQRET_count_f1_f22['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f22['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f22['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f22 = Concat_ACQRET_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f22['Total-2019'] = Concat_ACQRET_count_f1_f22['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f22['ACQ-2019'] = Concat_ACQRET_count_f1_f22['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f22['Percent-2019'] = Concat_ACQRET_count_f1_f22['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f22['RET-2019'] = Concat_ACQRET_count_f1_f22['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f22['Percnt-2019'] = Concat_ACQRET_count_f1_f22['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f22['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f22['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f22 = Concat_ACQRET_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f22['Total-2021'] = Concat_ACQRET_count_f1_f22['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f22['ACQ-2021'] = Concat_ACQRET_count_f1_f22['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f22['Percent-2021'] = Concat_ACQRET_count_f1_f22['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f22['RET-2021'] = Concat_ACQRET_count_f1_f22['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f22['Percnt-2021'] = Concat_ACQRET_count_f1_f22['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f22['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f22['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f22 = Concat_ACQRET_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f22['Total-2022'] = Concat_ACQRET_count_f1_f22['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f22['ACQ-2022'] = Concat_ACQRET_count_f1_f22['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f22['Percent-2022'] = Concat_ACQRET_count_f1_f22['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f22['RET-2022'] = Concat_ACQRET_count_f1_f22['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f22['Percnt-2022'] = Concat_ACQRET_count_f1_f22['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f22['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f22['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f22 = Concat_ACQRET_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f22['Total-2023'] = Concat_ACQRET_count_f1_f22['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f22['ACQ-2023'] = Concat_ACQRET_count_f1_f22['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f22['Percent-2023'] = Concat_ACQRET_count_f1_f22['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f22['RET-2023'] = Concat_ACQRET_count_f1_f22['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f22['Percnt-2023'] = Concat_ACQRET_count_f1_f22['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f22['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f22['Total-2017'],errors='coerce')
Concat_REV_count_f1_f22 = Concat_REV_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f22['Total-2017'] = Concat_REV_count_f1_f22['Total-2017'].astype(int)
Concat_REV_count_f1_f22['Percent-2017'] = Concat_REV_count_f1_f22['Percent-2017'].astype(float)
Concat_REV_count_f1_f22['7DEvolution-2017'] = Concat_REV_count_f1_f22['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f22['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f22['Total-2018'],errors='coerce')
Concat_REV_count_f1_f22 = Concat_REV_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f22['Total-2018'] = Concat_REV_count_f1_f22['Total-2018'].astype(int)
Concat_REV_count_f1_f22['Percent-2018'] = Concat_REV_count_f1_f22['Percent-2018'].astype(float)
Concat_REV_count_f1_f22['7DEvolution-2018'] = Concat_REV_count_f1_f22['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f22['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f22['Total-2019'],errors='coerce')
Concat_REV_count_f1_f22 = Concat_REV_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f22['Total-2019'] = Concat_REV_count_f1_f22['Total-2019'].astype(int)
Concat_REV_count_f1_f22['Percent-2019'] = Concat_REV_count_f1_f22['Percent-2019'].astype(float)
Concat_REV_count_f1_f22['7DEvolution-2019'] = Concat_REV_count_f1_f22['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f22['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f22['Total-2022'],errors='coerce')
Concat_REV_count_f1_f22 = Concat_REV_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f22['Total-2022'] = Concat_REV_count_f1_f22['Total-2022'].astype(int)
Concat_REV_count_f1_f22['Percent-2022'] = Concat_REV_count_f1_f22['Percent-2022'].astype(float)
Concat_REV_count_f1_f22['7DEvolution-2022'] = Concat_REV_count_f1_f22['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f22['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f22['Total-2023'],errors='coerce')
Concat_REV_count_f1_f22 = Concat_REV_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f22['Total-2023'] = Concat_REV_count_f1_f22['Total-2023'].astype(int)
Concat_REV_count_f1_f22['Percent-2023'] = Concat_REV_count_f1_f22['Percent-2023'].astype(float)
Concat_REV_count_f1_f22['7DEvolution-2023'] = Concat_REV_count_f1_f22['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f22['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f22['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f22 = Concat_RegGRDel_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f22['Total-2017'] = Concat_RegGRDel_count_f1_f22['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f22['Percent-2017'] = Concat_RegGRDel_count_f1_f22['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f22['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f22['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f22['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f22['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f22 = Concat_RegGRDel_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f22['Total-2018'] = Concat_RegGRDel_count_f1_f22['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f22['Percent-2018'] = Concat_RegGRDel_count_f1_f22['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f22['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f22['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f22['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f22['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f22 = Concat_RegGRDel_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f22['Total-2019'] = Concat_RegGRDel_count_f1_f22['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f22['Percent-2019'] = Concat_RegGRDel_count_f1_f22['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f22['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f22['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f22['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f22['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f22 = Concat_RegGRDel_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f22['Total-2021'] = Concat_RegGRDel_count_f1_f22['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f22['Percent-2021'] = Concat_RegGRDel_count_f1_f22['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f22['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f22['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f22['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f22['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f22 = Concat_RegGRDel_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f22['Total-2022'] = Concat_RegGRDel_count_f1_f22['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f22['Percent-2022'] = Concat_RegGRDel_count_f1_f22['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f22['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f22['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f22['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f22['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f22 = Concat_RegGRDel_count_f1_f22.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f22['Total-2023'] = Concat_RegGRDel_count_f1_f22['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f22['Percent-2023'] = Concat_RegGRDel_count_f1_f22['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f22['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f22['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f22['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f22['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f22 = Conct_AC_RT_GRDel_f1_f22.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f22['Total-2018'] = Conct_AC_RT_GRDel_f1_f22['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f22['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f22['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f22['Percent-2018'] = Conct_AC_RT_GRDel_f1_f22['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f22['RET-2018'] = Conct_AC_RT_GRDel_f1_f22['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f22['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f22['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f22['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f22['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f22 = Conct_AC_RT_GRDel_f1_f22.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f22['Total-2019'] = Conct_AC_RT_GRDel_f1_f22['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f22['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f22['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f22['Percent-2019'] = Conct_AC_RT_GRDel_f1_f22['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f22['RET-2019'] = Conct_AC_RT_GRDel_f1_f22['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f22['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f22['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f22['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f22['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f22 = Conct_AC_RT_GRDel_f1_f22.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f22['Total-2021'] = Conct_AC_RT_GRDel_f1_f22['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f22['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f22['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f22['Percent-2021'] = Conct_AC_RT_GRDel_f1_f22['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f22['RET-2021'] = Conct_AC_RT_GRDel_f1_f22['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f22['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f22['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f22['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f22['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f22 = Conct_AC_RT_GRDel_f1_f22.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f22['Total-2022'] = Conct_AC_RT_GRDel_f1_f22['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f22['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f22['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f22['Percent-2022'] = Conct_AC_RT_GRDel_f1_f22['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f22['RET-2022'] = Conct_AC_RT_GRDel_f1_f22['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f22['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f22['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f22['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f22['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f22 = Conct_AC_RT_GRDel_f1_f22.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f22['Total-2023'] = Conct_AC_RT_GRDel_f1_f22['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f22['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f22['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f22['Percent-2023'] = Conct_AC_RT_GRDel_f1_f22['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f22['RET-2023'] = Conct_AC_RT_GRDel_f1_f22['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f22['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f22['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f22['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f22['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f22 = Conct_RV_GRDel_f1_f22.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f22['Total-2017'] = Conct_RV_GRDel_f1_f22['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f22['Percent-2017'] = Conct_RV_GRDel_f1_f22['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f22['7DEvolution-2017'] = Conct_RV_GRDel_f1_f22['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f22['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f22['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f22 = Conct_RV_GRDel_f1_f22.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f22['Total-2018'] = Conct_RV_GRDel_f1_f22['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f22['Percent-2018'] = Conct_RV_GRDel_f1_f22['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f22['7DEvolution-2018'] = Conct_RV_GRDel_f1_f22['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f22['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f22['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f22 = Conct_RV_GRDel_f1_f22.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f22['Total-2019'] = Conct_RV_GRDel_f1_f22['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f22['Percent-2019'] = Conct_RV_GRDel_f1_f22['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f22['7DEvolution-2019'] = Conct_RV_GRDel_f1_f22['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f22['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f22['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f22 = Conct_RV_GRDel_f1_f22.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f22['Total-2022'] = Conct_RV_GRDel_f1_f22['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f22['Percent-2022'] = Conct_RV_GRDel_f1_f22['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f22['7DEvolution-2022'] = Conct_RV_GRDel_f1_f22['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f22['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f22['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f22 = Conct_RV_GRDel_f1_f22.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f22['Total-2023'] = Conct_RV_GRDel_f1_f22['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f22['Percent-2023'] = Conct_RV_GRDel_f1_f22['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f22['7DEvolution-2023'] = Conct_RV_GRDel_f1_f22['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f22['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f22['Total-2017'],errors='coerce')
df_Profile_Count_m2_f22 = df_Profile_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f22['Total-2017'] = df_Profile_Count_m2_f22['Total-2017'].astype(int)
df_Profile_Count_m2_f22['Percent-2017'] = df_Profile_Count_m2_f22['Percent-2017'].astype(float)

df_Profile_Count_m2_f22['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f22['Total-2018'],errors='coerce')
df_Profile_Count_m2_f22 = df_Profile_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f22['Total-2018'] = df_Profile_Count_m2_f22['Total-2018'].astype(int)
df_Profile_Count_m2_f22['Percent-2018'] = df_Profile_Count_m2_f22['Percent-2018'].astype(float)

df_Profile_Count_m2_f22['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f22['Total-2019'],errors='coerce')
df_Profile_Count_m2_f22 = df_Profile_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f22['Total-2019'] = df_Profile_Count_m2_f22['Total-2019'].astype(int)
df_Profile_Count_m2_f22['Percent-2019'] = df_Profile_Count_m2_f22['Percent-2019'].astype(float)

df_Profile_Count_m2_f22['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f22['Total-2021'],errors='coerce')
df_Profile_Count_m2_f22 = df_Profile_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f22['Total-2021'] = df_Profile_Count_m2_f22['Total-2021'].astype(int)
df_Profile_Count_m2_f22['Percent-2021'] = df_Profile_Count_m2_f22['Percent-2021'].astype(float)

df_Profile_Count_m2_f22['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f22['Total-2022'],errors='coerce')
df_Profile_Count_m2_f22 = df_Profile_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f22['Total-2022'] = df_Profile_Count_m2_f22['Total-2022'].astype(int)
df_Profile_Count_m2_f22['Percent-2022'] = df_Profile_Count_m2_f22['Percent-2022'].astype(float)

df_Profile_Count_m2_f22['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f22['Total-2023'],errors='coerce')
df_Profile_Count_m2_f22 = df_Profile_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f22['Total-2023'] = df_Profile_Count_m2_f22['Total-2023'].astype(int)
df_Profile_Count_m2_f22['Percent-2023'] = df_Profile_Count_m2_f22['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f22['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f22['Total-2017'],errors='coerce')
df_Pass_Count_m2_f22 = df_Pass_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f22['Total-2017'] = df_Pass_Count_m2_f22['Total-2017'].astype(int)
df_Pass_Count_m2_f22['Percent-2017'] = df_Pass_Count_m2_f22['Percent-2017'].astype(float)

df_Pass_Count_m2_f22['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f22['Total-2018'],errors='coerce')
df_Pass_Count_m2_f22 = df_Pass_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f22['Total-2018'] = df_Pass_Count_m2_f22['Total-2018'].astype(int)
df_Pass_Count_m2_f22['Percent-2018'] = df_Pass_Count_m2_f22['Percent-2018'].astype(float)

df_Pass_Count_m2_f22['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f22['Total-2019'],errors='coerce')
df_Pass_Count_m2_f22 = df_Pass_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f22['Total-2019'] = df_Pass_Count_m2_f22['Total-2019'].astype(int)
df_Pass_Count_m2_f22['Percent-2019'] = df_Pass_Count_m2_f22['Percent-2019'].astype(float)

df_Pass_Count_m2_f22['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f22['Total-2021'],errors='coerce')
df_Pass_Count_m2_f22 = df_Pass_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f22['Total-2021'] = df_Pass_Count_m2_f22['Total-2021'].astype(int)
df_Pass_Count_m2_f22['Percent-2021'] = df_Pass_Count_m2_f22['Percent-2021'].astype(float)

df_Pass_Count_m2_f22['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f22['Total-2022'],errors='coerce')
df_Pass_Count_m2_f22 = df_Pass_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f22['Total-2022'] = df_Pass_Count_m2_f22['Total-2022'].astype(int)
df_Pass_Count_m2_f22['Percent-2022'] = df_Pass_Count_m2_f22['Percent-2022'].astype(float)

df_Pass_Count_m2_f22['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f22['Total-2023'],errors='coerce')
df_Pass_Count_m2_f22 = df_Pass_Count_m2_f22.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f22['Total-2023'] = df_Pass_Count_m2_f22['Total-2023'].astype(int)
df_Pass_Count_m2_f22['Percent-2023'] = df_Pass_Count_m2_f22['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f22['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f22['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f22 = dfAttendees_Country_Count_m2_f22.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f22['Total-2017'] = dfAttendees_Country_Count_m2_f22['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f22['Percent-2017'] = dfAttendees_Country_Count_m2_f22['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f22['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f22['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f22 = dfAttendees_Country_Count_m2_f22.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f22['Total-2018'] = dfAttendees_Country_Count_m2_f22['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f22['Percent-2018'] = dfAttendees_Country_Count_m2_f22['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f22['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f22['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f22 = dfAttendees_Country_Count_m2_f22.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f22['Total-2019'] = dfAttendees_Country_Count_m2_f22['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f22['Percent-2019'] = dfAttendees_Country_Count_m2_f22['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f22['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f22['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f22 = dfAttendees_Country_Count_m2_f22.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f22['Total-2021'] = dfAttendees_Country_Count_m2_f22['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f22['Percent-2021'] = dfAttendees_Country_Count_m2_f22['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f22['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f22['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f22 = dfAttendees_Country_Count_m2_f22.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f22['Total-2022'] = dfAttendees_Country_Count_m2_f22['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f22['Percent-2022'] = dfAttendees_Country_Count_m2_f22['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f22['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f22['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f22 = dfAttendees_Country_Count_m2_f22.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f22['Total-2023'] = dfAttendees_Country_Count_m2_f22['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f22['Percent-2023'] = dfAttendees_Country_Count_m2_f22['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f22['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f22['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f22 = df_ATTENDEES_AREAS_count_m2_f22.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f22['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f22['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f22['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f22['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f22['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f22['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f22 = df_ATTENDEES_AREAS_count_m2_f22.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f22['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f22['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f22['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f22['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f22['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f22['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f22 = df_ATTENDEES_AREAS_count_m2_f22.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f22['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f22['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f22['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f22['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f22['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f22['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f22 = df_ATTENDEES_AREAS_count_m2_f22.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f22['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f22['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f22['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f22['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f22['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f22['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f22 = df_ATTENDEES_AREAS_count_m2_f22.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f22['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f22['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f22['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f22['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f22['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f22['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f22 = df_ATTENDEES_AREAS_count_m2_f22.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f22['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f22['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f22['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f22['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f22['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f22['Total-2017'],errors='coerce')
df_Specialty_count_m2_f22 = df_Specialty_count_m2_f22.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f22['Total-2017'] = df_Specialty_count_m2_f22['Total-2017'].astype(int)
df_Specialty_count_m2_f22['Percent-2017'] = df_Specialty_count_m2_f22['Percent-2017'].astype(float)

df_Specialty_count_m2_f22['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f22['Total-2018'],errors='coerce')
df_Specialty_count_m2_f22 = df_Specialty_count_m2_f22.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f22['Total-2018'] = df_Specialty_count_m2_f22['Total-2018'].astype(int)
df_Specialty_count_m2_f22['Percent-2018'] = df_Specialty_count_m2_f22['Percent-2018'].astype(float)

df_Specialty_count_m2_f22['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f22['Total-2019'],errors='coerce')
df_Specialty_count_m2_f22 = df_Specialty_count_m2_f22.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f22['Total-2019'] = df_Specialty_count_m2_f22['Total-2019'].astype(int)
df_Specialty_count_m2_f22['Percent-2019'] = df_Specialty_count_m2_f22['Percent-2019'].astype(float)

df_Specialty_count_m2_f22['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f22['Total-2021'],errors='coerce')
df_Specialty_count_m2_f22 = df_Specialty_count_m2_f22.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f22['Total-2021'] = df_Specialty_count_m2_f22['Total-2021'].astype(int)
df_Specialty_count_m2_f22['Percent-2021'] = df_Specialty_count_m2_f22['Percent-2021'].astype(float)

df_Specialty_count_m2_f22['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f22['Total-2022'],errors='coerce')
df_Specialty_count_m2_f22 = df_Specialty_count_m2_f22.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f22['Total-2022'] = df_Specialty_count_m2_f22['Total-2022'].astype(int)
df_Specialty_count_m2_f22['Percent-2022'] = df_Specialty_count_m2_f22['Percent-2022'].astype(float)

df_Specialty_count_m2_f22['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f22['Total-2023'],errors='coerce')
df_Specialty_count_m2_f22 = df_Specialty_count_m2_f22.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f22['Total-2023'] = df_Specialty_count_m2_f22['Total-2023'].astype(int)
df_Specialty_count_m2_f22['Percent-2023'] = df_Specialty_count_m2_f22['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f22.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f22.dtypes)
#print(df_Specialty_count_m2_f22.dtypes)

#print(dfAttendees_Country_Count_m2_f22.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f22.dtypes)
#print(df_Specialty_count_m2_f22.dtypes)

# EXCEL FILE
writerf22 = pd.ExcelWriter(outputExcelFile_f22, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f22.to_excel\
    (writerf22, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f22.to_excel\
    (writerf22, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f22.to_excel\
    (writerf22, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f22.to_excel\
    (writerf22, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f22.to_excel\
    (writerf22, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f22.to_excel\
    (writerf22, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f22.to_excel\
    (writerf22, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f22.to_excel\
    (writerf22, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f22.to_excel\
    (writerf22, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f22.to_excel\
    (writerf22, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f22.to_excel\
    (writerf22, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf22.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f22)

workbook.save(outputExcelFile_f22)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 42 days**********************************************')
print('************************************End of 42 days**********************************************')
print('************************************End of 42 days**********************************************')
print('************************************End of 42 days**********************************************')
print('************************************End of 42 days**********************************************')
print('************************************End of 42 days**********************************************')
print('************************************End of 42 days**********************************************')
print('************************************End of 42 days**********************************************')
print('************************************End of 42 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f23_Registrations_count = pd.DataFrame(filter_23_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f23_Registrations_count = dfd17_f23_Registrations_count.fillna('Unknown')
dfd17_f23_Registrations_count['Percent-2017'] = (dfd17_f23_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f23_Registrations_count['Percent-2017'] = dfd17_f23_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f23_Registrations_count['7DEvolution-2017'] = dfd17_f23_Registrations_count['Total-2017'] - dfd17_f22_Registrations_count['Total-2017']
#print(tab(dfd17_f23_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f23_Registrations_count = pd.DataFrame(filter_23_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f23_Registrations_count = dfd18_f23_Registrations_count.fillna('Unknown')
dfd18_f23_Registrations_count['Percent-2018'] = (dfd18_f23_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f23_Registrations_count['Percent-2018'] = dfd18_f23_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f23_Registrations_count['7DEvolution-2018'] = dfd18_f23_Registrations_count['Total-2018'] - dfd18_f22_Registrations_count['Total-2018']
#print(tab(dfd18_f23_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f23_Registrations_count = pd.DataFrame(filter_23_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f23_Registrations_count = dfd19_f23_Registrations_count.fillna('Unknown')
dfd19_f23_Registrations_count['Percent-2019'] = (dfd19_f23_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f23_Registrations_count['Percent-2019'] = dfd19_f23_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f23_Registrations_count['7DEvolution-2019'] = dfd19_f23_Registrations_count['Total-2019'] - dfd19_f22_Registrations_count['Total-2019']
#print(tab(dfd19_f23_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f23_Registrations_count = pd.DataFrame(filter_23_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f23_Registrations_count = dfd21_f23_Registrations_count.fillna('Unknown')
dfd21_f23_Registrations_count['Percent-2021'] = (dfd21_f23_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f23_Registrations_count['Percent-2021'] = dfd21_f23_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f23_Registrations_count['7DEvolution-2021'] = dfd21_f23_Registrations_count['Total-2021'] - dfd21_f22_Registrations_count['Total-2021']
#print(tab(dfd21_f23_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f23_Registrations_count = pd.DataFrame(filter_23_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f23_Registrations_count = dfd22_f23_Registrations_count.fillna('Unknown')
dfd22_f23_Registrations_count['Percent-2022'] = (dfd22_f23_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f23_Registrations_count['Percent-2022'] = dfd22_f23_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f23_Registrations_count['7DEvolution-2022'] = dfd22_f23_Registrations_count['Total-2022'] - dfd22_f22_Registrations_count['Total-2022']
#print(tab(dfd22_f23_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_Registrations_count = pd.DataFrame(filter_23_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f23_Registrations_count = dfd23_f23_Registrations_count.fillna('Unknown')
dfd23_f23_Registrations_count['Percent-2023'] = (dfd23_f23_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f23_Registrations_count['Percent-2023'] = dfd23_f23_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f23_Registrations_count['7DEvolution-2023'] = dfd23_f23_Registrations_count['Total-2023'] - dfd23_f22_Registrations_count['Total-2023']
#print(tab(dfd23_f23_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f23_RegistrationsEvolution_count = pd.DataFrame(filter_23_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f23_RegistrationsEvolution_count = dfd23_f23_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f23_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f23_Registrations_count['Total-2023'] - dfd19_f23_Registrations_count['Total-2019'])/ dfd19_f23_Registrations_count['Total-2019'].sum()) * 100
dfd23_f23_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f23_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f23_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f23 = pd.DataFrame(pd.merge(dfd17_f23_Registrations_count, dfd18_f23_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f23 = pd.DataFrame(pd.merge(dfd19_f23_Registrations_count, dfd21_f23_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f23 = pd.DataFrame(pd.merge(dfd22_f23_Registrations_count, dfd23_f23_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f23 = pd.DataFrame(pd.merge(df_Registrations_count_1_f23, df_Registrations_count_2_f23, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f23 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f23, df_Registrations_count_3_f23, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f23 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f23, dfd23_f23_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f23 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17, df_Registrations_Merge_f18, df_Registrations_Merge_f19, df_Registrations_Merge_f20,
                                           df_Registrations_Merge_f21, df_Registrations_Merge_f22, df_Registrations_Merge_f23]
Concat_Registrations_count_f1_f23 = pd.concat(ConcatFrames_Registrations_count_f1_f23)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f23  = ConcatFrames_Registrations_count_f1_f23.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f23.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f23 = filter_23_df18[filter_23_df18['New customer'] == 1]
df_NewCustomer_df19_f23 = filter_23_df19[filter_23_df19['New customer'] == 1]
df_NewCustomer_df21_f23 = filter_23_df21[filter_23_df21['New customer'] == 1]
df_NewCustomer_df22_f23 = filter_23_df22[filter_23_df22['New customer'] == 1]
df_NewCustomer_df23_f23 = filter_23_df23[filter_23_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f23.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f23.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f23.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a23_ACQRET_count = pd.DataFrame(filter_23_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f23_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f23_ACQRET_count['Percent-2018'] = (dfd18_f23_ACQRET_count['ACQ-2018'] / dfd18_f23_Registrations_count['Total-2018'].sum()) * 100
dfd18_f23_ACQRET_count['Percent-2018'] = dfd18_f23_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f23_ACQRET_count['RET-2018'] = dfd18_a23_ACQRET_count['Total-2018'] - dfd18_f23_ACQRET_count['ACQ-2018']
dfd18_f23_ACQRET_count['Percnt-2018'] = (dfd18_f23_ACQRET_count['RET-2018'] / dfd18_a23_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f23_ACQRET_count['Percnt-2018'] = dfd18_f23_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f23_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a23_ACQRET_count = pd.DataFrame(filter_23_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f23_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f23_ACQRET_count['Percent-2019'] = (dfd19_f23_ACQRET_count['ACQ-2019'] / dfd19_f23_Registrations_count['Total-2019'].sum()) * 100
dfd19_f23_ACQRET_count['Percent-2019'] = dfd19_f23_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f23_ACQRET_count['RET-2019'] = dfd19_a23_ACQRET_count['Total-2019'] - dfd19_f23_ACQRET_count['ACQ-2019']
dfd19_f23_ACQRET_count['Percnt-2019'] = (dfd19_f23_ACQRET_count['RET-2019'] / dfd19_a23_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f23_ACQRET_count['Percnt-2019'] = dfd19_f23_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f23_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a23_ACQRET_count = pd.DataFrame(filter_23_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f23_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f23_ACQRET_count['Percent-2021'] = (dfd21_f23_ACQRET_count['ACQ-2021'] / dfd21_f23_Registrations_count['Total-2021'].sum()) * 100
dfd21_f23_ACQRET_count['Percent-2021'] = dfd21_f23_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f23_ACQRET_count['RET-2021'] = dfd21_a23_ACQRET_count['Total-2021'] - dfd21_f23_ACQRET_count['ACQ-2021']
dfd21_f23_ACQRET_count['Percnt-2021'] = (dfd21_f23_ACQRET_count['RET-2021'] / dfd21_a23_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f23_ACQRET_count['Percnt-2021'] = dfd21_f23_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f23_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a23_ACQRET_count = pd.DataFrame(filter_23_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f23_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f23_ACQRET_count['Percent-2022'] = (dfd22_f23_ACQRET_count['ACQ-2022'] / dfd22_f23_Registrations_count['Total-2022'].sum()) * 100
dfd22_f23_ACQRET_count['Percent-2022'] = dfd22_f23_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f23_ACQRET_count['RET-2022'] = dfd22_a23_ACQRET_count['Total-2022'] - dfd22_f23_ACQRET_count['ACQ-2022']
dfd22_f23_ACQRET_count['Percnt-2022'] = (dfd22_f23_ACQRET_count['RET-2022'] / dfd22_a23_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f23_ACQRET_count['Percnt-2022'] = dfd22_f23_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f23_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a23_ACQRET_count = pd.DataFrame(filter_23_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f23_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f23_ACQRET_count['Percent-2023'] = (dfd23_f23_ACQRET_count['ACQ-2023'] / dfd23_f23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f23_ACQRET_count['Percent-2023'] = dfd23_f23_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f23_ACQRET_count['RET-2023'] = dfd23_a23_ACQRET_count['Total-2023'] - dfd23_f23_ACQRET_count['ACQ-2023']
dfd23_f23_ACQRET_count['Percnt-2023'] = (dfd23_f23_ACQRET_count['RET-2023'] / dfd23_a23_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f23_ACQRET_count['Percnt-2023'] = dfd23_f23_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f23_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f23 = pd.DataFrame(pd.merge(dfd18_a23_ACQRET_count, dfd18_f23_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f23 = pd.DataFrame(pd.merge(dfd19_a23_ACQRET_count, dfd19_f23_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f23 = pd.DataFrame(pd.merge(dfd21_a23_ACQRET_count, dfd21_f23_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f23 = pd.DataFrame(pd.merge(dfd22_a23_ACQRET_count, dfd22_f23_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_23_f23 = pd.DataFrame(pd.merge(dfd23_a23_ACQRET_count, dfd23_f23_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_23_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f23 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f23, df_ACQRET_count_2_f23, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f23 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f23, df_ACQRET_count_3_f23, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f23 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f23, df_ACQRET_count_4_f23, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f23 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f23, df_ACQRET_count_23_f23, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f23 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17, df_ACQRET_count_M4_f18, df_ACQRET_count_M4_f19, df_ACQRET_count_M4_f20,
                                    df_ACQRET_count_M4_f21, df_ACQRET_count_M4_f22, df_ACQRET_count_M4_f23]
Concat_ACQRET_count_f1_f23 = pd.concat(ConcatFrames_ACQRET_count_f1_f23)
#print(tab(Concat_ACQRET_count_f1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f23 = Concat_ACQRET_count_f1_f23[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f23_Revenue_calc = pd.DataFrame(filter_23_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f23_Revenue_calc['Percent-2017'] = (dfd17_f23_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f23_Revenue_calc['Percent-2017'] = dfd17_f23_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f23_Revenue_calc['7DEvolution-2017'] = dfd17_f23_Revenue_calc['Total-2017'] - dfd17_f22_Revenue_calc['Total-2017']
#print(tab(dfd17_f23_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f23_Revenue_calc = pd.DataFrame(filter_23_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f23_Revenue_calc['Percent-2018'] = (dfd18_f23_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f23_Revenue_calc['Percent-2018'] = dfd18_f23_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f23_Revenue_calc['7DEvolution-2018'] = dfd18_f23_Revenue_calc['Total-2018'] - dfd18_f22_Revenue_calc['Total-2018']
#print(tab(dfd18_f23_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f23_Revenue_calc = pd.DataFrame(filter_23_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f23_Revenue_calc['Percent-2019'] = (dfd19_f23_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f23_Revenue_calc['Percent-2019'] = dfd19_f23_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f23_Revenue_calc['7DEvolution-2019'] = dfd19_f23_Revenue_calc['Total-2019'] - dfd19_f22_Revenue_calc['Total-2019']
#print(tab(dfd19_f23_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f23_Revenue_calc = pd.DataFrame(filter_23_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f23_Revenue_calc['Percent-2021'] = (dfd21_f23_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f23_Revenue_calc['Percent-2021'] = dfd21_f23_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f23_Revenue_calc['7DEvolution-2021'] = dfd21_f23_Revenue_calc['Total-2021'] - dfd21_f22_Revenue_calc['Total-2021']
#print(tab(dfd21_f23_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f23_Revenue_calc = pd.DataFrame(filter_23_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f23_Revenue_calc['Percent-2022'] = (dfd22_f23_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f23_Revenue_calc['Percent-2022'] = dfd22_f23_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f23_Revenue_calc['7DEvolution-2022'] = dfd22_f23_Revenue_calc['Total-2022'] - dfd22_f22_Revenue_calc['Total-2022']
#print(tab(dfd22_f23_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_Revenue_calc = pd.DataFrame(filter_23_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f23_Revenue_calc['Percent-2023'] = (dfd23_f23_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f23_Revenue_calc['Percent-2023'] = dfd23_f23_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f23_Revenue_calc['7DEvolution-2023'] = dfd23_f23_Revenue_calc['Total-2023'] - dfd23_f22_Revenue_calc['Total-2023']
#print(tab(dfd23_f23_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f23_RevenueEvolution_calc = pd.DataFrame(filter_23_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f23_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f23_Revenue_calc['Total-2023'] - dfd19_f23_Revenue_calc['Total-2019'])/ dfd19_f23_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f23_RevenueEvolution_calc['Evolution-2023'] = dfd23_f23_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f23_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f23 = pd.DataFrame(pd.merge(dfd17_f23_Revenue_calc, dfd18_f23_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f23 = pd.DataFrame(pd.merge(dfd19_f23_Revenue_calc, dfd21_f23_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f23 = pd.DataFrame(pd.merge(dfd22_f23_Revenue_calc, dfd23_f23_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f23_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f23, df_Revenue_calc_2_f23, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f23Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f23_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f23_Evolution, df_Revenue_calc_3_f23, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f23Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f23 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f23_Evolution, dfd23_f23_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f23 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17, df_Revenue_calc_f18, df_Revenue_calc_f19, df_Revenue_calc_f20,
                                 df_Revenue_calc_f21, df_Revenue_calc_f22, df_Revenue_calc_f23]
Concat_REV_count_f1_f23 = pd.concat(ConcatFrames_REV_count_f1_f23)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f23_Registrations_GRDel = pd.DataFrame(filtr_23_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f23_Registrations_GRDel = dfd17_f23_Registrations_GRDel.fillna('Unknown')
dfd17_f23_Registrations_GRDel['Percent-2017'] = (dfd17_f23_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f23_Registrations_GRDel['Percent-2017'] = dfd17_f23_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f23_Registrations_GRDel['7DEvolution-2017'] = dfd17_f23_Registrations_GRDel['Total-2017'] - dfd17_f22_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f23_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f23_Registrations_GRDel = pd.DataFrame(filtr_23_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f23_Registrations_GRDel = dfd18_f23_Registrations_GRDel.fillna('Unknown')
dfd18_f23_Registrations_GRDel['Percent-2018'] = (dfd18_f23_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f23_Registrations_GRDel['Percent-2018'] = dfd18_f23_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f23_Registrations_GRDel['7DEvolution-2018'] = dfd18_f23_Registrations_GRDel['Total-2018'] - dfd18_f22_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f23_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f23_Registrations_GRDel = pd.DataFrame(filtr_23_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f23_Registrations_GRDel = dfd19_f23_Registrations_GRDel.fillna('Unknown')
dfd19_f23_Registrations_GRDel['Percent-2019'] = (dfd19_f23_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f23_Registrations_GRDel['Percent-2019'] = dfd19_f23_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f23_Registrations_GRDel['7DEvolution-2019'] = dfd19_f23_Registrations_GRDel['Total-2019'] - dfd19_f22_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f23_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f23_Registrations_GRDel = pd.DataFrame(filtr_23_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f23_Registrations_GRDel = dfd21_f23_Registrations_GRDel.fillna('Unknown')
dfd21_f23_Registrations_GRDel['Percent-2021'] = (dfd21_f23_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f23_Registrations_GRDel['Percent-2021'] = dfd21_f23_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f23_Registrations_GRDel['7DEvolution-2021'] = dfd21_f23_Registrations_GRDel['Total-2021'] - dfd21_f22_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f23_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f23_Registrations_GRDel = pd.DataFrame(filtr_23_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f23_Registrations_GRDel = dfd22_f23_Registrations_GRDel.fillna('Unknown')
dfd22_f23_Registrations_GRDel['Percent-2022'] = (dfd22_f23_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f23_Registrations_GRDel['Percent-2022'] = dfd22_f23_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f23_Registrations_GRDel['7DEvolution-2022'] = dfd22_f23_Registrations_GRDel['Total-2022'] - dfd22_f22_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f23_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_Registrations_GRDel = pd.DataFrame(filtr_23_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f23_Registrations_GRDel = dfd23_f23_Registrations_GRDel.fillna('Unknown')
dfd23_f23_Registrations_GRDel['Percent-2023'] = (dfd23_f23_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f23_Registrations_GRDel['Percent-2023'] = dfd23_f23_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f23_Registrations_GRDel['7DEvolution-2023'] = dfd23_f23_Registrations_GRDel['Total-2023'] - dfd23_f22_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f23_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f23_Registrations_Evol_GRDel = pd.DataFrame(filtr_23_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f23_Registrations_Evol_GRDel = dfd23_f23_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f23_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f23_Registrations_GRDel['Total-2023'] - dfd22_f23_Registrations_GRDel['Total-2022'])/ dfd22_f23_Registrations_GRDel['Total-2022'].sum()) * 100
#print(tab(dfd23_f23_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f23 = pd.concat([dfd17_f23_Registrations_GRDel, dfd18_f23_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f23 = pd.DataFrame(pd.merge(dfd17_f23_Registrations_GRDel, dfd18_f23_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f23 = pd.DataFrame(pd.merge(dfd19_f23_Registrations_GRDel, dfd21_f23_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f23 = pd.DataFrame(pd.merge(dfd22_f23_Registrations_GRDel, dfd23_f23_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f23 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f23, df_Registrations_GRDel_2_f23, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_23_f23 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f23, df_Registrations_GRDel_3_f23, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f23 = pd.DataFrame(pd.merge(df_Registrations_GRDel_23_f23, dfd23_f23_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f23 = df_Registrations_GRDel_f23[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f23 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17, df_Registrations_GRDel_f18, df_Registrations_GRDel_f19, df_Registrations_GRDel_f20,
                                      df_Registrations_GRDel_f21, df_Registrations_GRDel_f22, df_Registrations_GRDel_f23]
Concat_RegGRDel_count_f1_f23 = pd.concat(ConcatFrames_RegGRDel_count_f1_f23)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f23 = filtr_23_df18_GRdel[filtr_23_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f23 = filtr_23_df19_GRdel[filtr_23_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f23 = filtr_23_df21_GRdel[filtr_23_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f23 = filtr_23_df22_GRdel[filtr_23_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f23 = filtr_23_df23_GRdel[filtr_23_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f23.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f23.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a23_AC_RT_GRDel = pd.DataFrame(filtr_23_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f23_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f23.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f23_AC_RT_GRDel['Percent-2018'] = (dfd18_f23_AC_RT_GRDel['ACQ-2018'] / dfd18_f23_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f23_AC_RT_GRDel['Percent-2018'] = dfd18_f23_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f23_AC_RT_GRDel['RET-2018'] = dfd18_a23_AC_RT_GRDel['Total-2018'] - dfd18_f23_AC_RT_GRDel['ACQ-2018']
dfd18_f23_AC_RT_GRDel['Percnt-2018'] = (dfd18_f23_AC_RT_GRDel['RET-2018'] / dfd18_a23_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f23_AC_RT_GRDel['Percnt-2018'] = dfd18_f23_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f23_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a23_AC_RT_GRDel = pd.DataFrame(filtr_23_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f23_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f23.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f23_AC_RT_GRDel['Percent-2019'] = (dfd19_f23_AC_RT_GRDel['ACQ-2019'] / dfd19_f23_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f23_AC_RT_GRDel['Percent-2019'] = dfd19_f23_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f23_AC_RT_GRDel['RET-2019'] = dfd19_a23_AC_RT_GRDel['Total-2019'] - dfd19_f23_AC_RT_GRDel['ACQ-2019']
dfd19_f23_AC_RT_GRDel['Percnt-2019'] = (dfd19_f23_AC_RT_GRDel['RET-2019'] / dfd19_a23_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f23_AC_RT_GRDel['Percnt-2019'] = dfd19_f23_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f23_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a23_AC_RT_GRDel = pd.DataFrame(filtr_23_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f23_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f23.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f23_AC_RT_GRDel['Percent-2021'] = (dfd21_f23_AC_RT_GRDel['ACQ-2021'] / dfd21_f23_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f23_AC_RT_GRDel['Percent-2021'] = dfd21_f23_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f23_AC_RT_GRDel['RET-2021'] = dfd21_a23_AC_RT_GRDel['Total-2021'] - dfd21_f23_AC_RT_GRDel['ACQ-2021']
dfd21_f23_AC_RT_GRDel['Percnt-2021'] = (dfd21_f23_AC_RT_GRDel['RET-2021'] / dfd21_a23_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f23_AC_RT_GRDel['Percnt-2021'] = dfd21_f23_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f23_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a23_AC_RT_GRDel = pd.DataFrame(filtr_23_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f23_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f23.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f23_AC_RT_GRDel['Percent-2022'] = (dfd22_f23_AC_RT_GRDel['ACQ-2022'] / dfd22_f23_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f23_AC_RT_GRDel['Percent-2022'] = dfd22_f23_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f23_AC_RT_GRDel['RET-2022'] = dfd22_a23_AC_RT_GRDel['Total-2022'] - dfd22_f23_AC_RT_GRDel['ACQ-2022']
dfd22_f23_AC_RT_GRDel['Percnt-2022'] = (dfd22_f23_AC_RT_GRDel['RET-2022'] / dfd22_a23_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f23_AC_RT_GRDel['Percnt-2022'] = dfd22_f23_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f23_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a23_AC_RT_GRDel = pd.DataFrame(filtr_23_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f23_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f23.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f23_AC_RT_GRDel['Percent-2023'] = (dfd23_f23_AC_RT_GRDel['ACQ-2023'] / dfd23_f23_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f23_AC_RT_GRDel['Percent-2023'] = dfd23_f23_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f23_AC_RT_GRDel['RET-2023'] = dfd23_a23_AC_RT_GRDel['Total-2023'] - dfd23_f23_AC_RT_GRDel['ACQ-2023']
dfd23_f23_AC_RT_GRDel['Percnt-2023'] = (dfd23_f23_AC_RT_GRDel['RET-2023'] / dfd23_a23_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f23_AC_RT_GRDel['Percnt-2023'] = dfd23_f23_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f23_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f23 = pd.DataFrame(pd.merge_ordered(dfd18_a23_AC_RT_GRDel, dfd18_f23_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f23 = pd.DataFrame(pd.merge_ordered(dfd19_a23_AC_RT_GRDel, dfd19_f23_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f23 = pd.DataFrame(pd.merge_ordered(dfd21_a23_AC_RT_GRDel, dfd21_f23_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f23 = pd.DataFrame(pd.merge_ordered(dfd22_a23_AC_RT_GRDel, dfd22_f23_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_23_f23 = pd.DataFrame(pd.merge_ordered(dfd23_a23_AC_RT_GRDel, dfd23_f23_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f23 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f23, df_AC_ET_GRDel_2_f23, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f23 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f23, df_AC_ET_GRDel_3_f23, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f23 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f23, df_AC_ET_GRDel_4_f23, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f23 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f23, df_AC_ET_GRDel_23_f23, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f23 = df_AC_RT_GRDel_M4_f23[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f23 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17, df_AC_RT_GRDel_M4_f18, df_AC_RT_GRDel_M4_f19, df_AC_RT_GRDel_M4_f20,
                               df_AC_RT_GRDel_M4_f21, df_AC_RT_GRDel_M4_f22, df_AC_RT_GRDel_M4_f23]
Conct_AC_RT_GRDel_f1_f23 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f23)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_23_df17_GRdel = filtr_23_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f23_Revenu_GRDel = pd.DataFrame(filtr_23_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f23_Revenu_GRDel['Percent-2017'] = (dfd17_f23_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f23_Revenu_GRDel['Percent-2017'] = dfd17_f23_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f23_Revenu_GRDel['7DEvolution-2017'] = dfd17_f23_Revenu_GRDel['Total-2017'] - dfd17_f22_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f23_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_23_df18_GRdel = filtr_23_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f23_Revenu_GRDel = pd.DataFrame(filtr_23_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f23_Revenu_GRDel['Percent-2018'] = (dfd18_f23_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f23_Revenu_GRDel['Percent-2018'] = dfd18_f23_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f23_Revenu_GRDel['7DEvolution-2018'] = dfd18_f23_Revenu_GRDel['Total-2018'] - dfd18_f22_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f23_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_23_df19_GRdel = filtr_23_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f23_Revenu_GRDel = pd.DataFrame(filtr_23_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f23_Revenu_GRDel['Percent-2019'] = (dfd19_f23_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f23_Revenu_GRDel['Percent-2019'] = dfd19_f23_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f23_Revenu_GRDel['7DEvolution-2019'] = dfd19_f23_Revenu_GRDel['Total-2019'] - dfd19_f22_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f23_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_23_df21_GRdel = filtr_23_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f23_Revenu_GRDel = pd.DataFrame(filtr_23_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f23_Revenu_GRDel['Percent-2021'] = (dfd21_f23_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f23_Revenu_GRDel['Percent-2021'] = dfd21_f23_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f23_Revenu_GRDel['7DEvolution-2021'] = dfd21_f23_Revenu_GRDel['Total-2021'] - dfd21_f22_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f23_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_23_df22_GRdel = filtr_23_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f23_Revenu_GRDel = pd.DataFrame(filtr_23_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f23_Revenu_GRDel['Percent-2022'] = (dfd22_f23_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f23_Revenu_GRDel['Percent-2022'] = dfd22_f23_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f23_Revenu_GRDel['7DEvolution-2022'] = dfd22_f23_Revenu_GRDel['Total-2022'] - dfd22_f22_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f23_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_23_df23_GRdel = filtr_23_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f23_Revenu_GRDel = pd.DataFrame(filtr_23_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f23_Revenu_GRDel['Percent-2023'] = (dfd23_f23_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f23_Revenu_GRDel['Percent-2023'] = dfd23_f23_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f23_Revenu_GRDel['7DEvolution-2023'] = dfd23_f23_Revenu_GRDel['Total-2023'] - dfd23_f22_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f23_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f23_Revenu_Evlt_GRDel = pd.DataFrame(filtr_23_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f23_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f23_Revenu_GRDel['Total-2023'] - dfd19_f23_Revenu_GRDel['Total-2019'])/ dfd19_f23_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f23_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f23_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f23_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f23 = pd.DataFrame(pd.merge(dfd17_f23_Revenu_GRDel, dfd18_f23_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f23 = pd.DataFrame(pd.merge(dfd19_f23_Revenu_GRDel, dfd21_f23_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f23 = pd.DataFrame(pd.merge(dfd22_f23_Revenu_GRDel, dfd23_f23_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f23 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f23, df_Revenu_GRDel_2_f23, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_23_f23 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f23, df_Revenu_GRDel_3_f23, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f23 = pd.DataFrame(pd.merge(df_Revenu_GRDel_23_f23, dfd23_f23_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f23 = df_Revenu_GRDel_f23[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f23 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17, df_Revenu_GRDel_f18, df_Revenu_GRDel_f19, df_Revenu_GRDel_f20,
                             df_Revenu_GRDel_f21, df_Revenu_GRDel_f22, df_Revenu_GRDel_f23]
Conct_RV_GRDel_f1_f23 = pd.concat(ConcatFra_RV_GRDel_f1_f23)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f23_Profile_count = pd.DataFrame(filtr_23_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f23_Profile_count = dfd17_f23_Profile_count.fillna('Unknown')
dfd17_f23_Profile_count['Percent-2017'] = (dfd17_f23_Profile_count['Total-2017'] / dfd17_f23_Profile_count['Total-2017'].sum()) * 100
dfd17_f23_Profile_count['Percent-2017'] = dfd17_f23_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f23_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f23_Profile_count = pd.DataFrame(filtr_23_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f23_Profile_count = dfd18_f23_Profile_count.fillna('Unknown')
dfd18_f23_Profile_count['Percent-2018'] = (dfd18_f23_Profile_count['Total-2018'] / dfd18_f23_Profile_count['Total-2018'].sum()) * 100
dfd18_f23_Profile_count['Percent-2018'] = dfd18_f23_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f23_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f23_Profile_count = pd.DataFrame(filtr_23_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f23_Profile_count = dfd19_f23_Profile_count.fillna('Unknown')
dfd19_f23_Profile_count['Percent-2019'] = (dfd19_f23_Profile_count['Total-2019'] / dfd19_f23_Profile_count['Total-2019'].sum()) * 100
dfd19_f23_Profile_count['Percent-2019'] = dfd19_f23_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f23_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f23_Profile_count = pd.DataFrame(filtr_23_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f23_Profile_count = dfd21_f23_Profile_count.fillna('Unknown')
dfd21_f23_Profile_count['Percent-2021'] = (dfd21_f23_Profile_count['Total-2021'] / dfd21_f23_Profile_count['Total-2021'].sum()) * 100
dfd21_f23_Profile_count['Percent-2021'] = dfd21_f23_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f23_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f23_Profile_count = pd.DataFrame(filtr_23_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f23_Profile_count = dfd22_f23_Profile_count.fillna('Unknown')
dfd22_f23_Profile_count['Percent-2022'] = (dfd22_f23_Profile_count['Total-2022'] / dfd22_f23_Profile_count['Total-2022'].sum()) * 100
dfd22_f23_Profile_count['Percent-2022'] = dfd22_f23_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f23_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_Profile_count = pd.DataFrame(filtr_23_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f23_Profile_count = dfd23_f23_Profile_count.fillna('Unknown')
dfd23_f23_Profile_count['Percent-2023'] = (dfd23_f23_Profile_count['Total-2023'] / dfd23_f23_Profile_count['Total-2023'].sum()) * 100
dfd23_f23_Profile_count['Percent-2023'] = dfd23_f23_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f23_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f23 = pd.DataFrame(pd.merge(dfd17_f23_Profile_count, dfd18_f23_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f23 = pd.DataFrame(pd.merge(dfd19_f23_Profile_count, dfd21_f23_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f23 = pd.DataFrame(pd.merge(dfd22_f23_Profile_count, dfd23_f23_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f23 = pd.DataFrame(pd.merge(df_Profile_Count_1_f23, df_Profile_Count_2_f23, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f23 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f23, df_Profile_Count_3_f23, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f23 = df_Profile_Count_m2_f23.append(df_Profile_Count_m2_f23.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f23['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f23_Pass_count = pd.DataFrame(filtr_23_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f23_Pass_count = dfd17_f23_Pass_count.fillna('Unknown')
dfd17_f23_Pass_count['Percent-2017'] = (dfd17_f23_Pass_count['Total-2017'] / dfd17_f23_Pass_count['Total-2017'].sum()) * 100
dfd17_f23_Pass_count['Percent-2017'] = dfd17_f23_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f23_Pass_count = pd.DataFrame(filtr_23_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f23_Pass_count = dfd18_f23_Pass_count.fillna('Unknown')
dfd18_f23_Pass_count['Percent-2018'] = (dfd18_f23_Pass_count['Total-2018'] / dfd18_f23_Pass_count['Total-2018'].sum()) * 100
dfd18_f23_Pass_count['Percent-2018'] = dfd18_f23_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f23_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f23_Pass_count = pd.DataFrame(filtr_23_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f23_Pass_count = dfd19_f23_Pass_count.fillna('Unknown')
dfd19_f23_Pass_count['Percent-2019'] = (dfd19_f23_Pass_count['Total-2019'] / dfd19_f23_Pass_count['Total-2019'].sum()) * 100
dfd19_f23_Pass_count['Percent-2019'] = dfd19_f23_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f23_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f23_Pass_count = pd.DataFrame(filtr_23_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f23_Pass_count = dfd21_f23_Pass_count.fillna('Unknown')
dfd21_f23_Pass_count['Percent-2021'] = (dfd21_f23_Pass_count['Total-2021'] / dfd21_f23_Pass_count['Total-2021'].sum()) * 100
dfd21_f23_Pass_count['Percent-2021'] = dfd21_f23_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f23_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f23_Pass_count = pd.DataFrame(filtr_23_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f23_Pass_count = dfd22_f23_Pass_count.fillna('Unknown')
dfd22_f23_Pass_count['Percent-2022'] = (dfd22_f23_Pass_count['Total-2022'] / dfd22_f23_Pass_count['Total-2022'].sum()) * 100
dfd22_f23_Pass_count['Percent-2022'] = dfd22_f23_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f23_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_Pass_count = pd.DataFrame(filtr_23_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f23_Pass_count = dfd23_f23_Pass_count.fillna('Unknown')
dfd23_f23_Pass_count['Percent-2023'] = (dfd23_f23_Pass_count['Total-2023'] / dfd23_f23_Pass_count['Total-2023'].sum()) * 100
dfd23_f23_Pass_count['Percent-2023'] = dfd23_f23_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f23_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f23 = pd.DataFrame(pd.merge(dfd17_f23_Pass_count, dfd18_f23_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f23 = pd.DataFrame(pd.merge(dfd19_f23_Pass_count, dfd21_f23_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f23 = pd.DataFrame(pd.merge(dfd22_f23_Pass_count, dfd23_f23_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f23 = pd.DataFrame(pd.merge(df_Pass_Count_1_f23, df_Pass_Count_2_f23, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f23 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f23, df_Pass_Count_3_f23, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f23 = df_Pass_Count_m2_f23.append(df_Pass_Count_m2_f23.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f23['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f23_Attendees_Country_count = pd.DataFrame(filtr_23_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f23_Attendees_Country_count = dfd17_f23_Attendees_Country_count.fillna('Unknown')
dfd17_f23_Attendees_Country_count['Percent-2017'] = (dfd17_f23_Attendees_Country_count['Total-2017'] / dfd17_f23_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f23_Attendees_Country_count['Percent-2017'] = dfd17_f23_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f23_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f23_Attendees_Country_count = pd.DataFrame(filtr_23_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f23_Attendees_Country_count = dfd18_f23_Attendees_Country_count.fillna('Unknown')
dfd18_f23_Attendees_Country_count['Percent-2018'] = (dfd18_f23_Attendees_Country_count['Total-2018'] / dfd18_f23_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f23_Attendees_Country_count['Percent-2018'] = dfd18_f23_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f23_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f23_Attendees_Country_count = pd.DataFrame(filtr_23_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f23_Attendees_Country_count = dfd19_f23_Attendees_Country_count.fillna('Unknown')
dfd19_f23_Attendees_Country_count['Percent-2019'] = (dfd19_f23_Attendees_Country_count['Total-2019'] / dfd19_f23_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f23_Attendees_Country_count['Percent-2019'] = dfd19_f23_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f23_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f23_Attendees_Country_count = pd.DataFrame(filtr_23_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f23_Attendees_Country_count = dfd21_f23_Attendees_Country_count.fillna('Unknown')
dfd21_f23_Attendees_Country_count['Percent-2021'] = (dfd21_f23_Attendees_Country_count['Total-2021'] / dfd21_f23_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f23_Attendees_Country_count['Percent-2021'] = dfd21_f23_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f23_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f23_Attendees_Country_count = pd.DataFrame(filtr_23_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f23_Attendees_Country_count = dfd22_f23_Attendees_Country_count.fillna('Unknown')
dfd22_f23_Attendees_Country_count['Percent-2022'] = (dfd22_f23_Attendees_Country_count['Total-2022'] / dfd22_f23_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f23_Attendees_Country_count['Percent-2022'] = dfd22_f23_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f23_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_Attendees_Country_count = pd.DataFrame(filtr_23_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f23_Attendees_Country_count = dfd23_f23_Attendees_Country_count.fillna('Unknown')
dfd23_f23_Attendees_Country_count['Percent-2023'] = (dfd23_f23_Attendees_Country_count['Total-2023'] / dfd23_f23_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f23_Attendees_Country_count['Percent-2023'] = dfd23_f23_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f23_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f23 = pd.DataFrame(pd.merge(dfd17_f23_Attendees_Country_count, dfd18_f23_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f23 = pd.DataFrame(pd.merge(dfd19_f23_Attendees_Country_count, dfd21_f23_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f23 = pd.DataFrame(pd.merge(dfd22_f23_Attendees_Country_count, dfd23_f23_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f23 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f23, dfAttendees_Country_Count_2_f23, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f23.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f23 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f23, dfAttendees_Country_Count_3_f23, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f23 = dfAttendees_Country_Count_m2_f23.append(dfAttendees_Country_Count_m2_f23.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f23['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f23_ATTENDEES_AREAS_count = pd.DataFrame(filtr_23_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f23_ATTENDEES_AREAS_count = dfd17_f23_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f23_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f23_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f23_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f23_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f23_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f23_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f23_ATTENDEES_AREAS_count = pd.DataFrame(filtr_23_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f23_ATTENDEES_AREAS_count = dfd18_f23_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f23_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f23_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f23_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f23_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f23_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f23_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f23_ATTENDEES_AREAS_count = pd.DataFrame(filtr_23_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f23_ATTENDEES_AREAS_count = dfd19_f23_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f23_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f23_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f23_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f23_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f23_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f23_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f23_ATTENDEES_AREAS_count = pd.DataFrame(filtr_23_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f23_ATTENDEES_AREAS_count = dfd21_f23_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f23_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f23_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f23_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f23_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f23_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f23_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f23_ATTENDEES_AREAS_count = pd.DataFrame(filtr_23_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f23_ATTENDEES_AREAS_count = dfd22_f23_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f23_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f23_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f23_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f23_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f23_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f23_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_ATTENDEES_AREAS_count = pd.DataFrame(filtr_23_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f23_ATTENDEES_AREAS_count = dfd23_f23_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f23_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f23_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f23_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f23_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f23_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f23_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f23 = pd.DataFrame(pd.merge(dfd17_f23_ATTENDEES_AREAS_count, dfd18_f23_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f23 = pd.DataFrame(pd.merge(dfd19_f23_ATTENDEES_AREAS_count, dfd21_f23_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f23 = pd.DataFrame(pd.merge(dfd22_f23_ATTENDEES_AREAS_count, dfd23_f23_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f23.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f23 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f23, df_ATTENDEES_AREAS_count_2_f23, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f23 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f23, df_ATTENDEES_AREAS_count_3_f23, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f23 = df_ATTENDEES_AREAS_count_m2_f23.append(df_ATTENDEES_AREAS_count_m2_f23.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f23['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f23_Attendees_Specialty_count = pd.DataFrame(filtr_23_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f23_Attendees_Specialty_count = dfd17_f23_Attendees_Specialty_count.fillna('Unknown')
dfd17_f23_Attendees_Specialty_count['Percent-2017'] = (dfd17_f23_Attendees_Specialty_count['Total-2017'] / dfd17_f23_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f23_Attendees_Specialty_count['Percent-2017'] = dfd17_f23_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f23_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f23_Attendees_Specialty_count = pd.DataFrame(filtr_23_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f23_Attendees_Specialty_count = dfd18_f23_Attendees_Specialty_count.fillna('Unknown')
dfd18_f23_Attendees_Specialty_count['Percent-2018'] = (dfd18_f23_Attendees_Specialty_count['Total-2018'] / dfd18_f23_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f23_Attendees_Specialty_count['Percent-2018'] = dfd18_f23_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f23_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f23_Attendees_Specialty_count = pd.DataFrame(filtr_23_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f23_Attendees_Specialty_count = dfd19_f23_Attendees_Specialty_count.fillna('Unknown')
dfd19_f23_Attendees_Specialty_count['Percent-2019'] = (dfd19_f23_Attendees_Specialty_count['Total-2019'] / dfd19_f23_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f23_Attendees_Specialty_count['Percent-2019'] = dfd19_f23_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f23_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f23_Attendees_Specialty_count = pd.DataFrame(filtr_23_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f23_Attendees_Specialty_count = dfd21_f23_Attendees_Specialty_count.fillna('Unknown')
dfd21_f23_Attendees_Specialty_count['Percent-2021'] = (dfd21_f23_Attendees_Specialty_count['Total-2021'] / dfd21_f23_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f23_Attendees_Specialty_count['Percent-2021'] = dfd21_f23_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f23_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f23_Attendees_Specialty_count = pd.DataFrame(filtr_23_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f23_Attendees_Specialty_count = dfd22_f23_Attendees_Specialty_count.fillna('Unknown')
dfd22_f23_Attendees_Specialty_count['Percent-2022'] = (dfd22_f23_Attendees_Specialty_count['Total-2022'] / dfd22_f23_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f23_Attendees_Specialty_count['Percent-2022'] = dfd22_f23_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f23_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f23_Attendees_Specialty_count = pd.DataFrame(filtr_23_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f23_Attendees_Specialty_count = dfd23_f23_Attendees_Specialty_count.fillna('Unknown')
dfd23_f23_Attendees_Specialty_count['Percent-2023'] = (dfd23_f23_Attendees_Specialty_count['Total-2023'] / dfd23_f23_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f23_Attendees_Specialty_count['Percent-2023'] = dfd23_f23_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f23_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f23 = pd.DataFrame(pd.merge(dfd17_f23_Attendees_Specialty_count, dfd18_f23_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f23 = pd.DataFrame(pd.merge(dfd19_f23_Attendees_Specialty_count, dfd21_f23_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f23 = pd.DataFrame(pd.merge(dfd22_f23_Attendees_Specialty_count, dfd23_f23_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f23 = pd.DataFrame(pd.merge(df_Specialty_count_1_f23, df_Specialty_count_2_f23, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f23.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f23 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f23, df_Specialty_count_3_f23, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f23 = df_Specialty_count_m2_f23.append(df_Specialty_count_m2_f23.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f23['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f23['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f23['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f23 = Concat_Registrations_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f23['Total-2017'] = Concat_Registrations_count_f1_f23['Total-2017'].astype(int)
Concat_Registrations_count_f1_f23['Percent-2017'] = Concat_Registrations_count_f1_f23['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f23['7DEvolution-2017'] = Concat_Registrations_count_f1_f23['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f23['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f23['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f23 = Concat_Registrations_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f23['Total-2018'] = Concat_Registrations_count_f1_f23['Total-2018'].astype(int)
Concat_Registrations_count_f1_f23['Percent-2018'] = Concat_Registrations_count_f1_f23['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f23['7DEvolution-2018'] = Concat_Registrations_count_f1_f23['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f23['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f23['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f23 = Concat_Registrations_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f23['Total-2019'] = Concat_Registrations_count_f1_f23['Total-2019'].astype(int)
Concat_Registrations_count_f1_f23['Percent-2019'] = Concat_Registrations_count_f1_f23['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f23['7DEvolution-2019'] = Concat_Registrations_count_f1_f23['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f23['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f23['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f23 = Concat_Registrations_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f23['Total-2021'] = Concat_Registrations_count_f1_f23['Total-2021'].astype(int)
Concat_Registrations_count_f1_f23['Percent-2021'] = Concat_Registrations_count_f1_f23['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f23['7DEvolution-2021'] = Concat_Registrations_count_f1_f23['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f23['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f23['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f23 = Concat_Registrations_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f23['Total-2022'] = Concat_Registrations_count_f1_f23['Total-2022'].astype(int)
Concat_Registrations_count_f1_f23['Percent-2022'] = Concat_Registrations_count_f1_f23['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f23['7DEvolution-2022'] = Concat_Registrations_count_f1_f23['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f23['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f23['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f23 = Concat_Registrations_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f23['Total-2023'] = Concat_Registrations_count_f1_f23['Total-2023'].astype(int)
Concat_Registrations_count_f1_f23['Percent-2023'] = Concat_Registrations_count_f1_f23['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f23['7DEvolution-2023'] = Concat_Registrations_count_f1_f23['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f23['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f23['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f23 = Concat_ACQRET_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f23['Total-2018'] = Concat_ACQRET_count_f1_f23['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f23['ACQ-2018'] = Concat_ACQRET_count_f1_f23['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f23['Percent-2018'] = Concat_ACQRET_count_f1_f23['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f23['RET-2018'] = Concat_ACQRET_count_f1_f23['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f23['Percnt-2018'] = Concat_ACQRET_count_f1_f23['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f23['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f23['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f23 = Concat_ACQRET_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f23['Total-2019'] = Concat_ACQRET_count_f1_f23['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f23['ACQ-2019'] = Concat_ACQRET_count_f1_f23['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f23['Percent-2019'] = Concat_ACQRET_count_f1_f23['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f23['RET-2019'] = Concat_ACQRET_count_f1_f23['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f23['Percnt-2019'] = Concat_ACQRET_count_f1_f23['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f23['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f23['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f23 = Concat_ACQRET_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f23['Total-2021'] = Concat_ACQRET_count_f1_f23['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f23['ACQ-2021'] = Concat_ACQRET_count_f1_f23['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f23['Percent-2021'] = Concat_ACQRET_count_f1_f23['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f23['RET-2021'] = Concat_ACQRET_count_f1_f23['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f23['Percnt-2021'] = Concat_ACQRET_count_f1_f23['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f23['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f23['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f23 = Concat_ACQRET_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f23['Total-2022'] = Concat_ACQRET_count_f1_f23['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f23['ACQ-2022'] = Concat_ACQRET_count_f1_f23['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f23['Percent-2022'] = Concat_ACQRET_count_f1_f23['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f23['RET-2022'] = Concat_ACQRET_count_f1_f23['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f23['Percnt-2022'] = Concat_ACQRET_count_f1_f23['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f23['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f23['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f23 = Concat_ACQRET_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f23['Total-2023'] = Concat_ACQRET_count_f1_f23['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f23['ACQ-2023'] = Concat_ACQRET_count_f1_f23['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f23['Percent-2023'] = Concat_ACQRET_count_f1_f23['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f23['RET-2023'] = Concat_ACQRET_count_f1_f23['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f23['Percnt-2023'] = Concat_ACQRET_count_f1_f23['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f23['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f23['Total-2017'],errors='coerce')
Concat_REV_count_f1_f23 = Concat_REV_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f23['Total-2017'] = Concat_REV_count_f1_f23['Total-2017'].astype(int)
Concat_REV_count_f1_f23['Percent-2017'] = Concat_REV_count_f1_f23['Percent-2017'].astype(float)
Concat_REV_count_f1_f23['7DEvolution-2017'] = Concat_REV_count_f1_f23['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f23['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f23['Total-2018'],errors='coerce')
Concat_REV_count_f1_f23 = Concat_REV_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f23['Total-2018'] = Concat_REV_count_f1_f23['Total-2018'].astype(int)
Concat_REV_count_f1_f23['Percent-2018'] = Concat_REV_count_f1_f23['Percent-2018'].astype(float)
Concat_REV_count_f1_f23['7DEvolution-2018'] = Concat_REV_count_f1_f23['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f23['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f23['Total-2019'],errors='coerce')
Concat_REV_count_f1_f23 = Concat_REV_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f23['Total-2019'] = Concat_REV_count_f1_f23['Total-2019'].astype(int)
Concat_REV_count_f1_f23['Percent-2019'] = Concat_REV_count_f1_f23['Percent-2019'].astype(float)
Concat_REV_count_f1_f23['7DEvolution-2019'] = Concat_REV_count_f1_f23['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f23['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f23['Total-2022'],errors='coerce')
Concat_REV_count_f1_f23 = Concat_REV_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f23['Total-2022'] = Concat_REV_count_f1_f23['Total-2022'].astype(int)
Concat_REV_count_f1_f23['Percent-2022'] = Concat_REV_count_f1_f23['Percent-2022'].astype(float)
Concat_REV_count_f1_f23['7DEvolution-2022'] = Concat_REV_count_f1_f23['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f23['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f23['Total-2023'],errors='coerce')
Concat_REV_count_f1_f23 = Concat_REV_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f23['Total-2023'] = Concat_REV_count_f1_f23['Total-2023'].astype(int)
Concat_REV_count_f1_f23['Percent-2023'] = Concat_REV_count_f1_f23['Percent-2023'].astype(float)
Concat_REV_count_f1_f23['7DEvolution-2023'] = Concat_REV_count_f1_f23['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f23['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f23['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f23 = Concat_RegGRDel_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f23['Total-2017'] = Concat_RegGRDel_count_f1_f23['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f23['Percent-2017'] = Concat_RegGRDel_count_f1_f23['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f23['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f23['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f23['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f23['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f23 = Concat_RegGRDel_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f23['Total-2018'] = Concat_RegGRDel_count_f1_f23['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f23['Percent-2018'] = Concat_RegGRDel_count_f1_f23['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f23['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f23['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f23['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f23['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f23 = Concat_RegGRDel_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f23['Total-2019'] = Concat_RegGRDel_count_f1_f23['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f23['Percent-2019'] = Concat_RegGRDel_count_f1_f23['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f23['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f23['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f23['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f23['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f23 = Concat_RegGRDel_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f23['Total-2021'] = Concat_RegGRDel_count_f1_f23['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f23['Percent-2021'] = Concat_RegGRDel_count_f1_f23['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f23['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f23['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f23['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f23['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f23 = Concat_RegGRDel_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f23['Total-2022'] = Concat_RegGRDel_count_f1_f23['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f23['Percent-2022'] = Concat_RegGRDel_count_f1_f23['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f23['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f23['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f23['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f23['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f23 = Concat_RegGRDel_count_f1_f23.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f23['Total-2023'] = Concat_RegGRDel_count_f1_f23['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f23['Percent-2023'] = Concat_RegGRDel_count_f1_f23['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f23['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f23['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f23['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f23['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f23 = Conct_AC_RT_GRDel_f1_f23.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f23['Total-2018'] = Conct_AC_RT_GRDel_f1_f23['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f23['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f23['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f23['Percent-2018'] = Conct_AC_RT_GRDel_f1_f23['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f23['RET-2018'] = Conct_AC_RT_GRDel_f1_f23['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f23['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f23['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f23['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f23['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f23 = Conct_AC_RT_GRDel_f1_f23.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f23['Total-2019'] = Conct_AC_RT_GRDel_f1_f23['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f23['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f23['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f23['Percent-2019'] = Conct_AC_RT_GRDel_f1_f23['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f23['RET-2019'] = Conct_AC_RT_GRDel_f1_f23['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f23['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f23['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f23['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f23['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f23 = Conct_AC_RT_GRDel_f1_f23.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f23['Total-2021'] = Conct_AC_RT_GRDel_f1_f23['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f23['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f23['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f23['Percent-2021'] = Conct_AC_RT_GRDel_f1_f23['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f23['RET-2021'] = Conct_AC_RT_GRDel_f1_f23['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f23['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f23['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f23['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f23['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f23 = Conct_AC_RT_GRDel_f1_f23.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f23['Total-2022'] = Conct_AC_RT_GRDel_f1_f23['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f23['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f23['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f23['Percent-2022'] = Conct_AC_RT_GRDel_f1_f23['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f23['RET-2022'] = Conct_AC_RT_GRDel_f1_f23['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f23['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f23['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f23['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f23['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f23 = Conct_AC_RT_GRDel_f1_f23.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f23['Total-2023'] = Conct_AC_RT_GRDel_f1_f23['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f23['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f23['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f23['Percent-2023'] = Conct_AC_RT_GRDel_f1_f23['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f23['RET-2023'] = Conct_AC_RT_GRDel_f1_f23['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f23['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f23['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f23['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f23['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f23 = Conct_RV_GRDel_f1_f23.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f23['Total-2017'] = Conct_RV_GRDel_f1_f23['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f23['Percent-2017'] = Conct_RV_GRDel_f1_f23['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f23['7DEvolution-2017'] = Conct_RV_GRDel_f1_f23['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f23['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f23['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f23 = Conct_RV_GRDel_f1_f23.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f23['Total-2018'] = Conct_RV_GRDel_f1_f23['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f23['Percent-2018'] = Conct_RV_GRDel_f1_f23['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f23['7DEvolution-2018'] = Conct_RV_GRDel_f1_f23['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f23['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f23['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f23 = Conct_RV_GRDel_f1_f23.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f23['Total-2019'] = Conct_RV_GRDel_f1_f23['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f23['Percent-2019'] = Conct_RV_GRDel_f1_f23['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f23['7DEvolution-2019'] = Conct_RV_GRDel_f1_f23['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f23['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f23['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f23 = Conct_RV_GRDel_f1_f23.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f23['Total-2022'] = Conct_RV_GRDel_f1_f23['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f23['Percent-2022'] = Conct_RV_GRDel_f1_f23['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f23['7DEvolution-2022'] = Conct_RV_GRDel_f1_f23['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f23['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f23['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f23 = Conct_RV_GRDel_f1_f23.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f23['Total-2023'] = Conct_RV_GRDel_f1_f23['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f23['Percent-2023'] = Conct_RV_GRDel_f1_f23['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f23['7DEvolution-2023'] = Conct_RV_GRDel_f1_f23['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f23['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f23['Total-2017'],errors='coerce')
df_Profile_Count_m2_f23 = df_Profile_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f23['Total-2017'] = df_Profile_Count_m2_f23['Total-2017'].astype(int)
df_Profile_Count_m2_f23['Percent-2017'] = df_Profile_Count_m2_f23['Percent-2017'].astype(float)

df_Profile_Count_m2_f23['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f23['Total-2018'],errors='coerce')
df_Profile_Count_m2_f23 = df_Profile_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f23['Total-2018'] = df_Profile_Count_m2_f23['Total-2018'].astype(int)
df_Profile_Count_m2_f23['Percent-2018'] = df_Profile_Count_m2_f23['Percent-2018'].astype(float)

df_Profile_Count_m2_f23['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f23['Total-2019'],errors='coerce')
df_Profile_Count_m2_f23 = df_Profile_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f23['Total-2019'] = df_Profile_Count_m2_f23['Total-2019'].astype(int)
df_Profile_Count_m2_f23['Percent-2019'] = df_Profile_Count_m2_f23['Percent-2019'].astype(float)

df_Profile_Count_m2_f23['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f23['Total-2021'],errors='coerce')
df_Profile_Count_m2_f23 = df_Profile_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f23['Total-2021'] = df_Profile_Count_m2_f23['Total-2021'].astype(int)
df_Profile_Count_m2_f23['Percent-2021'] = df_Profile_Count_m2_f23['Percent-2021'].astype(float)

df_Profile_Count_m2_f23['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f23['Total-2022'],errors='coerce')
df_Profile_Count_m2_f23 = df_Profile_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f23['Total-2022'] = df_Profile_Count_m2_f23['Total-2022'].astype(int)
df_Profile_Count_m2_f23['Percent-2022'] = df_Profile_Count_m2_f23['Percent-2022'].astype(float)

df_Profile_Count_m2_f23['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f23['Total-2023'],errors='coerce')
df_Profile_Count_m2_f23 = df_Profile_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f23['Total-2023'] = df_Profile_Count_m2_f23['Total-2023'].astype(int)
df_Profile_Count_m2_f23['Percent-2023'] = df_Profile_Count_m2_f23['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f23['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f23['Total-2017'],errors='coerce')
df_Pass_Count_m2_f23 = df_Pass_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f23['Total-2017'] = df_Pass_Count_m2_f23['Total-2017'].astype(int)
df_Pass_Count_m2_f23['Percent-2017'] = df_Pass_Count_m2_f23['Percent-2017'].astype(float)

df_Pass_Count_m2_f23['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f23['Total-2018'],errors='coerce')
df_Pass_Count_m2_f23 = df_Pass_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f23['Total-2018'] = df_Pass_Count_m2_f23['Total-2018'].astype(int)
df_Pass_Count_m2_f23['Percent-2018'] = df_Pass_Count_m2_f23['Percent-2018'].astype(float)

df_Pass_Count_m2_f23['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f23['Total-2019'],errors='coerce')
df_Pass_Count_m2_f23 = df_Pass_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f23['Total-2019'] = df_Pass_Count_m2_f23['Total-2019'].astype(int)
df_Pass_Count_m2_f23['Percent-2019'] = df_Pass_Count_m2_f23['Percent-2019'].astype(float)

df_Pass_Count_m2_f23['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f23['Total-2021'],errors='coerce')
df_Pass_Count_m2_f23 = df_Pass_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f23['Total-2021'] = df_Pass_Count_m2_f23['Total-2021'].astype(int)
df_Pass_Count_m2_f23['Percent-2021'] = df_Pass_Count_m2_f23['Percent-2021'].astype(float)

df_Pass_Count_m2_f23['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f23['Total-2022'],errors='coerce')
df_Pass_Count_m2_f23 = df_Pass_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f23['Total-2022'] = df_Pass_Count_m2_f23['Total-2022'].astype(int)
df_Pass_Count_m2_f23['Percent-2022'] = df_Pass_Count_m2_f23['Percent-2022'].astype(float)

df_Pass_Count_m2_f23['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f23['Total-2023'],errors='coerce')
df_Pass_Count_m2_f23 = df_Pass_Count_m2_f23.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f23['Total-2023'] = df_Pass_Count_m2_f23['Total-2023'].astype(int)
df_Pass_Count_m2_f23['Percent-2023'] = df_Pass_Count_m2_f23['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f23['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f23['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f23 = dfAttendees_Country_Count_m2_f23.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f23['Total-2017'] = dfAttendees_Country_Count_m2_f23['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f23['Percent-2017'] = dfAttendees_Country_Count_m2_f23['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f23['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f23['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f23 = dfAttendees_Country_Count_m2_f23.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f23['Total-2018'] = dfAttendees_Country_Count_m2_f23['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f23['Percent-2018'] = dfAttendees_Country_Count_m2_f23['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f23['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f23['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f23 = dfAttendees_Country_Count_m2_f23.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f23['Total-2019'] = dfAttendees_Country_Count_m2_f23['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f23['Percent-2019'] = dfAttendees_Country_Count_m2_f23['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f23['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f23['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f23 = dfAttendees_Country_Count_m2_f23.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f23['Total-2021'] = dfAttendees_Country_Count_m2_f23['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f23['Percent-2021'] = dfAttendees_Country_Count_m2_f23['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f23['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f23['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f23 = dfAttendees_Country_Count_m2_f23.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f23['Total-2022'] = dfAttendees_Country_Count_m2_f23['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f23['Percent-2022'] = dfAttendees_Country_Count_m2_f23['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f23['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f23['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f23 = dfAttendees_Country_Count_m2_f23.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f23['Total-2023'] = dfAttendees_Country_Count_m2_f23['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f23['Percent-2023'] = dfAttendees_Country_Count_m2_f23['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f23['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f23['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f23 = df_ATTENDEES_AREAS_count_m2_f23.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f23['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f23['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f23['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f23['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f23['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f23['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f23 = df_ATTENDEES_AREAS_count_m2_f23.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f23['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f23['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f23['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f23['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f23['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f23['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f23 = df_ATTENDEES_AREAS_count_m2_f23.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f23['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f23['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f23['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f23['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f23['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f23['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f23 = df_ATTENDEES_AREAS_count_m2_f23.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f23['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f23['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f23['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f23['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f23['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f23['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f23 = df_ATTENDEES_AREAS_count_m2_f23.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f23['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f23['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f23['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f23['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f23['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f23['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f23 = df_ATTENDEES_AREAS_count_m2_f23.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f23['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f23['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f23['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f23['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f23['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f23['Total-2017'],errors='coerce')
df_Specialty_count_m2_f23 = df_Specialty_count_m2_f23.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f23['Total-2017'] = df_Specialty_count_m2_f23['Total-2017'].astype(int)
df_Specialty_count_m2_f23['Percent-2017'] = df_Specialty_count_m2_f23['Percent-2017'].astype(float)

df_Specialty_count_m2_f23['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f23['Total-2018'],errors='coerce')
df_Specialty_count_m2_f23 = df_Specialty_count_m2_f23.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f23['Total-2018'] = df_Specialty_count_m2_f23['Total-2018'].astype(int)
df_Specialty_count_m2_f23['Percent-2018'] = df_Specialty_count_m2_f23['Percent-2018'].astype(float)

df_Specialty_count_m2_f23['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f23['Total-2019'],errors='coerce')
df_Specialty_count_m2_f23 = df_Specialty_count_m2_f23.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f23['Total-2019'] = df_Specialty_count_m2_f23['Total-2019'].astype(int)
df_Specialty_count_m2_f23['Percent-2019'] = df_Specialty_count_m2_f23['Percent-2019'].astype(float)

df_Specialty_count_m2_f23['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f23['Total-2021'],errors='coerce')
df_Specialty_count_m2_f23 = df_Specialty_count_m2_f23.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f23['Total-2021'] = df_Specialty_count_m2_f23['Total-2021'].astype(int)
df_Specialty_count_m2_f23['Percent-2021'] = df_Specialty_count_m2_f23['Percent-2021'].astype(float)

df_Specialty_count_m2_f23['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f23['Total-2022'],errors='coerce')
df_Specialty_count_m2_f23 = df_Specialty_count_m2_f23.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f23['Total-2022'] = df_Specialty_count_m2_f23['Total-2022'].astype(int)
df_Specialty_count_m2_f23['Percent-2022'] = df_Specialty_count_m2_f23['Percent-2022'].astype(float)

df_Specialty_count_m2_f23['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f23['Total-2023'],errors='coerce')
df_Specialty_count_m2_f23 = df_Specialty_count_m2_f23.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f23['Total-2023'] = df_Specialty_count_m2_f23['Total-2023'].astype(int)
df_Specialty_count_m2_f23['Percent-2023'] = df_Specialty_count_m2_f23['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f23.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f23.dtypes)
#print(df_Specialty_count_m2_f23.dtypes)

#print(dfAttendees_Country_Count_m2_f23.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f23.dtypes)
#print(df_Specialty_count_m2_f23.dtypes)

# EXCEL FILE
writerf23 = pd.ExcelWriter(outputExcelFile_f23, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f23.to_excel\
    (writerf23, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f23.to_excel\
    (writerf23, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f23.to_excel\
    (writerf23, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f23.to_excel\
    (writerf23, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f23.to_excel\
    (writerf23, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f23.to_excel\
    (writerf23, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f23.to_excel\
    (writerf23, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f23.to_excel\
    (writerf23, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f23.to_excel\
    (writerf23, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f23.to_excel\
    (writerf23, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f23.to_excel\
    (writerf23, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf23.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f23)

workbook.save(outputExcelFile_f23)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 35 days**********************************************')
print('************************************End of 35 days**********************************************')
print('************************************End of 35 days**********************************************')
print('************************************End of 35 days**********************************************')
print('************************************End of 35 days**********************************************')
print('************************************End of 35 days**********************************************')
print('************************************End of 35 days**********************************************')
print('************************************End of 35 days**********************************************')
print('************************************End of 35 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f24_Registrations_count = pd.DataFrame(filter_24_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f24_Registrations_count = dfd17_f24_Registrations_count.fillna('Unknown')
dfd17_f24_Registrations_count['Percent-2017'] = (dfd17_f24_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f24_Registrations_count['Percent-2017'] = dfd17_f24_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f24_Registrations_count['7DEvolution-2017'] = dfd17_f24_Registrations_count['Total-2017'] - dfd17_f23_Registrations_count['Total-2017']
#print(tab(dfd17_f24_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f24_Registrations_count = pd.DataFrame(filter_24_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f24_Registrations_count = dfd18_f24_Registrations_count.fillna('Unknown')
dfd18_f24_Registrations_count['Percent-2018'] = (dfd18_f24_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f24_Registrations_count['Percent-2018'] = dfd18_f24_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f24_Registrations_count['7DEvolution-2018'] = dfd18_f24_Registrations_count['Total-2018'] - dfd18_f23_Registrations_count['Total-2018']
#print(tab(dfd18_f24_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f24_Registrations_count = pd.DataFrame(filter_24_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f24_Registrations_count = dfd19_f24_Registrations_count.fillna('Unknown')
dfd19_f24_Registrations_count['Percent-2019'] = (dfd19_f24_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f24_Registrations_count['Percent-2019'] = dfd19_f24_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f24_Registrations_count['7DEvolution-2019'] = dfd19_f24_Registrations_count['Total-2019'] - dfd19_f23_Registrations_count['Total-2019']
#print(tab(dfd19_f24_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f24_Registrations_count = pd.DataFrame(filter_24_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f24_Registrations_count = dfd21_f24_Registrations_count.fillna('Unknown')
dfd21_f24_Registrations_count['Percent-2021'] = (dfd21_f24_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f24_Registrations_count['Percent-2021'] = dfd21_f24_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f24_Registrations_count['7DEvolution-2021'] = dfd21_f24_Registrations_count['Total-2021'] - dfd21_f23_Registrations_count['Total-2021']
#print(tab(dfd21_f24_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f24_Registrations_count = pd.DataFrame(filter_24_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f24_Registrations_count = dfd22_f24_Registrations_count.fillna('Unknown')
dfd22_f24_Registrations_count['Percent-2022'] = (dfd22_f24_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f24_Registrations_count['Percent-2022'] = dfd22_f24_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f24_Registrations_count['7DEvolution-2022'] = dfd22_f24_Registrations_count['Total-2022'] - dfd22_f23_Registrations_count['Total-2022']
#print(tab(dfd22_f24_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_Registrations_count = pd.DataFrame(filter_24_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f24_Registrations_count = dfd23_f24_Registrations_count.fillna('Unknown')
dfd23_f24_Registrations_count['Percent-2023'] = (dfd23_f24_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f24_Registrations_count['Percent-2023'] = dfd23_f24_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f24_Registrations_count['7DEvolution-2023'] = dfd23_f24_Registrations_count['Total-2023'] - dfd23_f23_Registrations_count['Total-2023']
#print(tab(dfd23_f24_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f24_RegistrationsEvolution_count = pd.DataFrame(filter_24_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f24_RegistrationsEvolution_count = dfd23_f24_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f24_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f24_Registrations_count['Total-2023'] - dfd19_f24_Registrations_count['Total-2019'])/ dfd19_f24_Registrations_count['Total-2019'].sum()) * 100
dfd23_f24_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f24_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f24_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f24 = pd.DataFrame(pd.merge(dfd17_f24_Registrations_count, dfd18_f24_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f24 = pd.DataFrame(pd.merge(dfd19_f24_Registrations_count, dfd21_f24_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f24 = pd.DataFrame(pd.merge(dfd22_f24_Registrations_count, dfd23_f24_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f24 = pd.DataFrame(pd.merge(df_Registrations_count_1_f24, df_Registrations_count_2_f24, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f24 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f24, df_Registrations_count_3_f24, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f24 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f24, dfd23_f24_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f24 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17, df_Registrations_Merge_f18, df_Registrations_Merge_f19, df_Registrations_Merge_f20,
                                           df_Registrations_Merge_f21, df_Registrations_Merge_f22, df_Registrations_Merge_f23, df_Registrations_Merge_f24]
Concat_Registrations_count_f1_f24 = pd.concat(ConcatFrames_Registrations_count_f1_f24)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f24  = ConcatFrames_Registrations_count_f1_f24.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f24.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f24 = filter_24_df18[filter_24_df18['New customer'] == 1]
df_NewCustomer_df19_f24 = filter_24_df19[filter_24_df19['New customer'] == 1]
df_NewCustomer_df21_f24 = filter_24_df21[filter_24_df21['New customer'] == 1]
df_NewCustomer_df22_f24 = filter_24_df22[filter_24_df22['New customer'] == 1]
df_NewCustomer_df23_f24 = filter_24_df23[filter_24_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f24.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f24.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f24.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a24_ACQRET_count = pd.DataFrame(filter_24_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f24_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f24.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f24_ACQRET_count['Percent-2018'] = (dfd18_f24_ACQRET_count['ACQ-2018'] / dfd18_f24_Registrations_count['Total-2018'].sum()) * 100
dfd18_f24_ACQRET_count['Percent-2018'] = dfd18_f24_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f24_ACQRET_count['RET-2018'] = dfd18_a24_ACQRET_count['Total-2018'] - dfd18_f24_ACQRET_count['ACQ-2018']
dfd18_f24_ACQRET_count['Percnt-2018'] = (dfd18_f24_ACQRET_count['RET-2018'] / dfd18_a24_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f24_ACQRET_count['Percnt-2018'] = dfd18_f24_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f24_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a24_ACQRET_count = pd.DataFrame(filter_24_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f24_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f24.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f24_ACQRET_count['Percent-2019'] = (dfd19_f24_ACQRET_count['ACQ-2019'] / dfd19_f24_Registrations_count['Total-2019'].sum()) * 100
dfd19_f24_ACQRET_count['Percent-2019'] = dfd19_f24_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f24_ACQRET_count['RET-2019'] = dfd19_a24_ACQRET_count['Total-2019'] - dfd19_f24_ACQRET_count['ACQ-2019']
dfd19_f24_ACQRET_count['Percnt-2019'] = (dfd19_f24_ACQRET_count['RET-2019'] / dfd19_a24_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f24_ACQRET_count['Percnt-2019'] = dfd19_f24_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f24_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a24_ACQRET_count = pd.DataFrame(filter_24_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f24_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f24.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f24_ACQRET_count['Percent-2021'] = (dfd21_f24_ACQRET_count['ACQ-2021'] / dfd21_f24_Registrations_count['Total-2021'].sum()) * 100
dfd21_f24_ACQRET_count['Percent-2021'] = dfd21_f24_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f24_ACQRET_count['RET-2021'] = dfd21_a24_ACQRET_count['Total-2021'] - dfd21_f24_ACQRET_count['ACQ-2021']
dfd21_f24_ACQRET_count['Percnt-2021'] = (dfd21_f24_ACQRET_count['RET-2021'] / dfd21_a24_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f24_ACQRET_count['Percnt-2021'] = dfd21_f24_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f24_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a24_ACQRET_count = pd.DataFrame(filter_24_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f24_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f24.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f24_ACQRET_count['Percent-2022'] = (dfd22_f24_ACQRET_count['ACQ-2022'] / dfd22_f24_Registrations_count['Total-2022'].sum()) * 100
dfd22_f24_ACQRET_count['Percent-2022'] = dfd22_f24_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f24_ACQRET_count['RET-2022'] = dfd22_a24_ACQRET_count['Total-2022'] - dfd22_f24_ACQRET_count['ACQ-2022']
dfd22_f24_ACQRET_count['Percnt-2022'] = (dfd22_f24_ACQRET_count['RET-2022'] / dfd22_a24_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f24_ACQRET_count['Percnt-2022'] = dfd22_f24_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f24_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a24_ACQRET_count = pd.DataFrame(filter_24_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f24_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f24.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f24_ACQRET_count['Percent-2023'] = (dfd23_f24_ACQRET_count['ACQ-2023'] / dfd23_f24_Registrations_count['Total-2023'].sum()) * 100
dfd23_f24_ACQRET_count['Percent-2023'] = dfd23_f24_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f24_ACQRET_count['RET-2023'] = dfd23_a24_ACQRET_count['Total-2023'] - dfd23_f24_ACQRET_count['ACQ-2023']
dfd23_f24_ACQRET_count['Percnt-2023'] = (dfd23_f24_ACQRET_count['RET-2023'] / dfd23_a24_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f24_ACQRET_count['Percnt-2023'] = dfd23_f24_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f24_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f24 = pd.DataFrame(pd.merge(dfd18_a24_ACQRET_count, dfd18_f24_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f24 = pd.DataFrame(pd.merge(dfd19_a24_ACQRET_count, dfd19_f24_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f24 = pd.DataFrame(pd.merge(dfd21_a24_ACQRET_count, dfd21_f24_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f24 = pd.DataFrame(pd.merge(dfd22_a24_ACQRET_count, dfd22_f24_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_24_f24 = pd.DataFrame(pd.merge(dfd23_a24_ACQRET_count, dfd23_f24_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_24_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f24 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f24, df_ACQRET_count_2_f24, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f24 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f24, df_ACQRET_count_3_f24, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f24 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f24, df_ACQRET_count_4_f24, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f24 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f24, df_ACQRET_count_24_f24, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f24 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17, df_ACQRET_count_M4_f18, df_ACQRET_count_M4_f19, df_ACQRET_count_M4_f20,
                                    df_ACQRET_count_M4_f21, df_ACQRET_count_M4_f22, df_ACQRET_count_M4_f23, df_ACQRET_count_M4_f24]
Concat_ACQRET_count_f1_f24 = pd.concat(ConcatFrames_ACQRET_count_f1_f24)
#print(tab(Concat_ACQRET_count_f1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f24 = Concat_ACQRET_count_f1_f24[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f24_Revenue_calc = pd.DataFrame(filter_24_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f24_Revenue_calc['Percent-2017'] = (dfd17_f24_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f24_Revenue_calc['Percent-2017'] = dfd17_f24_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f24_Revenue_calc['7DEvolution-2017'] = dfd17_f24_Revenue_calc['Total-2017'] - dfd17_f23_Revenue_calc['Total-2017']
#print(tab(dfd17_f24_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f24_Revenue_calc = pd.DataFrame(filter_24_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f24_Revenue_calc['Percent-2018'] = (dfd18_f24_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f24_Revenue_calc['Percent-2018'] = dfd18_f24_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f24_Revenue_calc['7DEvolution-2018'] = dfd18_f24_Revenue_calc['Total-2018'] - dfd18_f23_Revenue_calc['Total-2018']
#print(tab(dfd18_f24_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f24_Revenue_calc = pd.DataFrame(filter_24_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f24_Revenue_calc['Percent-2019'] = (dfd19_f24_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f24_Revenue_calc['Percent-2019'] = dfd19_f24_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f24_Revenue_calc['7DEvolution-2019'] = dfd19_f24_Revenue_calc['Total-2019'] - dfd19_f23_Revenue_calc['Total-2019']
#print(tab(dfd19_f24_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f24_Revenue_calc = pd.DataFrame(filter_24_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f24_Revenue_calc['Percent-2021'] = (dfd21_f24_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f24_Revenue_calc['Percent-2021'] = dfd21_f24_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f24_Revenue_calc['7DEvolution-2021'] = dfd21_f24_Revenue_calc['Total-2021'] - dfd21_f23_Revenue_calc['Total-2021']
#print(tab(dfd21_f24_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f24_Revenue_calc = pd.DataFrame(filter_24_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f24_Revenue_calc['Percent-2022'] = (dfd22_f24_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f24_Revenue_calc['Percent-2022'] = dfd22_f24_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f24_Revenue_calc['7DEvolution-2022'] = dfd22_f24_Revenue_calc['Total-2022'] - dfd22_f23_Revenue_calc['Total-2022']
#print(tab(dfd22_f24_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_Revenue_calc = pd.DataFrame(filter_24_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f24_Revenue_calc['Percent-2023'] = (dfd23_f24_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f24_Revenue_calc['Percent-2023'] = dfd23_f24_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f24_Revenue_calc['7DEvolution-2023'] = dfd23_f24_Revenue_calc['Total-2023'] - dfd23_f23_Revenue_calc['Total-2023']
#print(tab(dfd23_f24_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f24_RevenueEvolution_calc = pd.DataFrame(filter_24_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f24_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f24_Revenue_calc['Total-2023'] - dfd19_f24_Revenue_calc['Total-2019'])/ dfd19_f24_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f24_RevenueEvolution_calc['Evolution-2023'] = dfd23_f24_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f24_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f24 = pd.DataFrame(pd.merge(dfd17_f24_Revenue_calc, dfd18_f24_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f24 = pd.DataFrame(pd.merge(dfd19_f24_Revenue_calc, dfd21_f24_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f24 = pd.DataFrame(pd.merge(dfd22_f24_Revenue_calc, dfd23_f24_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f24_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f24, df_Revenue_calc_2_f24, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f24Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f24_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f24_Evolution, df_Revenue_calc_3_f24, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f24Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f24 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f24_Evolution, dfd23_f24_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f24 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17, df_Revenue_calc_f18, df_Revenue_calc_f19, df_Revenue_calc_f20,
                                 df_Revenue_calc_f21, df_Revenue_calc_f22, df_Revenue_calc_f23, df_Revenue_calc_f24]
Concat_REV_count_f1_f24 = pd.concat(ConcatFrames_REV_count_f1_f24)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f24_Registrations_GRDel = pd.DataFrame(filtr_24_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f24_Registrations_GRDel = dfd17_f24_Registrations_GRDel.fillna('Unknown')
dfd17_f24_Registrations_GRDel['Percent-2017'] = (dfd17_f24_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f24_Registrations_GRDel['Percent-2017'] = dfd17_f24_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f24_Registrations_GRDel['7DEvolution-2017'] = dfd17_f24_Registrations_GRDel['Total-2017'] - dfd17_f23_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f24_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f24_Registrations_GRDel = pd.DataFrame(filtr_24_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f24_Registrations_GRDel = dfd18_f24_Registrations_GRDel.fillna('Unknown')
dfd18_f24_Registrations_GRDel['Percent-2018'] = (dfd18_f24_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f24_Registrations_GRDel['Percent-2018'] = dfd18_f24_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f24_Registrations_GRDel['7DEvolution-2018'] = dfd18_f24_Registrations_GRDel['Total-2018'] - dfd18_f23_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f24_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f24_Registrations_GRDel = pd.DataFrame(filtr_24_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f24_Registrations_GRDel = dfd19_f24_Registrations_GRDel.fillna('Unknown')
dfd19_f24_Registrations_GRDel['Percent-2019'] = (dfd19_f24_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f24_Registrations_GRDel['Percent-2019'] = dfd19_f24_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f24_Registrations_GRDel['7DEvolution-2019'] = dfd19_f24_Registrations_GRDel['Total-2019'] - dfd19_f23_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f24_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f24_Registrations_GRDel = pd.DataFrame(filtr_24_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f24_Registrations_GRDel = dfd21_f24_Registrations_GRDel.fillna('Unknown')
dfd21_f24_Registrations_GRDel['Percent-2021'] = (dfd21_f24_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f24_Registrations_GRDel['Percent-2021'] = dfd21_f24_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f24_Registrations_GRDel['7DEvolution-2021'] = dfd21_f24_Registrations_GRDel['Total-2021'] - dfd21_f23_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f24_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f24_Registrations_GRDel = pd.DataFrame(filtr_24_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f24_Registrations_GRDel = dfd22_f24_Registrations_GRDel.fillna('Unknown')
dfd22_f24_Registrations_GRDel['Percent-2022'] = (dfd22_f24_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f24_Registrations_GRDel['Percent-2022'] = dfd22_f24_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f24_Registrations_GRDel['7DEvolution-2022'] = dfd22_f24_Registrations_GRDel['Total-2022'] - dfd22_f23_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f24_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_Registrations_GRDel = pd.DataFrame(filtr_24_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f24_Registrations_GRDel = dfd23_f24_Registrations_GRDel.fillna('Unknown')
dfd23_f24_Registrations_GRDel['Percent-2023'] = (dfd23_f24_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f24_Registrations_GRDel['Percent-2023'] = dfd23_f24_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f24_Registrations_GRDel['7DEvolution-2023'] = dfd23_f24_Registrations_GRDel['Total-2023'] - dfd23_f23_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f24_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f24_Registrations_Evol_GRDel = pd.DataFrame(filtr_24_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f24_Registrations_Evol_GRDel = dfd23_f24_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f24_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f24_Registrations_GRDel['Total-2023'] - dfd19_f24_Registrations_GRDel['Total-2019'])/ dfd19_f24_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f24_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f24 = pd.concat([dfd17_f24_Registrations_GRDel, dfd18_f24_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f24 = pd.DataFrame(pd.merge(dfd17_f24_Registrations_GRDel, dfd18_f24_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f24 = pd.DataFrame(pd.merge(dfd19_f24_Registrations_GRDel, dfd21_f24_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f24 = pd.DataFrame(pd.merge(dfd22_f24_Registrations_GRDel, dfd23_f24_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f24 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f24, df_Registrations_GRDel_2_f24, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_24_f24 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f24, df_Registrations_GRDel_3_f24, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f24 = pd.DataFrame(pd.merge(df_Registrations_GRDel_24_f24, dfd23_f24_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f24 = df_Registrations_GRDel_f24[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f24 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17, df_Registrations_GRDel_f18, df_Registrations_GRDel_f19, df_Registrations_GRDel_f20,
                                      df_Registrations_GRDel_f21, df_Registrations_GRDel_f22, df_Registrations_GRDel_f23, df_Registrations_GRDel_f24]
Concat_RegGRDel_count_f1_f24 = pd.concat(ConcatFrames_RegGRDel_count_f1_f24)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f24 = filtr_24_df18_GRdel[filtr_24_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f24 = filtr_24_df19_GRdel[filtr_24_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f24 = filtr_24_df21_GRdel[filtr_24_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f24 = filtr_24_df22_GRdel[filtr_24_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f24 = filtr_24_df23_GRdel[filtr_24_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f24.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f24.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a24_AC_RT_GRDel = pd.DataFrame(filtr_24_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f24_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f24.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f24_AC_RT_GRDel['Percent-2018'] = (dfd18_f24_AC_RT_GRDel['ACQ-2018'] / dfd18_f24_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f24_AC_RT_GRDel['Percent-2018'] = dfd18_f24_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f24_AC_RT_GRDel['RET-2018'] = dfd18_a24_AC_RT_GRDel['Total-2018'] - dfd18_f24_AC_RT_GRDel['ACQ-2018']
dfd18_f24_AC_RT_GRDel['Percnt-2018'] = (dfd18_f24_AC_RT_GRDel['RET-2018'] / dfd18_a24_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f24_AC_RT_GRDel['Percnt-2018'] = dfd18_f24_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f24_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a24_AC_RT_GRDel = pd.DataFrame(filtr_24_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f24_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f24.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f24_AC_RT_GRDel['Percent-2019'] = (dfd19_f24_AC_RT_GRDel['ACQ-2019'] / dfd19_f24_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f24_AC_RT_GRDel['Percent-2019'] = dfd19_f24_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f24_AC_RT_GRDel['RET-2019'] = dfd19_a24_AC_RT_GRDel['Total-2019'] - dfd19_f24_AC_RT_GRDel['ACQ-2019']
dfd19_f24_AC_RT_GRDel['Percnt-2019'] = (dfd19_f24_AC_RT_GRDel['RET-2019'] / dfd19_a24_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f24_AC_RT_GRDel['Percnt-2019'] = dfd19_f24_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f24_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a24_AC_RT_GRDel = pd.DataFrame(filtr_24_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f24_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f24.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f24_AC_RT_GRDel['Percent-2021'] = (dfd21_f24_AC_RT_GRDel['ACQ-2021'] / dfd21_f24_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f24_AC_RT_GRDel['Percent-2021'] = dfd21_f24_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f24_AC_RT_GRDel['RET-2021'] = dfd21_a24_AC_RT_GRDel['Total-2021'] - dfd21_f24_AC_RT_GRDel['ACQ-2021']
dfd21_f24_AC_RT_GRDel['Percnt-2021'] = (dfd21_f24_AC_RT_GRDel['RET-2021'] / dfd21_a24_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f24_AC_RT_GRDel['Percnt-2021'] = dfd21_f24_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f24_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a24_AC_RT_GRDel = pd.DataFrame(filtr_24_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f24_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f24.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f24_AC_RT_GRDel['Percent-2022'] = (dfd22_f24_AC_RT_GRDel['ACQ-2022'] / dfd22_f24_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f24_AC_RT_GRDel['Percent-2022'] = dfd22_f24_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f24_AC_RT_GRDel['RET-2022'] = dfd22_a24_AC_RT_GRDel['Total-2022'] - dfd22_f24_AC_RT_GRDel['ACQ-2022']
dfd22_f24_AC_RT_GRDel['Percnt-2022'] = (dfd22_f24_AC_RT_GRDel['RET-2022'] / dfd22_a24_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f24_AC_RT_GRDel['Percnt-2022'] = dfd22_f24_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f24_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a24_AC_RT_GRDel = pd.DataFrame(filtr_24_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f24_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f24.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f24_AC_RT_GRDel['Percent-2023'] = (dfd23_f24_AC_RT_GRDel['ACQ-2023'] / dfd23_f24_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f24_AC_RT_GRDel['Percent-2023'] = dfd23_f24_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f24_AC_RT_GRDel['RET-2023'] = dfd23_a24_AC_RT_GRDel['Total-2023'] - dfd23_f24_AC_RT_GRDel['ACQ-2023']
dfd23_f24_AC_RT_GRDel['Percnt-2023'] = (dfd23_f24_AC_RT_GRDel['RET-2023'] / dfd23_a24_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f24_AC_RT_GRDel['Percnt-2023'] = dfd23_f24_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f24_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f24 = pd.DataFrame(pd.merge_ordered(dfd18_a24_AC_RT_GRDel, dfd18_f24_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f24 = pd.DataFrame(pd.merge_ordered(dfd19_a24_AC_RT_GRDel, dfd19_f24_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f24 = pd.DataFrame(pd.merge_ordered(dfd21_a24_AC_RT_GRDel, dfd21_f24_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f24 = pd.DataFrame(pd.merge_ordered(dfd22_a24_AC_RT_GRDel, dfd22_f24_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_24_f24 = pd.DataFrame(pd.merge_ordered(dfd23_a24_AC_RT_GRDel, dfd23_f24_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f24 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f24, df_AC_ET_GRDel_2_f24, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f24 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f24, df_AC_ET_GRDel_3_f24, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f24 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f24, df_AC_ET_GRDel_4_f24, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f24 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f24, df_AC_ET_GRDel_24_f24, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f24 = df_AC_RT_GRDel_M4_f24[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f24 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17, df_AC_RT_GRDel_M4_f18, df_AC_RT_GRDel_M4_f19, df_AC_RT_GRDel_M4_f20,
                               df_AC_RT_GRDel_M4_f21, df_AC_RT_GRDel_M4_f22, df_AC_RT_GRDel_M4_f23, df_AC_RT_GRDel_M4_f24]
Conct_AC_RT_GRDel_f1_f24 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f24)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_24_df17_GRdel = filtr_24_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f24_Revenu_GRDel = pd.DataFrame(filtr_24_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f24_Revenu_GRDel['Percent-2017'] = (dfd17_f24_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f24_Revenu_GRDel['Percent-2017'] = dfd17_f24_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f24_Revenu_GRDel['7DEvolution-2017'] = dfd17_f24_Revenu_GRDel['Total-2017'] - dfd17_f23_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f24_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_24_df18_GRdel = filtr_24_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f24_Revenu_GRDel = pd.DataFrame(filtr_24_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f24_Revenu_GRDel['Percent-2018'] = (dfd18_f24_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f24_Revenu_GRDel['Percent-2018'] = dfd18_f24_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f24_Revenu_GRDel['7DEvolution-2018'] = dfd18_f24_Revenu_GRDel['Total-2018'] - dfd18_f23_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f24_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_24_df19_GRdel = filtr_24_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f24_Revenu_GRDel = pd.DataFrame(filtr_24_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f24_Revenu_GRDel['Percent-2019'] = (dfd19_f24_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f24_Revenu_GRDel['Percent-2019'] = dfd19_f24_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f24_Revenu_GRDel['7DEvolution-2019'] = dfd19_f24_Revenu_GRDel['Total-2019'] - dfd19_f23_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f24_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_24_df21_GRdel = filtr_24_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f24_Revenu_GRDel = pd.DataFrame(filtr_24_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f24_Revenu_GRDel['Percent-2021'] = (dfd21_f24_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f24_Revenu_GRDel['Percent-2021'] = dfd21_f24_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f24_Revenu_GRDel['7DEvolution-2021'] = dfd21_f24_Revenu_GRDel['Total-2021'] - dfd21_f23_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f24_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_24_df22_GRdel = filtr_24_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f24_Revenu_GRDel = pd.DataFrame(filtr_24_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f24_Revenu_GRDel['Percent-2022'] = (dfd22_f24_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f24_Revenu_GRDel['Percent-2022'] = dfd22_f24_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f24_Revenu_GRDel['7DEvolution-2022'] = dfd22_f24_Revenu_GRDel['Total-2022'] - dfd22_f23_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f24_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_24_df23_GRdel = filtr_24_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f24_Revenu_GRDel = pd.DataFrame(filtr_24_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f24_Revenu_GRDel['Percent-2023'] = (dfd23_f24_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f24_Revenu_GRDel['Percent-2023'] = dfd23_f24_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f24_Revenu_GRDel['7DEvolution-2023'] = dfd23_f24_Revenu_GRDel['Total-2023'] - dfd23_f23_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f24_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f24_Revenu_Evlt_GRDel = pd.DataFrame(filtr_24_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f24_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f24_Revenu_GRDel['Total-2023'] - dfd19_f24_Revenu_GRDel['Total-2019'])/ dfd19_f24_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f24_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f24_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f24_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f24 = pd.DataFrame(pd.merge(dfd17_f24_Revenu_GRDel, dfd18_f24_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f24 = pd.DataFrame(pd.merge(dfd19_f24_Revenu_GRDel, dfd21_f24_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f24 = pd.DataFrame(pd.merge(dfd22_f24_Revenu_GRDel, dfd23_f24_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f24 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f24, df_Revenu_GRDel_2_f24, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_24_f24 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f24, df_Revenu_GRDel_3_f24, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f24 = pd.DataFrame(pd.merge(df_Revenu_GRDel_24_f24, dfd23_f24_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f24 = df_Revenu_GRDel_f24[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f24 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17, df_Revenu_GRDel_f18, df_Revenu_GRDel_f19, df_Revenu_GRDel_f20,
                             df_Revenu_GRDel_f21, df_Revenu_GRDel_f22, df_Revenu_GRDel_f23, df_Revenu_GRDel_f24]
Conct_RV_GRDel_f1_f24 = pd.concat(ConcatFra_RV_GRDel_f1_f24)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f24_Profile_count = pd.DataFrame(filtr_24_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f24_Profile_count = dfd17_f24_Profile_count.fillna('Unknown')
dfd17_f24_Profile_count['Percent-2017'] = (dfd17_f24_Profile_count['Total-2017'] / dfd17_f24_Profile_count['Total-2017'].sum()) * 100
dfd17_f24_Profile_count['Percent-2017'] = dfd17_f24_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f24_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f24_Profile_count = pd.DataFrame(filtr_24_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f24_Profile_count = dfd18_f24_Profile_count.fillna('Unknown')
dfd18_f24_Profile_count['Percent-2018'] = (dfd18_f24_Profile_count['Total-2018'] / dfd18_f24_Profile_count['Total-2018'].sum()) * 100
dfd18_f24_Profile_count['Percent-2018'] = dfd18_f24_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f24_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f24_Profile_count = pd.DataFrame(filtr_24_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f24_Profile_count = dfd19_f24_Profile_count.fillna('Unknown')
dfd19_f24_Profile_count['Percent-2019'] = (dfd19_f24_Profile_count['Total-2019'] / dfd19_f24_Profile_count['Total-2019'].sum()) * 100
dfd19_f24_Profile_count['Percent-2019'] = dfd19_f24_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f24_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f24_Profile_count = pd.DataFrame(filtr_24_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f24_Profile_count = dfd21_f24_Profile_count.fillna('Unknown')
dfd21_f24_Profile_count['Percent-2021'] = (dfd21_f24_Profile_count['Total-2021'] / dfd21_f24_Profile_count['Total-2021'].sum()) * 100
dfd21_f24_Profile_count['Percent-2021'] = dfd21_f24_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f24_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f24_Profile_count = pd.DataFrame(filtr_24_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f24_Profile_count = dfd22_f24_Profile_count.fillna('Unknown')
dfd22_f24_Profile_count['Percent-2022'] = (dfd22_f24_Profile_count['Total-2022'] / dfd22_f24_Profile_count['Total-2022'].sum()) * 100
dfd22_f24_Profile_count['Percent-2022'] = dfd22_f24_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f24_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_Profile_count = pd.DataFrame(filtr_24_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f24_Profile_count = dfd23_f24_Profile_count.fillna('Unknown')
dfd23_f24_Profile_count['Percent-2023'] = (dfd23_f24_Profile_count['Total-2023'] / dfd23_f24_Profile_count['Total-2023'].sum()) * 100
dfd23_f24_Profile_count['Percent-2023'] = dfd23_f24_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f24_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f24 = pd.DataFrame(pd.merge(dfd17_f24_Profile_count, dfd18_f24_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f24 = pd.DataFrame(pd.merge(dfd19_f24_Profile_count, dfd21_f24_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f24 = pd.DataFrame(pd.merge(dfd22_f24_Profile_count, dfd23_f24_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f24 = pd.DataFrame(pd.merge(df_Profile_Count_1_f24, df_Profile_Count_2_f24, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f24 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f24, df_Profile_Count_3_f24, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f24 = df_Profile_Count_m2_f24.append(df_Profile_Count_m2_f24.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f24['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f24_Pass_count = pd.DataFrame(filtr_24_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f24_Pass_count = dfd17_f24_Pass_count.fillna('Unknown')
dfd17_f24_Pass_count['Percent-2017'] = (dfd17_f24_Pass_count['Total-2017'] / dfd17_f24_Pass_count['Total-2017'].sum()) * 100
dfd17_f24_Pass_count['Percent-2017'] = dfd17_f24_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f24_Pass_count = pd.DataFrame(filtr_24_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f24_Pass_count = dfd18_f24_Pass_count.fillna('Unknown')
dfd18_f24_Pass_count['Percent-2018'] = (dfd18_f24_Pass_count['Total-2018'] / dfd18_f24_Pass_count['Total-2018'].sum()) * 100
dfd18_f24_Pass_count['Percent-2018'] = dfd18_f24_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f24_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f24_Pass_count = pd.DataFrame(filtr_24_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f24_Pass_count = dfd19_f24_Pass_count.fillna('Unknown')
dfd19_f24_Pass_count['Percent-2019'] = (dfd19_f24_Pass_count['Total-2019'] / dfd19_f24_Pass_count['Total-2019'].sum()) * 100
dfd19_f24_Pass_count['Percent-2019'] = dfd19_f24_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f24_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f24_Pass_count = pd.DataFrame(filtr_24_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f24_Pass_count = dfd21_f24_Pass_count.fillna('Unknown')
dfd21_f24_Pass_count['Percent-2021'] = (dfd21_f24_Pass_count['Total-2021'] / dfd21_f24_Pass_count['Total-2021'].sum()) * 100
dfd21_f24_Pass_count['Percent-2021'] = dfd21_f24_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f24_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f24_Pass_count = pd.DataFrame(filtr_24_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f24_Pass_count = dfd22_f24_Pass_count.fillna('Unknown')
dfd22_f24_Pass_count['Percent-2022'] = (dfd22_f24_Pass_count['Total-2022'] / dfd22_f24_Pass_count['Total-2022'].sum()) * 100
dfd22_f24_Pass_count['Percent-2022'] = dfd22_f24_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f24_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_Pass_count = pd.DataFrame(filtr_24_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f24_Pass_count = dfd23_f24_Pass_count.fillna('Unknown')
dfd23_f24_Pass_count['Percent-2023'] = (dfd23_f24_Pass_count['Total-2023'] / dfd23_f24_Pass_count['Total-2023'].sum()) * 100
dfd23_f24_Pass_count['Percent-2023'] = dfd23_f24_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f24_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f24 = pd.DataFrame(pd.merge(dfd17_f24_Pass_count, dfd18_f24_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f24 = pd.DataFrame(pd.merge(dfd19_f24_Pass_count, dfd21_f24_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f24 = pd.DataFrame(pd.merge(dfd22_f24_Pass_count, dfd23_f24_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f24 = pd.DataFrame(pd.merge(df_Pass_Count_1_f24, df_Pass_Count_2_f24, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f24 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f24, df_Pass_Count_3_f24, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f24 = df_Pass_Count_m2_f24.append(df_Pass_Count_m2_f24.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f24['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f24_Attendees_Country_count = pd.DataFrame(filtr_24_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f24_Attendees_Country_count = dfd17_f24_Attendees_Country_count.fillna('Unknown')
dfd17_f24_Attendees_Country_count['Percent-2017'] = (dfd17_f24_Attendees_Country_count['Total-2017'] / dfd17_f24_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f24_Attendees_Country_count['Percent-2017'] = dfd17_f24_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f24_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f24_Attendees_Country_count = pd.DataFrame(filtr_24_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f24_Attendees_Country_count = dfd18_f24_Attendees_Country_count.fillna('Unknown')
dfd18_f24_Attendees_Country_count['Percent-2018'] = (dfd18_f24_Attendees_Country_count['Total-2018'] / dfd18_f24_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f24_Attendees_Country_count['Percent-2018'] = dfd18_f24_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f24_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f24_Attendees_Country_count = pd.DataFrame(filtr_24_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f24_Attendees_Country_count = dfd19_f24_Attendees_Country_count.fillna('Unknown')
dfd19_f24_Attendees_Country_count['Percent-2019'] = (dfd19_f24_Attendees_Country_count['Total-2019'] / dfd19_f24_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f24_Attendees_Country_count['Percent-2019'] = dfd19_f24_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f24_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f24_Attendees_Country_count = pd.DataFrame(filtr_24_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f24_Attendees_Country_count = dfd21_f24_Attendees_Country_count.fillna('Unknown')
dfd21_f24_Attendees_Country_count['Percent-2021'] = (dfd21_f24_Attendees_Country_count['Total-2021'] / dfd21_f24_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f24_Attendees_Country_count['Percent-2021'] = dfd21_f24_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f24_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f24_Attendees_Country_count = pd.DataFrame(filtr_24_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f24_Attendees_Country_count = dfd22_f24_Attendees_Country_count.fillna('Unknown')
dfd22_f24_Attendees_Country_count['Percent-2022'] = (dfd22_f24_Attendees_Country_count['Total-2022'] / dfd22_f24_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f24_Attendees_Country_count['Percent-2022'] = dfd22_f24_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f24_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_Attendees_Country_count = pd.DataFrame(filtr_24_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f24_Attendees_Country_count = dfd23_f24_Attendees_Country_count.fillna('Unknown')
dfd23_f24_Attendees_Country_count['Percent-2023'] = (dfd23_f24_Attendees_Country_count['Total-2023'] / dfd23_f24_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f24_Attendees_Country_count['Percent-2023'] = dfd23_f24_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f24_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f24 = pd.DataFrame(pd.merge(dfd17_f24_Attendees_Country_count, dfd18_f24_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f24 = pd.DataFrame(pd.merge(dfd19_f24_Attendees_Country_count, dfd21_f24_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f24 = pd.DataFrame(pd.merge(dfd22_f24_Attendees_Country_count, dfd23_f24_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f24 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f24, dfAttendees_Country_Count_2_f24, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f24.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f24 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f24, dfAttendees_Country_Count_3_f24, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f24 = dfAttendees_Country_Count_m2_f24.append(dfAttendees_Country_Count_m2_f24.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f24['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f24_ATTENDEES_AREAS_count = pd.DataFrame(filtr_24_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f24_ATTENDEES_AREAS_count = dfd17_f24_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f24_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f24_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f24_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f24_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f24_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f24_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f24_ATTENDEES_AREAS_count = pd.DataFrame(filtr_24_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f24_ATTENDEES_AREAS_count = dfd18_f24_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f24_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f24_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f24_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f24_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f24_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f24_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f24_ATTENDEES_AREAS_count = pd.DataFrame(filtr_24_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f24_ATTENDEES_AREAS_count = dfd19_f24_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f24_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f24_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f24_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f24_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f24_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f24_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f24_ATTENDEES_AREAS_count = pd.DataFrame(filtr_24_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f24_ATTENDEES_AREAS_count = dfd21_f24_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f24_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f24_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f24_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f24_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f24_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f24_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f24_ATTENDEES_AREAS_count = pd.DataFrame(filtr_24_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f24_ATTENDEES_AREAS_count = dfd22_f24_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f24_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f24_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f24_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f24_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f24_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f24_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_ATTENDEES_AREAS_count = pd.DataFrame(filtr_24_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f24_ATTENDEES_AREAS_count = dfd23_f24_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f24_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f24_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f24_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f24_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f24_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f24_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f24 = pd.DataFrame(pd.merge(dfd17_f24_ATTENDEES_AREAS_count, dfd18_f24_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f24 = pd.DataFrame(pd.merge(dfd19_f24_ATTENDEES_AREAS_count, dfd21_f24_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f24 = pd.DataFrame(pd.merge(dfd22_f24_ATTENDEES_AREAS_count, dfd23_f24_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f24.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f24 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f24, df_ATTENDEES_AREAS_count_2_f24, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f24 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f24, df_ATTENDEES_AREAS_count_3_f24, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f24 = df_ATTENDEES_AREAS_count_m2_f24.append(df_ATTENDEES_AREAS_count_m2_f24.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f24['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f24_Attendees_Specialty_count = pd.DataFrame(filtr_24_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f24_Attendees_Specialty_count = dfd17_f24_Attendees_Specialty_count.fillna('Unknown')
dfd17_f24_Attendees_Specialty_count['Percent-2017'] = (dfd17_f24_Attendees_Specialty_count['Total-2017'] / dfd17_f24_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f24_Attendees_Specialty_count['Percent-2017'] = dfd17_f24_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f24_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f24_Attendees_Specialty_count = pd.DataFrame(filtr_24_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f24_Attendees_Specialty_count = dfd18_f24_Attendees_Specialty_count.fillna('Unknown')
dfd18_f24_Attendees_Specialty_count['Percent-2018'] = (dfd18_f24_Attendees_Specialty_count['Total-2018'] / dfd18_f24_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f24_Attendees_Specialty_count['Percent-2018'] = dfd18_f24_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f24_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f24_Attendees_Specialty_count = pd.DataFrame(filtr_24_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f24_Attendees_Specialty_count = dfd19_f24_Attendees_Specialty_count.fillna('Unknown')
dfd19_f24_Attendees_Specialty_count['Percent-2019'] = (dfd19_f24_Attendees_Specialty_count['Total-2019'] / dfd19_f24_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f24_Attendees_Specialty_count['Percent-2019'] = dfd19_f24_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f24_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f24_Attendees_Specialty_count = pd.DataFrame(filtr_24_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f24_Attendees_Specialty_count = dfd21_f24_Attendees_Specialty_count.fillna('Unknown')
dfd21_f24_Attendees_Specialty_count['Percent-2021'] = (dfd21_f24_Attendees_Specialty_count['Total-2021'] / dfd21_f24_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f24_Attendees_Specialty_count['Percent-2021'] = dfd21_f24_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f24_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f24_Attendees_Specialty_count = pd.DataFrame(filtr_24_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f24_Attendees_Specialty_count = dfd22_f24_Attendees_Specialty_count.fillna('Unknown')
dfd22_f24_Attendees_Specialty_count['Percent-2022'] = (dfd22_f24_Attendees_Specialty_count['Total-2022'] / dfd22_f24_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f24_Attendees_Specialty_count['Percent-2022'] = dfd22_f24_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f24_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f24_Attendees_Specialty_count = pd.DataFrame(filtr_24_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f24_Attendees_Specialty_count = dfd23_f24_Attendees_Specialty_count.fillna('Unknown')
dfd23_f24_Attendees_Specialty_count['Percent-2023'] = (dfd23_f24_Attendees_Specialty_count['Total-2023'] / dfd23_f24_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f24_Attendees_Specialty_count['Percent-2023'] = dfd23_f24_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f24_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f24 = pd.DataFrame(pd.merge(dfd17_f24_Attendees_Specialty_count, dfd18_f24_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f24 = pd.DataFrame(pd.merge(dfd19_f24_Attendees_Specialty_count, dfd21_f24_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f24 = pd.DataFrame(pd.merge(dfd22_f24_Attendees_Specialty_count, dfd23_f24_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f24 = pd.DataFrame(pd.merge(df_Specialty_count_1_f24, df_Specialty_count_2_f24, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f24.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f24 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f24, df_Specialty_count_3_f24, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f24 = df_Specialty_count_m2_f24.append(df_Specialty_count_m2_f24.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f24['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f24['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f24['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f24 = Concat_Registrations_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f24['Total-2017'] = Concat_Registrations_count_f1_f24['Total-2017'].astype(int)
Concat_Registrations_count_f1_f24['Percent-2017'] = Concat_Registrations_count_f1_f24['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f24['7DEvolution-2017'] = Concat_Registrations_count_f1_f24['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f24['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f24['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f24 = Concat_Registrations_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f24['Total-2018'] = Concat_Registrations_count_f1_f24['Total-2018'].astype(int)
Concat_Registrations_count_f1_f24['Percent-2018'] = Concat_Registrations_count_f1_f24['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f24['7DEvolution-2018'] = Concat_Registrations_count_f1_f24['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f24['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f24['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f24 = Concat_Registrations_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f24['Total-2019'] = Concat_Registrations_count_f1_f24['Total-2019'].astype(int)
Concat_Registrations_count_f1_f24['Percent-2019'] = Concat_Registrations_count_f1_f24['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f24['7DEvolution-2019'] = Concat_Registrations_count_f1_f24['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f24['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f24['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f24 = Concat_Registrations_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f24['Total-2021'] = Concat_Registrations_count_f1_f24['Total-2021'].astype(int)
Concat_Registrations_count_f1_f24['Percent-2021'] = Concat_Registrations_count_f1_f24['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f24['7DEvolution-2021'] = Concat_Registrations_count_f1_f24['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f24['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f24['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f24 = Concat_Registrations_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f24['Total-2022'] = Concat_Registrations_count_f1_f24['Total-2022'].astype(int)
Concat_Registrations_count_f1_f24['Percent-2022'] = Concat_Registrations_count_f1_f24['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f24['7DEvolution-2022'] = Concat_Registrations_count_f1_f24['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f24['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f24['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f24 = Concat_Registrations_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f24['Total-2023'] = Concat_Registrations_count_f1_f24['Total-2023'].astype(int)
Concat_Registrations_count_f1_f24['Percent-2023'] = Concat_Registrations_count_f1_f24['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f24['7DEvolution-2023'] = Concat_Registrations_count_f1_f24['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f24['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f24['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f24 = Concat_ACQRET_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f24['Total-2018'] = Concat_ACQRET_count_f1_f24['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f24['ACQ-2018'] = Concat_ACQRET_count_f1_f24['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f24['Percent-2018'] = Concat_ACQRET_count_f1_f24['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f24['RET-2018'] = Concat_ACQRET_count_f1_f24['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f24['Percnt-2018'] = Concat_ACQRET_count_f1_f24['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f24['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f24['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f24 = Concat_ACQRET_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f24['Total-2019'] = Concat_ACQRET_count_f1_f24['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f24['ACQ-2019'] = Concat_ACQRET_count_f1_f24['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f24['Percent-2019'] = Concat_ACQRET_count_f1_f24['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f24['RET-2019'] = Concat_ACQRET_count_f1_f24['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f24['Percnt-2019'] = Concat_ACQRET_count_f1_f24['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f24['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f24['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f24 = Concat_ACQRET_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f24['Total-2021'] = Concat_ACQRET_count_f1_f24['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f24['ACQ-2021'] = Concat_ACQRET_count_f1_f24['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f24['Percent-2021'] = Concat_ACQRET_count_f1_f24['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f24['RET-2021'] = Concat_ACQRET_count_f1_f24['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f24['Percnt-2021'] = Concat_ACQRET_count_f1_f24['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f24['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f24['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f24 = Concat_ACQRET_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f24['Total-2022'] = Concat_ACQRET_count_f1_f24['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f24['ACQ-2022'] = Concat_ACQRET_count_f1_f24['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f24['Percent-2022'] = Concat_ACQRET_count_f1_f24['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f24['RET-2022'] = Concat_ACQRET_count_f1_f24['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f24['Percnt-2022'] = Concat_ACQRET_count_f1_f24['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f24['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f24['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f24 = Concat_ACQRET_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f24['Total-2023'] = Concat_ACQRET_count_f1_f24['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f24['ACQ-2023'] = Concat_ACQRET_count_f1_f24['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f24['Percent-2023'] = Concat_ACQRET_count_f1_f24['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f24['RET-2023'] = Concat_ACQRET_count_f1_f24['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f24['Percnt-2023'] = Concat_ACQRET_count_f1_f24['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f24['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f24['Total-2017'],errors='coerce')
Concat_REV_count_f1_f24 = Concat_REV_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f24['Total-2017'] = Concat_REV_count_f1_f24['Total-2017'].astype(int)
Concat_REV_count_f1_f24['Percent-2017'] = Concat_REV_count_f1_f24['Percent-2017'].astype(float)
Concat_REV_count_f1_f24['7DEvolution-2017'] = Concat_REV_count_f1_f24['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f24['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f24['Total-2018'],errors='coerce')
Concat_REV_count_f1_f24 = Concat_REV_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f24['Total-2018'] = Concat_REV_count_f1_f24['Total-2018'].astype(int)
Concat_REV_count_f1_f24['Percent-2018'] = Concat_REV_count_f1_f24['Percent-2018'].astype(float)
Concat_REV_count_f1_f24['7DEvolution-2018'] = Concat_REV_count_f1_f24['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f24['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f24['Total-2019'],errors='coerce')
Concat_REV_count_f1_f24 = Concat_REV_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f24['Total-2019'] = Concat_REV_count_f1_f24['Total-2019'].astype(int)
Concat_REV_count_f1_f24['Percent-2019'] = Concat_REV_count_f1_f24['Percent-2019'].astype(float)
Concat_REV_count_f1_f24['7DEvolution-2019'] = Concat_REV_count_f1_f24['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f24['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f24['Total-2022'],errors='coerce')
Concat_REV_count_f1_f24 = Concat_REV_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f24['Total-2022'] = Concat_REV_count_f1_f24['Total-2022'].astype(int)
Concat_REV_count_f1_f24['Percent-2022'] = Concat_REV_count_f1_f24['Percent-2022'].astype(float)
Concat_REV_count_f1_f24['7DEvolution-2022'] = Concat_REV_count_f1_f24['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f24['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f24['Total-2023'],errors='coerce')
Concat_REV_count_f1_f24 = Concat_REV_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f24['Total-2023'] = Concat_REV_count_f1_f24['Total-2023'].astype(int)
Concat_REV_count_f1_f24['Percent-2023'] = Concat_REV_count_f1_f24['Percent-2023'].astype(float)
Concat_REV_count_f1_f24['7DEvolution-2023'] = Concat_REV_count_f1_f24['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f24['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f24['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f24 = Concat_RegGRDel_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f24['Total-2017'] = Concat_RegGRDel_count_f1_f24['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f24['Percent-2017'] = Concat_RegGRDel_count_f1_f24['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f24['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f24['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f24['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f24['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f24 = Concat_RegGRDel_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f24['Total-2018'] = Concat_RegGRDel_count_f1_f24['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f24['Percent-2018'] = Concat_RegGRDel_count_f1_f24['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f24['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f24['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f24['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f24['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f24 = Concat_RegGRDel_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f24['Total-2019'] = Concat_RegGRDel_count_f1_f24['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f24['Percent-2019'] = Concat_RegGRDel_count_f1_f24['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f24['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f24['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f24['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f24['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f24 = Concat_RegGRDel_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f24['Total-2021'] = Concat_RegGRDel_count_f1_f24['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f24['Percent-2021'] = Concat_RegGRDel_count_f1_f24['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f24['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f24['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f24['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f24['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f24 = Concat_RegGRDel_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f24['Total-2022'] = Concat_RegGRDel_count_f1_f24['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f24['Percent-2022'] = Concat_RegGRDel_count_f1_f24['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f24['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f24['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f24['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f24['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f24 = Concat_RegGRDel_count_f1_f24.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f24['Total-2023'] = Concat_RegGRDel_count_f1_f24['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f24['Percent-2023'] = Concat_RegGRDel_count_f1_f24['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f24['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f24['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f24['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f24['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f24 = Conct_AC_RT_GRDel_f1_f24.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f24['Total-2018'] = Conct_AC_RT_GRDel_f1_f24['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f24['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f24['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f24['Percent-2018'] = Conct_AC_RT_GRDel_f1_f24['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f24['RET-2018'] = Conct_AC_RT_GRDel_f1_f24['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f24['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f24['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f24['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f24['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f24 = Conct_AC_RT_GRDel_f1_f24.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f24['Total-2019'] = Conct_AC_RT_GRDel_f1_f24['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f24['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f24['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f24['Percent-2019'] = Conct_AC_RT_GRDel_f1_f24['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f24['RET-2019'] = Conct_AC_RT_GRDel_f1_f24['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f24['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f24['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f24['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f24['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f24 = Conct_AC_RT_GRDel_f1_f24.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f24['Total-2021'] = Conct_AC_RT_GRDel_f1_f24['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f24['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f24['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f24['Percent-2021'] = Conct_AC_RT_GRDel_f1_f24['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f24['RET-2021'] = Conct_AC_RT_GRDel_f1_f24['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f24['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f24['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f24['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f24['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f24 = Conct_AC_RT_GRDel_f1_f24.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f24['Total-2022'] = Conct_AC_RT_GRDel_f1_f24['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f24['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f24['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f24['Percent-2022'] = Conct_AC_RT_GRDel_f1_f24['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f24['RET-2022'] = Conct_AC_RT_GRDel_f1_f24['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f24['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f24['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f24['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f24['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f24 = Conct_AC_RT_GRDel_f1_f24.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f24['Total-2023'] = Conct_AC_RT_GRDel_f1_f24['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f24['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f24['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f24['Percent-2023'] = Conct_AC_RT_GRDel_f1_f24['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f24['RET-2023'] = Conct_AC_RT_GRDel_f1_f24['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f24['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f24['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f24['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f24['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f24 = Conct_RV_GRDel_f1_f24.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f24['Total-2017'] = Conct_RV_GRDel_f1_f24['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f24['Percent-2017'] = Conct_RV_GRDel_f1_f24['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f24['7DEvolution-2017'] = Conct_RV_GRDel_f1_f24['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f24['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f24['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f24 = Conct_RV_GRDel_f1_f24.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f24['Total-2018'] = Conct_RV_GRDel_f1_f24['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f24['Percent-2018'] = Conct_RV_GRDel_f1_f24['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f24['7DEvolution-2018'] = Conct_RV_GRDel_f1_f24['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f24['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f24['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f24 = Conct_RV_GRDel_f1_f24.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f24['Total-2019'] = Conct_RV_GRDel_f1_f24['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f24['Percent-2019'] = Conct_RV_GRDel_f1_f24['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f24['7DEvolution-2019'] = Conct_RV_GRDel_f1_f24['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f24['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f24['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f24 = Conct_RV_GRDel_f1_f24.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f24['Total-2022'] = Conct_RV_GRDel_f1_f24['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f24['Percent-2022'] = Conct_RV_GRDel_f1_f24['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f24['7DEvolution-2022'] = Conct_RV_GRDel_f1_f24['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f24['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f24['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f24 = Conct_RV_GRDel_f1_f24.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f24['Total-2023'] = Conct_RV_GRDel_f1_f24['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f24['Percent-2023'] = Conct_RV_GRDel_f1_f24['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f24['7DEvolution-2023'] = Conct_RV_GRDel_f1_f24['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f24['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f24['Total-2017'],errors='coerce')
df_Profile_Count_m2_f24 = df_Profile_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f24['Total-2017'] = df_Profile_Count_m2_f24['Total-2017'].astype(int)
df_Profile_Count_m2_f24['Percent-2017'] = df_Profile_Count_m2_f24['Percent-2017'].astype(float)

df_Profile_Count_m2_f24['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f24['Total-2018'],errors='coerce')
df_Profile_Count_m2_f24 = df_Profile_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f24['Total-2018'] = df_Profile_Count_m2_f24['Total-2018'].astype(int)
df_Profile_Count_m2_f24['Percent-2018'] = df_Profile_Count_m2_f24['Percent-2018'].astype(float)

df_Profile_Count_m2_f24['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f24['Total-2019'],errors='coerce')
df_Profile_Count_m2_f24 = df_Profile_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f24['Total-2019'] = df_Profile_Count_m2_f24['Total-2019'].astype(int)
df_Profile_Count_m2_f24['Percent-2019'] = df_Profile_Count_m2_f24['Percent-2019'].astype(float)

df_Profile_Count_m2_f24['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f24['Total-2021'],errors='coerce')
df_Profile_Count_m2_f24 = df_Profile_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f24['Total-2021'] = df_Profile_Count_m2_f24['Total-2021'].astype(int)
df_Profile_Count_m2_f24['Percent-2021'] = df_Profile_Count_m2_f24['Percent-2021'].astype(float)

df_Profile_Count_m2_f24['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f24['Total-2022'],errors='coerce')
df_Profile_Count_m2_f24 = df_Profile_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f24['Total-2022'] = df_Profile_Count_m2_f24['Total-2022'].astype(int)
df_Profile_Count_m2_f24['Percent-2022'] = df_Profile_Count_m2_f24['Percent-2022'].astype(float)

df_Profile_Count_m2_f24['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f24['Total-2023'],errors='coerce')
df_Profile_Count_m2_f24 = df_Profile_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f24['Total-2023'] = df_Profile_Count_m2_f24['Total-2023'].astype(int)
df_Profile_Count_m2_f24['Percent-2023'] = df_Profile_Count_m2_f24['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f24['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f24['Total-2017'],errors='coerce')
df_Pass_Count_m2_f24 = df_Pass_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f24['Total-2017'] = df_Pass_Count_m2_f24['Total-2017'].astype(int)
df_Pass_Count_m2_f24['Percent-2017'] = df_Pass_Count_m2_f24['Percent-2017'].astype(float)

df_Pass_Count_m2_f24['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f24['Total-2018'],errors='coerce')
df_Pass_Count_m2_f24 = df_Pass_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f24['Total-2018'] = df_Pass_Count_m2_f24['Total-2018'].astype(int)
df_Pass_Count_m2_f24['Percent-2018'] = df_Pass_Count_m2_f24['Percent-2018'].astype(float)

df_Pass_Count_m2_f24['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f24['Total-2019'],errors='coerce')
df_Pass_Count_m2_f24 = df_Pass_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f24['Total-2019'] = df_Pass_Count_m2_f24['Total-2019'].astype(int)
df_Pass_Count_m2_f24['Percent-2019'] = df_Pass_Count_m2_f24['Percent-2019'].astype(float)

df_Pass_Count_m2_f24['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f24['Total-2021'],errors='coerce')
df_Pass_Count_m2_f24 = df_Pass_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f24['Total-2021'] = df_Pass_Count_m2_f24['Total-2021'].astype(int)
df_Pass_Count_m2_f24['Percent-2021'] = df_Pass_Count_m2_f24['Percent-2021'].astype(float)

df_Pass_Count_m2_f24['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f24['Total-2022'],errors='coerce')
df_Pass_Count_m2_f24 = df_Pass_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f24['Total-2022'] = df_Pass_Count_m2_f24['Total-2022'].astype(int)
df_Pass_Count_m2_f24['Percent-2022'] = df_Pass_Count_m2_f24['Percent-2022'].astype(float)

df_Pass_Count_m2_f24['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f24['Total-2023'],errors='coerce')
df_Pass_Count_m2_f24 = df_Pass_Count_m2_f24.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f24['Total-2023'] = df_Pass_Count_m2_f24['Total-2023'].astype(int)
df_Pass_Count_m2_f24['Percent-2023'] = df_Pass_Count_m2_f24['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f24['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f24['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f24 = dfAttendees_Country_Count_m2_f24.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f24['Total-2017'] = dfAttendees_Country_Count_m2_f24['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f24['Percent-2017'] = dfAttendees_Country_Count_m2_f24['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f24['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f24['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f24 = dfAttendees_Country_Count_m2_f24.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f24['Total-2018'] = dfAttendees_Country_Count_m2_f24['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f24['Percent-2018'] = dfAttendees_Country_Count_m2_f24['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f24['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f24['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f24 = dfAttendees_Country_Count_m2_f24.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f24['Total-2019'] = dfAttendees_Country_Count_m2_f24['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f24['Percent-2019'] = dfAttendees_Country_Count_m2_f24['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f24['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f24['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f24 = dfAttendees_Country_Count_m2_f24.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f24['Total-2021'] = dfAttendees_Country_Count_m2_f24['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f24['Percent-2021'] = dfAttendees_Country_Count_m2_f24['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f24['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f24['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f24 = dfAttendees_Country_Count_m2_f24.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f24['Total-2022'] = dfAttendees_Country_Count_m2_f24['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f24['Percent-2022'] = dfAttendees_Country_Count_m2_f24['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f24['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f24['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f24 = dfAttendees_Country_Count_m2_f24.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f24['Total-2023'] = dfAttendees_Country_Count_m2_f24['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f24['Percent-2023'] = dfAttendees_Country_Count_m2_f24['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f24['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f24['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f24 = df_ATTENDEES_AREAS_count_m2_f24.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f24['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f24['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f24['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f24['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f24['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f24['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f24 = df_ATTENDEES_AREAS_count_m2_f24.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f24['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f24['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f24['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f24['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f24['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f24['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f24 = df_ATTENDEES_AREAS_count_m2_f24.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f24['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f24['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f24['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f24['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f24['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f24['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f24 = df_ATTENDEES_AREAS_count_m2_f24.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f24['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f24['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f24['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f24['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f24['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f24['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f24 = df_ATTENDEES_AREAS_count_m2_f24.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f24['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f24['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f24['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f24['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f24['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f24['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f24 = df_ATTENDEES_AREAS_count_m2_f24.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f24['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f24['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f24['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f24['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f24['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f24['Total-2017'],errors='coerce')
df_Specialty_count_m2_f24 = df_Specialty_count_m2_f24.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f24['Total-2017'] = df_Specialty_count_m2_f24['Total-2017'].astype(int)
df_Specialty_count_m2_f24['Percent-2017'] = df_Specialty_count_m2_f24['Percent-2017'].astype(float)

df_Specialty_count_m2_f24['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f24['Total-2018'],errors='coerce')
df_Specialty_count_m2_f24 = df_Specialty_count_m2_f24.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f24['Total-2018'] = df_Specialty_count_m2_f24['Total-2018'].astype(int)
df_Specialty_count_m2_f24['Percent-2018'] = df_Specialty_count_m2_f24['Percent-2018'].astype(float)

df_Specialty_count_m2_f24['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f24['Total-2019'],errors='coerce')
df_Specialty_count_m2_f24 = df_Specialty_count_m2_f24.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f24['Total-2019'] = df_Specialty_count_m2_f24['Total-2019'].astype(int)
df_Specialty_count_m2_f24['Percent-2019'] = df_Specialty_count_m2_f24['Percent-2019'].astype(float)

df_Specialty_count_m2_f24['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f24['Total-2021'],errors='coerce')
df_Specialty_count_m2_f24 = df_Specialty_count_m2_f24.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f24['Total-2021'] = df_Specialty_count_m2_f24['Total-2021'].astype(int)
df_Specialty_count_m2_f24['Percent-2021'] = df_Specialty_count_m2_f24['Percent-2021'].astype(float)

df_Specialty_count_m2_f24['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f24['Total-2022'],errors='coerce')
df_Specialty_count_m2_f24 = df_Specialty_count_m2_f24.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f24['Total-2022'] = df_Specialty_count_m2_f24['Total-2022'].astype(int)
df_Specialty_count_m2_f24['Percent-2022'] = df_Specialty_count_m2_f24['Percent-2022'].astype(float)

df_Specialty_count_m2_f24['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f24['Total-2023'],errors='coerce')
df_Specialty_count_m2_f24 = df_Specialty_count_m2_f24.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f24['Total-2023'] = df_Specialty_count_m2_f24['Total-2023'].astype(int)
df_Specialty_count_m2_f24['Percent-2023'] = df_Specialty_count_m2_f24['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f24.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f24.dtypes)
#print(df_Specialty_count_m2_f24.dtypes)

#print(dfAttendees_Country_Count_m2_f24.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f24.dtypes)
#print(df_Specialty_count_m2_f24.dtypes)

# EXCEL FILE
writerf24 = pd.ExcelWriter(outputExcelFile_f24, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f24.to_excel\
    (writerf24, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f24.to_excel\
    (writerf24, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f24.to_excel\
    (writerf24, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f24.to_excel\
    (writerf24, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f24.to_excel\
    (writerf24, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f24.to_excel\
    (writerf24, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f24.to_excel\
    (writerf24, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f24.to_excel\
    (writerf24, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f24.to_excel\
    (writerf24, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f24.to_excel\
    (writerf24, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f24.to_excel\
    (writerf24, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf24.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f24)

workbook.save(outputExcelFile_f24)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 28 days**********************************************')
print('************************************End of 28 days**********************************************')
print('************************************End of 28 days**********************************************')
print('************************************End of 28 days**********************************************')
print('************************************End of 28 days**********************************************')
print('************************************End of 28 days**********************************************')
print('************************************End of 28 days**********************************************')
print('************************************End of 28 days**********************************************')
print('************************************End of 28 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f25_Registrations_count = pd.DataFrame(filter_25_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f25_Registrations_count = dfd17_f25_Registrations_count.fillna('Unknown')
dfd17_f25_Registrations_count['Percent-2017'] = (dfd17_f25_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f25_Registrations_count['Percent-2017'] = dfd17_f25_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f25_Registrations_count['7DEvolution-2017'] = dfd17_f25_Registrations_count['Total-2017'] - dfd17_f24_Registrations_count['Total-2017']
#print(tab(dfd17_f25_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f25_Registrations_count = pd.DataFrame(filter_25_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f25_Registrations_count = dfd18_f25_Registrations_count.fillna('Unknown')
dfd18_f25_Registrations_count['Percent-2018'] = (dfd18_f25_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f25_Registrations_count['Percent-2018'] = dfd18_f25_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f25_Registrations_count['7DEvolution-2018'] = dfd18_f25_Registrations_count['Total-2018'] - dfd18_f24_Registrations_count['Total-2018']
#print(tab(dfd18_f25_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f25_Registrations_count = pd.DataFrame(filter_25_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f25_Registrations_count = dfd19_f25_Registrations_count.fillna('Unknown')
dfd19_f25_Registrations_count['Percent-2019'] = (dfd19_f25_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f25_Registrations_count['Percent-2019'] = dfd19_f25_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f25_Registrations_count['7DEvolution-2019'] = dfd19_f25_Registrations_count['Total-2019'] - dfd19_f24_Registrations_count['Total-2019']
#print(tab(dfd19_f25_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f25_Registrations_count = pd.DataFrame(filter_25_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f25_Registrations_count = dfd21_f25_Registrations_count.fillna('Unknown')
dfd21_f25_Registrations_count['Percent-2021'] = (dfd21_f25_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f25_Registrations_count['Percent-2021'] = dfd21_f25_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f25_Registrations_count['7DEvolution-2021'] = dfd21_f25_Registrations_count['Total-2021'] - dfd21_f24_Registrations_count['Total-2021']
#print(tab(dfd21_f25_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f25_Registrations_count = pd.DataFrame(filter_25_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f25_Registrations_count = dfd22_f25_Registrations_count.fillna('Unknown')
dfd22_f25_Registrations_count['Percent-2022'] = (dfd22_f25_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f25_Registrations_count['Percent-2022'] = dfd22_f25_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f25_Registrations_count['7DEvolution-2022'] = dfd22_f25_Registrations_count['Total-2022'] - dfd22_f24_Registrations_count['Total-2022']
#print(tab(dfd22_f25_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_Registrations_count = pd.DataFrame(filter_25_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f25_Registrations_count = dfd23_f25_Registrations_count.fillna('Unknown')
dfd23_f25_Registrations_count['Percent-2023'] = (dfd23_f25_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f25_Registrations_count['Percent-2023'] = dfd23_f25_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f25_Registrations_count['7DEvolution-2023'] = dfd23_f25_Registrations_count['Total-2023'] - dfd23_f24_Registrations_count['Total-2023']
#print(tab(dfd23_f25_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f25_RegistrationsEvolution_count = pd.DataFrame(filter_25_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f25_RegistrationsEvolution_count = dfd23_f25_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f25_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f25_Registrations_count['Total-2023'] - dfd19_f25_Registrations_count['Total-2019'])/ dfd19_f25_Registrations_count['Total-2019'].sum()) * 100
dfd23_f25_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f25_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f25_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f25 = pd.DataFrame(pd.merge(dfd17_f25_Registrations_count, dfd18_f25_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f25 = pd.DataFrame(pd.merge(dfd19_f25_Registrations_count, dfd21_f25_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f25 = pd.DataFrame(pd.merge(dfd22_f25_Registrations_count, dfd23_f25_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f25 = pd.DataFrame(pd.merge(df_Registrations_count_1_f25, df_Registrations_count_2_f25, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f25 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f25, df_Registrations_count_3_f25, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f25 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f25, dfd23_f25_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f25 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17, df_Registrations_Merge_f18, df_Registrations_Merge_f19, df_Registrations_Merge_f20,
                                           df_Registrations_Merge_f21, df_Registrations_Merge_f22, df_Registrations_Merge_f23, df_Registrations_Merge_f24,
                                           df_Registrations_Merge_f25]
Concat_Registrations_count_f1_f25 = pd.concat(ConcatFrames_Registrations_count_f1_f25)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f25  = ConcatFrames_Registrations_count_f1_f25.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f25.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f25 = filter_25_df18[filter_25_df18['New customer'] == 1]
df_NewCustomer_df19_f25 = filter_25_df19[filter_25_df19['New customer'] == 1]
df_NewCustomer_df21_f25 = filter_25_df21[filter_25_df21['New customer'] == 1]
df_NewCustomer_df22_f25 = filter_25_df22[filter_25_df22['New customer'] == 1]
df_NewCustomer_df23_f25 = filter_25_df23[filter_25_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f25.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f25.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f25.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a25_ACQRET_count = pd.DataFrame(filter_25_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f25_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f25.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f25_ACQRET_count['Percent-2018'] = (dfd18_f25_ACQRET_count['ACQ-2018'] / dfd18_f25_Registrations_count['Total-2018'].sum()) * 100
dfd18_f25_ACQRET_count['Percent-2018'] = dfd18_f25_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f25_ACQRET_count['RET-2018'] = dfd18_a25_ACQRET_count['Total-2018'] - dfd18_f25_ACQRET_count['ACQ-2018']
dfd18_f25_ACQRET_count['Percnt-2018'] = (dfd18_f25_ACQRET_count['RET-2018'] / dfd18_a25_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f25_ACQRET_count['Percnt-2018'] = dfd18_f25_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f25_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a25_ACQRET_count = pd.DataFrame(filter_25_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f25_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f25.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f25_ACQRET_count['Percent-2019'] = (dfd19_f25_ACQRET_count['ACQ-2019'] / dfd19_f25_Registrations_count['Total-2019'].sum()) * 100
dfd19_f25_ACQRET_count['Percent-2019'] = dfd19_f25_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f25_ACQRET_count['RET-2019'] = dfd19_a25_ACQRET_count['Total-2019'] - dfd19_f25_ACQRET_count['ACQ-2019']
dfd19_f25_ACQRET_count['Percnt-2019'] = (dfd19_f25_ACQRET_count['RET-2019'] / dfd19_a25_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f25_ACQRET_count['Percnt-2019'] = dfd19_f25_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f25_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a25_ACQRET_count = pd.DataFrame(filter_25_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f25_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f25.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f25_ACQRET_count['Percent-2021'] = (dfd21_f25_ACQRET_count['ACQ-2021'] / dfd21_f25_Registrations_count['Total-2021'].sum()) * 100
dfd21_f25_ACQRET_count['Percent-2021'] = dfd21_f25_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f25_ACQRET_count['RET-2021'] = dfd21_a25_ACQRET_count['Total-2021'] - dfd21_f25_ACQRET_count['ACQ-2021']
dfd21_f25_ACQRET_count['Percnt-2021'] = (dfd21_f25_ACQRET_count['RET-2021'] / dfd21_a25_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f25_ACQRET_count['Percnt-2021'] = dfd21_f25_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f25_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a25_ACQRET_count = pd.DataFrame(filter_25_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f25_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f25.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f25_ACQRET_count['Percent-2022'] = (dfd22_f25_ACQRET_count['ACQ-2022'] / dfd22_f25_Registrations_count['Total-2022'].sum()) * 100
dfd22_f25_ACQRET_count['Percent-2022'] = dfd22_f25_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f25_ACQRET_count['RET-2022'] = dfd22_a25_ACQRET_count['Total-2022'] - dfd22_f25_ACQRET_count['ACQ-2022']
dfd22_f25_ACQRET_count['Percnt-2022'] = (dfd22_f25_ACQRET_count['RET-2022'] / dfd22_a25_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f25_ACQRET_count['Percnt-2022'] = dfd22_f25_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f25_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a25_ACQRET_count = pd.DataFrame(filter_25_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f25_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f25.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f25_ACQRET_count['Percent-2023'] = (dfd23_f25_ACQRET_count['ACQ-2023'] / dfd23_f25_Registrations_count['Total-2023'].sum()) * 100
dfd23_f25_ACQRET_count['Percent-2023'] = dfd23_f25_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f25_ACQRET_count['RET-2023'] = dfd23_a25_ACQRET_count['Total-2023'] - dfd23_f25_ACQRET_count['ACQ-2023']
dfd23_f25_ACQRET_count['Percnt-2023'] = (dfd23_f25_ACQRET_count['RET-2023'] / dfd23_a25_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f25_ACQRET_count['Percnt-2023'] = dfd23_f25_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f25_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f25 = pd.DataFrame(pd.merge(dfd18_a25_ACQRET_count, dfd18_f25_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f25 = pd.DataFrame(pd.merge(dfd19_a25_ACQRET_count, dfd19_f25_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f25 = pd.DataFrame(pd.merge(dfd21_a25_ACQRET_count, dfd21_f25_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f25 = pd.DataFrame(pd.merge(dfd22_a25_ACQRET_count, dfd22_f25_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_25_f25 = pd.DataFrame(pd.merge(dfd23_a25_ACQRET_count, dfd23_f25_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_25_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f25 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f25, df_ACQRET_count_2_f25, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f25 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f25, df_ACQRET_count_3_f25, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f25 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f25, df_ACQRET_count_4_f25, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f25 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f25, df_ACQRET_count_25_f25, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f25 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17, df_ACQRET_count_M4_f18, df_ACQRET_count_M4_f19, df_ACQRET_count_M4_f20,
                                    df_ACQRET_count_M4_f21, df_ACQRET_count_M4_f22, df_ACQRET_count_M4_f23, df_ACQRET_count_M4_f24,
                                    df_ACQRET_count_M4_f25]
Concat_ACQRET_count_f1_f25 = pd.concat(ConcatFrames_ACQRET_count_f1_f25)
#print(tab(Concat_ACQRET_count_f1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f25 = Concat_ACQRET_count_f1_f25[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f25_Revenue_calc = pd.DataFrame(filter_25_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f25_Revenue_calc['Percent-2017'] = (dfd17_f25_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f25_Revenue_calc['Percent-2017'] = dfd17_f25_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f25_Revenue_calc['7DEvolution-2017'] = dfd17_f25_Revenue_calc['Total-2017'] - dfd17_f24_Revenue_calc['Total-2017']
#print(tab(dfd17_f25_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f25_Revenue_calc = pd.DataFrame(filter_25_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f25_Revenue_calc['Percent-2018'] = (dfd18_f25_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f25_Revenue_calc['Percent-2018'] = dfd18_f25_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f25_Revenue_calc['7DEvolution-2018'] = dfd18_f25_Revenue_calc['Total-2018'] - dfd18_f24_Revenue_calc['Total-2018']
#print(tab(dfd18_f25_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f25_Revenue_calc = pd.DataFrame(filter_25_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f25_Revenue_calc['Percent-2019'] = (dfd19_f25_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f25_Revenue_calc['Percent-2019'] = dfd19_f25_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f25_Revenue_calc['7DEvolution-2019'] = dfd19_f25_Revenue_calc['Total-2019'] - dfd19_f24_Revenue_calc['Total-2019']
#print(tab(dfd19_f25_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f25_Revenue_calc = pd.DataFrame(filter_25_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f25_Revenue_calc['Percent-2021'] = (dfd21_f25_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f25_Revenue_calc['Percent-2021'] = dfd21_f25_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f25_Revenue_calc['7DEvolution-2021'] = dfd21_f25_Revenue_calc['Total-2021'] - dfd21_f24_Revenue_calc['Total-2021']
#print(tab(dfd21_f25_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f25_Revenue_calc = pd.DataFrame(filter_25_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f25_Revenue_calc['Percent-2022'] = (dfd22_f25_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f25_Revenue_calc['Percent-2022'] = dfd22_f25_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f25_Revenue_calc['7DEvolution-2022'] = dfd22_f25_Revenue_calc['Total-2022'] - dfd22_f24_Revenue_calc['Total-2022']
#print(tab(dfd22_f25_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_Revenue_calc = pd.DataFrame(filter_25_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f25_Revenue_calc['Percent-2023'] = (dfd23_f25_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f25_Revenue_calc['Percent-2023'] = dfd23_f25_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f25_Revenue_calc['7DEvolution-2023'] = dfd23_f25_Revenue_calc['Total-2023'] - dfd23_f24_Revenue_calc['Total-2023']
#print(tab(dfd23_f25_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f25_RevenueEvolution_calc = pd.DataFrame(filter_25_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f25_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f25_Revenue_calc['Total-2023'] - dfd19_f25_Revenue_calc['Total-2019'])/ dfd19_f25_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f25_RevenueEvolution_calc['Evolution-2023'] = dfd23_f25_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f25_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f25 = pd.DataFrame(pd.merge(dfd17_f25_Revenue_calc, dfd18_f25_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f25 = pd.DataFrame(pd.merge(dfd19_f25_Revenue_calc, dfd21_f25_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f25 = pd.DataFrame(pd.merge(dfd22_f25_Revenue_calc, dfd23_f25_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f25_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f25, df_Revenue_calc_2_f25, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f25Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f25_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f25_Evolution, df_Revenue_calc_3_f25, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f25Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f25 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f25_Evolution, dfd23_f25_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f25 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17, df_Revenue_calc_f18, df_Revenue_calc_f19, df_Revenue_calc_f20,
                                 df_Revenue_calc_f21, df_Revenue_calc_f22, df_Revenue_calc_f23, df_Revenue_calc_f24,
                                 df_Revenue_calc_f25]
Concat_REV_count_f1_f25 = pd.concat(ConcatFrames_REV_count_f1_f25)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f25_Registrations_GRDel = pd.DataFrame(filtr_25_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f25_Registrations_GRDel = dfd17_f25_Registrations_GRDel.fillna('Unknown')
dfd17_f25_Registrations_GRDel['Percent-2017'] = (dfd17_f25_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f25_Registrations_GRDel['Percent-2017'] = dfd17_f25_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f25_Registrations_GRDel['7DEvolution-2017'] = dfd17_f25_Registrations_GRDel['Total-2017'] - dfd17_f24_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f25_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f25_Registrations_GRDel = pd.DataFrame(filtr_25_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f25_Registrations_GRDel = dfd18_f25_Registrations_GRDel.fillna('Unknown')
dfd18_f25_Registrations_GRDel['Percent-2018'] = (dfd18_f25_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f25_Registrations_GRDel['Percent-2018'] = dfd18_f25_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f25_Registrations_GRDel['7DEvolution-2018'] = dfd18_f25_Registrations_GRDel['Total-2018'] - dfd18_f24_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f25_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f25_Registrations_GRDel = pd.DataFrame(filtr_25_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f25_Registrations_GRDel = dfd19_f25_Registrations_GRDel.fillna('Unknown')
dfd19_f25_Registrations_GRDel['Percent-2019'] = (dfd19_f25_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f25_Registrations_GRDel['Percent-2019'] = dfd19_f25_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f25_Registrations_GRDel['7DEvolution-2019'] = dfd19_f25_Registrations_GRDel['Total-2019'] - dfd19_f24_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f25_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f25_Registrations_GRDel = pd.DataFrame(filtr_25_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f25_Registrations_GRDel = dfd21_f25_Registrations_GRDel.fillna('Unknown')
dfd21_f25_Registrations_GRDel['Percent-2021'] = (dfd21_f25_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f25_Registrations_GRDel['Percent-2021'] = dfd21_f25_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f25_Registrations_GRDel['7DEvolution-2021'] = dfd21_f25_Registrations_GRDel['Total-2021'] - dfd21_f24_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f25_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f25_Registrations_GRDel = pd.DataFrame(filtr_25_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f25_Registrations_GRDel = dfd22_f25_Registrations_GRDel.fillna('Unknown')
dfd22_f25_Registrations_GRDel['Percent-2022'] = (dfd22_f25_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f25_Registrations_GRDel['Percent-2022'] = dfd22_f25_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f25_Registrations_GRDel['7DEvolution-2022'] = dfd22_f25_Registrations_GRDel['Total-2022'] - dfd22_f24_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f25_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_Registrations_GRDel = pd.DataFrame(filtr_25_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f25_Registrations_GRDel = dfd23_f25_Registrations_GRDel.fillna('Unknown')
dfd23_f25_Registrations_GRDel['Percent-2023'] = (dfd23_f25_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f25_Registrations_GRDel['Percent-2023'] = dfd23_f25_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f25_Registrations_GRDel['7DEvolution-2023'] = dfd23_f25_Registrations_GRDel['Total-2023'] - dfd23_f24_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f25_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f25_Registrations_Evol_GRDel = pd.DataFrame(filtr_25_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f25_Registrations_Evol_GRDel = dfd23_f25_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f25_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f25_Registrations_GRDel['Total-2023'] - dfd19_f25_Registrations_GRDel['Total-2019'])/ dfd19_f25_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f25_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f25 = pd.concat([dfd17_f25_Registrations_GRDel, dfd18_f25_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f25 = pd.DataFrame(pd.merge(dfd17_f25_Registrations_GRDel, dfd18_f25_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f25 = pd.DataFrame(pd.merge(dfd19_f25_Registrations_GRDel, dfd21_f25_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f25 = pd.DataFrame(pd.merge(dfd22_f25_Registrations_GRDel, dfd23_f25_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f25 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f25, df_Registrations_GRDel_2_f25, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_25_f25 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f25, df_Registrations_GRDel_3_f25, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f25 = pd.DataFrame(pd.merge(df_Registrations_GRDel_25_f25, dfd23_f25_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f25 = df_Registrations_GRDel_f25[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f25 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17, df_Registrations_GRDel_f18, df_Registrations_GRDel_f19, df_Registrations_GRDel_f20,
                                      df_Registrations_GRDel_f21, df_Registrations_GRDel_f22, df_Registrations_GRDel_f23, df_Registrations_GRDel_f24,
                                      df_Registrations_GRDel_f25]
Concat_RegGRDel_count_f1_f25 = pd.concat(ConcatFrames_RegGRDel_count_f1_f25)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f25 = filtr_25_df18_GRdel[filtr_25_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f25 = filtr_25_df19_GRdel[filtr_25_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f25 = filtr_25_df21_GRdel[filtr_25_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f25 = filtr_25_df22_GRdel[filtr_25_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f25 = filtr_25_df23_GRdel[filtr_25_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f25.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f25.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a25_AC_RT_GRDel = pd.DataFrame(filtr_25_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f25_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f25.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f25_AC_RT_GRDel['Percent-2018'] = (dfd18_f25_AC_RT_GRDel['ACQ-2018'] / dfd18_f25_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f25_AC_RT_GRDel['Percent-2018'] = dfd18_f25_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f25_AC_RT_GRDel['RET-2018'] = dfd18_a25_AC_RT_GRDel['Total-2018'] - dfd18_f25_AC_RT_GRDel['ACQ-2018']
dfd18_f25_AC_RT_GRDel['Percnt-2018'] = (dfd18_f25_AC_RT_GRDel['RET-2018'] / dfd18_a25_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f25_AC_RT_GRDel['Percnt-2018'] = dfd18_f25_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f25_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a25_AC_RT_GRDel = pd.DataFrame(filtr_25_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f25_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f25.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f25_AC_RT_GRDel['Percent-2019'] = (dfd19_f25_AC_RT_GRDel['ACQ-2019'] / dfd19_f25_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f25_AC_RT_GRDel['Percent-2019'] = dfd19_f25_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f25_AC_RT_GRDel['RET-2019'] = dfd19_a25_AC_RT_GRDel['Total-2019'] - dfd19_f25_AC_RT_GRDel['ACQ-2019']
dfd19_f25_AC_RT_GRDel['Percnt-2019'] = (dfd19_f25_AC_RT_GRDel['RET-2019'] / dfd19_a25_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f25_AC_RT_GRDel['Percnt-2019'] = dfd19_f25_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f25_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a25_AC_RT_GRDel = pd.DataFrame(filtr_25_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f25_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f25.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f25_AC_RT_GRDel['Percent-2021'] = (dfd21_f25_AC_RT_GRDel['ACQ-2021'] / dfd21_f25_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f25_AC_RT_GRDel['Percent-2021'] = dfd21_f25_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f25_AC_RT_GRDel['RET-2021'] = dfd21_a25_AC_RT_GRDel['Total-2021'] - dfd21_f25_AC_RT_GRDel['ACQ-2021']
dfd21_f25_AC_RT_GRDel['Percnt-2021'] = (dfd21_f25_AC_RT_GRDel['RET-2021'] / dfd21_a25_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f25_AC_RT_GRDel['Percnt-2021'] = dfd21_f25_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f25_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a25_AC_RT_GRDel = pd.DataFrame(filtr_25_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f25_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f25.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f25_AC_RT_GRDel['Percent-2022'] = (dfd22_f25_AC_RT_GRDel['ACQ-2022'] / dfd22_f25_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f25_AC_RT_GRDel['Percent-2022'] = dfd22_f25_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f25_AC_RT_GRDel['RET-2022'] = dfd22_a25_AC_RT_GRDel['Total-2022'] - dfd22_f25_AC_RT_GRDel['ACQ-2022']
dfd22_f25_AC_RT_GRDel['Percnt-2022'] = (dfd22_f25_AC_RT_GRDel['RET-2022'] / dfd22_a25_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f25_AC_RT_GRDel['Percnt-2022'] = dfd22_f25_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f25_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a25_AC_RT_GRDel = pd.DataFrame(filtr_25_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f25_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f25.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f25_AC_RT_GRDel['Percent-2023'] = (dfd23_f25_AC_RT_GRDel['ACQ-2023'] / dfd23_f25_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f25_AC_RT_GRDel['Percent-2023'] = dfd23_f25_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f25_AC_RT_GRDel['RET-2023'] = dfd23_a25_AC_RT_GRDel['Total-2023'] - dfd23_f25_AC_RT_GRDel['ACQ-2023']
dfd23_f25_AC_RT_GRDel['Percnt-2023'] = (dfd23_f25_AC_RT_GRDel['RET-2023'] / dfd23_a25_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f25_AC_RT_GRDel['Percnt-2023'] = dfd23_f25_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f25_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f25 = pd.DataFrame(pd.merge_ordered(dfd18_a25_AC_RT_GRDel, dfd18_f25_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f25 = pd.DataFrame(pd.merge_ordered(dfd19_a25_AC_RT_GRDel, dfd19_f25_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f25 = pd.DataFrame(pd.merge_ordered(dfd21_a25_AC_RT_GRDel, dfd21_f25_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f25 = pd.DataFrame(pd.merge_ordered(dfd22_a25_AC_RT_GRDel, dfd22_f25_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_25_f25 = pd.DataFrame(pd.merge_ordered(dfd23_a25_AC_RT_GRDel, dfd23_f25_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f25 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f25, df_AC_ET_GRDel_2_f25, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f25 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f25, df_AC_ET_GRDel_3_f25, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f25 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f25, df_AC_ET_GRDel_4_f25, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f25 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f25, df_AC_ET_GRDel_25_f25, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f25 = df_AC_RT_GRDel_M4_f25[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f25 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17, df_AC_RT_GRDel_M4_f18, df_AC_RT_GRDel_M4_f19, df_AC_RT_GRDel_M4_f20,
                               df_AC_RT_GRDel_M4_f21, df_AC_RT_GRDel_M4_f22, df_AC_RT_GRDel_M4_f23, df_AC_RT_GRDel_M4_f24,
                               df_AC_RT_GRDel_M4_f25]
Conct_AC_RT_GRDel_f1_f25 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f25)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_25_df17_GRdel = filtr_25_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f25_Revenu_GRDel = pd.DataFrame(filtr_25_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f25_Revenu_GRDel['Percent-2017'] = (dfd17_f25_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f25_Revenu_GRDel['Percent-2017'] = dfd17_f25_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f25_Revenu_GRDel['7DEvolution-2017'] = dfd17_f25_Revenu_GRDel['Total-2017'] - dfd17_f24_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f25_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_25_df18_GRdel = filtr_25_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f25_Revenu_GRDel = pd.DataFrame(filtr_25_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f25_Revenu_GRDel['Percent-2018'] = (dfd18_f25_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f25_Revenu_GRDel['Percent-2018'] = dfd18_f25_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f25_Revenu_GRDel['7DEvolution-2018'] = dfd18_f25_Revenu_GRDel['Total-2018'] - dfd18_f24_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f25_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_25_df19_GRdel = filtr_25_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f25_Revenu_GRDel = pd.DataFrame(filtr_25_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f25_Revenu_GRDel['Percent-2019'] = (dfd19_f25_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f25_Revenu_GRDel['Percent-2019'] = dfd19_f25_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f25_Revenu_GRDel['7DEvolution-2019'] = dfd19_f25_Revenu_GRDel['Total-2019'] - dfd19_f24_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f25_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_25_df21_GRdel = filtr_25_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f25_Revenu_GRDel = pd.DataFrame(filtr_25_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f25_Revenu_GRDel['Percent-2021'] = (dfd21_f25_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f25_Revenu_GRDel['Percent-2021'] = dfd21_f25_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f25_Revenu_GRDel['7DEvolution-2021'] = dfd21_f25_Revenu_GRDel['Total-2021'] - dfd21_f24_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f25_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_25_df22_GRdel = filtr_25_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f25_Revenu_GRDel = pd.DataFrame(filtr_25_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f25_Revenu_GRDel['Percent-2022'] = (dfd22_f25_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f25_Revenu_GRDel['Percent-2022'] = dfd22_f25_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f25_Revenu_GRDel['7DEvolution-2022'] = dfd22_f25_Revenu_GRDel['Total-2022'] - dfd22_f24_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f25_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_25_df23_GRdel = filtr_25_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f25_Revenu_GRDel = pd.DataFrame(filtr_25_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f25_Revenu_GRDel['Percent-2023'] = (dfd23_f25_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f25_Revenu_GRDel['Percent-2023'] = dfd23_f25_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f25_Revenu_GRDel['7DEvolution-2023'] = dfd23_f25_Revenu_GRDel['Total-2023'] - dfd23_f24_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f25_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f25_Revenu_Evlt_GRDel = pd.DataFrame(filtr_25_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f25_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f25_Revenu_GRDel['Total-2023'] - dfd19_f25_Revenu_GRDel['Total-2019'])/ dfd19_f25_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f25_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f25_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f25_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f25 = pd.DataFrame(pd.merge(dfd17_f25_Revenu_GRDel, dfd18_f25_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f25 = pd.DataFrame(pd.merge(dfd19_f25_Revenu_GRDel, dfd21_f25_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f25 = pd.DataFrame(pd.merge(dfd22_f25_Revenu_GRDel, dfd23_f25_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f25 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f25, df_Revenu_GRDel_2_f25, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_25_f25 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f25, df_Revenu_GRDel_3_f25, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f25 = pd.DataFrame(pd.merge(df_Revenu_GRDel_25_f25, dfd23_f25_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f25 = df_Revenu_GRDel_f25[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f25 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17, df_Revenu_GRDel_f18, df_Revenu_GRDel_f19, df_Revenu_GRDel_f20,
                             df_Revenu_GRDel_f21, df_Revenu_GRDel_f22, df_Revenu_GRDel_f23, df_Revenu_GRDel_f24,
                             df_Revenu_GRDel_f25]
Conct_RV_GRDel_f1_f25 = pd.concat(ConcatFra_RV_GRDel_f1_f25)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f25_Profile_count = pd.DataFrame(filtr_25_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f25_Profile_count = dfd17_f25_Profile_count.fillna('Unknown')
dfd17_f25_Profile_count['Percent-2017'] = (dfd17_f25_Profile_count['Total-2017'] / dfd17_f25_Profile_count['Total-2017'].sum()) * 100
dfd17_f25_Profile_count['Percent-2017'] = dfd17_f25_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f25_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f25_Profile_count = pd.DataFrame(filtr_25_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f25_Profile_count = dfd18_f25_Profile_count.fillna('Unknown')
dfd18_f25_Profile_count['Percent-2018'] = (dfd18_f25_Profile_count['Total-2018'] / dfd18_f25_Profile_count['Total-2018'].sum()) * 100
dfd18_f25_Profile_count['Percent-2018'] = dfd18_f25_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f25_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f25_Profile_count = pd.DataFrame(filtr_25_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f25_Profile_count = dfd19_f25_Profile_count.fillna('Unknown')
dfd19_f25_Profile_count['Percent-2019'] = (dfd19_f25_Profile_count['Total-2019'] / dfd19_f25_Profile_count['Total-2019'].sum()) * 100
dfd19_f25_Profile_count['Percent-2019'] = dfd19_f25_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f25_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f25_Profile_count = pd.DataFrame(filtr_25_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f25_Profile_count = dfd21_f25_Profile_count.fillna('Unknown')
dfd21_f25_Profile_count['Percent-2021'] = (dfd21_f25_Profile_count['Total-2021'] / dfd21_f25_Profile_count['Total-2021'].sum()) * 100
dfd21_f25_Profile_count['Percent-2021'] = dfd21_f25_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f25_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f25_Profile_count = pd.DataFrame(filtr_25_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f25_Profile_count = dfd22_f25_Profile_count.fillna('Unknown')
dfd22_f25_Profile_count['Percent-2022'] = (dfd22_f25_Profile_count['Total-2022'] / dfd22_f25_Profile_count['Total-2022'].sum()) * 100
dfd22_f25_Profile_count['Percent-2022'] = dfd22_f25_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f25_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_Profile_count = pd.DataFrame(filtr_25_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f25_Profile_count = dfd23_f25_Profile_count.fillna('Unknown')
dfd23_f25_Profile_count['Percent-2023'] = (dfd23_f25_Profile_count['Total-2023'] / dfd23_f25_Profile_count['Total-2023'].sum()) * 100
dfd23_f25_Profile_count['Percent-2023'] = dfd23_f25_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f25_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f25 = pd.DataFrame(pd.merge(dfd17_f25_Profile_count, dfd18_f25_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f25 = pd.DataFrame(pd.merge(dfd19_f25_Profile_count, dfd21_f25_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f25 = pd.DataFrame(pd.merge(dfd22_f25_Profile_count, dfd23_f25_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f25 = pd.DataFrame(pd.merge(df_Profile_Count_1_f25, df_Profile_Count_2_f25, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f25 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f25, df_Profile_Count_3_f25, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f25 = df_Profile_Count_m2_f25.append(df_Profile_Count_m2_f25.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f25['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f25_Pass_count = pd.DataFrame(filtr_25_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f25_Pass_count = dfd17_f25_Pass_count.fillna('Unknown')
dfd17_f25_Pass_count['Percent-2017'] = (dfd17_f25_Pass_count['Total-2017'] / dfd17_f25_Pass_count['Total-2017'].sum()) * 100
dfd17_f25_Pass_count['Percent-2017'] = dfd17_f25_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f25_Pass_count = pd.DataFrame(filtr_25_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f25_Pass_count = dfd18_f25_Pass_count.fillna('Unknown')
dfd18_f25_Pass_count['Percent-2018'] = (dfd18_f25_Pass_count['Total-2018'] / dfd18_f25_Pass_count['Total-2018'].sum()) * 100
dfd18_f25_Pass_count['Percent-2018'] = dfd18_f25_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f25_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f25_Pass_count = pd.DataFrame(filtr_25_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f25_Pass_count = dfd19_f25_Pass_count.fillna('Unknown')
dfd19_f25_Pass_count['Percent-2019'] = (dfd19_f25_Pass_count['Total-2019'] / dfd19_f25_Pass_count['Total-2019'].sum()) * 100
dfd19_f25_Pass_count['Percent-2019'] = dfd19_f25_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f25_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f25_Pass_count = pd.DataFrame(filtr_25_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f25_Pass_count = dfd21_f25_Pass_count.fillna('Unknown')
dfd21_f25_Pass_count['Percent-2021'] = (dfd21_f25_Pass_count['Total-2021'] / dfd21_f25_Pass_count['Total-2021'].sum()) * 100
dfd21_f25_Pass_count['Percent-2021'] = dfd21_f25_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f25_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f25_Pass_count = pd.DataFrame(filtr_25_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f25_Pass_count = dfd22_f25_Pass_count.fillna('Unknown')
dfd22_f25_Pass_count['Percent-2022'] = (dfd22_f25_Pass_count['Total-2022'] / dfd22_f25_Pass_count['Total-2022'].sum()) * 100
dfd22_f25_Pass_count['Percent-2022'] = dfd22_f25_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f25_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_Pass_count = pd.DataFrame(filtr_25_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f25_Pass_count = dfd23_f25_Pass_count.fillna('Unknown')
dfd23_f25_Pass_count['Percent-2023'] = (dfd23_f25_Pass_count['Total-2023'] / dfd23_f25_Pass_count['Total-2023'].sum()) * 100
dfd23_f25_Pass_count['Percent-2023'] = dfd23_f25_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f25_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f25 = pd.DataFrame(pd.merge(dfd17_f25_Pass_count, dfd18_f25_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f25 = pd.DataFrame(pd.merge(dfd19_f25_Pass_count, dfd21_f25_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f25 = pd.DataFrame(pd.merge(dfd22_f25_Pass_count, dfd23_f25_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f25 = pd.DataFrame(pd.merge(df_Pass_Count_1_f25, df_Pass_Count_2_f25, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f25 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f25, df_Pass_Count_3_f25, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f25 = df_Pass_Count_m2_f25.append(df_Pass_Count_m2_f25.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f25['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f25_Attendees_Country_count = pd.DataFrame(filtr_25_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f25_Attendees_Country_count = dfd17_f25_Attendees_Country_count.fillna('Unknown')
dfd17_f25_Attendees_Country_count['Percent-2017'] = (dfd17_f25_Attendees_Country_count['Total-2017'] / dfd17_f25_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f25_Attendees_Country_count['Percent-2017'] = dfd17_f25_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f25_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f25_Attendees_Country_count = pd.DataFrame(filtr_25_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f25_Attendees_Country_count = dfd18_f25_Attendees_Country_count.fillna('Unknown')
dfd18_f25_Attendees_Country_count['Percent-2018'] = (dfd18_f25_Attendees_Country_count['Total-2018'] / dfd18_f25_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f25_Attendees_Country_count['Percent-2018'] = dfd18_f25_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f25_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f25_Attendees_Country_count = pd.DataFrame(filtr_25_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f25_Attendees_Country_count = dfd19_f25_Attendees_Country_count.fillna('Unknown')
dfd19_f25_Attendees_Country_count['Percent-2019'] = (dfd19_f25_Attendees_Country_count['Total-2019'] / dfd19_f25_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f25_Attendees_Country_count['Percent-2019'] = dfd19_f25_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f25_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f25_Attendees_Country_count = pd.DataFrame(filtr_25_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f25_Attendees_Country_count = dfd21_f25_Attendees_Country_count.fillna('Unknown')
dfd21_f25_Attendees_Country_count['Percent-2021'] = (dfd21_f25_Attendees_Country_count['Total-2021'] / dfd21_f25_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f25_Attendees_Country_count['Percent-2021'] = dfd21_f25_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f25_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f25_Attendees_Country_count = pd.DataFrame(filtr_25_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f25_Attendees_Country_count = dfd22_f25_Attendees_Country_count.fillna('Unknown')
dfd22_f25_Attendees_Country_count['Percent-2022'] = (dfd22_f25_Attendees_Country_count['Total-2022'] / dfd22_f25_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f25_Attendees_Country_count['Percent-2022'] = dfd22_f25_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f25_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_Attendees_Country_count = pd.DataFrame(filtr_25_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f25_Attendees_Country_count = dfd23_f25_Attendees_Country_count.fillna('Unknown')
dfd23_f25_Attendees_Country_count['Percent-2023'] = (dfd23_f25_Attendees_Country_count['Total-2023'] / dfd23_f25_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f25_Attendees_Country_count['Percent-2023'] = dfd23_f25_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f25_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f25 = pd.DataFrame(pd.merge(dfd17_f25_Attendees_Country_count, dfd18_f25_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f25 = pd.DataFrame(pd.merge(dfd19_f25_Attendees_Country_count, dfd21_f25_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f25 = pd.DataFrame(pd.merge(dfd22_f25_Attendees_Country_count, dfd23_f25_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f25 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f25, dfAttendees_Country_Count_2_f25, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f25.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f25 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f25, dfAttendees_Country_Count_3_f25, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f25 = dfAttendees_Country_Count_m2_f25.append(dfAttendees_Country_Count_m2_f25.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f25['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f25_ATTENDEES_AREAS_count = pd.DataFrame(filtr_25_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f25_ATTENDEES_AREAS_count = dfd17_f25_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f25_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f25_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f25_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f25_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f25_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f25_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f25_ATTENDEES_AREAS_count = pd.DataFrame(filtr_25_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f25_ATTENDEES_AREAS_count = dfd18_f25_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f25_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f25_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f25_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f25_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f25_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f25_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f25_ATTENDEES_AREAS_count = pd.DataFrame(filtr_25_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f25_ATTENDEES_AREAS_count = dfd19_f25_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f25_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f25_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f25_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f25_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f25_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f25_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f25_ATTENDEES_AREAS_count = pd.DataFrame(filtr_25_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f25_ATTENDEES_AREAS_count = dfd21_f25_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f25_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f25_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f25_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f25_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f25_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f25_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f25_ATTENDEES_AREAS_count = pd.DataFrame(filtr_25_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f25_ATTENDEES_AREAS_count = dfd22_f25_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f25_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f25_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f25_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f25_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f25_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f25_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_ATTENDEES_AREAS_count = pd.DataFrame(filtr_25_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f25_ATTENDEES_AREAS_count = dfd23_f25_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f25_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f25_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f25_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f25_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f25_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f25_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f25 = pd.DataFrame(pd.merge(dfd17_f25_ATTENDEES_AREAS_count, dfd18_f25_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f25 = pd.DataFrame(pd.merge(dfd19_f25_ATTENDEES_AREAS_count, dfd21_f25_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f25 = pd.DataFrame(pd.merge(dfd22_f25_ATTENDEES_AREAS_count, dfd23_f25_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f25.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f25 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f25, df_ATTENDEES_AREAS_count_2_f25, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f25 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f25, df_ATTENDEES_AREAS_count_3_f25, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f25 = df_ATTENDEES_AREAS_count_m2_f25.append(df_ATTENDEES_AREAS_count_m2_f25.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f25['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f25_Attendees_Specialty_count = pd.DataFrame(filtr_25_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f25_Attendees_Specialty_count = dfd17_f25_Attendees_Specialty_count.fillna('Unknown')
dfd17_f25_Attendees_Specialty_count['Percent-2017'] = (dfd17_f25_Attendees_Specialty_count['Total-2017'] / dfd17_f25_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f25_Attendees_Specialty_count['Percent-2017'] = dfd17_f25_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f25_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f25_Attendees_Specialty_count = pd.DataFrame(filtr_25_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f25_Attendees_Specialty_count = dfd18_f25_Attendees_Specialty_count.fillna('Unknown')
dfd18_f25_Attendees_Specialty_count['Percent-2018'] = (dfd18_f25_Attendees_Specialty_count['Total-2018'] / dfd18_f25_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f25_Attendees_Specialty_count['Percent-2018'] = dfd18_f25_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f25_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f25_Attendees_Specialty_count = pd.DataFrame(filtr_25_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f25_Attendees_Specialty_count = dfd19_f25_Attendees_Specialty_count.fillna('Unknown')
dfd19_f25_Attendees_Specialty_count['Percent-2019'] = (dfd19_f25_Attendees_Specialty_count['Total-2019'] / dfd19_f25_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f25_Attendees_Specialty_count['Percent-2019'] = dfd19_f25_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f25_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f25_Attendees_Specialty_count = pd.DataFrame(filtr_25_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f25_Attendees_Specialty_count = dfd21_f25_Attendees_Specialty_count.fillna('Unknown')
dfd21_f25_Attendees_Specialty_count['Percent-2021'] = (dfd21_f25_Attendees_Specialty_count['Total-2021'] / dfd21_f25_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f25_Attendees_Specialty_count['Percent-2021'] = dfd21_f25_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f25_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f25_Attendees_Specialty_count = pd.DataFrame(filtr_25_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f25_Attendees_Specialty_count = dfd22_f25_Attendees_Specialty_count.fillna('Unknown')
dfd22_f25_Attendees_Specialty_count['Percent-2022'] = (dfd22_f25_Attendees_Specialty_count['Total-2022'] / dfd22_f25_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f25_Attendees_Specialty_count['Percent-2022'] = dfd22_f25_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f25_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f25_Attendees_Specialty_count = pd.DataFrame(filtr_25_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f25_Attendees_Specialty_count = dfd23_f25_Attendees_Specialty_count.fillna('Unknown')
dfd23_f25_Attendees_Specialty_count['Percent-2023'] = (dfd23_f25_Attendees_Specialty_count['Total-2023'] / dfd23_f25_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f25_Attendees_Specialty_count['Percent-2023'] = dfd23_f25_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f25_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f25 = pd.DataFrame(pd.merge(dfd17_f25_Attendees_Specialty_count, dfd18_f25_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f25 = pd.DataFrame(pd.merge(dfd19_f25_Attendees_Specialty_count, dfd21_f25_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f25 = pd.DataFrame(pd.merge(dfd22_f25_Attendees_Specialty_count, dfd23_f25_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f25 = pd.DataFrame(pd.merge(df_Specialty_count_1_f25, df_Specialty_count_2_f25, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f25.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f25 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f25, df_Specialty_count_3_f25, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f25 = df_Specialty_count_m2_f25.append(df_Specialty_count_m2_f25.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f25['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f25['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f25['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f25 = Concat_Registrations_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f25['Total-2017'] = Concat_Registrations_count_f1_f25['Total-2017'].astype(int)
Concat_Registrations_count_f1_f25['Percent-2017'] = Concat_Registrations_count_f1_f25['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f25['7DEvolution-2017'] = Concat_Registrations_count_f1_f25['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f25['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f25['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f25 = Concat_Registrations_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f25['Total-2018'] = Concat_Registrations_count_f1_f25['Total-2018'].astype(int)
Concat_Registrations_count_f1_f25['Percent-2018'] = Concat_Registrations_count_f1_f25['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f25['7DEvolution-2018'] = Concat_Registrations_count_f1_f25['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f25['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f25['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f25 = Concat_Registrations_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f25['Total-2019'] = Concat_Registrations_count_f1_f25['Total-2019'].astype(int)
Concat_Registrations_count_f1_f25['Percent-2019'] = Concat_Registrations_count_f1_f25['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f25['7DEvolution-2019'] = Concat_Registrations_count_f1_f25['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f25['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f25['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f25 = Concat_Registrations_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f25['Total-2021'] = Concat_Registrations_count_f1_f25['Total-2021'].astype(int)
Concat_Registrations_count_f1_f25['Percent-2021'] = Concat_Registrations_count_f1_f25['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f25['7DEvolution-2021'] = Concat_Registrations_count_f1_f25['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f25['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f25['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f25 = Concat_Registrations_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f25['Total-2022'] = Concat_Registrations_count_f1_f25['Total-2022'].astype(int)
Concat_Registrations_count_f1_f25['Percent-2022'] = Concat_Registrations_count_f1_f25['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f25['7DEvolution-2022'] = Concat_Registrations_count_f1_f25['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f25['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f25['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f25 = Concat_Registrations_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f25['Total-2023'] = Concat_Registrations_count_f1_f25['Total-2023'].astype(int)
Concat_Registrations_count_f1_f25['Percent-2023'] = Concat_Registrations_count_f1_f25['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f25['7DEvolution-2023'] = Concat_Registrations_count_f1_f25['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f25['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f25['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f25 = Concat_ACQRET_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f25['Total-2018'] = Concat_ACQRET_count_f1_f25['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f25['ACQ-2018'] = Concat_ACQRET_count_f1_f25['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f25['Percent-2018'] = Concat_ACQRET_count_f1_f25['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f25['RET-2018'] = Concat_ACQRET_count_f1_f25['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f25['Percnt-2018'] = Concat_ACQRET_count_f1_f25['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f25['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f25['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f25 = Concat_ACQRET_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f25['Total-2019'] = Concat_ACQRET_count_f1_f25['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f25['ACQ-2019'] = Concat_ACQRET_count_f1_f25['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f25['Percent-2019'] = Concat_ACQRET_count_f1_f25['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f25['RET-2019'] = Concat_ACQRET_count_f1_f25['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f25['Percnt-2019'] = Concat_ACQRET_count_f1_f25['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f25['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f25['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f25 = Concat_ACQRET_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f25['Total-2021'] = Concat_ACQRET_count_f1_f25['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f25['ACQ-2021'] = Concat_ACQRET_count_f1_f25['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f25['Percent-2021'] = Concat_ACQRET_count_f1_f25['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f25['RET-2021'] = Concat_ACQRET_count_f1_f25['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f25['Percnt-2021'] = Concat_ACQRET_count_f1_f25['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f25['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f25['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f25 = Concat_ACQRET_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f25['Total-2022'] = Concat_ACQRET_count_f1_f25['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f25['ACQ-2022'] = Concat_ACQRET_count_f1_f25['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f25['Percent-2022'] = Concat_ACQRET_count_f1_f25['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f25['RET-2022'] = Concat_ACQRET_count_f1_f25['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f25['Percnt-2022'] = Concat_ACQRET_count_f1_f25['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f25['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f25['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f25 = Concat_ACQRET_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f25['Total-2023'] = Concat_ACQRET_count_f1_f25['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f25['ACQ-2023'] = Concat_ACQRET_count_f1_f25['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f25['Percent-2023'] = Concat_ACQRET_count_f1_f25['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f25['RET-2023'] = Concat_ACQRET_count_f1_f25['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f25['Percnt-2023'] = Concat_ACQRET_count_f1_f25['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f25['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f25['Total-2017'],errors='coerce')
Concat_REV_count_f1_f25 = Concat_REV_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f25['Total-2017'] = Concat_REV_count_f1_f25['Total-2017'].astype(int)
Concat_REV_count_f1_f25['Percent-2017'] = Concat_REV_count_f1_f25['Percent-2017'].astype(float)
Concat_REV_count_f1_f25['7DEvolution-2017'] = Concat_REV_count_f1_f25['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f25['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f25['Total-2018'],errors='coerce')
Concat_REV_count_f1_f25 = Concat_REV_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f25['Total-2018'] = Concat_REV_count_f1_f25['Total-2018'].astype(int)
Concat_REV_count_f1_f25['Percent-2018'] = Concat_REV_count_f1_f25['Percent-2018'].astype(float)
Concat_REV_count_f1_f25['7DEvolution-2018'] = Concat_REV_count_f1_f25['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f25['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f25['Total-2019'],errors='coerce')
Concat_REV_count_f1_f25 = Concat_REV_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f25['Total-2019'] = Concat_REV_count_f1_f25['Total-2019'].astype(int)
Concat_REV_count_f1_f25['Percent-2019'] = Concat_REV_count_f1_f25['Percent-2019'].astype(float)
Concat_REV_count_f1_f25['7DEvolution-2019'] = Concat_REV_count_f1_f25['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f25['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f25['Total-2022'],errors='coerce')
Concat_REV_count_f1_f25 = Concat_REV_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f25['Total-2022'] = Concat_REV_count_f1_f25['Total-2022'].astype(int)
Concat_REV_count_f1_f25['Percent-2022'] = Concat_REV_count_f1_f25['Percent-2022'].astype(float)
Concat_REV_count_f1_f25['7DEvolution-2022'] = Concat_REV_count_f1_f25['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f25['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f25['Total-2023'],errors='coerce')
Concat_REV_count_f1_f25 = Concat_REV_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f25['Total-2023'] = Concat_REV_count_f1_f25['Total-2023'].astype(int)
Concat_REV_count_f1_f25['Percent-2023'] = Concat_REV_count_f1_f25['Percent-2023'].astype(float)
Concat_REV_count_f1_f25['7DEvolution-2023'] = Concat_REV_count_f1_f25['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f25['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f25['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f25 = Concat_RegGRDel_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f25['Total-2017'] = Concat_RegGRDel_count_f1_f25['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f25['Percent-2017'] = Concat_RegGRDel_count_f1_f25['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f25['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f25['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f25['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f25['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f25 = Concat_RegGRDel_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f25['Total-2018'] = Concat_RegGRDel_count_f1_f25['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f25['Percent-2018'] = Concat_RegGRDel_count_f1_f25['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f25['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f25['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f25['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f25['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f25 = Concat_RegGRDel_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f25['Total-2019'] = Concat_RegGRDel_count_f1_f25['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f25['Percent-2019'] = Concat_RegGRDel_count_f1_f25['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f25['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f25['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f25['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f25['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f25 = Concat_RegGRDel_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f25['Total-2021'] = Concat_RegGRDel_count_f1_f25['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f25['Percent-2021'] = Concat_RegGRDel_count_f1_f25['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f25['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f25['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f25['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f25['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f25 = Concat_RegGRDel_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f25['Total-2022'] = Concat_RegGRDel_count_f1_f25['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f25['Percent-2022'] = Concat_RegGRDel_count_f1_f25['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f25['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f25['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f25['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f25['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f25 = Concat_RegGRDel_count_f1_f25.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f25['Total-2023'] = Concat_RegGRDel_count_f1_f25['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f25['Percent-2023'] = Concat_RegGRDel_count_f1_f25['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f25['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f25['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f25['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f25['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f25 = Conct_AC_RT_GRDel_f1_f25.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f25['Total-2018'] = Conct_AC_RT_GRDel_f1_f25['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f25['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f25['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f25['Percent-2018'] = Conct_AC_RT_GRDel_f1_f25['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f25['RET-2018'] = Conct_AC_RT_GRDel_f1_f25['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f25['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f25['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f25['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f25['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f25 = Conct_AC_RT_GRDel_f1_f25.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f25['Total-2019'] = Conct_AC_RT_GRDel_f1_f25['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f25['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f25['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f25['Percent-2019'] = Conct_AC_RT_GRDel_f1_f25['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f25['RET-2019'] = Conct_AC_RT_GRDel_f1_f25['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f25['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f25['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f25['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f25['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f25 = Conct_AC_RT_GRDel_f1_f25.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f25['Total-2021'] = Conct_AC_RT_GRDel_f1_f25['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f25['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f25['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f25['Percent-2021'] = Conct_AC_RT_GRDel_f1_f25['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f25['RET-2021'] = Conct_AC_RT_GRDel_f1_f25['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f25['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f25['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f25['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f25['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f25 = Conct_AC_RT_GRDel_f1_f25.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f25['Total-2022'] = Conct_AC_RT_GRDel_f1_f25['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f25['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f25['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f25['Percent-2022'] = Conct_AC_RT_GRDel_f1_f25['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f25['RET-2022'] = Conct_AC_RT_GRDel_f1_f25['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f25['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f25['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f25['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f25['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f25 = Conct_AC_RT_GRDel_f1_f25.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f25['Total-2023'] = Conct_AC_RT_GRDel_f1_f25['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f25['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f25['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f25['Percent-2023'] = Conct_AC_RT_GRDel_f1_f25['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f25['RET-2023'] = Conct_AC_RT_GRDel_f1_f25['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f25['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f25['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f25['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f25['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f25 = Conct_RV_GRDel_f1_f25.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f25['Total-2017'] = Conct_RV_GRDel_f1_f25['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f25['Percent-2017'] = Conct_RV_GRDel_f1_f25['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f25['7DEvolution-2017'] = Conct_RV_GRDel_f1_f25['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f25['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f25['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f25 = Conct_RV_GRDel_f1_f25.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f25['Total-2018'] = Conct_RV_GRDel_f1_f25['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f25['Percent-2018'] = Conct_RV_GRDel_f1_f25['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f25['7DEvolution-2018'] = Conct_RV_GRDel_f1_f25['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f25['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f25['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f25 = Conct_RV_GRDel_f1_f25.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f25['Total-2019'] = Conct_RV_GRDel_f1_f25['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f25['Percent-2019'] = Conct_RV_GRDel_f1_f25['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f25['7DEvolution-2019'] = Conct_RV_GRDel_f1_f25['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f25['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f25['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f25 = Conct_RV_GRDel_f1_f25.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f25['Total-2022'] = Conct_RV_GRDel_f1_f25['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f25['Percent-2022'] = Conct_RV_GRDel_f1_f25['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f25['7DEvolution-2022'] = Conct_RV_GRDel_f1_f25['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f25['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f25['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f25 = Conct_RV_GRDel_f1_f25.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f25['Total-2023'] = Conct_RV_GRDel_f1_f25['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f25['Percent-2023'] = Conct_RV_GRDel_f1_f25['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f25['7DEvolution-2023'] = Conct_RV_GRDel_f1_f25['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f25['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f25['Total-2017'],errors='coerce')
df_Profile_Count_m2_f25 = df_Profile_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f25['Total-2017'] = df_Profile_Count_m2_f25['Total-2017'].astype(int)
df_Profile_Count_m2_f25['Percent-2017'] = df_Profile_Count_m2_f25['Percent-2017'].astype(float)

df_Profile_Count_m2_f25['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f25['Total-2018'],errors='coerce')
df_Profile_Count_m2_f25 = df_Profile_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f25['Total-2018'] = df_Profile_Count_m2_f25['Total-2018'].astype(int)
df_Profile_Count_m2_f25['Percent-2018'] = df_Profile_Count_m2_f25['Percent-2018'].astype(float)

df_Profile_Count_m2_f25['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f25['Total-2019'],errors='coerce')
df_Profile_Count_m2_f25 = df_Profile_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f25['Total-2019'] = df_Profile_Count_m2_f25['Total-2019'].astype(int)
df_Profile_Count_m2_f25['Percent-2019'] = df_Profile_Count_m2_f25['Percent-2019'].astype(float)

df_Profile_Count_m2_f25['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f25['Total-2021'],errors='coerce')
df_Profile_Count_m2_f25 = df_Profile_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f25['Total-2021'] = df_Profile_Count_m2_f25['Total-2021'].astype(int)
df_Profile_Count_m2_f25['Percent-2021'] = df_Profile_Count_m2_f25['Percent-2021'].astype(float)

df_Profile_Count_m2_f25['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f25['Total-2022'],errors='coerce')
df_Profile_Count_m2_f25 = df_Profile_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f25['Total-2022'] = df_Profile_Count_m2_f25['Total-2022'].astype(int)
df_Profile_Count_m2_f25['Percent-2022'] = df_Profile_Count_m2_f25['Percent-2022'].astype(float)

df_Profile_Count_m2_f25['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f25['Total-2023'],errors='coerce')
df_Profile_Count_m2_f25 = df_Profile_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f25['Total-2023'] = df_Profile_Count_m2_f25['Total-2023'].astype(int)
df_Profile_Count_m2_f25['Percent-2023'] = df_Profile_Count_m2_f25['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f25['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f25['Total-2017'],errors='coerce')
df_Pass_Count_m2_f25 = df_Pass_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f25['Total-2017'] = df_Pass_Count_m2_f25['Total-2017'].astype(int)
df_Pass_Count_m2_f25['Percent-2017'] = df_Pass_Count_m2_f25['Percent-2017'].astype(float)

df_Pass_Count_m2_f25['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f25['Total-2018'],errors='coerce')
df_Pass_Count_m2_f25 = df_Pass_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f25['Total-2018'] = df_Pass_Count_m2_f25['Total-2018'].astype(int)
df_Pass_Count_m2_f25['Percent-2018'] = df_Pass_Count_m2_f25['Percent-2018'].astype(float)

df_Pass_Count_m2_f25['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f25['Total-2019'],errors='coerce')
df_Pass_Count_m2_f25 = df_Pass_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f25['Total-2019'] = df_Pass_Count_m2_f25['Total-2019'].astype(int)
df_Pass_Count_m2_f25['Percent-2019'] = df_Pass_Count_m2_f25['Percent-2019'].astype(float)

df_Pass_Count_m2_f25['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f25['Total-2021'],errors='coerce')
df_Pass_Count_m2_f25 = df_Pass_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f25['Total-2021'] = df_Pass_Count_m2_f25['Total-2021'].astype(int)
df_Pass_Count_m2_f25['Percent-2021'] = df_Pass_Count_m2_f25['Percent-2021'].astype(float)

df_Pass_Count_m2_f25['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f25['Total-2022'],errors='coerce')
df_Pass_Count_m2_f25 = df_Pass_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f25['Total-2022'] = df_Pass_Count_m2_f25['Total-2022'].astype(int)
df_Pass_Count_m2_f25['Percent-2022'] = df_Pass_Count_m2_f25['Percent-2022'].astype(float)

df_Pass_Count_m2_f25['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f25['Total-2023'],errors='coerce')
df_Pass_Count_m2_f25 = df_Pass_Count_m2_f25.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f25['Total-2023'] = df_Pass_Count_m2_f25['Total-2023'].astype(int)
df_Pass_Count_m2_f25['Percent-2023'] = df_Pass_Count_m2_f25['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f25['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f25['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f25 = dfAttendees_Country_Count_m2_f25.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f25['Total-2017'] = dfAttendees_Country_Count_m2_f25['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f25['Percent-2017'] = dfAttendees_Country_Count_m2_f25['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f25['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f25['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f25 = dfAttendees_Country_Count_m2_f25.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f25['Total-2018'] = dfAttendees_Country_Count_m2_f25['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f25['Percent-2018'] = dfAttendees_Country_Count_m2_f25['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f25['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f25['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f25 = dfAttendees_Country_Count_m2_f25.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f25['Total-2019'] = dfAttendees_Country_Count_m2_f25['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f25['Percent-2019'] = dfAttendees_Country_Count_m2_f25['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f25['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f25['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f25 = dfAttendees_Country_Count_m2_f25.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f25['Total-2021'] = dfAttendees_Country_Count_m2_f25['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f25['Percent-2021'] = dfAttendees_Country_Count_m2_f25['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f25['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f25['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f25 = dfAttendees_Country_Count_m2_f25.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f25['Total-2022'] = dfAttendees_Country_Count_m2_f25['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f25['Percent-2022'] = dfAttendees_Country_Count_m2_f25['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f25['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f25['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f25 = dfAttendees_Country_Count_m2_f25.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f25['Total-2023'] = dfAttendees_Country_Count_m2_f25['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f25['Percent-2023'] = dfAttendees_Country_Count_m2_f25['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f25['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f25['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f25 = df_ATTENDEES_AREAS_count_m2_f25.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f25['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f25['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f25['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f25['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f25['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f25['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f25 = df_ATTENDEES_AREAS_count_m2_f25.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f25['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f25['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f25['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f25['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f25['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f25['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f25 = df_ATTENDEES_AREAS_count_m2_f25.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f25['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f25['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f25['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f25['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f25['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f25['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f25 = df_ATTENDEES_AREAS_count_m2_f25.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f25['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f25['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f25['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f25['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f25['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f25['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f25 = df_ATTENDEES_AREAS_count_m2_f25.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f25['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f25['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f25['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f25['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f25['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f25['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f25 = df_ATTENDEES_AREAS_count_m2_f25.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f25['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f25['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f25['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f25['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f25['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f25['Total-2017'],errors='coerce')
df_Specialty_count_m2_f25 = df_Specialty_count_m2_f25.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f25['Total-2017'] = df_Specialty_count_m2_f25['Total-2017'].astype(int)
df_Specialty_count_m2_f25['Percent-2017'] = df_Specialty_count_m2_f25['Percent-2017'].astype(float)

df_Specialty_count_m2_f25['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f25['Total-2018'],errors='coerce')
df_Specialty_count_m2_f25 = df_Specialty_count_m2_f25.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f25['Total-2018'] = df_Specialty_count_m2_f25['Total-2018'].astype(int)
df_Specialty_count_m2_f25['Percent-2018'] = df_Specialty_count_m2_f25['Percent-2018'].astype(float)

df_Specialty_count_m2_f25['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f25['Total-2019'],errors='coerce')
df_Specialty_count_m2_f25 = df_Specialty_count_m2_f25.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f25['Total-2019'] = df_Specialty_count_m2_f25['Total-2019'].astype(int)
df_Specialty_count_m2_f25['Percent-2019'] = df_Specialty_count_m2_f25['Percent-2019'].astype(float)

df_Specialty_count_m2_f25['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f25['Total-2021'],errors='coerce')
df_Specialty_count_m2_f25 = df_Specialty_count_m2_f25.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f25['Total-2021'] = df_Specialty_count_m2_f25['Total-2021'].astype(int)
df_Specialty_count_m2_f25['Percent-2021'] = df_Specialty_count_m2_f25['Percent-2021'].astype(float)

df_Specialty_count_m2_f25['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f25['Total-2022'],errors='coerce')
df_Specialty_count_m2_f25 = df_Specialty_count_m2_f25.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f25['Total-2022'] = df_Specialty_count_m2_f25['Total-2022'].astype(int)
df_Specialty_count_m2_f25['Percent-2022'] = df_Specialty_count_m2_f25['Percent-2022'].astype(float)

df_Specialty_count_m2_f25['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f25['Total-2023'],errors='coerce')
df_Specialty_count_m2_f25 = df_Specialty_count_m2_f25.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f25['Total-2023'] = df_Specialty_count_m2_f25['Total-2023'].astype(int)
df_Specialty_count_m2_f25['Percent-2023'] = df_Specialty_count_m2_f25['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f25.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f25.dtypes)
#print(df_Specialty_count_m2_f25.dtypes)

#print(dfAttendees_Country_Count_m2_f25.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f25.dtypes)
#print(df_Specialty_count_m2_f25.dtypes)

# EXCEL FILE
writerf25 = pd.ExcelWriter(outputExcelFile_f25, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f25.to_excel\
    (writerf25, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f25.to_excel\
    (writerf25, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f25.to_excel\
    (writerf25, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f25.to_excel\
    (writerf25, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f25.to_excel\
    (writerf25, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f25.to_excel\
    (writerf25, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f25.to_excel\
    (writerf25, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f25.to_excel\
    (writerf25, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f25.to_excel\
    (writerf25, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f25.to_excel\
    (writerf25, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f25.to_excel\
    (writerf25, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf25.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f25)

workbook.save(outputExcelFile_f25)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 21 days**********************************************')
print('************************************End of 21 days**********************************************')
print('************************************End of 21 days**********************************************')
print('************************************End of 21 days**********************************************')
print('************************************End of 21 days**********************************************')
print('************************************End of 21 days**********************************************')
print('************************************End of 21 days**********************************************')
print('************************************End of 21 days**********************************************')
print('************************************End of 21 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f26_Registrations_count = pd.DataFrame(filter_26_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f26_Registrations_count = dfd17_f26_Registrations_count.fillna('Unknown')
dfd17_f26_Registrations_count['Percent-2017'] = (dfd17_f26_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f26_Registrations_count['Percent-2017'] = dfd17_f26_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f26_Registrations_count['7DEvolution-2017'] = dfd17_f26_Registrations_count['Total-2017'] - dfd17_f25_Registrations_count['Total-2017']
#print(tab(dfd17_f26_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f26_Registrations_count = pd.DataFrame(filter_26_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f26_Registrations_count = dfd18_f26_Registrations_count.fillna('Unknown')
dfd18_f26_Registrations_count['Percent-2018'] = (dfd18_f26_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f26_Registrations_count['Percent-2018'] = dfd18_f26_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f26_Registrations_count['7DEvolution-2018'] = dfd18_f26_Registrations_count['Total-2018'] - dfd18_f25_Registrations_count['Total-2018']
#print(tab(dfd18_f26_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f26_Registrations_count = pd.DataFrame(filter_26_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f26_Registrations_count = dfd19_f26_Registrations_count.fillna('Unknown')
dfd19_f26_Registrations_count['Percent-2019'] = (dfd19_f26_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f26_Registrations_count['Percent-2019'] = dfd19_f26_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f26_Registrations_count['7DEvolution-2019'] = dfd19_f26_Registrations_count['Total-2019'] - dfd19_f25_Registrations_count['Total-2019']
#print(tab(dfd19_f26_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f26_Registrations_count = pd.DataFrame(filter_26_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f26_Registrations_count = dfd21_f26_Registrations_count.fillna('Unknown')
dfd21_f26_Registrations_count['Percent-2021'] = (dfd21_f26_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f26_Registrations_count['Percent-2021'] = dfd21_f26_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f26_Registrations_count['7DEvolution-2021'] = dfd21_f26_Registrations_count['Total-2021'] - dfd21_f25_Registrations_count['Total-2021']
#print(tab(dfd21_f26_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f26_Registrations_count = pd.DataFrame(filter_26_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f26_Registrations_count = dfd22_f26_Registrations_count.fillna('Unknown')
dfd22_f26_Registrations_count['Percent-2022'] = (dfd22_f26_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f26_Registrations_count['Percent-2022'] = dfd22_f26_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f26_Registrations_count['7DEvolution-2022'] = dfd22_f26_Registrations_count['Total-2022'] - dfd22_f25_Registrations_count['Total-2022']
#print(tab(dfd22_f26_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_Registrations_count = pd.DataFrame(filter_26_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f26_Registrations_count = dfd23_f26_Registrations_count.fillna('Unknown')
dfd23_f26_Registrations_count['Percent-2023'] = (dfd23_f26_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f26_Registrations_count['Percent-2023'] = dfd23_f26_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f26_Registrations_count['7DEvolution-2023'] = dfd23_f26_Registrations_count['Total-2023'] - dfd23_f25_Registrations_count['Total-2023']
#print(tab(dfd23_f26_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f26_RegistrationsEvolution_count = pd.DataFrame(filter_26_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f26_RegistrationsEvolution_count = dfd23_f26_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f26_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f26_Registrations_count['Total-2023'] - dfd19_f26_Registrations_count['Total-2019'])/ dfd19_f26_Registrations_count['Total-2019'].sum()) * 100
dfd23_f26_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f26_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f26_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f26 = pd.DataFrame(pd.merge(dfd17_f26_Registrations_count, dfd18_f26_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f26 = pd.DataFrame(pd.merge(dfd19_f26_Registrations_count, dfd21_f26_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f26 = pd.DataFrame(pd.merge(dfd22_f26_Registrations_count, dfd23_f26_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f26 = pd.DataFrame(pd.merge(df_Registrations_count_1_f26, df_Registrations_count_2_f26, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f26 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f26, df_Registrations_count_3_f26, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f26 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f26, dfd23_f26_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f26 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17, df_Registrations_Merge_f18, df_Registrations_Merge_f19, df_Registrations_Merge_f20,
                                           df_Registrations_Merge_f21, df_Registrations_Merge_f22, df_Registrations_Merge_f23, df_Registrations_Merge_f24,
                                           df_Registrations_Merge_f25, df_Registrations_Merge_f26]
Concat_Registrations_count_f1_f26 = pd.concat(ConcatFrames_Registrations_count_f1_f26)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f26  = ConcatFrames_Registrations_count_f1_f26.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f26.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f26 = filter_26_df18[filter_26_df18['New customer'] == 1]
df_NewCustomer_df19_f26 = filter_26_df19[filter_26_df19['New customer'] == 1]
df_NewCustomer_df21_f26 = filter_26_df21[filter_26_df21['New customer'] == 1]
df_NewCustomer_df22_f26 = filter_26_df22[filter_26_df22['New customer'] == 1]
df_NewCustomer_df23_f26 = filter_26_df23[filter_26_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f26.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f26.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f26.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a26_ACQRET_count = pd.DataFrame(filter_26_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f26_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f26.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f26_ACQRET_count['Percent-2018'] = (dfd18_f26_ACQRET_count['ACQ-2018'] / dfd18_f26_Registrations_count['Total-2018'].sum()) * 100
dfd18_f26_ACQRET_count['Percent-2018'] = dfd18_f26_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f26_ACQRET_count['RET-2018'] = dfd18_a26_ACQRET_count['Total-2018'] - dfd18_f26_ACQRET_count['ACQ-2018']
dfd18_f26_ACQRET_count['Percnt-2018'] = (dfd18_f26_ACQRET_count['RET-2018'] / dfd18_a26_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f26_ACQRET_count['Percnt-2018'] = dfd18_f26_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f26_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a26_ACQRET_count = pd.DataFrame(filter_26_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f26_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f26.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f26_ACQRET_count['Percent-2019'] = (dfd19_f26_ACQRET_count['ACQ-2019'] / dfd19_f26_Registrations_count['Total-2019'].sum()) * 100
dfd19_f26_ACQRET_count['Percent-2019'] = dfd19_f26_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f26_ACQRET_count['RET-2019'] = dfd19_a26_ACQRET_count['Total-2019'] - dfd19_f26_ACQRET_count['ACQ-2019']
dfd19_f26_ACQRET_count['Percnt-2019'] = (dfd19_f26_ACQRET_count['RET-2019'] / dfd19_a26_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f26_ACQRET_count['Percnt-2019'] = dfd19_f26_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f26_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a26_ACQRET_count = pd.DataFrame(filter_26_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f26_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f26.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f26_ACQRET_count['Percent-2021'] = (dfd21_f26_ACQRET_count['ACQ-2021'] / dfd21_f26_Registrations_count['Total-2021'].sum()) * 100
dfd21_f26_ACQRET_count['Percent-2021'] = dfd21_f26_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f26_ACQRET_count['RET-2021'] = dfd21_a26_ACQRET_count['Total-2021'] - dfd21_f26_ACQRET_count['ACQ-2021']
dfd21_f26_ACQRET_count['Percnt-2021'] = (dfd21_f26_ACQRET_count['RET-2021'] / dfd21_a26_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f26_ACQRET_count['Percnt-2021'] = dfd21_f26_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f26_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a26_ACQRET_count = pd.DataFrame(filter_26_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f26_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f26.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f26_ACQRET_count['Percent-2022'] = (dfd22_f26_ACQRET_count['ACQ-2022'] / dfd22_f26_Registrations_count['Total-2022'].sum()) * 100
dfd22_f26_ACQRET_count['Percent-2022'] = dfd22_f26_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f26_ACQRET_count['RET-2022'] = dfd22_a26_ACQRET_count['Total-2022'] - dfd22_f26_ACQRET_count['ACQ-2022']
dfd22_f26_ACQRET_count['Percnt-2022'] = (dfd22_f26_ACQRET_count['RET-2022'] / dfd22_a26_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f26_ACQRET_count['Percnt-2022'] = dfd22_f26_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f26_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a26_ACQRET_count = pd.DataFrame(filter_26_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f26_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f26.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f26_ACQRET_count['Percent-2023'] = (dfd23_f26_ACQRET_count['ACQ-2023'] / dfd23_f26_Registrations_count['Total-2023'].sum()) * 100
dfd23_f26_ACQRET_count['Percent-2023'] = dfd23_f26_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f26_ACQRET_count['RET-2023'] = dfd23_a26_ACQRET_count['Total-2023'] - dfd23_f26_ACQRET_count['ACQ-2023']
dfd23_f26_ACQRET_count['Percnt-2023'] = (dfd23_f26_ACQRET_count['RET-2023'] / dfd23_a26_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f26_ACQRET_count['Percnt-2023'] = dfd23_f26_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f26_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f26 = pd.DataFrame(pd.merge(dfd18_a26_ACQRET_count, dfd18_f26_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f26 = pd.DataFrame(pd.merge(dfd19_a26_ACQRET_count, dfd19_f26_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f26 = pd.DataFrame(pd.merge(dfd21_a26_ACQRET_count, dfd21_f26_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f26 = pd.DataFrame(pd.merge(dfd22_a26_ACQRET_count, dfd22_f26_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_26_f26 = pd.DataFrame(pd.merge(dfd23_a26_ACQRET_count, dfd23_f26_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_26_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f26 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f26, df_ACQRET_count_2_f26, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f26 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f26, df_ACQRET_count_3_f26, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f26 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f26, df_ACQRET_count_4_f26, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f26 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f26, df_ACQRET_count_26_f26, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f26 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17, df_ACQRET_count_M4_f18, df_ACQRET_count_M4_f19, df_ACQRET_count_M4_f20,
                                    df_ACQRET_count_M4_f21, df_ACQRET_count_M4_f22, df_ACQRET_count_M4_f23, df_ACQRET_count_M4_f24,
                                    df_ACQRET_count_M4_f25, df_ACQRET_count_M4_f26]
Concat_ACQRET_count_f1_f26 = pd.concat(ConcatFrames_ACQRET_count_f1_f26)
#print(tab(Concat_ACQRET_count_f1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f26 = Concat_ACQRET_count_f1_f26[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f26_Revenue_calc = pd.DataFrame(filter_26_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f26_Revenue_calc['Percent-2017'] = (dfd17_f26_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f26_Revenue_calc['Percent-2017'] = dfd17_f26_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f26_Revenue_calc['7DEvolution-2017'] = dfd17_f26_Revenue_calc['Total-2017'] - dfd17_f25_Revenue_calc['Total-2017']
#print(tab(dfd17_f26_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f26_Revenue_calc = pd.DataFrame(filter_26_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f26_Revenue_calc['Percent-2018'] = (dfd18_f26_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f26_Revenue_calc['Percent-2018'] = dfd18_f26_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f26_Revenue_calc['7DEvolution-2018'] = dfd18_f26_Revenue_calc['Total-2018'] - dfd18_f25_Revenue_calc['Total-2018']
#print(tab(dfd18_f26_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f26_Revenue_calc = pd.DataFrame(filter_26_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f26_Revenue_calc['Percent-2019'] = (dfd19_f26_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f26_Revenue_calc['Percent-2019'] = dfd19_f26_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f26_Revenue_calc['7DEvolution-2019'] = dfd19_f26_Revenue_calc['Total-2019'] - dfd19_f25_Revenue_calc['Total-2019']
#print(tab(dfd19_f26_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f26_Revenue_calc = pd.DataFrame(filter_26_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f26_Revenue_calc['Percent-2021'] = (dfd21_f26_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f26_Revenue_calc['Percent-2021'] = dfd21_f26_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f26_Revenue_calc['7DEvolution-2021'] = dfd21_f26_Revenue_calc['Total-2021'] - dfd21_f25_Revenue_calc['Total-2021']
#print(tab(dfd21_f26_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f26_Revenue_calc = pd.DataFrame(filter_26_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f26_Revenue_calc['Percent-2022'] = (dfd22_f26_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f26_Revenue_calc['Percent-2022'] = dfd22_f26_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f26_Revenue_calc['7DEvolution-2022'] = dfd22_f26_Revenue_calc['Total-2022'] - dfd22_f25_Revenue_calc['Total-2022']
#print(tab(dfd22_f26_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_Revenue_calc = pd.DataFrame(filter_26_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f26_Revenue_calc['Percent-2023'] = (dfd23_f26_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f26_Revenue_calc['Percent-2023'] = dfd23_f26_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f26_Revenue_calc['7DEvolution-2023'] = dfd23_f26_Revenue_calc['Total-2023'] - dfd23_f25_Revenue_calc['Total-2023']
#print(tab(dfd23_f26_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f26_RevenueEvolution_calc = pd.DataFrame(filter_26_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f26_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f26_Revenue_calc['Total-2023'] - dfd19_f26_Revenue_calc['Total-2019'])/ dfd19_f26_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f26_RevenueEvolution_calc['Evolution-2023'] = dfd23_f26_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f26_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f26 = pd.DataFrame(pd.merge(dfd17_f26_Revenue_calc, dfd18_f26_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f26 = pd.DataFrame(pd.merge(dfd19_f26_Revenue_calc, dfd21_f26_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f26 = pd.DataFrame(pd.merge(dfd22_f26_Revenue_calc, dfd23_f26_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f26_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f26, df_Revenue_calc_2_f26, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f26Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f26_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f26_Evolution, df_Revenue_calc_3_f26, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f26Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f26 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f26_Evolution, dfd23_f26_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f26 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17, df_Revenue_calc_f18, df_Revenue_calc_f19, df_Revenue_calc_f20,
                                 df_Revenue_calc_f21, df_Revenue_calc_f22, df_Revenue_calc_f23, df_Revenue_calc_f24,
                                 df_Revenue_calc_f25, df_Revenue_calc_f26]
Concat_REV_count_f1_f26 = pd.concat(ConcatFrames_REV_count_f1_f26)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f26_Registrations_GRDel = pd.DataFrame(filtr_26_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f26_Registrations_GRDel = dfd17_f26_Registrations_GRDel.fillna('Unknown')
dfd17_f26_Registrations_GRDel['Percent-2017'] = (dfd17_f26_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f26_Registrations_GRDel['Percent-2017'] = dfd17_f26_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f26_Registrations_GRDel['7DEvolution-2017'] = dfd17_f26_Registrations_GRDel['Total-2017'] - dfd17_f25_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f26_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f26_Registrations_GRDel = pd.DataFrame(filtr_26_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f26_Registrations_GRDel = dfd18_f26_Registrations_GRDel.fillna('Unknown')
dfd18_f26_Registrations_GRDel['Percent-2018'] = (dfd18_f26_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f26_Registrations_GRDel['Percent-2018'] = dfd18_f26_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f26_Registrations_GRDel['7DEvolution-2018'] = dfd18_f26_Registrations_GRDel['Total-2018'] - dfd18_f25_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f26_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f26_Registrations_GRDel = pd.DataFrame(filtr_26_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f26_Registrations_GRDel = dfd19_f26_Registrations_GRDel.fillna('Unknown')
dfd19_f26_Registrations_GRDel['Percent-2019'] = (dfd19_f26_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f26_Registrations_GRDel['Percent-2019'] = dfd19_f26_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f26_Registrations_GRDel['7DEvolution-2019'] = dfd19_f26_Registrations_GRDel['Total-2019'] - dfd19_f25_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f26_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f26_Registrations_GRDel = pd.DataFrame(filtr_26_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f26_Registrations_GRDel = dfd21_f26_Registrations_GRDel.fillna('Unknown')
dfd21_f26_Registrations_GRDel['Percent-2021'] = (dfd21_f26_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f26_Registrations_GRDel['Percent-2021'] = dfd21_f26_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f26_Registrations_GRDel['7DEvolution-2021'] = dfd21_f26_Registrations_GRDel['Total-2021'] - dfd21_f25_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f26_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f26_Registrations_GRDel = pd.DataFrame(filtr_26_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f26_Registrations_GRDel = dfd22_f26_Registrations_GRDel.fillna('Unknown')
dfd22_f26_Registrations_GRDel['Percent-2022'] = (dfd22_f26_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f26_Registrations_GRDel['Percent-2022'] = dfd22_f26_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f26_Registrations_GRDel['7DEvolution-2022'] = dfd22_f26_Registrations_GRDel['Total-2022'] - dfd22_f25_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f26_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_Registrations_GRDel = pd.DataFrame(filtr_26_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f26_Registrations_GRDel = dfd23_f26_Registrations_GRDel.fillna('Unknown')
dfd23_f26_Registrations_GRDel['Percent-2023'] = (dfd23_f26_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f26_Registrations_GRDel['Percent-2023'] = dfd23_f26_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f26_Registrations_GRDel['7DEvolution-2023'] = dfd23_f26_Registrations_GRDel['Total-2023'] - dfd23_f25_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f26_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f26_Registrations_Evol_GRDel = pd.DataFrame(filtr_26_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f26_Registrations_Evol_GRDel = dfd23_f26_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f26_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f26_Registrations_GRDel['Total-2023'] - dfd19_f26_Registrations_GRDel['Total-2019'])/ dfd19_f26_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f26_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f26 = pd.concat([dfd17_f26_Registrations_GRDel, dfd18_f26_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f26 = pd.DataFrame(pd.merge(dfd17_f26_Registrations_GRDel, dfd18_f26_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f26 = pd.DataFrame(pd.merge(dfd19_f26_Registrations_GRDel, dfd21_f26_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f26 = pd.DataFrame(pd.merge(dfd22_f26_Registrations_GRDel, dfd23_f26_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f26 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f26, df_Registrations_GRDel_2_f26, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_26_f26 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f26, df_Registrations_GRDel_3_f26, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f26 = pd.DataFrame(pd.merge(df_Registrations_GRDel_26_f26, dfd23_f26_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f26 = df_Registrations_GRDel_f26[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f26 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17, df_Registrations_GRDel_f18, df_Registrations_GRDel_f19, df_Registrations_GRDel_f20,
                                      df_Registrations_GRDel_f21, df_Registrations_GRDel_f22, df_Registrations_GRDel_f23, df_Registrations_GRDel_f24,
                                      df_Registrations_GRDel_f25, df_Registrations_GRDel_f26]
Concat_RegGRDel_count_f1_f26 = pd.concat(ConcatFrames_RegGRDel_count_f1_f26)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f26 = filtr_26_df18_GRdel[filtr_26_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f26 = filtr_26_df19_GRdel[filtr_26_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f26 = filtr_26_df21_GRdel[filtr_26_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f26 = filtr_26_df22_GRdel[filtr_26_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f26 = filtr_26_df23_GRdel[filtr_26_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f26.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f26.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a26_AC_RT_GRDel = pd.DataFrame(filtr_26_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f26_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f26.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f26_AC_RT_GRDel['Percent-2018'] = (dfd18_f26_AC_RT_GRDel['ACQ-2018'] / dfd18_f26_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f26_AC_RT_GRDel['Percent-2018'] = dfd18_f26_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f26_AC_RT_GRDel['RET-2018'] = dfd18_a26_AC_RT_GRDel['Total-2018'] - dfd18_f26_AC_RT_GRDel['ACQ-2018']
dfd18_f26_AC_RT_GRDel['Percnt-2018'] = (dfd18_f26_AC_RT_GRDel['RET-2018'] / dfd18_a26_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f26_AC_RT_GRDel['Percnt-2018'] = dfd18_f26_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f26_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a26_AC_RT_GRDel = pd.DataFrame(filtr_26_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f26_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f26.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f26_AC_RT_GRDel['Percent-2019'] = (dfd19_f26_AC_RT_GRDel['ACQ-2019'] / dfd19_f26_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f26_AC_RT_GRDel['Percent-2019'] = dfd19_f26_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f26_AC_RT_GRDel['RET-2019'] = dfd19_a26_AC_RT_GRDel['Total-2019'] - dfd19_f26_AC_RT_GRDel['ACQ-2019']
dfd19_f26_AC_RT_GRDel['Percnt-2019'] = (dfd19_f26_AC_RT_GRDel['RET-2019'] / dfd19_a26_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f26_AC_RT_GRDel['Percnt-2019'] = dfd19_f26_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f26_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a26_AC_RT_GRDel = pd.DataFrame(filtr_26_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f26_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f26.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f26_AC_RT_GRDel['Percent-2021'] = (dfd21_f26_AC_RT_GRDel['ACQ-2021'] / dfd21_f26_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f26_AC_RT_GRDel['Percent-2021'] = dfd21_f26_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f26_AC_RT_GRDel['RET-2021'] = dfd21_a26_AC_RT_GRDel['Total-2021'] - dfd21_f26_AC_RT_GRDel['ACQ-2021']
dfd21_f26_AC_RT_GRDel['Percnt-2021'] = (dfd21_f26_AC_RT_GRDel['RET-2021'] / dfd21_a26_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f26_AC_RT_GRDel['Percnt-2021'] = dfd21_f26_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f26_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a26_AC_RT_GRDel = pd.DataFrame(filtr_26_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f26_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f26.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f26_AC_RT_GRDel['Percent-2022'] = (dfd22_f26_AC_RT_GRDel['ACQ-2022'] / dfd22_f26_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f26_AC_RT_GRDel['Percent-2022'] = dfd22_f26_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f26_AC_RT_GRDel['RET-2022'] = dfd22_a26_AC_RT_GRDel['Total-2022'] - dfd22_f26_AC_RT_GRDel['ACQ-2022']
dfd22_f26_AC_RT_GRDel['Percnt-2022'] = (dfd22_f26_AC_RT_GRDel['RET-2022'] / dfd22_a26_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f26_AC_RT_GRDel['Percnt-2022'] = dfd22_f26_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f26_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a26_AC_RT_GRDel = pd.DataFrame(filtr_26_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f26_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f26.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f26_AC_RT_GRDel['Percent-2023'] = (dfd23_f26_AC_RT_GRDel['ACQ-2023'] / dfd23_f26_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f26_AC_RT_GRDel['Percent-2023'] = dfd23_f26_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f26_AC_RT_GRDel['RET-2023'] = dfd23_a26_AC_RT_GRDel['Total-2023'] - dfd23_f26_AC_RT_GRDel['ACQ-2023']
dfd23_f26_AC_RT_GRDel['Percnt-2023'] = (dfd23_f26_AC_RT_GRDel['RET-2023'] / dfd23_a26_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f26_AC_RT_GRDel['Percnt-2023'] = dfd23_f26_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f26_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f26 = pd.DataFrame(pd.merge_ordered(dfd18_a26_AC_RT_GRDel, dfd18_f26_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f26 = pd.DataFrame(pd.merge_ordered(dfd19_a26_AC_RT_GRDel, dfd19_f26_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f26 = pd.DataFrame(pd.merge_ordered(dfd21_a26_AC_RT_GRDel, dfd21_f26_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f26 = pd.DataFrame(pd.merge_ordered(dfd22_a26_AC_RT_GRDel, dfd22_f26_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_26_f26 = pd.DataFrame(pd.merge_ordered(dfd23_a26_AC_RT_GRDel, dfd23_f26_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f26 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f26, df_AC_ET_GRDel_2_f26, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f26 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f26, df_AC_ET_GRDel_3_f26, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f26 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f26, df_AC_ET_GRDel_4_f26, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f26 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f26, df_AC_ET_GRDel_26_f26, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f26 = df_AC_RT_GRDel_M4_f26[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f26 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17, df_AC_RT_GRDel_M4_f18, df_AC_RT_GRDel_M4_f19, df_AC_RT_GRDel_M4_f20,
                               df_AC_RT_GRDel_M4_f21, df_AC_RT_GRDel_M4_f22, df_AC_RT_GRDel_M4_f23, df_AC_RT_GRDel_M4_f24,
                               df_AC_RT_GRDel_M4_f25, df_AC_RT_GRDel_M4_f26]
Conct_AC_RT_GRDel_f1_f26 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f26)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_26_df17_GRdel = filtr_26_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f26_Revenu_GRDel = pd.DataFrame(filtr_26_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f26_Revenu_GRDel['Percent-2017'] = (dfd17_f26_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f26_Revenu_GRDel['Percent-2017'] = dfd17_f26_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f26_Revenu_GRDel['7DEvolution-2017'] = dfd17_f26_Revenu_GRDel['Total-2017'] - dfd17_f25_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f26_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_26_df18_GRdel = filtr_26_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f26_Revenu_GRDel = pd.DataFrame(filtr_26_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f26_Revenu_GRDel['Percent-2018'] = (dfd18_f26_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f26_Revenu_GRDel['Percent-2018'] = dfd18_f26_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f26_Revenu_GRDel['7DEvolution-2018'] = dfd18_f26_Revenu_GRDel['Total-2018'] - dfd18_f25_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f26_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_26_df19_GRdel = filtr_26_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f26_Revenu_GRDel = pd.DataFrame(filtr_26_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f26_Revenu_GRDel['Percent-2019'] = (dfd19_f26_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f26_Revenu_GRDel['Percent-2019'] = dfd19_f26_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f26_Revenu_GRDel['7DEvolution-2019'] = dfd19_f26_Revenu_GRDel['Total-2019'] - dfd19_f25_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f26_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_26_df21_GRdel = filtr_26_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f26_Revenu_GRDel = pd.DataFrame(filtr_26_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f26_Revenu_GRDel['Percent-2021'] = (dfd21_f26_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f26_Revenu_GRDel['Percent-2021'] = dfd21_f26_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f26_Revenu_GRDel['7DEvolution-2021'] = dfd21_f26_Revenu_GRDel['Total-2021'] - dfd21_f25_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f26_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_26_df22_GRdel = filtr_26_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f26_Revenu_GRDel = pd.DataFrame(filtr_26_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f26_Revenu_GRDel['Percent-2022'] = (dfd22_f26_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f26_Revenu_GRDel['Percent-2022'] = dfd22_f26_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f26_Revenu_GRDel['7DEvolution-2022'] = dfd22_f26_Revenu_GRDel['Total-2022'] - dfd22_f25_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f26_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_26_df23_GRdel = filtr_26_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f26_Revenu_GRDel = pd.DataFrame(filtr_26_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f26_Revenu_GRDel['Percent-2023'] = (dfd23_f26_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f26_Revenu_GRDel['Percent-2023'] = dfd23_f26_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f26_Revenu_GRDel['7DEvolution-2023'] = dfd23_f26_Revenu_GRDel['Total-2023'] - dfd23_f25_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f26_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f26_Revenu_Evlt_GRDel = pd.DataFrame(filtr_26_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f26_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f26_Revenu_GRDel['Total-2023'] - dfd19_f26_Revenu_GRDel['Total-2019'])/ dfd19_f26_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f26_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f26_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f26_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f26 = pd.DataFrame(pd.merge(dfd17_f26_Revenu_GRDel, dfd18_f26_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f26 = pd.DataFrame(pd.merge(dfd19_f26_Revenu_GRDel, dfd21_f26_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f26 = pd.DataFrame(pd.merge(dfd22_f26_Revenu_GRDel, dfd23_f26_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f26 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f26, df_Revenu_GRDel_2_f26, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_26_f26 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f26, df_Revenu_GRDel_3_f26, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f26 = pd.DataFrame(pd.merge(df_Revenu_GRDel_26_f26, dfd23_f26_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f26 = df_Revenu_GRDel_f26[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f26 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17, df_Revenu_GRDel_f18, df_Revenu_GRDel_f19, df_Revenu_GRDel_f20,
                             df_Revenu_GRDel_f21, df_Revenu_GRDel_f22, df_Revenu_GRDel_f23, df_Revenu_GRDel_f24,
                             df_Revenu_GRDel_f25, df_Revenu_GRDel_f26]
Conct_RV_GRDel_f1_f26 = pd.concat(ConcatFra_RV_GRDel_f1_f26)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f26_Profile_count = pd.DataFrame(filtr_26_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f26_Profile_count = dfd17_f26_Profile_count.fillna('Unknown')
dfd17_f26_Profile_count['Percent-2017'] = (dfd17_f26_Profile_count['Total-2017'] / dfd17_f26_Profile_count['Total-2017'].sum()) * 100
dfd17_f26_Profile_count['Percent-2017'] = dfd17_f26_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f26_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f26_Profile_count = pd.DataFrame(filtr_26_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f26_Profile_count = dfd18_f26_Profile_count.fillna('Unknown')
dfd18_f26_Profile_count['Percent-2018'] = (dfd18_f26_Profile_count['Total-2018'] / dfd18_f26_Profile_count['Total-2018'].sum()) * 100
dfd18_f26_Profile_count['Percent-2018'] = dfd18_f26_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f26_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f26_Profile_count = pd.DataFrame(filtr_26_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f26_Profile_count = dfd19_f26_Profile_count.fillna('Unknown')
dfd19_f26_Profile_count['Percent-2019'] = (dfd19_f26_Profile_count['Total-2019'] / dfd19_f26_Profile_count['Total-2019'].sum()) * 100
dfd19_f26_Profile_count['Percent-2019'] = dfd19_f26_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f26_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f26_Profile_count = pd.DataFrame(filtr_26_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f26_Profile_count = dfd21_f26_Profile_count.fillna('Unknown')
dfd21_f26_Profile_count['Percent-2021'] = (dfd21_f26_Profile_count['Total-2021'] / dfd21_f26_Profile_count['Total-2021'].sum()) * 100
dfd21_f26_Profile_count['Percent-2021'] = dfd21_f26_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f26_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f26_Profile_count = pd.DataFrame(filtr_26_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f26_Profile_count = dfd22_f26_Profile_count.fillna('Unknown')
dfd22_f26_Profile_count['Percent-2022'] = (dfd22_f26_Profile_count['Total-2022'] / dfd22_f26_Profile_count['Total-2022'].sum()) * 100
dfd22_f26_Profile_count['Percent-2022'] = dfd22_f26_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f26_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_Profile_count = pd.DataFrame(filtr_26_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f26_Profile_count = dfd23_f26_Profile_count.fillna('Unknown')
dfd23_f26_Profile_count['Percent-2023'] = (dfd23_f26_Profile_count['Total-2023'] / dfd23_f26_Profile_count['Total-2023'].sum()) * 100
dfd23_f26_Profile_count['Percent-2023'] = dfd23_f26_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f26_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f26 = pd.DataFrame(pd.merge(dfd17_f26_Profile_count, dfd18_f26_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f26 = pd.DataFrame(pd.merge(dfd19_f26_Profile_count, dfd21_f26_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f26 = pd.DataFrame(pd.merge(dfd22_f26_Profile_count, dfd23_f26_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f26 = pd.DataFrame(pd.merge(df_Profile_Count_1_f26, df_Profile_Count_2_f26, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f26 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f26, df_Profile_Count_3_f26, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f26 = df_Profile_Count_m2_f26.append(df_Profile_Count_m2_f26.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f26['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f26_Pass_count = pd.DataFrame(filtr_26_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f26_Pass_count = dfd17_f26_Pass_count.fillna('Unknown')
dfd17_f26_Pass_count['Percent-2017'] = (dfd17_f26_Pass_count['Total-2017'] / dfd17_f26_Pass_count['Total-2017'].sum()) * 100
dfd17_f26_Pass_count['Percent-2017'] = dfd17_f26_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f26_Pass_count = pd.DataFrame(filtr_26_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f26_Pass_count = dfd18_f26_Pass_count.fillna('Unknown')
dfd18_f26_Pass_count['Percent-2018'] = (dfd18_f26_Pass_count['Total-2018'] / dfd18_f26_Pass_count['Total-2018'].sum()) * 100
dfd18_f26_Pass_count['Percent-2018'] = dfd18_f26_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f26_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f26_Pass_count = pd.DataFrame(filtr_26_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f26_Pass_count = dfd19_f26_Pass_count.fillna('Unknown')
dfd19_f26_Pass_count['Percent-2019'] = (dfd19_f26_Pass_count['Total-2019'] / dfd19_f26_Pass_count['Total-2019'].sum()) * 100
dfd19_f26_Pass_count['Percent-2019'] = dfd19_f26_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f26_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f26_Pass_count = pd.DataFrame(filtr_26_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f26_Pass_count = dfd21_f26_Pass_count.fillna('Unknown')
dfd21_f26_Pass_count['Percent-2021'] = (dfd21_f26_Pass_count['Total-2021'] / dfd21_f26_Pass_count['Total-2021'].sum()) * 100
dfd21_f26_Pass_count['Percent-2021'] = dfd21_f26_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f26_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f26_Pass_count = pd.DataFrame(filtr_26_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f26_Pass_count = dfd22_f26_Pass_count.fillna('Unknown')
dfd22_f26_Pass_count['Percent-2022'] = (dfd22_f26_Pass_count['Total-2022'] / dfd22_f26_Pass_count['Total-2022'].sum()) * 100
dfd22_f26_Pass_count['Percent-2022'] = dfd22_f26_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f26_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_Pass_count = pd.DataFrame(filtr_26_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f26_Pass_count = dfd23_f26_Pass_count.fillna('Unknown')
dfd23_f26_Pass_count['Percent-2023'] = (dfd23_f26_Pass_count['Total-2023'] / dfd23_f26_Pass_count['Total-2023'].sum()) * 100
dfd23_f26_Pass_count['Percent-2023'] = dfd23_f26_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f26_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f26 = pd.DataFrame(pd.merge(dfd17_f26_Pass_count, dfd18_f26_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f26 = pd.DataFrame(pd.merge(dfd19_f26_Pass_count, dfd21_f26_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f26 = pd.DataFrame(pd.merge(dfd22_f26_Pass_count, dfd23_f26_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f26 = pd.DataFrame(pd.merge(df_Pass_Count_1_f26, df_Pass_Count_2_f26, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f26 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f26, df_Pass_Count_3_f26, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f26 = df_Pass_Count_m2_f26.append(df_Pass_Count_m2_f26.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f26['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f26_Attendees_Country_count = pd.DataFrame(filtr_26_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f26_Attendees_Country_count = dfd17_f26_Attendees_Country_count.fillna('Unknown')
dfd17_f26_Attendees_Country_count['Percent-2017'] = (dfd17_f26_Attendees_Country_count['Total-2017'] / dfd17_f26_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f26_Attendees_Country_count['Percent-2017'] = dfd17_f26_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f26_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f26_Attendees_Country_count = pd.DataFrame(filtr_26_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f26_Attendees_Country_count = dfd18_f26_Attendees_Country_count.fillna('Unknown')
dfd18_f26_Attendees_Country_count['Percent-2018'] = (dfd18_f26_Attendees_Country_count['Total-2018'] / dfd18_f26_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f26_Attendees_Country_count['Percent-2018'] = dfd18_f26_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f26_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f26_Attendees_Country_count = pd.DataFrame(filtr_26_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f26_Attendees_Country_count = dfd19_f26_Attendees_Country_count.fillna('Unknown')
dfd19_f26_Attendees_Country_count['Percent-2019'] = (dfd19_f26_Attendees_Country_count['Total-2019'] / dfd19_f26_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f26_Attendees_Country_count['Percent-2019'] = dfd19_f26_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f26_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f26_Attendees_Country_count = pd.DataFrame(filtr_26_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f26_Attendees_Country_count = dfd21_f26_Attendees_Country_count.fillna('Unknown')
dfd21_f26_Attendees_Country_count['Percent-2021'] = (dfd21_f26_Attendees_Country_count['Total-2021'] / dfd21_f26_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f26_Attendees_Country_count['Percent-2021'] = dfd21_f26_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f26_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f26_Attendees_Country_count = pd.DataFrame(filtr_26_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f26_Attendees_Country_count = dfd22_f26_Attendees_Country_count.fillna('Unknown')
dfd22_f26_Attendees_Country_count['Percent-2022'] = (dfd22_f26_Attendees_Country_count['Total-2022'] / dfd22_f26_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f26_Attendees_Country_count['Percent-2022'] = dfd22_f26_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f26_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_Attendees_Country_count = pd.DataFrame(filtr_26_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f26_Attendees_Country_count = dfd23_f26_Attendees_Country_count.fillna('Unknown')
dfd23_f26_Attendees_Country_count['Percent-2023'] = (dfd23_f26_Attendees_Country_count['Total-2023'] / dfd23_f26_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f26_Attendees_Country_count['Percent-2023'] = dfd23_f26_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f26_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f26 = pd.DataFrame(pd.merge(dfd17_f26_Attendees_Country_count, dfd18_f26_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f26 = pd.DataFrame(pd.merge(dfd19_f26_Attendees_Country_count, dfd21_f26_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f26 = pd.DataFrame(pd.merge(dfd22_f26_Attendees_Country_count, dfd23_f26_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f26 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f26, dfAttendees_Country_Count_2_f26, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f26.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f26 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f26, dfAttendees_Country_Count_3_f26, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f26 = dfAttendees_Country_Count_m2_f26.append(dfAttendees_Country_Count_m2_f26.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f26['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f26_ATTENDEES_AREAS_count = pd.DataFrame(filtr_26_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f26_ATTENDEES_AREAS_count = dfd17_f26_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f26_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f26_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f26_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f26_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f26_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f26_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f26_ATTENDEES_AREAS_count = pd.DataFrame(filtr_26_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f26_ATTENDEES_AREAS_count = dfd18_f26_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f26_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f26_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f26_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f26_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f26_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f26_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f26_ATTENDEES_AREAS_count = pd.DataFrame(filtr_26_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f26_ATTENDEES_AREAS_count = dfd19_f26_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f26_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f26_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f26_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f26_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f26_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f26_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f26_ATTENDEES_AREAS_count = pd.DataFrame(filtr_26_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f26_ATTENDEES_AREAS_count = dfd21_f26_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f26_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f26_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f26_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f26_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f26_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f26_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f26_ATTENDEES_AREAS_count = pd.DataFrame(filtr_26_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f26_ATTENDEES_AREAS_count = dfd22_f26_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f26_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f26_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f26_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f26_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f26_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f26_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_ATTENDEES_AREAS_count = pd.DataFrame(filtr_26_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f26_ATTENDEES_AREAS_count = dfd23_f26_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f26_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f26_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f26_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f26_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f26_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f26_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f26 = pd.DataFrame(pd.merge(dfd17_f26_ATTENDEES_AREAS_count, dfd18_f26_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f26 = pd.DataFrame(pd.merge(dfd19_f26_ATTENDEES_AREAS_count, dfd21_f26_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f26 = pd.DataFrame(pd.merge(dfd22_f26_ATTENDEES_AREAS_count, dfd23_f26_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f26.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f26 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f26, df_ATTENDEES_AREAS_count_2_f26, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f26 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f26, df_ATTENDEES_AREAS_count_3_f26, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f26 = df_ATTENDEES_AREAS_count_m2_f26.append(df_ATTENDEES_AREAS_count_m2_f26.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f26['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f26_Attendees_Specialty_count = pd.DataFrame(filtr_26_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f26_Attendees_Specialty_count = dfd17_f26_Attendees_Specialty_count.fillna('Unknown')
dfd17_f26_Attendees_Specialty_count['Percent-2017'] = (dfd17_f26_Attendees_Specialty_count['Total-2017'] / dfd17_f26_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f26_Attendees_Specialty_count['Percent-2017'] = dfd17_f26_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f26_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f26_Attendees_Specialty_count = pd.DataFrame(filtr_26_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f26_Attendees_Specialty_count = dfd18_f26_Attendees_Specialty_count.fillna('Unknown')
dfd18_f26_Attendees_Specialty_count['Percent-2018'] = (dfd18_f26_Attendees_Specialty_count['Total-2018'] / dfd18_f26_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f26_Attendees_Specialty_count['Percent-2018'] = dfd18_f26_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f26_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f26_Attendees_Specialty_count = pd.DataFrame(filtr_26_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f26_Attendees_Specialty_count = dfd19_f26_Attendees_Specialty_count.fillna('Unknown')
dfd19_f26_Attendees_Specialty_count['Percent-2019'] = (dfd19_f26_Attendees_Specialty_count['Total-2019'] / dfd19_f26_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f26_Attendees_Specialty_count['Percent-2019'] = dfd19_f26_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f26_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f26_Attendees_Specialty_count = pd.DataFrame(filtr_26_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f26_Attendees_Specialty_count = dfd21_f26_Attendees_Specialty_count.fillna('Unknown')
dfd21_f26_Attendees_Specialty_count['Percent-2021'] = (dfd21_f26_Attendees_Specialty_count['Total-2021'] / dfd21_f26_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f26_Attendees_Specialty_count['Percent-2021'] = dfd21_f26_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f26_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f26_Attendees_Specialty_count = pd.DataFrame(filtr_26_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f26_Attendees_Specialty_count = dfd22_f26_Attendees_Specialty_count.fillna('Unknown')
dfd22_f26_Attendees_Specialty_count['Percent-2022'] = (dfd22_f26_Attendees_Specialty_count['Total-2022'] / dfd22_f26_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f26_Attendees_Specialty_count['Percent-2022'] = dfd22_f26_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f26_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f26_Attendees_Specialty_count = pd.DataFrame(filtr_26_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f26_Attendees_Specialty_count = dfd23_f26_Attendees_Specialty_count.fillna('Unknown')
dfd23_f26_Attendees_Specialty_count['Percent-2023'] = (dfd23_f26_Attendees_Specialty_count['Total-2023'] / dfd23_f26_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f26_Attendees_Specialty_count['Percent-2023'] = dfd23_f26_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f26_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f26 = pd.DataFrame(pd.merge(dfd17_f26_Attendees_Specialty_count, dfd18_f26_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f26 = pd.DataFrame(pd.merge(dfd19_f26_Attendees_Specialty_count, dfd21_f26_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f26 = pd.DataFrame(pd.merge(dfd22_f26_Attendees_Specialty_count, dfd23_f26_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f26 = pd.DataFrame(pd.merge(df_Specialty_count_1_f26, df_Specialty_count_2_f26, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f26.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f26 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f26, df_Specialty_count_3_f26, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f26 = df_Specialty_count_m2_f26.append(df_Specialty_count_m2_f26.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f26['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f26['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f26['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f26 = Concat_Registrations_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f26['Total-2017'] = Concat_Registrations_count_f1_f26['Total-2017'].astype(int)
Concat_Registrations_count_f1_f26['Percent-2017'] = Concat_Registrations_count_f1_f26['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f26['7DEvolution-2017'] = Concat_Registrations_count_f1_f26['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f26['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f26['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f26 = Concat_Registrations_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f26['Total-2018'] = Concat_Registrations_count_f1_f26['Total-2018'].astype(int)
Concat_Registrations_count_f1_f26['Percent-2018'] = Concat_Registrations_count_f1_f26['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f26['7DEvolution-2018'] = Concat_Registrations_count_f1_f26['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f26['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f26['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f26 = Concat_Registrations_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f26['Total-2019'] = Concat_Registrations_count_f1_f26['Total-2019'].astype(int)
Concat_Registrations_count_f1_f26['Percent-2019'] = Concat_Registrations_count_f1_f26['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f26['7DEvolution-2019'] = Concat_Registrations_count_f1_f26['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f26['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f26['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f26 = Concat_Registrations_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f26['Total-2021'] = Concat_Registrations_count_f1_f26['Total-2021'].astype(int)
Concat_Registrations_count_f1_f26['Percent-2021'] = Concat_Registrations_count_f1_f26['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f26['7DEvolution-2021'] = Concat_Registrations_count_f1_f26['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f26['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f26['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f26 = Concat_Registrations_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f26['Total-2022'] = Concat_Registrations_count_f1_f26['Total-2022'].astype(int)
Concat_Registrations_count_f1_f26['Percent-2022'] = Concat_Registrations_count_f1_f26['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f26['7DEvolution-2022'] = Concat_Registrations_count_f1_f26['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f26['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f26['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f26 = Concat_Registrations_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f26['Total-2023'] = Concat_Registrations_count_f1_f26['Total-2023'].astype(int)
Concat_Registrations_count_f1_f26['Percent-2023'] = Concat_Registrations_count_f1_f26['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f26['7DEvolution-2023'] = Concat_Registrations_count_f1_f26['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f26['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f26['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f26 = Concat_ACQRET_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f26['Total-2018'] = Concat_ACQRET_count_f1_f26['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f26['ACQ-2018'] = Concat_ACQRET_count_f1_f26['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f26['Percent-2018'] = Concat_ACQRET_count_f1_f26['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f26['RET-2018'] = Concat_ACQRET_count_f1_f26['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f26['Percnt-2018'] = Concat_ACQRET_count_f1_f26['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f26['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f26['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f26 = Concat_ACQRET_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f26['Total-2019'] = Concat_ACQRET_count_f1_f26['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f26['ACQ-2019'] = Concat_ACQRET_count_f1_f26['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f26['Percent-2019'] = Concat_ACQRET_count_f1_f26['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f26['RET-2019'] = Concat_ACQRET_count_f1_f26['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f26['Percnt-2019'] = Concat_ACQRET_count_f1_f26['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f26['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f26['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f26 = Concat_ACQRET_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f26['Total-2021'] = Concat_ACQRET_count_f1_f26['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f26['ACQ-2021'] = Concat_ACQRET_count_f1_f26['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f26['Percent-2021'] = Concat_ACQRET_count_f1_f26['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f26['RET-2021'] = Concat_ACQRET_count_f1_f26['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f26['Percnt-2021'] = Concat_ACQRET_count_f1_f26['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f26['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f26['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f26 = Concat_ACQRET_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f26['Total-2022'] = Concat_ACQRET_count_f1_f26['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f26['ACQ-2022'] = Concat_ACQRET_count_f1_f26['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f26['Percent-2022'] = Concat_ACQRET_count_f1_f26['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f26['RET-2022'] = Concat_ACQRET_count_f1_f26['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f26['Percnt-2022'] = Concat_ACQRET_count_f1_f26['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f26['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f26['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f26 = Concat_ACQRET_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f26['Total-2023'] = Concat_ACQRET_count_f1_f26['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f26['ACQ-2023'] = Concat_ACQRET_count_f1_f26['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f26['Percent-2023'] = Concat_ACQRET_count_f1_f26['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f26['RET-2023'] = Concat_ACQRET_count_f1_f26['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f26['Percnt-2023'] = Concat_ACQRET_count_f1_f26['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f26['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f26['Total-2017'],errors='coerce')
Concat_REV_count_f1_f26 = Concat_REV_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f26['Total-2017'] = Concat_REV_count_f1_f26['Total-2017'].astype(int)
Concat_REV_count_f1_f26['Percent-2017'] = Concat_REV_count_f1_f26['Percent-2017'].astype(float)
Concat_REV_count_f1_f26['7DEvolution-2017'] = Concat_REV_count_f1_f26['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f26['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f26['Total-2018'],errors='coerce')
Concat_REV_count_f1_f26 = Concat_REV_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f26['Total-2018'] = Concat_REV_count_f1_f26['Total-2018'].astype(int)
Concat_REV_count_f1_f26['Percent-2018'] = Concat_REV_count_f1_f26['Percent-2018'].astype(float)
Concat_REV_count_f1_f26['7DEvolution-2018'] = Concat_REV_count_f1_f26['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f26['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f26['Total-2019'],errors='coerce')
Concat_REV_count_f1_f26 = Concat_REV_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f26['Total-2019'] = Concat_REV_count_f1_f26['Total-2019'].astype(int)
Concat_REV_count_f1_f26['Percent-2019'] = Concat_REV_count_f1_f26['Percent-2019'].astype(float)
Concat_REV_count_f1_f26['7DEvolution-2019'] = Concat_REV_count_f1_f26['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f26['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f26['Total-2022'],errors='coerce')
Concat_REV_count_f1_f26 = Concat_REV_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f26['Total-2022'] = Concat_REV_count_f1_f26['Total-2022'].astype(int)
Concat_REV_count_f1_f26['Percent-2022'] = Concat_REV_count_f1_f26['Percent-2022'].astype(float)
Concat_REV_count_f1_f26['7DEvolution-2022'] = Concat_REV_count_f1_f26['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f26['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f26['Total-2023'],errors='coerce')
Concat_REV_count_f1_f26 = Concat_REV_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f26['Total-2023'] = Concat_REV_count_f1_f26['Total-2023'].astype(int)
Concat_REV_count_f1_f26['Percent-2023'] = Concat_REV_count_f1_f26['Percent-2023'].astype(float)
Concat_REV_count_f1_f26['7DEvolution-2023'] = Concat_REV_count_f1_f26['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f26['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f26['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f26 = Concat_RegGRDel_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f26['Total-2017'] = Concat_RegGRDel_count_f1_f26['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f26['Percent-2017'] = Concat_RegGRDel_count_f1_f26['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f26['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f26['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f26['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f26['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f26 = Concat_RegGRDel_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f26['Total-2018'] = Concat_RegGRDel_count_f1_f26['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f26['Percent-2018'] = Concat_RegGRDel_count_f1_f26['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f26['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f26['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f26['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f26['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f26 = Concat_RegGRDel_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f26['Total-2019'] = Concat_RegGRDel_count_f1_f26['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f26['Percent-2019'] = Concat_RegGRDel_count_f1_f26['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f26['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f26['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f26['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f26['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f26 = Concat_RegGRDel_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f26['Total-2021'] = Concat_RegGRDel_count_f1_f26['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f26['Percent-2021'] = Concat_RegGRDel_count_f1_f26['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f26['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f26['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f26['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f26['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f26 = Concat_RegGRDel_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f26['Total-2022'] = Concat_RegGRDel_count_f1_f26['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f26['Percent-2022'] = Concat_RegGRDel_count_f1_f26['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f26['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f26['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f26['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f26['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f26 = Concat_RegGRDel_count_f1_f26.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f26['Total-2023'] = Concat_RegGRDel_count_f1_f26['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f26['Percent-2023'] = Concat_RegGRDel_count_f1_f26['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f26['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f26['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f26['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f26['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f26 = Conct_AC_RT_GRDel_f1_f26.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f26['Total-2018'] = Conct_AC_RT_GRDel_f1_f26['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f26['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f26['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f26['Percent-2018'] = Conct_AC_RT_GRDel_f1_f26['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f26['RET-2018'] = Conct_AC_RT_GRDel_f1_f26['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f26['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f26['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f26['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f26['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f26 = Conct_AC_RT_GRDel_f1_f26.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f26['Total-2019'] = Conct_AC_RT_GRDel_f1_f26['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f26['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f26['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f26['Percent-2019'] = Conct_AC_RT_GRDel_f1_f26['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f26['RET-2019'] = Conct_AC_RT_GRDel_f1_f26['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f26['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f26['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f26['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f26['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f26 = Conct_AC_RT_GRDel_f1_f26.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f26['Total-2021'] = Conct_AC_RT_GRDel_f1_f26['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f26['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f26['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f26['Percent-2021'] = Conct_AC_RT_GRDel_f1_f26['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f26['RET-2021'] = Conct_AC_RT_GRDel_f1_f26['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f26['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f26['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f26['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f26['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f26 = Conct_AC_RT_GRDel_f1_f26.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f26['Total-2022'] = Conct_AC_RT_GRDel_f1_f26['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f26['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f26['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f26['Percent-2022'] = Conct_AC_RT_GRDel_f1_f26['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f26['RET-2022'] = Conct_AC_RT_GRDel_f1_f26['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f26['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f26['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f26['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f26['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f26 = Conct_AC_RT_GRDel_f1_f26.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f26['Total-2023'] = Conct_AC_RT_GRDel_f1_f26['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f26['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f26['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f26['Percent-2023'] = Conct_AC_RT_GRDel_f1_f26['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f26['RET-2023'] = Conct_AC_RT_GRDel_f1_f26['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f26['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f26['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f26['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f26['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f26 = Conct_RV_GRDel_f1_f26.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f26['Total-2017'] = Conct_RV_GRDel_f1_f26['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f26['Percent-2017'] = Conct_RV_GRDel_f1_f26['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f26['7DEvolution-2017'] = Conct_RV_GRDel_f1_f26['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f26['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f26['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f26 = Conct_RV_GRDel_f1_f26.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f26['Total-2018'] = Conct_RV_GRDel_f1_f26['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f26['Percent-2018'] = Conct_RV_GRDel_f1_f26['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f26['7DEvolution-2018'] = Conct_RV_GRDel_f1_f26['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f26['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f26['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f26 = Conct_RV_GRDel_f1_f26.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f26['Total-2019'] = Conct_RV_GRDel_f1_f26['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f26['Percent-2019'] = Conct_RV_GRDel_f1_f26['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f26['7DEvolution-2019'] = Conct_RV_GRDel_f1_f26['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f26['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f26['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f26 = Conct_RV_GRDel_f1_f26.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f26['Total-2022'] = Conct_RV_GRDel_f1_f26['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f26['Percent-2022'] = Conct_RV_GRDel_f1_f26['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f26['7DEvolution-2022'] = Conct_RV_GRDel_f1_f26['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f26['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f26['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f26 = Conct_RV_GRDel_f1_f26.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f26['Total-2023'] = Conct_RV_GRDel_f1_f26['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f26['Percent-2023'] = Conct_RV_GRDel_f1_f26['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f26['7DEvolution-2023'] = Conct_RV_GRDel_f1_f26['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f26['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f26['Total-2017'],errors='coerce')
df_Profile_Count_m2_f26 = df_Profile_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f26['Total-2017'] = df_Profile_Count_m2_f26['Total-2017'].astype(int)
df_Profile_Count_m2_f26['Percent-2017'] = df_Profile_Count_m2_f26['Percent-2017'].astype(float)

df_Profile_Count_m2_f26['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f26['Total-2018'],errors='coerce')
df_Profile_Count_m2_f26 = df_Profile_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f26['Total-2018'] = df_Profile_Count_m2_f26['Total-2018'].astype(int)
df_Profile_Count_m2_f26['Percent-2018'] = df_Profile_Count_m2_f26['Percent-2018'].astype(float)

df_Profile_Count_m2_f26['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f26['Total-2019'],errors='coerce')
df_Profile_Count_m2_f26 = df_Profile_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f26['Total-2019'] = df_Profile_Count_m2_f26['Total-2019'].astype(int)
df_Profile_Count_m2_f26['Percent-2019'] = df_Profile_Count_m2_f26['Percent-2019'].astype(float)

df_Profile_Count_m2_f26['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f26['Total-2021'],errors='coerce')
df_Profile_Count_m2_f26 = df_Profile_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f26['Total-2021'] = df_Profile_Count_m2_f26['Total-2021'].astype(int)
df_Profile_Count_m2_f26['Percent-2021'] = df_Profile_Count_m2_f26['Percent-2021'].astype(float)

df_Profile_Count_m2_f26['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f26['Total-2022'],errors='coerce')
df_Profile_Count_m2_f26 = df_Profile_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f26['Total-2022'] = df_Profile_Count_m2_f26['Total-2022'].astype(int)
df_Profile_Count_m2_f26['Percent-2022'] = df_Profile_Count_m2_f26['Percent-2022'].astype(float)

df_Profile_Count_m2_f26['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f26['Total-2023'],errors='coerce')
df_Profile_Count_m2_f26 = df_Profile_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f26['Total-2023'] = df_Profile_Count_m2_f26['Total-2023'].astype(int)
df_Profile_Count_m2_f26['Percent-2023'] = df_Profile_Count_m2_f26['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f26['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f26['Total-2017'],errors='coerce')
df_Pass_Count_m2_f26 = df_Pass_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f26['Total-2017'] = df_Pass_Count_m2_f26['Total-2017'].astype(int)
df_Pass_Count_m2_f26['Percent-2017'] = df_Pass_Count_m2_f26['Percent-2017'].astype(float)

df_Pass_Count_m2_f26['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f26['Total-2018'],errors='coerce')
df_Pass_Count_m2_f26 = df_Pass_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f26['Total-2018'] = df_Pass_Count_m2_f26['Total-2018'].astype(int)
df_Pass_Count_m2_f26['Percent-2018'] = df_Pass_Count_m2_f26['Percent-2018'].astype(float)

df_Pass_Count_m2_f26['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f26['Total-2019'],errors='coerce')
df_Pass_Count_m2_f26 = df_Pass_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f26['Total-2019'] = df_Pass_Count_m2_f26['Total-2019'].astype(int)
df_Pass_Count_m2_f26['Percent-2019'] = df_Pass_Count_m2_f26['Percent-2019'].astype(float)

df_Pass_Count_m2_f26['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f26['Total-2021'],errors='coerce')
df_Pass_Count_m2_f26 = df_Pass_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f26['Total-2021'] = df_Pass_Count_m2_f26['Total-2021'].astype(int)
df_Pass_Count_m2_f26['Percent-2021'] = df_Pass_Count_m2_f26['Percent-2021'].astype(float)

df_Pass_Count_m2_f26['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f26['Total-2022'],errors='coerce')
df_Pass_Count_m2_f26 = df_Pass_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f26['Total-2022'] = df_Pass_Count_m2_f26['Total-2022'].astype(int)
df_Pass_Count_m2_f26['Percent-2022'] = df_Pass_Count_m2_f26['Percent-2022'].astype(float)

df_Pass_Count_m2_f26['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f26['Total-2023'],errors='coerce')
df_Pass_Count_m2_f26 = df_Pass_Count_m2_f26.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f26['Total-2023'] = df_Pass_Count_m2_f26['Total-2023'].astype(int)
df_Pass_Count_m2_f26['Percent-2023'] = df_Pass_Count_m2_f26['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f26['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f26['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f26 = dfAttendees_Country_Count_m2_f26.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f26['Total-2017'] = dfAttendees_Country_Count_m2_f26['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f26['Percent-2017'] = dfAttendees_Country_Count_m2_f26['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f26['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f26['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f26 = dfAttendees_Country_Count_m2_f26.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f26['Total-2018'] = dfAttendees_Country_Count_m2_f26['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f26['Percent-2018'] = dfAttendees_Country_Count_m2_f26['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f26['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f26['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f26 = dfAttendees_Country_Count_m2_f26.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f26['Total-2019'] = dfAttendees_Country_Count_m2_f26['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f26['Percent-2019'] = dfAttendees_Country_Count_m2_f26['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f26['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f26['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f26 = dfAttendees_Country_Count_m2_f26.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f26['Total-2021'] = dfAttendees_Country_Count_m2_f26['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f26['Percent-2021'] = dfAttendees_Country_Count_m2_f26['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f26['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f26['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f26 = dfAttendees_Country_Count_m2_f26.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f26['Total-2022'] = dfAttendees_Country_Count_m2_f26['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f26['Percent-2022'] = dfAttendees_Country_Count_m2_f26['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f26['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f26['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f26 = dfAttendees_Country_Count_m2_f26.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f26['Total-2023'] = dfAttendees_Country_Count_m2_f26['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f26['Percent-2023'] = dfAttendees_Country_Count_m2_f26['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f26['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f26['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f26 = df_ATTENDEES_AREAS_count_m2_f26.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f26['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f26['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f26['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f26['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f26['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f26['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f26 = df_ATTENDEES_AREAS_count_m2_f26.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f26['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f26['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f26['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f26['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f26['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f26['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f26 = df_ATTENDEES_AREAS_count_m2_f26.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f26['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f26['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f26['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f26['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f26['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f26['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f26 = df_ATTENDEES_AREAS_count_m2_f26.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f26['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f26['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f26['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f26['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f26['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f26['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f26 = df_ATTENDEES_AREAS_count_m2_f26.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f26['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f26['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f26['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f26['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f26['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f26['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f26 = df_ATTENDEES_AREAS_count_m2_f26.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f26['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f26['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f26['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f26['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f26['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f26['Total-2017'],errors='coerce')
df_Specialty_count_m2_f26 = df_Specialty_count_m2_f26.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f26['Total-2017'] = df_Specialty_count_m2_f26['Total-2017'].astype(int)
df_Specialty_count_m2_f26['Percent-2017'] = df_Specialty_count_m2_f26['Percent-2017'].astype(float)

df_Specialty_count_m2_f26['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f26['Total-2018'],errors='coerce')
df_Specialty_count_m2_f26 = df_Specialty_count_m2_f26.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f26['Total-2018'] = df_Specialty_count_m2_f26['Total-2018'].astype(int)
df_Specialty_count_m2_f26['Percent-2018'] = df_Specialty_count_m2_f26['Percent-2018'].astype(float)

df_Specialty_count_m2_f26['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f26['Total-2019'],errors='coerce')
df_Specialty_count_m2_f26 = df_Specialty_count_m2_f26.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f26['Total-2019'] = df_Specialty_count_m2_f26['Total-2019'].astype(int)
df_Specialty_count_m2_f26['Percent-2019'] = df_Specialty_count_m2_f26['Percent-2019'].astype(float)

df_Specialty_count_m2_f26['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f26['Total-2021'],errors='coerce')
df_Specialty_count_m2_f26 = df_Specialty_count_m2_f26.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f26['Total-2021'] = df_Specialty_count_m2_f26['Total-2021'].astype(int)
df_Specialty_count_m2_f26['Percent-2021'] = df_Specialty_count_m2_f26['Percent-2021'].astype(float)

df_Specialty_count_m2_f26['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f26['Total-2022'],errors='coerce')
df_Specialty_count_m2_f26 = df_Specialty_count_m2_f26.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f26['Total-2022'] = df_Specialty_count_m2_f26['Total-2022'].astype(int)
df_Specialty_count_m2_f26['Percent-2022'] = df_Specialty_count_m2_f26['Percent-2022'].astype(float)

df_Specialty_count_m2_f26['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f26['Total-2023'],errors='coerce')
df_Specialty_count_m2_f26 = df_Specialty_count_m2_f26.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f26['Total-2023'] = df_Specialty_count_m2_f26['Total-2023'].astype(int)
df_Specialty_count_m2_f26['Percent-2023'] = df_Specialty_count_m2_f26['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f26.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f26.dtypes)
#print(df_Specialty_count_m2_f26.dtypes)

#print(dfAttendees_Country_Count_m2_f26.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f26.dtypes)
#print(df_Specialty_count_m2_f26.dtypes)

# EXCEL FILE
writerf26 = pd.ExcelWriter(outputExcelFile_f26, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f26.to_excel\
    (writerf26, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f26.to_excel\
    (writerf26, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f26.to_excel\
    (writerf26, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f26.to_excel\
    (writerf26, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f26.to_excel\
    (writerf26, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f26.to_excel\
    (writerf26, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f26.to_excel\
    (writerf26, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f26.to_excel\
    (writerf26, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f26.to_excel\
    (writerf26, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f26.to_excel\
    (writerf26, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f26.to_excel\
    (writerf26, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf26.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f26)

workbook.save(outputExcelFile_f26)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 14 days**********************************************')
print('************************************End of 14 days**********************************************')
print('************************************End of 14 days**********************************************')
print('************************************End of 14 days**********************************************')
print('************************************End of 14 days**********************************************')
print('************************************End of 14 days**********************************************')
print('************************************End of 14 days**********************************************')
print('************************************End of 14 days**********************************************')
print('************************************End of 14 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f27_Registrations_count = pd.DataFrame(filter_27_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f27_Registrations_count = dfd17_f27_Registrations_count.fillna('Unknown')
dfd17_f27_Registrations_count['Percent-2017'] = (dfd17_f27_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f27_Registrations_count['Percent-2017'] = dfd17_f27_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f27_Registrations_count['7DEvolution-2017'] = dfd17_f27_Registrations_count['Total-2017'] - dfd17_f26_Registrations_count['Total-2017']
print(tab(dfd17_f27_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f27_Registrations_count = pd.DataFrame(filter_27_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f27_Registrations_count = dfd18_f27_Registrations_count.fillna('Unknown')
dfd18_f27_Registrations_count['Percent-2018'] = (dfd18_f27_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f27_Registrations_count['Percent-2018'] = dfd18_f27_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f27_Registrations_count['7DEvolution-2018'] = dfd18_f27_Registrations_count['Total-2018'] - dfd18_f26_Registrations_count['Total-2018']
#print(tab(dfd18_f27_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f27_Registrations_count = pd.DataFrame(filter_27_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f27_Registrations_count = dfd19_f27_Registrations_count.fillna('Unknown')
dfd19_f27_Registrations_count['Percent-2019'] = (dfd19_f27_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f27_Registrations_count['Percent-2019'] = dfd19_f27_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f27_Registrations_count['7DEvolution-2019'] = dfd19_f27_Registrations_count['Total-2019'] - dfd19_f26_Registrations_count['Total-2019']
#print(tab(dfd19_f27_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f27_Registrations_count = pd.DataFrame(filter_27_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f27_Registrations_count = dfd21_f27_Registrations_count.fillna('Unknown')
dfd21_f27_Registrations_count['Percent-2021'] = (dfd21_f27_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f27_Registrations_count['Percent-2021'] = dfd21_f27_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f27_Registrations_count['7DEvolution-2021'] = dfd21_f27_Registrations_count['Total-2021'] - dfd21_f26_Registrations_count['Total-2021']
#print(tab(dfd21_f27_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f27_Registrations_count = pd.DataFrame(filter_27_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f27_Registrations_count = dfd22_f27_Registrations_count.fillna('Unknown')
dfd22_f27_Registrations_count['Percent-2022'] = (dfd22_f27_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f27_Registrations_count['Percent-2022'] = dfd22_f27_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f27_Registrations_count['7DEvolution-2022'] = dfd22_f27_Registrations_count['Total-2022'] - dfd22_f26_Registrations_count['Total-2022']
print(tab(dfd22_f27_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_Registrations_count = pd.DataFrame(filter_27_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f27_Registrations_count = dfd23_f27_Registrations_count.fillna('Unknown')
dfd23_f27_Registrations_count['Percent-2023'] = (dfd23_f27_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f27_Registrations_count['Percent-2023'] = dfd23_f27_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f27_Registrations_count['7DEvolution-2023'] = dfd23_f27_Registrations_count['Total-2023'] - dfd23_f26_Registrations_count['Total-2023']
#print(tab(dfd23_f27_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f27_RegistrationsEvolution_count = pd.DataFrame(filter_27_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f27_RegistrationsEvolution_count = dfd23_f27_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f27_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f27_Registrations_count['Total-2023'] - dfd19_f27_Registrations_count['Total-2019'])/ dfd19_f27_Registrations_count['Total-2019'].sum()) * 100
dfd23_f27_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f27_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f27_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f27 = pd.DataFrame(pd.merge(dfd17_f27_Registrations_count, dfd18_f27_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f27 = pd.DataFrame(pd.merge(dfd19_f27_Registrations_count, dfd21_f27_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f27 = pd.DataFrame(pd.merge(dfd22_f27_Registrations_count, dfd23_f27_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f27 = pd.DataFrame(pd.merge(df_Registrations_count_1_f27, df_Registrations_count_2_f27, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f27 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f27, df_Registrations_count_3_f27, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f27 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f27, dfd23_f27_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f27 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17, df_Registrations_Merge_f18, df_Registrations_Merge_f19, df_Registrations_Merge_f20,
                                           df_Registrations_Merge_f21, df_Registrations_Merge_f22, df_Registrations_Merge_f23, df_Registrations_Merge_f24,
                                           df_Registrations_Merge_f25, df_Registrations_Merge_f26, df_Registrations_Merge_f27]
Concat_Registrations_count_f1_f27 = pd.concat(ConcatFrames_Registrations_count_f1_f27)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f27  = ConcatFrames_Registrations_count_f1_f27.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f27.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f27 = filter_27_df18[filter_27_df18['New customer'] == 1]
df_NewCustomer_df19_f27 = filter_27_df19[filter_27_df19['New customer'] == 1]
df_NewCustomer_df21_f27 = filter_27_df21[filter_27_df21['New customer'] == 1]
df_NewCustomer_df22_f27 = filter_27_df22[filter_27_df22['New customer'] == 1]
df_NewCustomer_df23_f27 = filter_27_df23[filter_27_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f27.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f27.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f27.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a27_ACQRET_count = pd.DataFrame(filter_27_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f27_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f27.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f27_ACQRET_count['Percent-2018'] = (dfd18_f27_ACQRET_count['ACQ-2018'] / dfd18_f27_Registrations_count['Total-2018'].sum()) * 100
dfd18_f27_ACQRET_count['Percent-2018'] = dfd18_f27_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f27_ACQRET_count['RET-2018'] = dfd18_a27_ACQRET_count['Total-2018'] - dfd18_f27_ACQRET_count['ACQ-2018']
dfd18_f27_ACQRET_count['Percnt-2018'] = (dfd18_f27_ACQRET_count['RET-2018'] / dfd18_a27_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f27_ACQRET_count['Percnt-2018'] = dfd18_f27_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f27_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a27_ACQRET_count = pd.DataFrame(filter_27_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f27_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f27.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f27_ACQRET_count['Percent-2019'] = (dfd19_f27_ACQRET_count['ACQ-2019'] / dfd19_f27_Registrations_count['Total-2019'].sum()) * 100
dfd19_f27_ACQRET_count['Percent-2019'] = dfd19_f27_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f27_ACQRET_count['RET-2019'] = dfd19_a27_ACQRET_count['Total-2019'] - dfd19_f27_ACQRET_count['ACQ-2019']
dfd19_f27_ACQRET_count['Percnt-2019'] = (dfd19_f27_ACQRET_count['RET-2019'] / dfd19_a27_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f27_ACQRET_count['Percnt-2019'] = dfd19_f27_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f27_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a27_ACQRET_count = pd.DataFrame(filter_27_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f27_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f27.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f27_ACQRET_count['Percent-2021'] = (dfd21_f27_ACQRET_count['ACQ-2021'] / dfd21_f27_Registrations_count['Total-2021'].sum()) * 100
dfd21_f27_ACQRET_count['Percent-2021'] = dfd21_f27_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f27_ACQRET_count['RET-2021'] = dfd21_a27_ACQRET_count['Total-2021'] - dfd21_f27_ACQRET_count['ACQ-2021']
dfd21_f27_ACQRET_count['Percnt-2021'] = (dfd21_f27_ACQRET_count['RET-2021'] / dfd21_a27_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f27_ACQRET_count['Percnt-2021'] = dfd21_f27_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f27_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a27_ACQRET_count = pd.DataFrame(filter_27_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f27_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f27.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f27_ACQRET_count['Percent-2022'] = (dfd22_f27_ACQRET_count['ACQ-2022'] / dfd22_f27_Registrations_count['Total-2022'].sum()) * 100
dfd22_f27_ACQRET_count['Percent-2022'] = dfd22_f27_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f27_ACQRET_count['RET-2022'] = dfd22_a27_ACQRET_count['Total-2022'] - dfd22_f27_ACQRET_count['ACQ-2022']
dfd22_f27_ACQRET_count['Percnt-2022'] = (dfd22_f27_ACQRET_count['RET-2022'] / dfd22_a27_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f27_ACQRET_count['Percnt-2022'] = dfd22_f27_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f27_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a27_ACQRET_count = pd.DataFrame(filter_27_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f27_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f27.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f27_ACQRET_count['Percent-2023'] = (dfd23_f27_ACQRET_count['ACQ-2023'] / dfd23_f27_Registrations_count['Total-2023'].sum()) * 100
dfd23_f27_ACQRET_count['Percent-2023'] = dfd23_f27_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f27_ACQRET_count['RET-2023'] = dfd23_a27_ACQRET_count['Total-2023'] - dfd23_f27_ACQRET_count['ACQ-2023']
dfd23_f27_ACQRET_count['Percnt-2023'] = (dfd23_f27_ACQRET_count['RET-2023'] / dfd23_a27_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f27_ACQRET_count['Percnt-2023'] = dfd23_f27_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f27_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f27 = pd.DataFrame(pd.merge(dfd18_a27_ACQRET_count, dfd18_f27_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f27 = pd.DataFrame(pd.merge(dfd19_a27_ACQRET_count, dfd19_f27_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f27 = pd.DataFrame(pd.merge(dfd21_a27_ACQRET_count, dfd21_f27_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f27 = pd.DataFrame(pd.merge(dfd22_a27_ACQRET_count, dfd22_f27_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_27_f27 = pd.DataFrame(pd.merge(dfd23_a27_ACQRET_count, dfd23_f27_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_27_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f27 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f27, df_ACQRET_count_2_f27, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f27 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f27, df_ACQRET_count_3_f27, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f27 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f27, df_ACQRET_count_4_f27, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f27 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f27, df_ACQRET_count_27_f27, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f27 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17, df_ACQRET_count_M4_f18, df_ACQRET_count_M4_f19, df_ACQRET_count_M4_f20,
                                    df_ACQRET_count_M4_f21, df_ACQRET_count_M4_f22, df_ACQRET_count_M4_f23, df_ACQRET_count_M4_f24,
                                    df_ACQRET_count_M4_f25, df_ACQRET_count_M4_f26, df_ACQRET_count_M4_f27]
Concat_ACQRET_count_f1_f27 = pd.concat(ConcatFrames_ACQRET_count_f1_f27)
#print(tab(Concat_ACQRET_count_f1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f27 = Concat_ACQRET_count_f1_f27[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f27_Revenue_calc = pd.DataFrame(filter_27_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f27_Revenue_calc['Percent-2017'] = (dfd17_f27_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f27_Revenue_calc['Percent-2017'] = dfd17_f27_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f27_Revenue_calc['7DEvolution-2017'] = dfd17_f27_Revenue_calc['Total-2017'] - dfd17_f26_Revenue_calc['Total-2017']
#print(tab(dfd17_f27_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f27_Revenue_calc = pd.DataFrame(filter_27_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f27_Revenue_calc['Percent-2018'] = (dfd18_f27_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f27_Revenue_calc['Percent-2018'] = dfd18_f27_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f27_Revenue_calc['7DEvolution-2018'] = dfd18_f27_Revenue_calc['Total-2018'] - dfd18_f26_Revenue_calc['Total-2018']
#print(tab(dfd18_f27_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f27_Revenue_calc = pd.DataFrame(filter_27_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f27_Revenue_calc['Percent-2019'] = (dfd19_f27_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f27_Revenue_calc['Percent-2019'] = dfd19_f27_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f27_Revenue_calc['7DEvolution-2019'] = dfd19_f27_Revenue_calc['Total-2019'] - dfd19_f26_Revenue_calc['Total-2019']
#print(tab(dfd19_f27_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f27_Revenue_calc = pd.DataFrame(filter_27_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f27_Revenue_calc['Percent-2021'] = (dfd21_f27_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f27_Revenue_calc['Percent-2021'] = dfd21_f27_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f27_Revenue_calc['7DEvolution-2021'] = dfd21_f27_Revenue_calc['Total-2021'] - dfd21_f26_Revenue_calc['Total-2021']
#print(tab(dfd21_f27_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f27_Revenue_calc = pd.DataFrame(filter_27_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f27_Revenue_calc['Percent-2022'] = (dfd22_f27_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f27_Revenue_calc['Percent-2022'] = dfd22_f27_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f27_Revenue_calc['7DEvolution-2022'] = dfd22_f27_Revenue_calc['Total-2022'] - dfd22_f26_Revenue_calc['Total-2022']
#print(tab(dfd22_f27_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_Revenue_calc = pd.DataFrame(filter_27_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f27_Revenue_calc['Percent-2023'] = (dfd23_f27_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f27_Revenue_calc['Percent-2023'] = dfd23_f27_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f27_Revenue_calc['7DEvolution-2023'] = dfd23_f27_Revenue_calc['Total-2023'] - dfd23_f26_Revenue_calc['Total-2023']
#print(tab(dfd23_f27_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f27_RevenueEvolution_calc = pd.DataFrame(filter_27_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f27_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f27_Revenue_calc['Total-2023'] - dfd19_f27_Revenue_calc['Total-2019'])/ dfd19_f27_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f27_RevenueEvolution_calc['Evolution-2023'] = dfd23_f27_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f27_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f27 = pd.DataFrame(pd.merge(dfd17_f27_Revenue_calc, dfd18_f27_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f27 = pd.DataFrame(pd.merge(dfd19_f27_Revenue_calc, dfd21_f27_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f27 = pd.DataFrame(pd.merge(dfd22_f27_Revenue_calc, dfd23_f27_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f27_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f27, df_Revenue_calc_2_f27, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f27Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f27_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f27_Evolution, df_Revenue_calc_3_f27, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f27Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f27 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f27_Evolution, dfd23_f27_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f27 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17, df_Revenue_calc_f18, df_Revenue_calc_f19, df_Revenue_calc_f20,
                                 df_Revenue_calc_f21, df_Revenue_calc_f22, df_Revenue_calc_f23, df_Revenue_calc_f24,
                                 df_Revenue_calc_f25, df_Revenue_calc_f26, df_Revenue_calc_f27]
Concat_REV_count_f1_f27 = pd.concat(ConcatFrames_REV_count_f1_f27)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f27_Registrations_GRDel = pd.DataFrame(filtr_27_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f27_Registrations_GRDel = dfd17_f27_Registrations_GRDel.fillna('Unknown')
dfd17_f27_Registrations_GRDel['Percent-2017'] = (dfd17_f27_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f27_Registrations_GRDel['Percent-2017'] = dfd17_f27_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f27_Registrations_GRDel['7DEvolution-2017'] = dfd17_f27_Registrations_GRDel['Total-2017'] - dfd17_f26_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f27_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f27_Registrations_GRDel = pd.DataFrame(filtr_27_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f27_Registrations_GRDel = dfd18_f27_Registrations_GRDel.fillna('Unknown')
dfd18_f27_Registrations_GRDel['Percent-2018'] = (dfd18_f27_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f27_Registrations_GRDel['Percent-2018'] = dfd18_f27_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f27_Registrations_GRDel['7DEvolution-2018'] = dfd18_f27_Registrations_GRDel['Total-2018'] - dfd18_f26_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f27_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f27_Registrations_GRDel = pd.DataFrame(filtr_27_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f27_Registrations_GRDel = dfd19_f27_Registrations_GRDel.fillna('Unknown')
dfd19_f27_Registrations_GRDel['Percent-2019'] = (dfd19_f27_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f27_Registrations_GRDel['Percent-2019'] = dfd19_f27_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f27_Registrations_GRDel['7DEvolution-2019'] = dfd19_f27_Registrations_GRDel['Total-2019'] - dfd19_f26_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f27_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f27_Registrations_GRDel = pd.DataFrame(filtr_27_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f27_Registrations_GRDel = dfd21_f27_Registrations_GRDel.fillna('Unknown')
dfd21_f27_Registrations_GRDel['Percent-2021'] = (dfd21_f27_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f27_Registrations_GRDel['Percent-2021'] = dfd21_f27_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f27_Registrations_GRDel['7DEvolution-2021'] = dfd21_f27_Registrations_GRDel['Total-2021'] - dfd21_f26_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f27_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f27_Registrations_GRDel = pd.DataFrame(filtr_27_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f27_Registrations_GRDel = dfd22_f27_Registrations_GRDel.fillna('Unknown')
dfd22_f27_Registrations_GRDel['Percent-2022'] = (dfd22_f27_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f27_Registrations_GRDel['Percent-2022'] = dfd22_f27_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f27_Registrations_GRDel['7DEvolution-2022'] = dfd22_f27_Registrations_GRDel['Total-2022'] - dfd22_f26_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f27_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_Registrations_GRDel = pd.DataFrame(filtr_27_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f27_Registrations_GRDel = dfd23_f27_Registrations_GRDel.fillna('Unknown')
dfd23_f27_Registrations_GRDel['Percent-2023'] = (dfd23_f27_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f27_Registrations_GRDel['Percent-2023'] = dfd23_f27_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f27_Registrations_GRDel['7DEvolution-2023'] = dfd23_f27_Registrations_GRDel['Total-2023'] - dfd23_f26_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f27_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f27_Registrations_Evol_GRDel = pd.DataFrame(filtr_27_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f27_Registrations_Evol_GRDel = dfd23_f27_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f27_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f27_Registrations_GRDel['Total-2023'] - dfd19_f27_Registrations_GRDel['Total-2019'])/ dfd19_f27_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f27_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f27 = pd.concat([dfd17_f27_Registrations_GRDel, dfd18_f27_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f27 = pd.DataFrame(pd.merge(dfd17_f27_Registrations_GRDel, dfd18_f27_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f27 = pd.DataFrame(pd.merge(dfd19_f27_Registrations_GRDel, dfd21_f27_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f27 = pd.DataFrame(pd.merge(dfd22_f27_Registrations_GRDel, dfd23_f27_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f27 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f27, df_Registrations_GRDel_2_f27, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_27_f27 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f27, df_Registrations_GRDel_3_f27, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f27 = pd.DataFrame(pd.merge(df_Registrations_GRDel_27_f27, dfd23_f27_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f27 = df_Registrations_GRDel_f27[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f27 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17, df_Registrations_GRDel_f18, df_Registrations_GRDel_f19, df_Registrations_GRDel_f20,
                                      df_Registrations_GRDel_f21, df_Registrations_GRDel_f22, df_Registrations_GRDel_f23, df_Registrations_GRDel_f24,
                                      df_Registrations_GRDel_f25, df_Registrations_GRDel_f26, df_Registrations_GRDel_f27]
Concat_RegGRDel_count_f1_f27 = pd.concat(ConcatFrames_RegGRDel_count_f1_f27)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f27 = filtr_27_df18_GRdel[filtr_27_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f27 = filtr_27_df19_GRdel[filtr_27_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f27 = filtr_27_df21_GRdel[filtr_27_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f27 = filtr_27_df22_GRdel[filtr_27_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f27 = filtr_27_df23_GRdel[filtr_27_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f27.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f27.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a27_AC_RT_GRDel = pd.DataFrame(filtr_27_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f27_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f27.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f27_AC_RT_GRDel['Percent-2018'] = (dfd18_f27_AC_RT_GRDel['ACQ-2018'] / dfd18_f27_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f27_AC_RT_GRDel['Percent-2018'] = dfd18_f27_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f27_AC_RT_GRDel['RET-2018'] = dfd18_a27_AC_RT_GRDel['Total-2018'] - dfd18_f27_AC_RT_GRDel['ACQ-2018']
dfd18_f27_AC_RT_GRDel['Percnt-2018'] = (dfd18_f27_AC_RT_GRDel['RET-2018'] / dfd18_a27_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f27_AC_RT_GRDel['Percnt-2018'] = dfd18_f27_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f27_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a27_AC_RT_GRDel = pd.DataFrame(filtr_27_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f27_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f27.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f27_AC_RT_GRDel['Percent-2019'] = (dfd19_f27_AC_RT_GRDel['ACQ-2019'] / dfd19_f27_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f27_AC_RT_GRDel['Percent-2019'] = dfd19_f27_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f27_AC_RT_GRDel['RET-2019'] = dfd19_a27_AC_RT_GRDel['Total-2019'] - dfd19_f27_AC_RT_GRDel['ACQ-2019']
dfd19_f27_AC_RT_GRDel['Percnt-2019'] = (dfd19_f27_AC_RT_GRDel['RET-2019'] / dfd19_a27_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f27_AC_RT_GRDel['Percnt-2019'] = dfd19_f27_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f27_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a27_AC_RT_GRDel = pd.DataFrame(filtr_27_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f27_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f27.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f27_AC_RT_GRDel['Percent-2021'] = (dfd21_f27_AC_RT_GRDel['ACQ-2021'] / dfd21_f27_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f27_AC_RT_GRDel['Percent-2021'] = dfd21_f27_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f27_AC_RT_GRDel['RET-2021'] = dfd21_a27_AC_RT_GRDel['Total-2021'] - dfd21_f27_AC_RT_GRDel['ACQ-2021']
dfd21_f27_AC_RT_GRDel['Percnt-2021'] = (dfd21_f27_AC_RT_GRDel['RET-2021'] / dfd21_a27_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f27_AC_RT_GRDel['Percnt-2021'] = dfd21_f27_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f27_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a27_AC_RT_GRDel = pd.DataFrame(filtr_27_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f27_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f27.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f27_AC_RT_GRDel['Percent-2022'] = (dfd22_f27_AC_RT_GRDel['ACQ-2022'] / dfd22_f27_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f27_AC_RT_GRDel['Percent-2022'] = dfd22_f27_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f27_AC_RT_GRDel['RET-2022'] = dfd22_a27_AC_RT_GRDel['Total-2022'] - dfd22_f27_AC_RT_GRDel['ACQ-2022']
dfd22_f27_AC_RT_GRDel['Percnt-2022'] = (dfd22_f27_AC_RT_GRDel['RET-2022'] / dfd22_a27_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f27_AC_RT_GRDel['Percnt-2022'] = dfd22_f27_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f27_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a27_AC_RT_GRDel = pd.DataFrame(filtr_27_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f27_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f27.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f27_AC_RT_GRDel['Percent-2023'] = (dfd23_f27_AC_RT_GRDel['ACQ-2023'] / dfd23_f27_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f27_AC_RT_GRDel['Percent-2023'] = dfd23_f27_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f27_AC_RT_GRDel['RET-2023'] = dfd23_a27_AC_RT_GRDel['Total-2023'] - dfd23_f27_AC_RT_GRDel['ACQ-2023']
dfd23_f27_AC_RT_GRDel['Percnt-2023'] = (dfd23_f27_AC_RT_GRDel['RET-2023'] / dfd23_a27_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f27_AC_RT_GRDel['Percnt-2023'] = dfd23_f27_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f27_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f27 = pd.DataFrame(pd.merge_ordered(dfd18_a27_AC_RT_GRDel, dfd18_f27_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f27 = pd.DataFrame(pd.merge_ordered(dfd19_a27_AC_RT_GRDel, dfd19_f27_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f27 = pd.DataFrame(pd.merge_ordered(dfd21_a27_AC_RT_GRDel, dfd21_f27_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f27 = pd.DataFrame(pd.merge_ordered(dfd22_a27_AC_RT_GRDel, dfd22_f27_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_27_f27 = pd.DataFrame(pd.merge_ordered(dfd23_a27_AC_RT_GRDel, dfd23_f27_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f27 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f27, df_AC_ET_GRDel_2_f27, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f27 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f27, df_AC_ET_GRDel_3_f27, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f27 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f27, df_AC_ET_GRDel_4_f27, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f27 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f27, df_AC_ET_GRDel_27_f27, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f27 = df_AC_RT_GRDel_M4_f27[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f27 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17, df_AC_RT_GRDel_M4_f18, df_AC_RT_GRDel_M4_f19, df_AC_RT_GRDel_M4_f20,
                               df_AC_RT_GRDel_M4_f21, df_AC_RT_GRDel_M4_f22, df_AC_RT_GRDel_M4_f23, df_AC_RT_GRDel_M4_f24,
                               df_AC_RT_GRDel_M4_f25, df_AC_RT_GRDel_M4_f26, df_AC_RT_GRDel_M4_f27]
Conct_AC_RT_GRDel_f1_f27 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f27)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_27_df17_GRdel = filtr_27_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f27_Revenu_GRDel = pd.DataFrame(filtr_27_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f27_Revenu_GRDel['Percent-2017'] = (dfd17_f27_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f27_Revenu_GRDel['Percent-2017'] = dfd17_f27_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f27_Revenu_GRDel['7DEvolution-2017'] = dfd17_f27_Revenu_GRDel['Total-2017'] - dfd17_f26_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f27_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_27_df18_GRdel = filtr_27_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f27_Revenu_GRDel = pd.DataFrame(filtr_27_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f27_Revenu_GRDel['Percent-2018'] = (dfd18_f27_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f27_Revenu_GRDel['Percent-2018'] = dfd18_f27_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f27_Revenu_GRDel['7DEvolution-2018'] = dfd18_f27_Revenu_GRDel['Total-2018'] - dfd18_f26_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f27_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_27_df19_GRdel = filtr_27_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f27_Revenu_GRDel = pd.DataFrame(filtr_27_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f27_Revenu_GRDel['Percent-2019'] = (dfd19_f27_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f27_Revenu_GRDel['Percent-2019'] = dfd19_f27_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f27_Revenu_GRDel['7DEvolution-2019'] = dfd19_f27_Revenu_GRDel['Total-2019'] - dfd19_f26_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f27_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_27_df21_GRdel = filtr_27_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f27_Revenu_GRDel = pd.DataFrame(filtr_27_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f27_Revenu_GRDel['Percent-2021'] = (dfd21_f27_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f27_Revenu_GRDel['Percent-2021'] = dfd21_f27_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f27_Revenu_GRDel['7DEvolution-2021'] = dfd21_f27_Revenu_GRDel['Total-2021'] - dfd21_f26_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f27_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_27_df22_GRdel = filtr_27_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f27_Revenu_GRDel = pd.DataFrame(filtr_27_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f27_Revenu_GRDel['Percent-2022'] = (dfd22_f27_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f27_Revenu_GRDel['Percent-2022'] = dfd22_f27_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f27_Revenu_GRDel['7DEvolution-2022'] = dfd22_f27_Revenu_GRDel['Total-2022'] - dfd22_f26_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f27_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_27_df23_GRdel = filtr_27_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f27_Revenu_GRDel = pd.DataFrame(filtr_27_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f27_Revenu_GRDel['Percent-2023'] = (dfd23_f27_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f27_Revenu_GRDel['Percent-2023'] = dfd23_f27_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f27_Revenu_GRDel['7DEvolution-2023'] = dfd23_f27_Revenu_GRDel['Total-2023'] - dfd23_f26_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f27_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f27_Revenu_Evlt_GRDel = pd.DataFrame(filtr_27_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f27_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f27_Revenu_GRDel['Total-2023'] - dfd19_f27_Revenu_GRDel['Total-2019'])/ dfd19_f27_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f27_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f27_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f27_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f27 = pd.DataFrame(pd.merge(dfd17_f27_Revenu_GRDel, dfd18_f27_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f27 = pd.DataFrame(pd.merge(dfd19_f27_Revenu_GRDel, dfd21_f27_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f27 = pd.DataFrame(pd.merge(dfd22_f27_Revenu_GRDel, dfd23_f27_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f27 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f27, df_Revenu_GRDel_2_f27, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_27_f27 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f27, df_Revenu_GRDel_3_f27, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f27 = pd.DataFrame(pd.merge(df_Revenu_GRDel_27_f27, dfd23_f27_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f27 = df_Revenu_GRDel_f27[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f27 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17, df_Revenu_GRDel_f18, df_Revenu_GRDel_f19, df_Revenu_GRDel_f20,
                             df_Revenu_GRDel_f21, df_Revenu_GRDel_f22, df_Revenu_GRDel_f23, df_Revenu_GRDel_f24,
                             df_Revenu_GRDel_f25, df_Revenu_GRDel_f26, df_Revenu_GRDel_f27]
Conct_RV_GRDel_f1_f27 = pd.concat(ConcatFra_RV_GRDel_f1_f27)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f27_Profile_count = pd.DataFrame(filtr_27_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f27_Profile_count = dfd17_f27_Profile_count.fillna('Unknown')
dfd17_f27_Profile_count['Percent-2017'] = (dfd17_f27_Profile_count['Total-2017'] / dfd17_f27_Profile_count['Total-2017'].sum()) * 100
dfd17_f27_Profile_count['Percent-2017'] = dfd17_f27_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f27_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f27_Profile_count = pd.DataFrame(filtr_27_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f27_Profile_count = dfd18_f27_Profile_count.fillna('Unknown')
dfd18_f27_Profile_count['Percent-2018'] = (dfd18_f27_Profile_count['Total-2018'] / dfd18_f27_Profile_count['Total-2018'].sum()) * 100
dfd18_f27_Profile_count['Percent-2018'] = dfd18_f27_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f27_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f27_Profile_count = pd.DataFrame(filtr_27_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f27_Profile_count = dfd19_f27_Profile_count.fillna('Unknown')
dfd19_f27_Profile_count['Percent-2019'] = (dfd19_f27_Profile_count['Total-2019'] / dfd19_f27_Profile_count['Total-2019'].sum()) * 100
dfd19_f27_Profile_count['Percent-2019'] = dfd19_f27_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f27_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f27_Profile_count = pd.DataFrame(filtr_27_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f27_Profile_count = dfd21_f27_Profile_count.fillna('Unknown')
dfd21_f27_Profile_count['Percent-2021'] = (dfd21_f27_Profile_count['Total-2021'] / dfd21_f27_Profile_count['Total-2021'].sum()) * 100
dfd21_f27_Profile_count['Percent-2021'] = dfd21_f27_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f27_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f27_Profile_count = pd.DataFrame(filtr_27_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f27_Profile_count = dfd22_f27_Profile_count.fillna('Unknown')
dfd22_f27_Profile_count['Percent-2022'] = (dfd22_f27_Profile_count['Total-2022'] / dfd22_f27_Profile_count['Total-2022'].sum()) * 100
dfd22_f27_Profile_count['Percent-2022'] = dfd22_f27_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f27_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_Profile_count = pd.DataFrame(filtr_27_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f27_Profile_count = dfd23_f27_Profile_count.fillna('Unknown')
dfd23_f27_Profile_count['Percent-2023'] = (dfd23_f27_Profile_count['Total-2023'] / dfd23_f27_Profile_count['Total-2023'].sum()) * 100
dfd23_f27_Profile_count['Percent-2023'] = dfd23_f27_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f27_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f27 = pd.DataFrame(pd.merge(dfd17_f27_Profile_count, dfd18_f27_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f27 = pd.DataFrame(pd.merge(dfd19_f27_Profile_count, dfd21_f27_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f27 = pd.DataFrame(pd.merge(dfd22_f27_Profile_count, dfd23_f27_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f27 = pd.DataFrame(pd.merge(df_Profile_Count_1_f27, df_Profile_Count_2_f27, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f27 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f27, df_Profile_Count_3_f27, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f27 = df_Profile_Count_m2_f27.append(df_Profile_Count_m2_f27.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f27['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f27_Pass_count = pd.DataFrame(filtr_27_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f27_Pass_count = dfd17_f27_Pass_count.fillna('Unknown')
dfd17_f27_Pass_count['Percent-2017'] = (dfd17_f27_Pass_count['Total-2017'] / dfd17_f27_Pass_count['Total-2017'].sum()) * 100
dfd17_f27_Pass_count['Percent-2017'] = dfd17_f27_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f27_Pass_count = pd.DataFrame(filtr_27_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f27_Pass_count = dfd18_f27_Pass_count.fillna('Unknown')
dfd18_f27_Pass_count['Percent-2018'] = (dfd18_f27_Pass_count['Total-2018'] / dfd18_f27_Pass_count['Total-2018'].sum()) * 100
dfd18_f27_Pass_count['Percent-2018'] = dfd18_f27_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f27_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f27_Pass_count = pd.DataFrame(filtr_27_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f27_Pass_count = dfd19_f27_Pass_count.fillna('Unknown')
dfd19_f27_Pass_count['Percent-2019'] = (dfd19_f27_Pass_count['Total-2019'] / dfd19_f27_Pass_count['Total-2019'].sum()) * 100
dfd19_f27_Pass_count['Percent-2019'] = dfd19_f27_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f27_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f27_Pass_count = pd.DataFrame(filtr_27_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f27_Pass_count = dfd21_f27_Pass_count.fillna('Unknown')
dfd21_f27_Pass_count['Percent-2021'] = (dfd21_f27_Pass_count['Total-2021'] / dfd21_f27_Pass_count['Total-2021'].sum()) * 100
dfd21_f27_Pass_count['Percent-2021'] = dfd21_f27_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f27_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f27_Pass_count = pd.DataFrame(filtr_27_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f27_Pass_count = dfd22_f27_Pass_count.fillna('Unknown')
dfd22_f27_Pass_count['Percent-2022'] = (dfd22_f27_Pass_count['Total-2022'] / dfd22_f27_Pass_count['Total-2022'].sum()) * 100
dfd22_f27_Pass_count['Percent-2022'] = dfd22_f27_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f27_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_Pass_count = pd.DataFrame(filtr_27_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f27_Pass_count = dfd23_f27_Pass_count.fillna('Unknown')
dfd23_f27_Pass_count['Percent-2023'] = (dfd23_f27_Pass_count['Total-2023'] / dfd23_f27_Pass_count['Total-2023'].sum()) * 100
dfd23_f27_Pass_count['Percent-2023'] = dfd23_f27_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f27_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f27 = pd.DataFrame(pd.merge(dfd17_f27_Pass_count, dfd18_f27_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f27 = pd.DataFrame(pd.merge(dfd19_f27_Pass_count, dfd21_f27_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f27 = pd.DataFrame(pd.merge(dfd22_f27_Pass_count, dfd23_f27_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f27 = pd.DataFrame(pd.merge(df_Pass_Count_1_f27, df_Pass_Count_2_f27, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f27 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f27, df_Pass_Count_3_f27, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f27 = df_Pass_Count_m2_f27.append(df_Pass_Count_m2_f27.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f27['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f27_Attendees_Country_count = pd.DataFrame(filtr_27_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f27_Attendees_Country_count = dfd17_f27_Attendees_Country_count.fillna('Unknown')
dfd17_f27_Attendees_Country_count['Percent-2017'] = (dfd17_f27_Attendees_Country_count['Total-2017'] / dfd17_f27_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f27_Attendees_Country_count['Percent-2017'] = dfd17_f27_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f27_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f27_Attendees_Country_count = pd.DataFrame(filtr_27_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f27_Attendees_Country_count = dfd18_f27_Attendees_Country_count.fillna('Unknown')
dfd18_f27_Attendees_Country_count['Percent-2018'] = (dfd18_f27_Attendees_Country_count['Total-2018'] / dfd18_f27_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f27_Attendees_Country_count['Percent-2018'] = dfd18_f27_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f27_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f27_Attendees_Country_count = pd.DataFrame(filtr_27_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f27_Attendees_Country_count = dfd19_f27_Attendees_Country_count.fillna('Unknown')
dfd19_f27_Attendees_Country_count['Percent-2019'] = (dfd19_f27_Attendees_Country_count['Total-2019'] / dfd19_f27_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f27_Attendees_Country_count['Percent-2019'] = dfd19_f27_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f27_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f27_Attendees_Country_count = pd.DataFrame(filtr_27_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f27_Attendees_Country_count = dfd21_f27_Attendees_Country_count.fillna('Unknown')
dfd21_f27_Attendees_Country_count['Percent-2021'] = (dfd21_f27_Attendees_Country_count['Total-2021'] / dfd21_f27_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f27_Attendees_Country_count['Percent-2021'] = dfd21_f27_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f27_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f27_Attendees_Country_count = pd.DataFrame(filtr_27_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f27_Attendees_Country_count = dfd22_f27_Attendees_Country_count.fillna('Unknown')
dfd22_f27_Attendees_Country_count['Percent-2022'] = (dfd22_f27_Attendees_Country_count['Total-2022'] / dfd22_f27_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f27_Attendees_Country_count['Percent-2022'] = dfd22_f27_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f27_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_Attendees_Country_count = pd.DataFrame(filtr_27_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f27_Attendees_Country_count = dfd23_f27_Attendees_Country_count.fillna('Unknown')
dfd23_f27_Attendees_Country_count['Percent-2023'] = (dfd23_f27_Attendees_Country_count['Total-2023'] / dfd23_f27_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f27_Attendees_Country_count['Percent-2023'] = dfd23_f27_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f27_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f27 = pd.DataFrame(pd.merge(dfd17_f27_Attendees_Country_count, dfd18_f27_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f27 = pd.DataFrame(pd.merge(dfd19_f27_Attendees_Country_count, dfd21_f27_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f27 = pd.DataFrame(pd.merge(dfd22_f27_Attendees_Country_count, dfd23_f27_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f27 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f27, dfAttendees_Country_Count_2_f27, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f27.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f27 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f27, dfAttendees_Country_Count_3_f27, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f27 = dfAttendees_Country_Count_m2_f27.append(dfAttendees_Country_Count_m2_f27.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f27['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f27_ATTENDEES_AREAS_count = pd.DataFrame(filtr_27_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f27_ATTENDEES_AREAS_count = dfd17_f27_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f27_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f27_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f27_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f27_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f27_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f27_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f27_ATTENDEES_AREAS_count = pd.DataFrame(filtr_27_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f27_ATTENDEES_AREAS_count = dfd18_f27_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f27_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f27_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f27_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f27_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f27_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f27_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f27_ATTENDEES_AREAS_count = pd.DataFrame(filtr_27_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f27_ATTENDEES_AREAS_count = dfd19_f27_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f27_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f27_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f27_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f27_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f27_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f27_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f27_ATTENDEES_AREAS_count = pd.DataFrame(filtr_27_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f27_ATTENDEES_AREAS_count = dfd21_f27_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f27_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f27_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f27_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f27_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f27_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f27_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f27_ATTENDEES_AREAS_count = pd.DataFrame(filtr_27_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f27_ATTENDEES_AREAS_count = dfd22_f27_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f27_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f27_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f27_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f27_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f27_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f27_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_ATTENDEES_AREAS_count = pd.DataFrame(filtr_27_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f27_ATTENDEES_AREAS_count = dfd23_f27_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f27_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f27_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f27_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f27_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f27_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f27_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f27 = pd.DataFrame(pd.merge(dfd17_f27_ATTENDEES_AREAS_count, dfd18_f27_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f27 = pd.DataFrame(pd.merge(dfd19_f27_ATTENDEES_AREAS_count, dfd21_f27_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f27 = pd.DataFrame(pd.merge(dfd22_f27_ATTENDEES_AREAS_count, dfd23_f27_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f27.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f27 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f27, df_ATTENDEES_AREAS_count_2_f27, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f27 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f27, df_ATTENDEES_AREAS_count_3_f27, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f27 = df_ATTENDEES_AREAS_count_m2_f27.append(df_ATTENDEES_AREAS_count_m2_f27.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f27['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f27_Attendees_Specialty_count = pd.DataFrame(filtr_27_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f27_Attendees_Specialty_count = dfd17_f27_Attendees_Specialty_count.fillna('Unknown')
dfd17_f27_Attendees_Specialty_count['Percent-2017'] = (dfd17_f27_Attendees_Specialty_count['Total-2017'] / dfd17_f27_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f27_Attendees_Specialty_count['Percent-2017'] = dfd17_f27_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f27_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f27_Attendees_Specialty_count = pd.DataFrame(filtr_27_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f27_Attendees_Specialty_count = dfd18_f27_Attendees_Specialty_count.fillna('Unknown')
dfd18_f27_Attendees_Specialty_count['Percent-2018'] = (dfd18_f27_Attendees_Specialty_count['Total-2018'] / dfd18_f27_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f27_Attendees_Specialty_count['Percent-2018'] = dfd18_f27_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f27_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f27_Attendees_Specialty_count = pd.DataFrame(filtr_27_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f27_Attendees_Specialty_count = dfd19_f27_Attendees_Specialty_count.fillna('Unknown')
dfd19_f27_Attendees_Specialty_count['Percent-2019'] = (dfd19_f27_Attendees_Specialty_count['Total-2019'] / dfd19_f27_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f27_Attendees_Specialty_count['Percent-2019'] = dfd19_f27_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f27_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f27_Attendees_Specialty_count = pd.DataFrame(filtr_27_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f27_Attendees_Specialty_count = dfd21_f27_Attendees_Specialty_count.fillna('Unknown')
dfd21_f27_Attendees_Specialty_count['Percent-2021'] = (dfd21_f27_Attendees_Specialty_count['Total-2021'] / dfd21_f27_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f27_Attendees_Specialty_count['Percent-2021'] = dfd21_f27_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f27_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f27_Attendees_Specialty_count = pd.DataFrame(filtr_27_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f27_Attendees_Specialty_count = dfd22_f27_Attendees_Specialty_count.fillna('Unknown')
dfd22_f27_Attendees_Specialty_count['Percent-2022'] = (dfd22_f27_Attendees_Specialty_count['Total-2022'] / dfd22_f27_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f27_Attendees_Specialty_count['Percent-2022'] = dfd22_f27_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f27_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f27_Attendees_Specialty_count = pd.DataFrame(filtr_27_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f27_Attendees_Specialty_count = dfd23_f27_Attendees_Specialty_count.fillna('Unknown')
dfd23_f27_Attendees_Specialty_count['Percent-2023'] = (dfd23_f27_Attendees_Specialty_count['Total-2023'] / dfd23_f27_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f27_Attendees_Specialty_count['Percent-2023'] = dfd23_f27_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f27_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f27 = pd.DataFrame(pd.merge(dfd17_f27_Attendees_Specialty_count, dfd18_f27_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f27 = pd.DataFrame(pd.merge(dfd19_f27_Attendees_Specialty_count, dfd21_f27_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f27 = pd.DataFrame(pd.merge(dfd22_f27_Attendees_Specialty_count, dfd23_f27_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f27 = pd.DataFrame(pd.merge(df_Specialty_count_1_f27, df_Specialty_count_2_f27, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f27.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f27 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f27, df_Specialty_count_3_f27, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f27 = df_Specialty_count_m2_f27.append(df_Specialty_count_m2_f27.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f27['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f27['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f27['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f27 = Concat_Registrations_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f27['Total-2017'] = Concat_Registrations_count_f1_f27['Total-2017'].astype(int)
Concat_Registrations_count_f1_f27['Percent-2017'] = Concat_Registrations_count_f1_f27['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f27['7DEvolution-2017'] = Concat_Registrations_count_f1_f27['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f27['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f27['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f27 = Concat_Registrations_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f27['Total-2018'] = Concat_Registrations_count_f1_f27['Total-2018'].astype(int)
Concat_Registrations_count_f1_f27['Percent-2018'] = Concat_Registrations_count_f1_f27['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f27['7DEvolution-2018'] = Concat_Registrations_count_f1_f27['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f27['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f27['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f27 = Concat_Registrations_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f27['Total-2019'] = Concat_Registrations_count_f1_f27['Total-2019'].astype(int)
Concat_Registrations_count_f1_f27['Percent-2019'] = Concat_Registrations_count_f1_f27['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f27['7DEvolution-2019'] = Concat_Registrations_count_f1_f27['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f27['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f27['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f27 = Concat_Registrations_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f27['Total-2021'] = Concat_Registrations_count_f1_f27['Total-2021'].astype(int)
Concat_Registrations_count_f1_f27['Percent-2021'] = Concat_Registrations_count_f1_f27['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f27['7DEvolution-2021'] = Concat_Registrations_count_f1_f27['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f27['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f27['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f27 = Concat_Registrations_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f27['Total-2022'] = Concat_Registrations_count_f1_f27['Total-2022'].astype(int)
Concat_Registrations_count_f1_f27['Percent-2022'] = Concat_Registrations_count_f1_f27['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f27['7DEvolution-2022'] = Concat_Registrations_count_f1_f27['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f27['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f27['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f27 = Concat_Registrations_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f27['Total-2023'] = Concat_Registrations_count_f1_f27['Total-2023'].astype(int)
Concat_Registrations_count_f1_f27['Percent-2023'] = Concat_Registrations_count_f1_f27['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f27['7DEvolution-2023'] = Concat_Registrations_count_f1_f27['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f27['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f27['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f27 = Concat_ACQRET_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f27['Total-2018'] = Concat_ACQRET_count_f1_f27['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f27['ACQ-2018'] = Concat_ACQRET_count_f1_f27['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f27['Percent-2018'] = Concat_ACQRET_count_f1_f27['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f27['RET-2018'] = Concat_ACQRET_count_f1_f27['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f27['Percnt-2018'] = Concat_ACQRET_count_f1_f27['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f27['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f27['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f27 = Concat_ACQRET_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f27['Total-2019'] = Concat_ACQRET_count_f1_f27['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f27['ACQ-2019'] = Concat_ACQRET_count_f1_f27['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f27['Percent-2019'] = Concat_ACQRET_count_f1_f27['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f27['RET-2019'] = Concat_ACQRET_count_f1_f27['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f27['Percnt-2019'] = Concat_ACQRET_count_f1_f27['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f27['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f27['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f27 = Concat_ACQRET_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f27['Total-2021'] = Concat_ACQRET_count_f1_f27['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f27['ACQ-2021'] = Concat_ACQRET_count_f1_f27['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f27['Percent-2021'] = Concat_ACQRET_count_f1_f27['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f27['RET-2021'] = Concat_ACQRET_count_f1_f27['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f27['Percnt-2021'] = Concat_ACQRET_count_f1_f27['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f27['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f27['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f27 = Concat_ACQRET_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f27['Total-2022'] = Concat_ACQRET_count_f1_f27['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f27['ACQ-2022'] = Concat_ACQRET_count_f1_f27['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f27['Percent-2022'] = Concat_ACQRET_count_f1_f27['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f27['RET-2022'] = Concat_ACQRET_count_f1_f27['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f27['Percnt-2022'] = Concat_ACQRET_count_f1_f27['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f27['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f27['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f27 = Concat_ACQRET_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f27['Total-2023'] = Concat_ACQRET_count_f1_f27['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f27['ACQ-2023'] = Concat_ACQRET_count_f1_f27['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f27['Percent-2023'] = Concat_ACQRET_count_f1_f27['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f27['RET-2023'] = Concat_ACQRET_count_f1_f27['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f27['Percnt-2023'] = Concat_ACQRET_count_f1_f27['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f27['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f27['Total-2017'],errors='coerce')
Concat_REV_count_f1_f27 = Concat_REV_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f27['Total-2017'] = Concat_REV_count_f1_f27['Total-2017'].astype(int)
Concat_REV_count_f1_f27['Percent-2017'] = Concat_REV_count_f1_f27['Percent-2017'].astype(float)
Concat_REV_count_f1_f27['7DEvolution-2017'] = Concat_REV_count_f1_f27['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f27['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f27['Total-2018'],errors='coerce')
Concat_REV_count_f1_f27 = Concat_REV_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f27['Total-2018'] = Concat_REV_count_f1_f27['Total-2018'].astype(int)
Concat_REV_count_f1_f27['Percent-2018'] = Concat_REV_count_f1_f27['Percent-2018'].astype(float)
Concat_REV_count_f1_f27['7DEvolution-2018'] = Concat_REV_count_f1_f27['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f27['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f27['Total-2019'],errors='coerce')
Concat_REV_count_f1_f27 = Concat_REV_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f27['Total-2019'] = Concat_REV_count_f1_f27['Total-2019'].astype(int)
Concat_REV_count_f1_f27['Percent-2019'] = Concat_REV_count_f1_f27['Percent-2019'].astype(float)
Concat_REV_count_f1_f27['7DEvolution-2019'] = Concat_REV_count_f1_f27['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f27['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f27['Total-2022'],errors='coerce')
Concat_REV_count_f1_f27 = Concat_REV_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f27['Total-2022'] = Concat_REV_count_f1_f27['Total-2022'].astype(int)
Concat_REV_count_f1_f27['Percent-2022'] = Concat_REV_count_f1_f27['Percent-2022'].astype(float)
Concat_REV_count_f1_f27['7DEvolution-2022'] = Concat_REV_count_f1_f27['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f27['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f27['Total-2023'],errors='coerce')
Concat_REV_count_f1_f27 = Concat_REV_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f27['Total-2023'] = Concat_REV_count_f1_f27['Total-2023'].astype(int)
Concat_REV_count_f1_f27['Percent-2023'] = Concat_REV_count_f1_f27['Percent-2023'].astype(float)
Concat_REV_count_f1_f27['7DEvolution-2023'] = Concat_REV_count_f1_f27['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f27['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f27['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f27 = Concat_RegGRDel_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f27['Total-2017'] = Concat_RegGRDel_count_f1_f27['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f27['Percent-2017'] = Concat_RegGRDel_count_f1_f27['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f27['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f27['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f27['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f27['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f27 = Concat_RegGRDel_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f27['Total-2018'] = Concat_RegGRDel_count_f1_f27['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f27['Percent-2018'] = Concat_RegGRDel_count_f1_f27['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f27['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f27['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f27['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f27['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f27 = Concat_RegGRDel_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f27['Total-2019'] = Concat_RegGRDel_count_f1_f27['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f27['Percent-2019'] = Concat_RegGRDel_count_f1_f27['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f27['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f27['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f27['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f27['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f27 = Concat_RegGRDel_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f27['Total-2021'] = Concat_RegGRDel_count_f1_f27['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f27['Percent-2021'] = Concat_RegGRDel_count_f1_f27['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f27['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f27['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f27['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f27['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f27 = Concat_RegGRDel_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f27['Total-2022'] = Concat_RegGRDel_count_f1_f27['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f27['Percent-2022'] = Concat_RegGRDel_count_f1_f27['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f27['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f27['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f27['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f27['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f27 = Concat_RegGRDel_count_f1_f27.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f27['Total-2023'] = Concat_RegGRDel_count_f1_f27['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f27['Percent-2023'] = Concat_RegGRDel_count_f1_f27['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f27['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f27['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f27['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f27['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f27 = Conct_AC_RT_GRDel_f1_f27.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f27['Total-2018'] = Conct_AC_RT_GRDel_f1_f27['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f27['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f27['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f27['Percent-2018'] = Conct_AC_RT_GRDel_f1_f27['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f27['RET-2018'] = Conct_AC_RT_GRDel_f1_f27['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f27['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f27['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f27['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f27['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f27 = Conct_AC_RT_GRDel_f1_f27.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f27['Total-2019'] = Conct_AC_RT_GRDel_f1_f27['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f27['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f27['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f27['Percent-2019'] = Conct_AC_RT_GRDel_f1_f27['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f27['RET-2019'] = Conct_AC_RT_GRDel_f1_f27['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f27['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f27['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f27['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f27['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f27 = Conct_AC_RT_GRDel_f1_f27.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f27['Total-2021'] = Conct_AC_RT_GRDel_f1_f27['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f27['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f27['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f27['Percent-2021'] = Conct_AC_RT_GRDel_f1_f27['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f27['RET-2021'] = Conct_AC_RT_GRDel_f1_f27['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f27['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f27['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f27['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f27['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f27 = Conct_AC_RT_GRDel_f1_f27.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f27['Total-2022'] = Conct_AC_RT_GRDel_f1_f27['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f27['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f27['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f27['Percent-2022'] = Conct_AC_RT_GRDel_f1_f27['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f27['RET-2022'] = Conct_AC_RT_GRDel_f1_f27['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f27['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f27['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f27['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f27['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f27 = Conct_AC_RT_GRDel_f1_f27.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f27['Total-2023'] = Conct_AC_RT_GRDel_f1_f27['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f27['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f27['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f27['Percent-2023'] = Conct_AC_RT_GRDel_f1_f27['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f27['RET-2023'] = Conct_AC_RT_GRDel_f1_f27['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f27['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f27['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f27['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f27['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f27 = Conct_RV_GRDel_f1_f27.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f27['Total-2017'] = Conct_RV_GRDel_f1_f27['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f27['Percent-2017'] = Conct_RV_GRDel_f1_f27['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f27['7DEvolution-2017'] = Conct_RV_GRDel_f1_f27['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f27['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f27['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f27 = Conct_RV_GRDel_f1_f27.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f27['Total-2018'] = Conct_RV_GRDel_f1_f27['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f27['Percent-2018'] = Conct_RV_GRDel_f1_f27['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f27['7DEvolution-2018'] = Conct_RV_GRDel_f1_f27['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f27['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f27['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f27 = Conct_RV_GRDel_f1_f27.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f27['Total-2019'] = Conct_RV_GRDel_f1_f27['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f27['Percent-2019'] = Conct_RV_GRDel_f1_f27['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f27['7DEvolution-2019'] = Conct_RV_GRDel_f1_f27['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f27['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f27['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f27 = Conct_RV_GRDel_f1_f27.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f27['Total-2022'] = Conct_RV_GRDel_f1_f27['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f27['Percent-2022'] = Conct_RV_GRDel_f1_f27['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f27['7DEvolution-2022'] = Conct_RV_GRDel_f1_f27['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f27['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f27['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f27 = Conct_RV_GRDel_f1_f27.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f27['Total-2023'] = Conct_RV_GRDel_f1_f27['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f27['Percent-2023'] = Conct_RV_GRDel_f1_f27['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f27['7DEvolution-2023'] = Conct_RV_GRDel_f1_f27['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f27['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f27['Total-2017'],errors='coerce')
df_Profile_Count_m2_f27 = df_Profile_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f27['Total-2017'] = df_Profile_Count_m2_f27['Total-2017'].astype(int)
df_Profile_Count_m2_f27['Percent-2017'] = df_Profile_Count_m2_f27['Percent-2017'].astype(float)

df_Profile_Count_m2_f27['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f27['Total-2018'],errors='coerce')
df_Profile_Count_m2_f27 = df_Profile_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f27['Total-2018'] = df_Profile_Count_m2_f27['Total-2018'].astype(int)
df_Profile_Count_m2_f27['Percent-2018'] = df_Profile_Count_m2_f27['Percent-2018'].astype(float)

df_Profile_Count_m2_f27['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f27['Total-2019'],errors='coerce')
df_Profile_Count_m2_f27 = df_Profile_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f27['Total-2019'] = df_Profile_Count_m2_f27['Total-2019'].astype(int)
df_Profile_Count_m2_f27['Percent-2019'] = df_Profile_Count_m2_f27['Percent-2019'].astype(float)

df_Profile_Count_m2_f27['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f27['Total-2021'],errors='coerce')
df_Profile_Count_m2_f27 = df_Profile_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f27['Total-2021'] = df_Profile_Count_m2_f27['Total-2021'].astype(int)
df_Profile_Count_m2_f27['Percent-2021'] = df_Profile_Count_m2_f27['Percent-2021'].astype(float)

df_Profile_Count_m2_f27['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f27['Total-2022'],errors='coerce')
df_Profile_Count_m2_f27 = df_Profile_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f27['Total-2022'] = df_Profile_Count_m2_f27['Total-2022'].astype(int)
df_Profile_Count_m2_f27['Percent-2022'] = df_Profile_Count_m2_f27['Percent-2022'].astype(float)

df_Profile_Count_m2_f27['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f27['Total-2023'],errors='coerce')
df_Profile_Count_m2_f27 = df_Profile_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f27['Total-2023'] = df_Profile_Count_m2_f27['Total-2023'].astype(int)
df_Profile_Count_m2_f27['Percent-2023'] = df_Profile_Count_m2_f27['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f27['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f27['Total-2017'],errors='coerce')
df_Pass_Count_m2_f27 = df_Pass_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f27['Total-2017'] = df_Pass_Count_m2_f27['Total-2017'].astype(int)
df_Pass_Count_m2_f27['Percent-2017'] = df_Pass_Count_m2_f27['Percent-2017'].astype(float)

df_Pass_Count_m2_f27['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f27['Total-2018'],errors='coerce')
df_Pass_Count_m2_f27 = df_Pass_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f27['Total-2018'] = df_Pass_Count_m2_f27['Total-2018'].astype(int)
df_Pass_Count_m2_f27['Percent-2018'] = df_Pass_Count_m2_f27['Percent-2018'].astype(float)

df_Pass_Count_m2_f27['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f27['Total-2019'],errors='coerce')
df_Pass_Count_m2_f27 = df_Pass_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f27['Total-2019'] = df_Pass_Count_m2_f27['Total-2019'].astype(int)
df_Pass_Count_m2_f27['Percent-2019'] = df_Pass_Count_m2_f27['Percent-2019'].astype(float)

df_Pass_Count_m2_f27['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f27['Total-2021'],errors='coerce')
df_Pass_Count_m2_f27 = df_Pass_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f27['Total-2021'] = df_Pass_Count_m2_f27['Total-2021'].astype(int)
df_Pass_Count_m2_f27['Percent-2021'] = df_Pass_Count_m2_f27['Percent-2021'].astype(float)

df_Pass_Count_m2_f27['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f27['Total-2022'],errors='coerce')
df_Pass_Count_m2_f27 = df_Pass_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f27['Total-2022'] = df_Pass_Count_m2_f27['Total-2022'].astype(int)
df_Pass_Count_m2_f27['Percent-2022'] = df_Pass_Count_m2_f27['Percent-2022'].astype(float)

df_Pass_Count_m2_f27['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f27['Total-2023'],errors='coerce')
df_Pass_Count_m2_f27 = df_Pass_Count_m2_f27.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f27['Total-2023'] = df_Pass_Count_m2_f27['Total-2023'].astype(int)
df_Pass_Count_m2_f27['Percent-2023'] = df_Pass_Count_m2_f27['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f27['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f27['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f27 = dfAttendees_Country_Count_m2_f27.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f27['Total-2017'] = dfAttendees_Country_Count_m2_f27['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f27['Percent-2017'] = dfAttendees_Country_Count_m2_f27['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f27['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f27['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f27 = dfAttendees_Country_Count_m2_f27.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f27['Total-2018'] = dfAttendees_Country_Count_m2_f27['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f27['Percent-2018'] = dfAttendees_Country_Count_m2_f27['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f27['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f27['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f27 = dfAttendees_Country_Count_m2_f27.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f27['Total-2019'] = dfAttendees_Country_Count_m2_f27['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f27['Percent-2019'] = dfAttendees_Country_Count_m2_f27['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f27['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f27['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f27 = dfAttendees_Country_Count_m2_f27.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f27['Total-2021'] = dfAttendees_Country_Count_m2_f27['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f27['Percent-2021'] = dfAttendees_Country_Count_m2_f27['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f27['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f27['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f27 = dfAttendees_Country_Count_m2_f27.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f27['Total-2022'] = dfAttendees_Country_Count_m2_f27['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f27['Percent-2022'] = dfAttendees_Country_Count_m2_f27['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f27['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f27['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f27 = dfAttendees_Country_Count_m2_f27.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f27['Total-2023'] = dfAttendees_Country_Count_m2_f27['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f27['Percent-2023'] = dfAttendees_Country_Count_m2_f27['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f27['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f27['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f27 = df_ATTENDEES_AREAS_count_m2_f27.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f27['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f27['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f27['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f27['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f27['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f27['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f27 = df_ATTENDEES_AREAS_count_m2_f27.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f27['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f27['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f27['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f27['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f27['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f27['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f27 = df_ATTENDEES_AREAS_count_m2_f27.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f27['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f27['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f27['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f27['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f27['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f27['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f27 = df_ATTENDEES_AREAS_count_m2_f27.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f27['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f27['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f27['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f27['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f27['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f27['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f27 = df_ATTENDEES_AREAS_count_m2_f27.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f27['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f27['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f27['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f27['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f27['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f27['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f27 = df_ATTENDEES_AREAS_count_m2_f27.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f27['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f27['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f27['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f27['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f27['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f27['Total-2017'],errors='coerce')
df_Specialty_count_m2_f27 = df_Specialty_count_m2_f27.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f27['Total-2017'] = df_Specialty_count_m2_f27['Total-2017'].astype(int)
df_Specialty_count_m2_f27['Percent-2017'] = df_Specialty_count_m2_f27['Percent-2017'].astype(float)

df_Specialty_count_m2_f27['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f27['Total-2018'],errors='coerce')
df_Specialty_count_m2_f27 = df_Specialty_count_m2_f27.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f27['Total-2018'] = df_Specialty_count_m2_f27['Total-2018'].astype(int)
df_Specialty_count_m2_f27['Percent-2018'] = df_Specialty_count_m2_f27['Percent-2018'].astype(float)

df_Specialty_count_m2_f27['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f27['Total-2019'],errors='coerce')
df_Specialty_count_m2_f27 = df_Specialty_count_m2_f27.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f27['Total-2019'] = df_Specialty_count_m2_f27['Total-2019'].astype(int)
df_Specialty_count_m2_f27['Percent-2019'] = df_Specialty_count_m2_f27['Percent-2019'].astype(float)

df_Specialty_count_m2_f27['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f27['Total-2021'],errors='coerce')
df_Specialty_count_m2_f27 = df_Specialty_count_m2_f27.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f27['Total-2021'] = df_Specialty_count_m2_f27['Total-2021'].astype(int)
df_Specialty_count_m2_f27['Percent-2021'] = df_Specialty_count_m2_f27['Percent-2021'].astype(float)

df_Specialty_count_m2_f27['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f27['Total-2022'],errors='coerce')
df_Specialty_count_m2_f27 = df_Specialty_count_m2_f27.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f27['Total-2022'] = df_Specialty_count_m2_f27['Total-2022'].astype(int)
df_Specialty_count_m2_f27['Percent-2022'] = df_Specialty_count_m2_f27['Percent-2022'].astype(float)

df_Specialty_count_m2_f27['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f27['Total-2023'],errors='coerce')
df_Specialty_count_m2_f27 = df_Specialty_count_m2_f27.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f27['Total-2023'] = df_Specialty_count_m2_f27['Total-2023'].astype(int)
df_Specialty_count_m2_f27['Percent-2023'] = df_Specialty_count_m2_f27['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f27.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f27.dtypes)
#print(df_Specialty_count_m2_f27.dtypes)

#print(dfAttendees_Country_Count_m2_f27.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f27.dtypes)
#print(df_Specialty_count_m2_f27.dtypes)

# EXCEL FILE
writerf27 = pd.ExcelWriter(outputExcelFile_f27, engine='xlsxwriter')

print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f27.to_excel\
    (writerf27, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Concat_ACQRET_count_f1_f27.to_excel\
    (writerf27, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f27.to_excel\
    (writerf27, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f27.to_excel\
    (writerf27, index=False, sheet_name='Group Reg',
     header=['Days', 'Reg-2017', 'RegRate17', 'Reg/week17', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Reg-2019', 'RegRate19', 'Reg/week19', 'Reg-2021', 'RegRate21',  'Reg/Week21',
            'Reg-2022', 'RegRate22', 'Reg/week22', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution'])
Conct_AC_RT_GRDel_f1_f27.to_excel\
    (writerf27, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2021', 'New-2021', '%New21', 'Old-2021', '%Old21',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f27.to_excel\
    (writerf27, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2021', '%Rev21', 'Rev/week21',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f27.to_excel\
    (writerf27, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f27.to_excel\
    (writerf27, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f27.to_excel\
    (writerf27, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f27.to_excel\
    (writerf27, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f27.to_excel\
    (writerf27, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2021', '%21', 'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf27.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f27)

workbook.save(outputExcelFile_f27)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 07 days**********************************************')
print('************************************End of 07 days**********************************************')
print('************************************End of 07 days**********************************************')
print('************************************End of 07 days**********************************************')
print('************************************End of 07 days**********************************************')
print('************************************End of 07 days**********************************************')
print('************************************End of 07 days**********************************************')
print('************************************End of 07 days**********************************************')
print('************************************End of 07 days**********************************************')


#unit 1
#Total Number of Registrations
dfd17_f28_Registrations_count = pd.DataFrame(filter_28_df17.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f28_Registrations_count = dfd17_f28_Registrations_count.fillna('Unknown')
dfd17_f28_Registrations_count['Percent-2017'] = (dfd17_f28_Registrations_count['Total-2017'] / df17_Registrations_count['Total-2017'].sum()) * 100
dfd17_f28_Registrations_count['Percent-2017'] = dfd17_f28_Registrations_count['Percent-2017'].round(decimals=0)
dfd17_f28_Registrations_count['7DEvolution-2017'] = dfd17_f28_Registrations_count['Total-2017'] - dfd17_f27_Registrations_count['Total-2017']
#print(tab(dfd17_f28_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f28_Registrations_count = pd.DataFrame(filter_28_df18.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f28_Registrations_count = dfd18_f28_Registrations_count.fillna('Unknown')
dfd18_f28_Registrations_count['Percent-2018'] = (dfd18_f28_Registrations_count['Total-2018'] / df18_Registrations_count['Total-2018'].sum()) * 100
dfd18_f28_Registrations_count['Percent-2018'] = dfd18_f28_Registrations_count['Percent-2018'].round(decimals=0)
dfd18_f28_Registrations_count['7DEvolution-2018'] = dfd18_f28_Registrations_count['Total-2018'] - dfd18_f27_Registrations_count['Total-2018']
#print(tab(dfd18_f28_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f28_Registrations_count = pd.DataFrame(filter_28_df19.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f28_Registrations_count = dfd19_f28_Registrations_count.fillna('Unknown')
dfd19_f28_Registrations_count['Percent-2019'] = (dfd19_f28_Registrations_count['Total-2019'] / df19_Registrations_count['Total-2019'].sum()) * 100
dfd19_f28_Registrations_count['Percent-2019'] = dfd19_f28_Registrations_count['Percent-2019'].round(decimals=0)
dfd19_f28_Registrations_count['7DEvolution-2019'] = dfd19_f28_Registrations_count['Total-2019'] - dfd19_f27_Registrations_count['Total-2019']
#print(tab(dfd19_f28_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f28_Registrations_count = pd.DataFrame(filter_28_df21.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f28_Registrations_count = dfd21_f28_Registrations_count.fillna('Unknown')
dfd21_f28_Registrations_count['Percent-2021'] = (dfd21_f28_Registrations_count['Total-2021'] / df21_Registrations_count['Total-2021'].sum()) * 100
dfd21_f28_Registrations_count['Percent-2021'] = dfd21_f28_Registrations_count['Percent-2021'].round(decimals=0)
dfd21_f28_Registrations_count['7DEvolution-2021'] = dfd21_f28_Registrations_count['Total-2021'] - dfd21_f27_Registrations_count['Total-2021']
#print(tab(dfd21_f28_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f28_Registrations_count = pd.DataFrame(filter_28_df22.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f28_Registrations_count = dfd22_f28_Registrations_count.fillna('Unknown')
dfd22_f28_Registrations_count['Percent-2022'] = (dfd22_f28_Registrations_count['Total-2022'] / df22_Registrations_count['Total-2022'].sum()) * 100
dfd22_f28_Registrations_count['Percent-2022'] = dfd22_f28_Registrations_count['Percent-2022'].round(decimals=0)
dfd22_f28_Registrations_count['7DEvolution-2022'] = dfd22_f28_Registrations_count['Total-2022'] - dfd22_f27_Registrations_count['Total-2022']
print(tab(dfd22_f28_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_Registrations_count = pd.DataFrame(filter_28_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f28_Registrations_count = dfd23_f28_Registrations_count.fillna('Unknown')
dfd23_f28_Registrations_count['Percent-2023'] = (dfd23_f28_Registrations_count['Total-2023'] / df23_Registrations_count['Total-2023'].sum()) * 100
dfd23_f28_Registrations_count['Percent-2023'] = dfd23_f28_Registrations_count['Percent-2023'].round(decimals=0)
dfd23_f28_Registrations_count['7DEvolution-2023'] = dfd23_f28_Registrations_count['Total-2023'] - dfd23_f27_Registrations_count['Total-2023']
print(tab(dfd23_f28_Registrations_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f28_RegistrationsEvolution_count = pd.DataFrame(filter_28_df23.groupby(['TotalRegistrationsf1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f28_RegistrationsEvolution_count = dfd23_f28_RegistrationsEvolution_count.fillna('Unknown')
dfd23_f28_RegistrationsEvolution_count['Evolution-2023'] = ((dfd23_f28_Registrations_count['Total-2023'] - dfd19_f28_Registrations_count['Total-2019'])/ dfd19_f28_Registrations_count['Total-2019'].sum()) * 100
dfd23_f28_RegistrationsEvolution_count['Evolution-2023'] = dfd23_f28_RegistrationsEvolution_count['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f28_RegistrationsEvolution_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_RegistrationsEvolution_count.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
df_Registrations_count_1_f28 = pd.DataFrame(pd.merge(dfd17_f28_Registrations_count, dfd18_f28_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_2_f28 = pd.DataFrame(pd.merge(dfd19_f28_Registrations_count, dfd21_f28_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_3_f28 = pd.DataFrame(pd.merge(dfd22_f28_Registrations_count, dfd23_f28_Registrations_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_count_3_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m1_f28 = pd.DataFrame(pd.merge(df_Registrations_count_1_f28, df_Registrations_count_2_f28, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_count_m2_f28 = pd.DataFrame(pd.merge(df_Registrations_count_m1_f28, df_Registrations_count_3_f28, on = "TotalRegistrationsf1", how = "outer"))

df_Registrations_Merge_f28 = pd.DataFrame(pd.merge(df_Registrations_count_m2_f28, dfd23_f28_RegistrationsEvolution_count, on = "TotalRegistrationsf1", how = "outer"))
#print(tab(df_Registrations_Merge_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

########################      Merging f1 & f2: IMPORTANT LINE ###########      ******************************

ConcatFrames_Registrations_count_f1_f28 = [df_Registrations_Merge_f1, df_Registrations_Merge_f2, df_Registrations_Merge_f3, df_Registrations_Merge_f4,
                                          df_Registrations_Merge_f5, df_Registrations_Merge_f6, df_Registrations_Merge_f7, df_Registrations_Merge_f8,
                                          df_Registrations_Merge_f9, df_Registrations_Merge_f10, df_Registrations_Merge_f11, df_Registrations_Merge_f12,
                                           df_Registrations_Merge_f13, df_Registrations_Merge_f14, df_Registrations_Merge_f15, df_Registrations_Merge_f16,
                                           df_Registrations_Merge_f17, df_Registrations_Merge_f18, df_Registrations_Merge_f19, df_Registrations_Merge_f20,
                                           df_Registrations_Merge_f21, df_Registrations_Merge_f22, df_Registrations_Merge_f23, df_Registrations_Merge_f24,
                                           df_Registrations_Merge_f25, df_Registrations_Merge_f26, df_Registrations_Merge_f27, df_Registrations_Merge_f28]
Concat_Registrations_count_f1_f28 = pd.concat(ConcatFrames_Registrations_count_f1_f28)

#print(tab(Concat_Registrations_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE (warning: this will not change but next year please upadate values for 2022 and 2023)

#ConcatFrames_Registrations_count_f1_f28  = ConcatFrames_Registrations_count_f1_f28.append(pd.Series(df_Registrations_Mrgef1TotalRow, index=ConcatFrames_Registrations_count_f1_f28.columns[:len(df_Registrations_Mrgef1TotalRow)]), ignore_index=True)

#print(tab(ConcatFrames_Registrations_count_f1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

#Customer_Acquisition
df_NewCustomer_df18_f28 = filter_28_df18[filter_28_df18['New customer'] == 1]
df_NewCustomer_df19_f28 = filter_28_df19[filter_28_df19['New customer'] == 1]
df_NewCustomer_df21_f28 = filter_28_df21[filter_28_df21['New customer'] == 1]
df_NewCustomer_df22_f28 = filter_28_df22[filter_28_df22['New customer'] == 1]
df_NewCustomer_df23_f28 = filter_28_df23[filter_28_df23['New customer'] == 1]

#print(tab(df_NewCustomer_df18_f28.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df19_f28.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df21_f28.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCustomer_df22_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a28_ACQRET_count = pd.DataFrame(filter_28_df18.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f28_ACQRET_count = pd.DataFrame(df_NewCustomer_df18_f28.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f28_ACQRET_count['Percent-2018'] = (dfd18_f28_ACQRET_count['ACQ-2018'] / dfd18_f28_Registrations_count['Total-2018'].sum()) * 100
dfd18_f28_ACQRET_count['Percent-2018'] = dfd18_f28_ACQRET_count['Percent-2018'].round(decimals=0)

dfd18_f28_ACQRET_count['RET-2018'] = dfd18_a28_ACQRET_count['Total-2018'] - dfd18_f28_ACQRET_count['ACQ-2018']
dfd18_f28_ACQRET_count['Percnt-2018'] = (dfd18_f28_ACQRET_count['RET-2018'] / dfd18_a28_ACQRET_count['Total-2018'].sum()) * 100
dfd18_f28_ACQRET_count['Percnt-2018'] = dfd18_f28_ACQRET_count['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f28_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a28_ACQRET_count = pd.DataFrame(filter_28_df19.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f28_ACQRET_count = pd.DataFrame(df_NewCustomer_df19_f28.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f28_ACQRET_count['Percent-2019'] = (dfd19_f28_ACQRET_count['ACQ-2019'] / dfd19_f28_Registrations_count['Total-2019'].sum()) * 100
dfd19_f28_ACQRET_count['Percent-2019'] = dfd19_f28_ACQRET_count['Percent-2019'].round(decimals=0)

dfd19_f28_ACQRET_count['RET-2019'] = dfd19_a28_ACQRET_count['Total-2019'] - dfd19_f28_ACQRET_count['ACQ-2019']
dfd19_f28_ACQRET_count['Percnt-2019'] = (dfd19_f28_ACQRET_count['RET-2019'] / dfd19_a28_ACQRET_count['Total-2019'].sum()) * 100
dfd19_f28_ACQRET_count['Percnt-2019'] = dfd19_f28_ACQRET_count['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f28_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a28_ACQRET_count = pd.DataFrame(filter_28_df21.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f28_ACQRET_count = pd.DataFrame(df_NewCustomer_df21_f28.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f28_ACQRET_count['Percent-2021'] = (dfd21_f28_ACQRET_count['ACQ-2021'] / dfd21_f28_Registrations_count['Total-2021'].sum()) * 100
dfd21_f28_ACQRET_count['Percent-2021'] = dfd21_f28_ACQRET_count['Percent-2021'].round(decimals=0)

dfd21_f28_ACQRET_count['RET-2021'] = dfd21_a28_ACQRET_count['Total-2021'] - dfd21_f28_ACQRET_count['ACQ-2021']
dfd21_f28_ACQRET_count['Percnt-2021'] = (dfd21_f28_ACQRET_count['RET-2021'] / dfd21_a28_ACQRET_count['Total-2021'].sum()) * 100
dfd21_f28_ACQRET_count['Percnt-2021'] = dfd21_f28_ACQRET_count['Percnt-2021']
#print(tab(dfd21_f28_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a28_ACQRET_count = pd.DataFrame(filter_28_df22.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f28_ACQRET_count = pd.DataFrame(df_NewCustomer_df22_f28.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f28_ACQRET_count['Percent-2022'] = (dfd22_f28_ACQRET_count['ACQ-2022'] / dfd22_f28_Registrations_count['Total-2022'].sum()) * 100
dfd22_f28_ACQRET_count['Percent-2022'] = dfd22_f28_ACQRET_count['Percent-2022'].round(decimals=0)

dfd22_f28_ACQRET_count['RET-2022'] = dfd22_a28_ACQRET_count['Total-2022'] - dfd22_f28_ACQRET_count['ACQ-2022']
dfd22_f28_ACQRET_count['Percnt-2022'] = (dfd22_f28_ACQRET_count['RET-2022'] / dfd22_a28_ACQRET_count['Total-2022'].sum()) * 100
dfd22_f28_ACQRET_count['Percnt-2022'] = dfd22_f28_ACQRET_count['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f28_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a28_ACQRET_count = pd.DataFrame(filter_28_df23.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f28_ACQRET_count = pd.DataFrame(df_NewCustomer_df23_f28.groupby(['TotalRegistrationsa1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f28_ACQRET_count['Percent-2023'] = (dfd23_f28_ACQRET_count['ACQ-2023'] / dfd23_f28_Registrations_count['Total-2023'].sum()) * 100
dfd23_f28_ACQRET_count['Percent-2023'] = dfd23_f28_ACQRET_count['Percent-2023'].round(decimals=0)

dfd23_f28_ACQRET_count['RET-2023'] = dfd23_a28_ACQRET_count['Total-2023'] - dfd23_f28_ACQRET_count['ACQ-2023']
dfd23_f28_ACQRET_count['Percnt-2023'] = (dfd23_f28_ACQRET_count['RET-2023'] / dfd23_a28_ACQRET_count['Total-2023'].sum()) * 100
dfd23_f28_ACQRET_count['Percnt-2023'] = dfd23_f28_ACQRET_count['Percnt-2023']
#print(tab(dfd23_f28_ACQRET_count.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_ACQRET_count_1_f28 = pd.DataFrame(pd.merge(dfd18_a28_ACQRET_count, dfd18_f28_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_2_f28 = pd.DataFrame(pd.merge(dfd19_a28_ACQRET_count, dfd19_f28_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_3_f28 = pd.DataFrame(pd.merge(dfd21_a28_ACQRET_count, dfd21_f28_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_3_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_4_f28 = pd.DataFrame(pd.merge(dfd22_a28_ACQRET_count, dfd22_f28_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_4_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_28_f28 = pd.DataFrame(pd.merge(dfd23_a28_ACQRET_count, dfd23_f28_ACQRET_count, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_28_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M1_f28 = pd.DataFrame(pd.merge(df_ACQRET_count_1_f28, df_ACQRET_count_2_f28, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M2_f28 = pd.DataFrame(pd.merge(df_ACQRET_count_M1_f28, df_ACQRET_count_3_f28, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M3_f28 = pd.DataFrame(pd.merge(df_ACQRET_count_M2_f28, df_ACQRET_count_4_f28, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M3_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ACQRET_count_M4_f28 = pd.DataFrame(pd.merge(df_ACQRET_count_M3_f28, df_ACQRET_count_28_f28, on = "TotalRegistrationsa1", how = "outer"))
#print(tab(df_ACQRET_count_M4_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_ACQRET_count_f1_f28 = [df_ACQRET_count_M4_f1, df_ACQRET_count_M4_f2, df_ACQRET_count_M4_f3, df_ACQRET_count_M4_f4,
                                   df_ACQRET_count_M4_f5, df_ACQRET_count_M4_f6, df_ACQRET_count_M4_f7, df_ACQRET_count_M4_f8,
                                   df_ACQRET_count_M4_f9, df_ACQRET_count_M4_f10, df_ACQRET_count_M4_f11, df_ACQRET_count_M4_f12,
                                    df_ACQRET_count_M4_f13, df_ACQRET_count_M4_f14, df_ACQRET_count_M4_f15, df_ACQRET_count_M4_f16,
                                    df_ACQRET_count_M4_f17, df_ACQRET_count_M4_f18, df_ACQRET_count_M4_f19, df_ACQRET_count_M4_f20,
                                    df_ACQRET_count_M4_f21, df_ACQRET_count_M4_f22, df_ACQRET_count_M4_f23, df_ACQRET_count_M4_f24,
                                    df_ACQRET_count_M4_f25, df_ACQRET_count_M4_f26, df_ACQRET_count_M4_f27, df_ACQRET_count_M4_f28]
Concat_ACQRET_count_f1_f28 = pd.concat(ConcatFrames_ACQRET_count_f1_f28)
#print(tab(Concat_ACQRET_count_f1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

Concat_ACQRET_count_f1_f28 = Concat_ACQRET_count_f1_f28[['TotalRegistrationsa1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

#REVENUE CALCULATION
dfd17_f28_Revenue_calc = pd.DataFrame(filter_28_df17.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f28_Revenue_calc['Percent-2017'] = (dfd17_f28_Revenue_calc['Total-2017'] / df17_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f28_Revenue_calc['Percent-2017'] = dfd17_f28_Revenue_calc['Percent-2017'].round(decimals=0)
dfd17_f28_Revenue_calc['7DEvolution-2017'] = dfd17_f28_Revenue_calc['Total-2017'] - dfd17_f27_Revenue_calc['Total-2017']
#print(tab(dfd17_f28_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f28_Revenue_calc = pd.DataFrame(filter_28_df18.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f28_Revenue_calc['Percent-2018'] = (dfd18_f28_Revenue_calc['Total-2018'] / df18_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f28_Revenue_calc['Percent-2018'] = dfd18_f28_Revenue_calc['Percent-2018'].round(decimals=0)
dfd18_f28_Revenue_calc['7DEvolution-2018'] = dfd18_f28_Revenue_calc['Total-2018'] - dfd18_f27_Revenue_calc['Total-2018']
#print(tab(dfd18_f28_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f28_Revenue_calc = pd.DataFrame(filter_28_df19.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f28_Revenue_calc['Percent-2019'] = (dfd19_f28_Revenue_calc['Total-2019'] / df19_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f28_Revenue_calc['Percent-2019'] = dfd19_f28_Revenue_calc['Percent-2019'].round(decimals=0)
dfd19_f28_Revenue_calc['7DEvolution-2019'] = dfd19_f28_Revenue_calc['Total-2019'] - dfd19_f27_Revenue_calc['Total-2019']
#print(tab(dfd19_f28_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f28_Revenue_calc = pd.DataFrame(filter_28_df21.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f28_Revenue_calc['Percent-2021'] = (dfd21_f28_Revenue_calc['Total-2021'] / df21_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f28_Revenue_calc['Percent-2021'] = dfd21_f28_Revenue_calc['Percent-2021'].round(decimals=0)
dfd21_f28_Revenue_calc['7DEvolution-2021'] = dfd21_f28_Revenue_calc['Total-2021'] - dfd21_f27_Revenue_calc['Total-2021']
#print(tab(dfd21_f28_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f28_Revenue_calc = pd.DataFrame(filter_28_df22.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f28_Revenue_calc['Percent-2022'] = (dfd22_f28_Revenue_calc['Total-2022'] / df22_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f28_Revenue_calc['Percent-2022'] = dfd22_f28_Revenue_calc['Percent-2022'].round(decimals=0)
dfd22_f28_Revenue_calc['7DEvolution-2022'] = dfd22_f28_Revenue_calc['Total-2022'] - dfd22_f27_Revenue_calc['Total-2022']
#print(tab(dfd22_f28_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_Revenue_calc = pd.DataFrame(filter_28_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f28_Revenue_calc['Percent-2023'] = (dfd23_f28_Revenue_calc['Total-2023'] / df23_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f28_Revenue_calc['Percent-2023'] = dfd23_f28_Revenue_calc['Percent-2023'].round(decimals=0)
dfd23_f28_Revenue_calc['7DEvolution-2023'] = dfd23_f28_Revenue_calc['Total-2023'] - dfd23_f27_Revenue_calc['Total-2023']
#print(tab(dfd23_f28_Revenue_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f28_RevenueEvolution_calc = pd.DataFrame(filter_28_df23.groupby('TotalRegistrationsk1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f28_RevenueEvolution_calc['Evolution-2023'] = ((dfd23_f28_Revenue_calc['Total-2023'] - dfd19_f28_Revenue_calc['Total-2019'])/ dfd19_f28_Revenue_calc['Total-2019'].sum()) * 100
dfd23_f28_RevenueEvolution_calc['Evolution-2023'] = dfd23_f28_RevenueEvolution_calc['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f28_RevenueEvolution_calc.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_RevenueEvolution_calc.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenue_calc_1_f28 = pd.DataFrame(pd.merge(dfd17_f28_Revenue_calc, dfd18_f28_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_2_f28 = pd.DataFrame(pd.merge(dfd19_f28_Revenue_calc, dfd21_f28_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_3_f28 = pd.DataFrame(pd.merge(dfd22_f28_Revenue_calc, dfd23_f28_Revenue_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_3_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M1_f28_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_1_f28, df_Revenue_calc_2_f28, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f28Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_M2_f28_Evolution = pd.DataFrame(pd.merge(df_Revenue_calc_M1_f28_Evolution, df_Revenue_calc_3_f28, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f28Evolution.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenue_calc_f28 = pd.DataFrame(pd.merge(df_Revenue_calc_M2_f28_Evolution, dfd23_f28_RevenueEvolution_calc, on = "TotalRegistrationsk1", how = "outer"))
#print(tab(df_Revenue_calc_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

ConcatFrames_REV_count_f1_f28 = [df_Revenue_calc_f1, df_Revenue_calc_f2, df_Revenue_calc_f3, df_Revenue_calc_f4,
                                df_Revenue_calc_f5, df_Revenue_calc_f6, df_Revenue_calc_f7, df_Revenue_calc_f8,
                                df_Revenue_calc_f9, df_Revenue_calc_f10, df_Revenue_calc_f11, df_Revenue_calc_f12,
                                 df_Revenue_calc_f13, df_Revenue_calc_f14, df_Revenue_calc_f15, df_Revenue_calc_f16,
                                 df_Revenue_calc_f17, df_Revenue_calc_f18, df_Revenue_calc_f19, df_Revenue_calc_f20,
                                 df_Revenue_calc_f21, df_Revenue_calc_f22, df_Revenue_calc_f23, df_Revenue_calc_f24,
                                 df_Revenue_calc_f25, df_Revenue_calc_f26, df_Revenue_calc_f27, df_Revenue_calc_f28]
Concat_REV_count_f1_f28 = pd.concat(ConcatFrames_REV_count_f1_f28)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dfd17_f28_Registrations_GRDel = pd.DataFrame(filtr_28_df17_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f28_Registrations_GRDel = dfd17_f28_Registrations_GRDel.fillna('Unknown')
dfd17_f28_Registrations_GRDel['Percent-2017'] = (dfd17_f28_Registrations_GRDel['Total-2017'] / df17GRdel_Registrations_count_GRDel['Total-2017'].sum()) * 100
dfd17_f28_Registrations_GRDel['Percent-2017'] = dfd17_f28_Registrations_GRDel['Percent-2017'].round(decimals=0)
dfd17_f28_Registrations_GRDel['7DEvolution-2017'] = dfd17_f28_Registrations_GRDel['Total-2017'] - dfd17_f27_Registrations_GRDel['Total-2017']
#print(tab(dfd17_f28_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f28_Registrations_GRDel = pd.DataFrame(filtr_28_df18_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f28_Registrations_GRDel = dfd18_f28_Registrations_GRDel.fillna('Unknown')
dfd18_f28_Registrations_GRDel['Percent-2018'] = (dfd18_f28_Registrations_GRDel['Total-2018'] / df18GRdel_Registrations_count_GRDel['Total-2018'].sum()) * 100
dfd18_f28_Registrations_GRDel['Percent-2018'] = dfd18_f28_Registrations_GRDel['Percent-2018'].round(decimals=0)
dfd18_f28_Registrations_GRDel['7DEvolution-2018'] = dfd18_f28_Registrations_GRDel['Total-2018'] - dfd18_f27_Registrations_GRDel['Total-2018']
#print(tab(dfd18_f28_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f28_Registrations_GRDel = pd.DataFrame(filtr_28_df19_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f28_Registrations_GRDel = dfd19_f28_Registrations_GRDel.fillna('Unknown')
dfd19_f28_Registrations_GRDel['Percent-2019'] = (dfd19_f28_Registrations_GRDel['Total-2019'] / df19GRdel_Registrations_count_GRDel['Total-2019'].sum()) * 100
dfd19_f28_Registrations_GRDel['Percent-2019'] = dfd19_f28_Registrations_GRDel['Percent-2019'].round(decimals=0)
dfd19_f28_Registrations_GRDel['7DEvolution-2019'] = dfd19_f28_Registrations_GRDel['Total-2019'] - dfd19_f27_Registrations_GRDel['Total-2019']
#print(tab(dfd19_f28_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f28_Registrations_GRDel = pd.DataFrame(filtr_28_df21_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f28_Registrations_GRDel = dfd21_f28_Registrations_GRDel.fillna('Unknown')
dfd21_f28_Registrations_GRDel['Percent-2021'] = (dfd21_f28_Registrations_GRDel['Total-2021'] / df21GRdel_Registrations_count_GRDel['Total-2021'].sum()) * 100
dfd21_f28_Registrations_GRDel['Percent-2021'] = dfd21_f28_Registrations_GRDel['Percent-2021'].round(decimals=0)
dfd21_f28_Registrations_GRDel['7DEvolution-2021'] = dfd21_f28_Registrations_GRDel['Total-2021'] - dfd21_f27_Registrations_GRDel['Total-2021']
#print(tab(dfd21_f28_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f28_Registrations_GRDel = pd.DataFrame(filtr_28_df22_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f28_Registrations_GRDel = dfd22_f28_Registrations_GRDel.fillna('Unknown')
dfd22_f28_Registrations_GRDel['Percent-2022'] = (dfd22_f28_Registrations_GRDel['Total-2022'] / df22GRdel_Registrations_count_GRDel['Total-2022'].sum()) * 100
dfd22_f28_Registrations_GRDel['Percent-2022'] = dfd22_f28_Registrations_GRDel['Percent-2022'].round(decimals=0)
dfd22_f28_Registrations_GRDel['7DEvolution-2022'] = dfd22_f28_Registrations_GRDel['Total-2022'] - dfd22_f27_Registrations_GRDel['Total-2022']
#print(tab(dfd22_f28_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_Registrations_GRDel = pd.DataFrame(filtr_28_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f28_Registrations_GRDel = dfd23_f28_Registrations_GRDel.fillna('Unknown')
dfd23_f28_Registrations_GRDel['Percent-2023'] = (dfd23_f28_Registrations_GRDel['Total-2023'] / df23GRdel_Registrations_count_GRDel['Total-2023'].sum()) * 100
dfd23_f28_Registrations_GRDel['Percent-2023'] = dfd23_f28_Registrations_GRDel['Percent-2023'].round(decimals=0)
dfd23_f28_Registrations_GRDel['7DEvolution-2023'] = dfd23_f28_Registrations_GRDel['Total-2023'] - dfd23_f27_Registrations_GRDel['Total-2023']
#print(tab(dfd23_f28_Registrations_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount

dfd23_f28_Registrations_Evol_GRDel = pd.DataFrame(filtr_28_df23_GRdel.groupby(['TotalRegistrationsg1'], dropna=False).size(), columns=['Performance-2023'])\
    .sort_values(['Performance-2023'], ascending=False).reset_index()
dfd23_f28_Registrations_Evol_GRDel = dfd23_f28_Registrations_Evol_GRDel.fillna('Unknown')
dfd23_f28_Registrations_Evol_GRDel['Evolution-2023'] = ((dfd23_f28_Registrations_GRDel['Total-2023'] - dfd19_f28_Registrations_GRDel['Total-2019'])/ dfd19_f28_Registrations_GRDel['Total-2019'].sum()) * 100
#print(tab(dfd23_f28_Registrations_Evol_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_Registrations_Evol_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge Total Registrations
#df_Registrations_GRDel_1_f28 = pd.concat([dfd17_f28_Registrations_GRDel, dfd18_f28_Registrations_GRDel], axis=1, join='outer')
df_Registrations_GRDel_1_f28 = pd.DataFrame(pd.merge(dfd17_f28_Registrations_GRDel, dfd18_f28_Registrations_GRDel, left_on='TotalRegistrationsg1', right_on='TotalRegistrationsg1', how = "outer"))
#print(tab(df_Registrations_GRDel_1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_2_f28 = pd.DataFrame(pd.merge(dfd19_f28_Registrations_GRDel, dfd21_f28_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_3_f28 = pd.DataFrame(pd.merge(dfd22_f28_Registrations_GRDel, dfd23_f28_Registrations_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_3_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_4_f28 = pd.DataFrame(pd.merge(df_Registrations_GRDel_1_f28, df_Registrations_GRDel_2_f28, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_28_f28 = pd.DataFrame(pd.merge(df_Registrations_GRDel_4_f28, df_Registrations_GRDel_3_f28, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_4_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f28 = pd.DataFrame(pd.merge(df_Registrations_GRDel_28_f28, dfd23_f28_Registrations_Evol_GRDel, on = "TotalRegistrationsg1", how = "outer"))
#print(tab(df_Registrations_GRDel_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Registrations_GRDel_f28 = df_Registrations_GRDel_f28[['TotalRegistrationsg1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                                       'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                             'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                              'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                              'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                             'Total-2023', 'Percent-2023', '7DEvolution-2023', 'Evolution-2023']]

ConcatFrames_RegGRDel_count_f1_f28 = [df_Registrations_GRDel_f1, df_Registrations_GRDel_f2, df_Registrations_GRDel_f3, df_Registrations_GRDel_f4,
                                     df_Registrations_GRDel_f5, df_Registrations_GRDel_f6, df_Registrations_GRDel_f7, df_Registrations_GRDel_f8,
                                     df_Registrations_GRDel_f9, df_Registrations_GRDel_f10, df_Registrations_GRDel_f11, df_Registrations_GRDel_f12,
                                      df_Registrations_GRDel_f13, df_Registrations_GRDel_f14, df_Registrations_GRDel_f15, df_Registrations_GRDel_f16,
                                      df_Registrations_GRDel_f17, df_Registrations_GRDel_f18, df_Registrations_GRDel_f19, df_Registrations_GRDel_f20,
                                      df_Registrations_GRDel_f21, df_Registrations_GRDel_f22, df_Registrations_GRDel_f23, df_Registrations_GRDel_f24,
                                      df_Registrations_GRDel_f25, df_Registrations_GRDel_f26, df_Registrations_GRDel_f27, df_Registrations_GRDel_f28]
Concat_RegGRDel_count_f1_f28 = pd.concat(ConcatFrames_RegGRDel_count_f1_f28)

#unit 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#Customer_Acquisition
df_NewCust_GRDel_df18_f28 = filtr_28_df18_GRdel[filtr_28_df18_GRdel['New customer'] == 1]
df_NewCust_GRDel_df19_f28 = filtr_28_df19_GRdel[filtr_28_df19_GRdel['New customer'] == 1]
df_NewCust_GRDel_df21_f28 = filtr_28_df21_GRdel[filtr_28_df21_GRdel['New customer'] == 1]
df_NewCust_GRDel_df22_f28 = filtr_28_df22_GRdel[filtr_28_df22_GRdel['New customer'] == 1]
df_NewCust_GRDel_df23_f28 = filtr_28_df23_GRdel[filtr_28_df23_GRdel['New customer'] == 1]

#print(tab(df_NewCust_GRDel_df18_f28.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df19_f28.head(10), headers='keys', tablefmt='psql', showindex=False))
#print(tab(df_NewCust_GRDel_df22_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_a28_AC_RT_GRDel = pd.DataFrame(filtr_28_df18_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()

dfd18_f28_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df18_f28.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2018'])\
    .sort_values(['ACQ-2018'], ascending=False).reset_index()
dfd18_f28_AC_RT_GRDel['Percent-2018'] = (dfd18_f28_AC_RT_GRDel['ACQ-2018'] / dfd18_f28_Registrations_GRDel['Total-2018'].sum()) * 100
dfd18_f28_AC_RT_GRDel['Percent-2018'] = dfd18_f28_AC_RT_GRDel['Percent-2018'].round(decimals=0)

dfd18_f28_AC_RT_GRDel['RET-2018'] = dfd18_a28_AC_RT_GRDel['Total-2018'] - dfd18_f28_AC_RT_GRDel['ACQ-2018']
dfd18_f28_AC_RT_GRDel['Percnt-2018'] = (dfd18_f28_AC_RT_GRDel['RET-2018'] / dfd18_a28_AC_RT_GRDel['Total-2018'].sum()) * 100
dfd18_f28_AC_RT_GRDel['Percnt-2018'] = dfd18_f28_AC_RT_GRDel['Percnt-2018'].round(decimals=0)
#print(tab(dfd18_f28_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_a28_AC_RT_GRDel = pd.DataFrame(filtr_28_df19_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()

dfd19_f28_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df19_f28.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2019'])\
    .sort_values(['ACQ-2019'], ascending=False).reset_index()
dfd19_f28_AC_RT_GRDel['Percent-2019'] = (dfd19_f28_AC_RT_GRDel['ACQ-2019'] / dfd19_f28_Registrations_GRDel['Total-2019'].sum()) * 100
dfd19_f28_AC_RT_GRDel['Percent-2019'] = dfd19_f28_AC_RT_GRDel['Percent-2019'].round(decimals=0)

dfd19_f28_AC_RT_GRDel['RET-2019'] = dfd19_a28_AC_RT_GRDel['Total-2019'] - dfd19_f28_AC_RT_GRDel['ACQ-2019']
dfd19_f28_AC_RT_GRDel['Percnt-2019'] = (dfd19_f28_AC_RT_GRDel['RET-2019'] / dfd19_a28_AC_RT_GRDel['Total-2019'].sum()) * 100
dfd19_f28_AC_RT_GRDel['Percnt-2019'] = dfd19_f28_AC_RT_GRDel['Percnt-2019'].round(decimals=0)
#print(tab(dfd19_f28_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_a28_AC_RT_GRDel = pd.DataFrame(filtr_28_df21_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()

dfd21_f28_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df21_f28.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2021'])\
    .sort_values(['ACQ-2021'], ascending=False).reset_index()
dfd21_f28_AC_RT_GRDel['Percent-2021'] = (dfd21_f28_AC_RT_GRDel['ACQ-2021'] / dfd21_f28_Registrations_GRDel['Total-2021'].sum()) * 100
dfd21_f28_AC_RT_GRDel['Percent-2021'] = dfd21_f28_AC_RT_GRDel['Percent-2021'].round(decimals=0)

dfd21_f28_AC_RT_GRDel['RET-2021'] = dfd21_a28_AC_RT_GRDel['Total-2021'] - dfd21_f28_AC_RT_GRDel['ACQ-2021']
dfd21_f28_AC_RT_GRDel['Percnt-2021'] = (dfd21_f28_AC_RT_GRDel['RET-2021'] / dfd21_a28_AC_RT_GRDel['Total-2021'].sum()) * 100
dfd21_f28_AC_RT_GRDel['Percnt-2021'] = dfd21_f28_AC_RT_GRDel['Percnt-2021'].round(decimals=0)
#print(tab(dfd21_f28_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_a28_AC_RT_GRDel = pd.DataFrame(filtr_28_df22_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()

dfd22_f28_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df22_f28.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2022'])\
    .sort_values(['ACQ-2022'], ascending=False).reset_index()
dfd22_f28_AC_RT_GRDel['Percent-2022'] = (dfd22_f28_AC_RT_GRDel['ACQ-2022'] / dfd22_f28_Registrations_GRDel['Total-2022'].sum()) * 100
dfd22_f28_AC_RT_GRDel['Percent-2022'] = dfd22_f28_AC_RT_GRDel['Percent-2022'].round(decimals=0)

dfd22_f28_AC_RT_GRDel['RET-2022'] = dfd22_a28_AC_RT_GRDel['Total-2022'] - dfd22_f28_AC_RT_GRDel['ACQ-2022']
dfd22_f28_AC_RT_GRDel['Percnt-2022'] = (dfd22_f28_AC_RT_GRDel['RET-2022'] / dfd22_a28_AC_RT_GRDel['Total-2022'].sum()) * 100
dfd22_f28_AC_RT_GRDel['Percnt-2022'] = dfd22_f28_AC_RT_GRDel['Percnt-2022'].round(decimals=0)
#print(tab(dfd22_f28_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_a28_AC_RT_GRDel = pd.DataFrame(filtr_28_df23_GRdel.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()

dfd23_f28_AC_RT_GRDel = pd.DataFrame(df_NewCust_GRDel_df23_f28.groupby(['TotalRegistrationsb1'], dropna=False).size(), columns=['ACQ-2023'])\
    .sort_values(['ACQ-2023'], ascending=False).reset_index()
dfd23_f28_AC_RT_GRDel['Percent-2023'] = (dfd23_f28_AC_RT_GRDel['ACQ-2023'] / dfd23_f28_Registrations_GRDel['Total-2023'].sum()) * 100
dfd23_f28_AC_RT_GRDel['Percent-2023'] = dfd23_f28_AC_RT_GRDel['Percent-2023'].round(decimals=0)

dfd23_f28_AC_RT_GRDel['RET-2023'] = dfd23_a28_AC_RT_GRDel['Total-2023'] - dfd23_f28_AC_RT_GRDel['ACQ-2023']
dfd23_f28_AC_RT_GRDel['Percnt-2023'] = (dfd23_f28_AC_RT_GRDel['RET-2023'] / dfd23_a28_AC_RT_GRDel['Total-2023'].sum()) * 100
dfd23_f28_AC_RT_GRDel['Percnt-2023'] = dfd23_f28_AC_RT_GRDel['Percnt-2023'].round(decimals=0)
#print(tab(dfd23_f28_AC_RT_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

# Merge Total Registrations
df_AC_ET_GRDel_1_f28 = pd.DataFrame(pd.merge_ordered(dfd18_a28_AC_RT_GRDel, dfd18_f28_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_2_f28 = pd.DataFrame(pd.merge_ordered(dfd19_a28_AC_RT_GRDel, dfd19_f28_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_3_f28 = pd.DataFrame(pd.merge_ordered(dfd21_a28_AC_RT_GRDel, dfd21_f28_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_3_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_4_f28 = pd.DataFrame(pd.merge_ordered(dfd22_a28_AC_RT_GRDel, dfd22_f28_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_ET_GRDel_28_f28 = pd.DataFrame(pd.merge_ordered(dfd23_a28_AC_RT_GRDel, dfd23_f28_AC_RT_GRDel, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_ET_GRDel_4_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M1_f28 = pd.DataFrame(pd.merge_ordered(df_AC_ET_GRDel_1_f28, df_AC_ET_GRDel_2_f28, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M2_f28 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M1_f28, df_AC_ET_GRDel_3_f28, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M3_f28 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M2_f28, df_AC_ET_GRDel_4_f28, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M3_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f28 = pd.DataFrame(pd.merge_ordered(df_AC_RT_GRDel_M3_f28, df_AC_ET_GRDel_28_f28, on = "TotalRegistrationsb1", how = "outer"))
#print(tab(df_AC_RT_GRDel_M4_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_AC_RT_GRDel_M4_f28 = df_AC_RT_GRDel_M4_f28[['TotalRegistrationsb1', 'Total-2018', 'ACQ-2018', 'Percent-2018', 'RET-2018', 'Percnt-2018',
                                             'Total-2019', 'ACQ-2019', 'Percent-2019', 'RET-2019', 'Percnt-2019',
                                              'Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021',
                                             'Total-2022', 'ACQ-2022', 'Percent-2022', 'RET-2022', 'Percnt-2022',
                                             'Total-2023', 'ACQ-2023', 'Percent-2023', 'RET-2023', 'Percnt-2023']]

ConcatFr_AC_RT_GRDel_f1_f28 = [df_AC_RT_GRDel_M4_f1, df_AC_RT_GRDel_M4_f2, df_AC_RT_GRDel_M4_f3, df_AC_RT_GRDel_M4_f4,
                              df_AC_RT_GRDel_M4_f5, df_AC_RT_GRDel_M4_f6, df_AC_RT_GRDel_M4_f7, df_AC_RT_GRDel_M4_f8,
                              df_AC_RT_GRDel_M4_f9, df_AC_RT_GRDel_M4_f10, df_AC_RT_GRDel_M4_f11, df_AC_RT_GRDel_M4_f12,
                               df_AC_RT_GRDel_M4_f13, df_AC_RT_GRDel_M4_f14, df_AC_RT_GRDel_M4_f15, df_AC_RT_GRDel_M4_f16,
                               df_AC_RT_GRDel_M4_f17, df_AC_RT_GRDel_M4_f18, df_AC_RT_GRDel_M4_f19, df_AC_RT_GRDel_M4_f20,
                               df_AC_RT_GRDel_M4_f21, df_AC_RT_GRDel_M4_f22, df_AC_RT_GRDel_M4_f23, df_AC_RT_GRDel_M4_f24,
                               df_AC_RT_GRDel_M4_f25, df_AC_RT_GRDel_M4_f26, df_AC_RT_GRDel_M4_f27, df_AC_RT_GRDel_M4_f28]
Conct_AC_RT_GRDel_f1_f28 = pd.concat(ConcatFr_AC_RT_GRDel_f1_f28)
#print(tab(Concat_ACQRET_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#unit 2!!!!!!!!!!!!!!!!!!!
#REVENUE CALCULATION
filtr_28_df17_GRdel = filtr_28_df17_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd17_f28_Revenu_GRDel = pd.DataFrame(filtr_28_df17_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2017'))
dfd17_f28_Revenu_GRDel['Percent-2017'] = (dfd17_f28_Revenu_GRDel['Total-2017'] / df17GRdel_Revenue_calc['Total-2017'].sum()) * 100
dfd17_f28_Revenu_GRDel['Percent-2017'] = dfd17_f28_Revenu_GRDel['Percent-2017'].round(decimals=0)
dfd17_f28_Revenu_GRDel['7DEvolution-2017'] = dfd17_f28_Revenu_GRDel['Total-2017'] - dfd17_f27_Revenu_GRDel['Total-2017']
#print(tab(dfd17_f28_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_28_df18_GRdel = filtr_28_df18_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd18_f28_Revenu_GRDel = pd.DataFrame(filtr_28_df18_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2018'))
dfd18_f28_Revenu_GRDel['Percent-2018'] = (dfd18_f28_Revenu_GRDel['Total-2018'] / df18GRdel_Revenue_calc['Total-2018'].sum()) * 100
dfd18_f28_Revenu_GRDel['Percent-2018'] = dfd18_f28_Revenu_GRDel['Percent-2018'].round(decimals=0)
dfd18_f28_Revenu_GRDel['7DEvolution-2018'] = dfd18_f28_Revenu_GRDel['Total-2018'] - dfd18_f27_Revenu_GRDel['Total-2018']
#print(tab(dfd18_f28_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_28_df19_GRdel = filtr_28_df19_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd19_f28_Revenu_GRDel = pd.DataFrame(filtr_28_df19_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2019'))
dfd19_f28_Revenu_GRDel['Percent-2019'] = (dfd19_f28_Revenu_GRDel['Total-2019'] / df19GRdel_Revenue_calc['Total-2019'].sum()) * 100
dfd19_f28_Revenu_GRDel['Percent-2019'] = dfd19_f28_Revenu_GRDel['Percent-2019'].round(decimals=0)
dfd19_f28_Revenu_GRDel['7DEvolution-2019'] = dfd19_f28_Revenu_GRDel['Total-2019'] - dfd19_f27_Revenu_GRDel['Total-2019']
#print(tab(dfd19_f28_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_28_df21_GRdel = filtr_28_df21_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd21_f28_Revenu_GRDel = pd.DataFrame(filtr_28_df21_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2021'))
dfd21_f28_Revenu_GRDel['Percent-2021'] = (dfd21_f28_Revenu_GRDel['Total-2021'] / df21GRdel_Revenue_calc['Total-2021'].sum()) * 100
dfd21_f28_Revenu_GRDel['Percent-2021'] = dfd21_f28_Revenu_GRDel['Percent-2021'].round(decimals=0)
dfd21_f28_Revenu_GRDel['7DEvolution-2021'] = dfd21_f28_Revenu_GRDel['Total-2021'] - dfd21_f27_Revenu_GRDel['Total-2021']
#print(tab(dfd21_f28_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_28_df22_GRdel = filtr_28_df22_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd22_f28_Revenu_GRDel = pd.DataFrame(filtr_28_df22_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2022'))
dfd22_f28_Revenu_GRDel['Percent-2022'] = (dfd22_f28_Revenu_GRDel['Total-2022'] / df22GRdel_Revenue_calc['Total-2022'].sum()) * 100
dfd22_f28_Revenu_GRDel['Percent-2022'] = dfd22_f28_Revenu_GRDel['Percent-2022'].round(decimals=0)
dfd22_f28_Revenu_GRDel['7DEvolution-2022'] = dfd22_f28_Revenu_GRDel['Total-2022'] - dfd22_f27_Revenu_GRDel['Total-2022']
#print(tab(dfd22_f28_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

filtr_28_df23_GRdel = filtr_28_df23_GRdel.drop_duplicates(subset=['Amount', 'No invoice'])
dfd23_f28_Revenu_GRDel = pd.DataFrame(filtr_28_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Total-2023'))
dfd23_f28_Revenu_GRDel['Percent-2023'] = (dfd23_f28_Revenu_GRDel['Total-2023'] / df23GRdel_Revenue_calc['Total-2023'].sum()) * 100
dfd23_f28_Revenu_GRDel['Percent-2023'] = dfd23_f28_Revenu_GRDel['Percent-2023'].round(decimals=0)
dfd23_f28_Revenu_GRDel['7DEvolution-2023'] = dfd23_f28_Revenu_GRDel['Total-2023'] - dfd23_f27_Revenu_GRDel['Total-2023']
#print(tab(dfd23_f28_Revenu_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

#EvolutionCount
dfd23_f28_Revenu_Evlt_GRDel = pd.DataFrame(filtr_28_df23_GRdel.groupby('TotalRegistrationsl1')['Amount'].sum().reset_index(name ='Performance-2023'))
dfd23_f28_Revenu_Evlt_GRDel['Evolution-2023'] = ((dfd23_f28_Revenu_GRDel['Total-2023'] - dfd19_f28_Revenu_GRDel['Total-2019'])/ dfd19_f28_Revenu_GRDel['Total-2019'].sum()) * 100
dfd23_f28_Revenu_Evlt_GRDel['Evolution-2023'] = dfd23_f28_Revenu_Evlt_GRDel['Evolution-2023'].round(decimals=0)
#print(tab(dfd23_f28_Revenu_Evlt_GRDel.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_Revenu_Evlt_GRDel.drop('Performance-2023', axis=1, inplace=True)

# Merge REVENUE
df_Revenu_GRDel_1_f28 = pd.DataFrame(pd.merge(dfd17_f28_Revenu_GRDel, dfd18_f28_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_2_f28 = pd.DataFrame(pd.merge(dfd19_f28_Revenu_GRDel, dfd21_f28_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_3_f28 = pd.DataFrame(pd.merge(dfd22_f28_Revenu_GRDel, dfd23_f28_Revenu_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_3_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_4_f28 = pd.DataFrame(pd.merge(df_Revenu_GRDel_1_f28, df_Revenu_GRDel_2_f28, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_28_f28 = pd.DataFrame(pd.merge(df_Revenu_GRDel_4_f28, df_Revenu_GRDel_3_f28, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_4_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f28 = pd.DataFrame(pd.merge(df_Revenu_GRDel_28_f28, dfd23_f28_Revenu_Evlt_GRDel, on = "TotalRegistrationsl1", how = "outer"))
#print(tab(df_Revenu_GRDel_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Revenu_GRDel_f28 = df_Revenu_GRDel_f28[['TotalRegistrationsl1', 'Total-2017', 'Percent-2017', '7DEvolution-2017',
                                             'Total-2018', 'Percent-2018', '7DEvolution-2018',
                                            'Total-2019', 'Percent-2019', '7DEvolution-2019',
                                            'Total-2021', 'Percent-2021', '7DEvolution-2021',
                                             'Total-2022', 'Percent-2022', '7DEvolution-2022',
                                         'Total-2023', 'Percent-2023', '7DEvolution-2023','Evolution-2023']]

ConcatFra_RV_GRDel_f1_f28 = [df_Revenu_GRDel_f1, df_Revenu_GRDel_f2, df_Revenu_GRDel_f3, df_Revenu_GRDel_f4,
                            df_Revenu_GRDel_f5, df_Revenu_GRDel_f6, df_Revenu_GRDel_f7, df_Revenu_GRDel_f8,
                            df_Revenu_GRDel_f9, df_Revenu_GRDel_f10, df_Revenu_GRDel_f11, df_Revenu_GRDel_f12,
                             df_Revenu_GRDel_f13, df_Revenu_GRDel_f14, df_Revenu_GRDel_f15, df_Revenu_GRDel_f16,
                             df_Revenu_GRDel_f17, df_Revenu_GRDel_f18, df_Revenu_GRDel_f19, df_Revenu_GRDel_f20,
                             df_Revenu_GRDel_f21, df_Revenu_GRDel_f22, df_Revenu_GRDel_f23, df_Revenu_GRDel_f24,
                             df_Revenu_GRDel_f25, df_Revenu_GRDel_f26, df_Revenu_GRDel_f27, df_Revenu_GRDel_f28]
Conct_RV_GRDel_f1_f28 = pd.concat(ConcatFra_RV_GRDel_f1_f28)
#print(tab(Concat_REV_count_f1f2.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
#COUNT PROFILE
dfd17_f28_Profile_count = pd.DataFrame(filtr_28_concatdf_17.groupby(['Profile'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f28_Profile_count = dfd17_f28_Profile_count.fillna('Unknown')
dfd17_f28_Profile_count['Percent-2017'] = (dfd17_f28_Profile_count['Total-2017'] / dfd17_f28_Profile_count['Total-2017'].sum()) * 100
dfd17_f28_Profile_count['Percent-2017'] = dfd17_f28_Profile_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f28_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f28_Profile_count = pd.DataFrame(filtr_28_concatdf_18.groupby(['Profile'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f28_Profile_count = dfd18_f28_Profile_count.fillna('Unknown')
dfd18_f28_Profile_count['Percent-2018'] = (dfd18_f28_Profile_count['Total-2018'] / dfd18_f28_Profile_count['Total-2018'].sum()) * 100
dfd18_f28_Profile_count['Percent-2018'] = dfd18_f28_Profile_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f28_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f28_Profile_count = pd.DataFrame(filtr_28_concatdf_19.groupby(['Profile'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f28_Profile_count = dfd19_f28_Profile_count.fillna('Unknown')
dfd19_f28_Profile_count['Percent-2019'] = (dfd19_f28_Profile_count['Total-2019'] / dfd19_f28_Profile_count['Total-2019'].sum()) * 100
dfd19_f28_Profile_count['Percent-2019'] = dfd19_f28_Profile_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f28_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f28_Profile_count = pd.DataFrame(filtr_28_concatdf_21.groupby(['Profile'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f28_Profile_count = dfd21_f28_Profile_count.fillna('Unknown')
dfd21_f28_Profile_count['Percent-2021'] = (dfd21_f28_Profile_count['Total-2021'] / dfd21_f28_Profile_count['Total-2021'].sum()) * 100
dfd21_f28_Profile_count['Percent-2021'] = dfd21_f28_Profile_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f28_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f28_Profile_count = pd.DataFrame(filtr_28_concatdf_22.groupby(['Profile'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f28_Profile_count = dfd22_f28_Profile_count.fillna('Unknown')
dfd22_f28_Profile_count['Percent-2022'] = (dfd22_f28_Profile_count['Total-2022'] / dfd22_f28_Profile_count['Total-2022'].sum()) * 100
dfd22_f28_Profile_count['Percent-2022'] = dfd22_f28_Profile_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f28_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_Profile_count = pd.DataFrame(filtr_28_concatdf_23.groupby(['Profile'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f28_Profile_count = dfd23_f28_Profile_count.fillna('Unknown')
dfd23_f28_Profile_count['Percent-2023'] = (dfd23_f28_Profile_count['Total-2023'] / dfd23_f28_Profile_count['Total-2023'].sum()) * 100
dfd23_f28_Profile_count['Percent-2023'] = dfd23_f28_Profile_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f28_Profile_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Profile_count
df_Profile_Count_1_f28 = pd.DataFrame(pd.merge(dfd17_f28_Profile_count, dfd18_f28_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_2_f28 = pd.DataFrame(pd.merge(dfd19_f28_Profile_count, dfd21_f28_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_3_f28 = pd.DataFrame(pd.merge(dfd22_f28_Profile_count, dfd23_f28_Profile_count, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_3_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m1_f28 = pd.DataFrame(pd.merge(df_Profile_Count_1_f28, df_Profile_Count_2_f28, on = "Profile", how = "outer"))
#print(tab(df_Profile_Count_m1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Profile_Count_m2_f28 = pd.DataFrame(pd.merge(df_Profile_Count_m1_f28, df_Profile_Count_3_f28, on = "Profile", how = "outer"))

#print(tab(df_Profile_Count_m2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Profile_Count_m2_f28 = df_Profile_Count_m2_f28.append(df_Profile_Count_m2_f28.sum(numeric_only=True), ignore_index=True)
df_Profile_Count_m2_f28['Profile'].fillna('Total', inplace=True)

#print(tab(df_Profile_Count_m2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

#pass count
dfd17_f28_Pass_count = pd.DataFrame(filtr_28_concatdf_17.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f28_Pass_count = dfd17_f28_Pass_count.fillna('Unknown')
dfd17_f28_Pass_count['Percent-2017'] = (dfd17_f28_Pass_count['Total-2017'] / dfd17_f28_Pass_count['Total-2017'].sum()) * 100
dfd17_f28_Pass_count['Percent-2017'] = dfd17_f28_Pass_count['Percent-2017'].round(decimals=0)

dfd18_f28_Pass_count = pd.DataFrame(filtr_28_concatdf_18.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f28_Pass_count = dfd18_f28_Pass_count.fillna('Unknown')
dfd18_f28_Pass_count['Percent-2018'] = (dfd18_f28_Pass_count['Total-2018'] / dfd18_f28_Pass_count['Total-2018'].sum()) * 100
dfd18_f28_Pass_count['Percent-2018'] = dfd18_f28_Pass_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f28_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f28_Pass_count = pd.DataFrame(filtr_28_concatdf_19.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f28_Pass_count = dfd19_f28_Pass_count.fillna('Unknown')
dfd19_f28_Pass_count['Percent-2019'] = (dfd19_f28_Pass_count['Total-2019'] / dfd19_f28_Pass_count['Total-2019'].sum()) * 100
dfd19_f28_Pass_count['Percent-2019'] = dfd19_f28_Pass_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f28_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f28_Pass_count = pd.DataFrame(filtr_28_concatdf_21.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f28_Pass_count = dfd21_f28_Pass_count.fillna('Unknown')
dfd21_f28_Pass_count['Percent-2021'] = (dfd21_f28_Pass_count['Total-2021'] / dfd21_f28_Pass_count['Total-2021'].sum()) * 100
dfd21_f28_Pass_count['Percent-2021'] = dfd21_f28_Pass_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f28_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f28_Pass_count = pd.DataFrame(filtr_28_concatdf_22.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f28_Pass_count = dfd22_f28_Pass_count.fillna('Unknown')
dfd22_f28_Pass_count['Percent-2022'] = (dfd22_f28_Pass_count['Total-2022'] / dfd22_f28_Pass_count['Total-2022'].sum()) * 100
dfd22_f28_Pass_count['Percent-2022'] = dfd22_f28_Pass_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f28_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_Pass_count = pd.DataFrame(filtr_28_concatdf_23.groupby(['Pass Name'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f28_Pass_count = dfd23_f28_Pass_count.fillna('Unknown')
dfd23_f28_Pass_count['Percent-2023'] = (dfd23_f28_Pass_count['Total-2023'] / dfd23_f28_Pass_count['Total-2023'].sum()) * 100
dfd23_f28_Pass_count['Percent-2023'] = dfd23_f28_Pass_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f28_Pass_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Pass_count
df_Pass_Count_1_f28 = pd.DataFrame(pd.merge(dfd17_f28_Pass_count, dfd18_f28_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_2_f28 = pd.DataFrame(pd.merge(dfd19_f28_Pass_count, dfd21_f28_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_3_f28 = pd.DataFrame(pd.merge(dfd22_f28_Pass_count, dfd23_f28_Pass_count, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m1_f28 = pd.DataFrame(pd.merge(df_Pass_Count_1_f28, df_Pass_Count_2_f28, on = "Pass Name", how = "outer"))
#print(tab(df_Pass_Count_m1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Pass_Count_m2_f28 = pd.DataFrame(pd.merge(df_Pass_Count_m1_f28, df_Pass_Count_3_f28, on = "Pass Name", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Pass_Count_m2_f28 = df_Pass_Count_m2_f28.append(df_Pass_Count_m2_f28.sum(numeric_only=True), ignore_index=True)
df_Pass_Count_m2_f28['Pass Name'].fillna('Total', inplace=True)
#print(tab(df_Pass_Count_m2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

# COUNT ATTENDEES COUNTRY
dfd17_f28_Attendees_Country_count = pd.DataFrame(filtr_28_concatdf_17.groupby(['Country'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f28_Attendees_Country_count = dfd17_f28_Attendees_Country_count.fillna('Unknown')
dfd17_f28_Attendees_Country_count['Percent-2017'] = (dfd17_f28_Attendees_Country_count['Total-2017'] / dfd17_f28_Attendees_Country_count['Total-2017'].sum()) * 100
dfd17_f28_Attendees_Country_count['Percent-2017'] = dfd17_f28_Attendees_Country_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f28_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f28_Attendees_Country_count = pd.DataFrame(filtr_28_concatdf_18.groupby(['Country'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f28_Attendees_Country_count = dfd18_f28_Attendees_Country_count.fillna('Unknown')
dfd18_f28_Attendees_Country_count['Percent-2018'] = (dfd18_f28_Attendees_Country_count['Total-2018'] / dfd18_f28_Attendees_Country_count['Total-2018'].sum()) * 100
dfd18_f28_Attendees_Country_count['Percent-2018'] = dfd18_f28_Attendees_Country_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f28_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f28_Attendees_Country_count = pd.DataFrame(filtr_28_concatdf_19.groupby(['Country'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f28_Attendees_Country_count = dfd19_f28_Attendees_Country_count.fillna('Unknown')
dfd19_f28_Attendees_Country_count['Percent-2019'] = (dfd19_f28_Attendees_Country_count['Total-2019'] / dfd19_f28_Attendees_Country_count['Total-2019'].sum()) * 100
dfd19_f28_Attendees_Country_count['Percent-2019'] = dfd19_f28_Attendees_Country_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f28_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f28_Attendees_Country_count = pd.DataFrame(filtr_28_concatdf_21.groupby(['Country'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f28_Attendees_Country_count = dfd21_f28_Attendees_Country_count.fillna('Unknown')
dfd21_f28_Attendees_Country_count['Percent-2021'] = (dfd21_f28_Attendees_Country_count['Total-2021'] / dfd21_f28_Attendees_Country_count['Total-2021'].sum()) * 100
dfd21_f28_Attendees_Country_count['Percent-2021'] = dfd21_f28_Attendees_Country_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f28_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f28_Attendees_Country_count = pd.DataFrame(filtr_28_concatdf_22.groupby(['Country'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f28_Attendees_Country_count = dfd22_f28_Attendees_Country_count.fillna('Unknown')
dfd22_f28_Attendees_Country_count['Percent-2022'] = (dfd22_f28_Attendees_Country_count['Total-2022'] / dfd22_f28_Attendees_Country_count['Total-2022'].sum()) * 100
dfd22_f28_Attendees_Country_count['Percent-2022'] = dfd22_f28_Attendees_Country_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f28_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_Attendees_Country_count = pd.DataFrame(filtr_28_concatdf_23.groupby(['Country'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f28_Attendees_Country_count = dfd23_f28_Attendees_Country_count.fillna('Unknown')
dfd23_f28_Attendees_Country_count['Percent-2023'] = (dfd23_f28_Attendees_Country_count['Total-2023'] / dfd23_f28_Attendees_Country_count['Total-2023'].sum()) * 100
dfd23_f28_Attendees_Country_count['Percent-2023'] = dfd23_f28_Attendees_Country_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f28_Attendees_Country_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Attendees_Country_Count1f1
dfAttendees_Country_Count_1_f28 = pd.DataFrame(pd.merge(dfd17_f28_Attendees_Country_count, dfd18_f28_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_2_f28 = pd.DataFrame(pd.merge(dfd19_f28_Attendees_Country_count, dfd21_f28_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_3_f28 = pd.DataFrame(pd.merge(dfd22_f28_Attendees_Country_count, dfd23_f28_Attendees_Country_count, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m1_f28 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_1_f28, dfAttendees_Country_Count_2_f28, on = "Country", how = "outer"))
#print(tab(dfAttendees_Country_Count_m1_f28.head(20), headers='keys', tablefmt='psql', showindex=False))

dfAttendees_Country_Count_m2_f28 = pd.DataFrame(pd.merge(dfAttendees_Country_Count_m1_f28, dfAttendees_Country_Count_3_f28, on = "Country", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

dfAttendees_Country_Count_m2_f28 = dfAttendees_Country_Count_m2_f28.append(dfAttendees_Country_Count_m2_f28.sum(numeric_only=True), ignore_index=True)
dfAttendees_Country_Count_m2_f28['Country'].fillna('Total', inplace=True)

# COUNT ATTENDEES AREAS
dfd17_f28_ATTENDEES_AREAS_count = pd.DataFrame(filtr_28_concatdf_17.groupby(['Area'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f28_ATTENDEES_AREAS_count = dfd17_f28_ATTENDEES_AREAS_count.fillna('Unknown')
dfd17_f28_ATTENDEES_AREAS_count['Percent-2017'] = (dfd17_f28_ATTENDEES_AREAS_count['Total-2017'] / dfd17_f28_ATTENDEES_AREAS_count['Total-2017'].sum()) * 100
dfd17_f28_ATTENDEES_AREAS_count['Percent-2017'] = dfd17_f28_ATTENDEES_AREAS_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f28_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f28_ATTENDEES_AREAS_count = pd.DataFrame(filtr_28_concatdf_18.groupby(['Area'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f28_ATTENDEES_AREAS_count = dfd18_f28_ATTENDEES_AREAS_count.fillna('Unknown')
dfd18_f28_ATTENDEES_AREAS_count['Percent-2018'] = (dfd18_f28_ATTENDEES_AREAS_count['Total-2018'] / dfd18_f28_ATTENDEES_AREAS_count['Total-2018'].sum()) * 100
dfd18_f28_ATTENDEES_AREAS_count['Percent-2018'] = dfd18_f28_ATTENDEES_AREAS_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f28_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f28_ATTENDEES_AREAS_count = pd.DataFrame(filtr_28_concatdf_19.groupby(['Area'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f28_ATTENDEES_AREAS_count = dfd19_f28_ATTENDEES_AREAS_count.fillna('Unknown')
dfd19_f28_ATTENDEES_AREAS_count['Percent-2019'] = (dfd19_f28_ATTENDEES_AREAS_count['Total-2019'] / dfd19_f28_ATTENDEES_AREAS_count['Total-2019'].sum()) * 100
dfd19_f28_ATTENDEES_AREAS_count['Percent-2019'] = dfd19_f28_ATTENDEES_AREAS_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f28_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f28_ATTENDEES_AREAS_count = pd.DataFrame(filtr_28_concatdf_21.groupby(['Area'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f28_ATTENDEES_AREAS_count = dfd21_f28_ATTENDEES_AREAS_count.fillna('Unknown')
dfd21_f28_ATTENDEES_AREAS_count['Percent-2021'] = (dfd21_f28_ATTENDEES_AREAS_count['Total-2021'] / dfd21_f28_ATTENDEES_AREAS_count['Total-2021'].sum()) * 100
dfd21_f28_ATTENDEES_AREAS_count['Percent-2021'] = dfd21_f28_ATTENDEES_AREAS_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f28_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f28_ATTENDEES_AREAS_count = pd.DataFrame(filtr_28_concatdf_22.groupby(['Area'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f28_ATTENDEES_AREAS_count = dfd22_f28_ATTENDEES_AREAS_count.fillna('Unknown')
dfd22_f28_ATTENDEES_AREAS_count['Percent-2022'] = (dfd22_f28_ATTENDEES_AREAS_count['Total-2022'] / dfd22_f28_ATTENDEES_AREAS_count['Total-2022'].sum()) * 100
dfd22_f28_ATTENDEES_AREAS_count['Percent-2022'] = dfd22_f28_ATTENDEES_AREAS_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f28_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_ATTENDEES_AREAS_count = pd.DataFrame(filtr_28_concatdf_23.groupby(['Area'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f28_ATTENDEES_AREAS_count = dfd23_f28_ATTENDEES_AREAS_count.fillna('Unknown')
dfd23_f28_ATTENDEES_AREAS_count['Percent-2023'] = (dfd23_f28_ATTENDEES_AREAS_count['Total-2023'] / dfd23_f28_ATTENDEES_AREAS_count['Total-2023'].sum()) * 100
dfd23_f28_ATTENDEES_AREAS_count['Percent-2023'] = dfd23_f28_ATTENDEES_AREAS_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f28_ATTENDEES_AREAS_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_ATTENDEES_AREAS_count
df_ATTENDEES_AREAS_count_1_f28 = pd.DataFrame(pd.merge(dfd17_f28_ATTENDEES_AREAS_count, dfd18_f28_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_2_f28 = pd.DataFrame(pd.merge(dfd19_f28_ATTENDEES_AREAS_count, dfd21_f28_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_3_f28 = pd.DataFrame(pd.merge(dfd22_f28_ATTENDEES_AREAS_count, dfd23_f28_ATTENDEES_AREAS_count, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_3_f28.head(10), headers='keys', tablefmt='psql', showindex=False)

df_ATTENDEES_AREAS_count_m1_f28 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_1_f28, df_ATTENDEES_AREAS_count_2_f28, on = "Area", how = "outer"))
#print(tab(df_ATTENDEES_AREAS_count_m1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_ATTENDEES_AREAS_count_m2_f28 = pd.DataFrame(pd.merge(df_ATTENDEES_AREAS_count_m1_f28, df_ATTENDEES_AREAS_count_3_f28, on = "Area", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_ATTENDEES_AREAS_count_m2_f28 = df_ATTENDEES_AREAS_count_m2_f28.append(df_ATTENDEES_AREAS_count_m2_f28.sum(numeric_only=True), ignore_index=True)
df_ATTENDEES_AREAS_count_m2_f28['Area'].fillna('Total', inplace=True)

# COUNT ATTENDEES SPECIALTY
dfd17_f28_Attendees_Specialty_count = pd.DataFrame(filtr_28_concatdf_17.groupby(['Specialty'], dropna=False).size(), columns=['Total-2017'])\
    .sort_values(['Total-2017'], ascending=False).reset_index()
dfd17_f28_Attendees_Specialty_count = dfd17_f28_Attendees_Specialty_count.fillna('Unknown')
dfd17_f28_Attendees_Specialty_count['Percent-2017'] = (dfd17_f28_Attendees_Specialty_count['Total-2017'] / dfd17_f28_Attendees_Specialty_count['Total-2017'].sum()) * 100
dfd17_f28_Attendees_Specialty_count['Percent-2017'] = dfd17_f28_Attendees_Specialty_count['Percent-2017'].round(decimals=0)
#print(tab(dfd17_f28_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd18_f28_Attendees_Specialty_count = pd.DataFrame(filtr_28_concatdf_18.groupby(['Specialty'], dropna=False).size(), columns=['Total-2018'])\
    .sort_values(['Total-2018'], ascending=False).reset_index()
dfd18_f28_Attendees_Specialty_count = dfd18_f28_Attendees_Specialty_count.fillna('Unknown')
dfd18_f28_Attendees_Specialty_count['Percent-2018'] = (dfd18_f28_Attendees_Specialty_count['Total-2018'] / dfd18_f28_Attendees_Specialty_count['Total-2018'].sum()) * 100
dfd18_f28_Attendees_Specialty_count['Percent-2018'] = dfd18_f28_Attendees_Specialty_count['Percent-2018'].round(decimals=0)
#print(tab(dfd18_f28_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd19_f28_Attendees_Specialty_count = pd.DataFrame(filtr_28_concatdf_19.groupby(['Specialty'], dropna=False).size(), columns=['Total-2019'])\
    .sort_values(['Total-2019'], ascending=False).reset_index()
dfd19_f28_Attendees_Specialty_count = dfd19_f28_Attendees_Specialty_count.fillna('Unknown')
dfd19_f28_Attendees_Specialty_count['Percent-2019'] = (dfd19_f28_Attendees_Specialty_count['Total-2019'] / dfd19_f28_Attendees_Specialty_count['Total-2019'].sum()) * 100
dfd19_f28_Attendees_Specialty_count['Percent-2019'] = dfd19_f28_Attendees_Specialty_count['Percent-2019'].round(decimals=0)
#print(tab(dfd19_f28_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd21_f28_Attendees_Specialty_count = pd.DataFrame(filtr_28_concatdf_21.groupby(['Specialty'], dropna=False).size(), columns=['Total-2021'])\
    .sort_values(['Total-2021'], ascending=False).reset_index()
dfd21_f28_Attendees_Specialty_count = dfd21_f28_Attendees_Specialty_count.fillna('Unknown')
dfd21_f28_Attendees_Specialty_count['Percent-2021'] = (dfd21_f28_Attendees_Specialty_count['Total-2021'] / dfd21_f28_Attendees_Specialty_count['Total-2021'].sum()) * 100
dfd21_f28_Attendees_Specialty_count['Percent-2021'] = dfd21_f28_Attendees_Specialty_count['Percent-2021'].round(decimals=0)
#print(tab(dfd21_f28_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd22_f28_Attendees_Specialty_count = pd.DataFrame(filtr_28_concatdf_22.groupby(['Specialty'], dropna=False).size(), columns=['Total-2022'])\
    .sort_values(['Total-2022'], ascending=False).reset_index()
dfd22_f28_Attendees_Specialty_count = dfd22_f28_Attendees_Specialty_count.fillna('Unknown')
dfd22_f28_Attendees_Specialty_count['Percent-2022'] = (dfd22_f28_Attendees_Specialty_count['Total-2022'] / dfd22_f28_Attendees_Specialty_count['Total-2022'].sum()) * 100
dfd22_f28_Attendees_Specialty_count['Percent-2022'] = dfd22_f28_Attendees_Specialty_count['Percent-2022'].round(decimals=0)
#print(tab(dfd22_f28_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

dfd23_f28_Attendees_Specialty_count = pd.DataFrame(filtr_28_concatdf_23.groupby(['Specialty'], dropna=False).size(), columns=['Total-2023'])\
    .sort_values(['Total-2023'], ascending=False).reset_index()
dfd23_f28_Attendees_Specialty_count = dfd23_f28_Attendees_Specialty_count.fillna('Unknown')
dfd23_f28_Attendees_Specialty_count['Percent-2023'] = (dfd23_f28_Attendees_Specialty_count['Total-2023'] / dfd23_f28_Attendees_Specialty_count['Total-2023'].sum()) * 100
dfd23_f28_Attendees_Specialty_count['Percent-2023'] = dfd23_f28_Attendees_Specialty_count['Percent-2023'].round(decimals=0)
#print(tab(dfd23_f28_Attendees_Specialty_count.head(10), headers='keys', tablefmt='psql', showindex=False))

#Merge_Specialty_count
df_Specialty_count_1_f28 = pd.DataFrame(pd.merge(dfd17_f28_Attendees_Specialty_count, dfd18_f28_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_2_f28 = pd.DataFrame(pd.merge(dfd19_f28_Attendees_Specialty_count, dfd21_f28_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_3_f28 = pd.DataFrame(pd.merge(dfd22_f28_Attendees_Specialty_count, dfd23_f28_Attendees_Specialty_count, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m1_f28 = pd.DataFrame(pd.merge(df_Specialty_count_1_f28, df_Specialty_count_2_f28, on = "Specialty", how = "outer"))
#print(tab(df_Specialty_count_m2_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

df_Specialty_count_m2_f28 = pd.DataFrame(pd.merge(df_Specialty_count_m1_f28, df_Specialty_count_3_f28, on = "Specialty", how = "outer"))

#INSERTING THE TOTAL ROW AT THE LAST OF THE EXCEL TABLE

df_Specialty_count_m2_f28 = df_Specialty_count_m2_f28.append(df_Specialty_count_m2_f28.sum(numeric_only=True), ignore_index=True)
df_Specialty_count_m2_f28['Specialty'].fillna('Total', inplace=True)

#Excel Filters(Largest to smallest)
#dff1 - INDIVIDUALS
Concat_Registrations_count_f1_f28['Total-2017'] = pd.to_numeric(Concat_Registrations_count_f1_f28['Total-2017'],errors='coerce')
Concat_Registrations_count_f1_f28 = Concat_Registrations_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f28['Total-2017'] = Concat_Registrations_count_f1_f28['Total-2017'].astype(int)
Concat_Registrations_count_f1_f28['Percent-2017'] = Concat_Registrations_count_f1_f28['Percent-2017'].astype(float)
Concat_Registrations_count_f1_f28['7DEvolution-2017'] = Concat_Registrations_count_f1_f28['7DEvolution-2017'].astype(int)

Concat_Registrations_count_f1_f28['Total-2018'] = pd.to_numeric(Concat_Registrations_count_f1_f28['Total-2018'],errors='coerce')
Concat_Registrations_count_f1_f28 = Concat_Registrations_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f28['Total-2018'] = Concat_Registrations_count_f1_f28['Total-2018'].astype(int)
Concat_Registrations_count_f1_f28['Percent-2018'] = Concat_Registrations_count_f1_f28['Percent-2018'].astype(float)
Concat_Registrations_count_f1_f28['7DEvolution-2018'] = Concat_Registrations_count_f1_f28['7DEvolution-2018'].astype(int)

Concat_Registrations_count_f1_f28['Total-2019'] = pd.to_numeric(Concat_Registrations_count_f1_f28['Total-2019'],errors='coerce')
Concat_Registrations_count_f1_f28 = Concat_Registrations_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f28['Total-2019'] = Concat_Registrations_count_f1_f28['Total-2019'].astype(int)
Concat_Registrations_count_f1_f28['Percent-2019'] = Concat_Registrations_count_f1_f28['Percent-2019'].astype(float)
Concat_Registrations_count_f1_f28['7DEvolution-2019'] = Concat_Registrations_count_f1_f28['7DEvolution-2019'].astype(int)

Concat_Registrations_count_f1_f28['Total-2021'] = pd.to_numeric(Concat_Registrations_count_f1_f28['Total-2021'],errors='coerce')
Concat_Registrations_count_f1_f28 = Concat_Registrations_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f28['Total-2021'] = Concat_Registrations_count_f1_f28['Total-2021'].astype(int)
Concat_Registrations_count_f1_f28['Percent-2021'] = Concat_Registrations_count_f1_f28['Percent-2021'].astype(float)
Concat_Registrations_count_f1_f28['7DEvolution-2021'] = Concat_Registrations_count_f1_f28['7DEvolution-2021'].astype(int)

Concat_Registrations_count_f1_f28['Total-2022'] = pd.to_numeric(Concat_Registrations_count_f1_f28['Total-2022'],errors='coerce')
Concat_Registrations_count_f1_f28 = Concat_Registrations_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f28['Total-2022'] = Concat_Registrations_count_f1_f28['Total-2022'].astype(int)
Concat_Registrations_count_f1_f28['Percent-2022'] = Concat_Registrations_count_f1_f28['Percent-2022'].astype(float)
Concat_Registrations_count_f1_f28['7DEvolution-2022'] = Concat_Registrations_count_f1_f28['7DEvolution-2022'].astype(int)

Concat_Registrations_count_f1_f28['Total-2023'] = pd.to_numeric(Concat_Registrations_count_f1_f28['Total-2023'],errors='coerce')
Concat_Registrations_count_f1_f28 = Concat_Registrations_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_Registrations_count_f1_f28['Total-2023'] = Concat_Registrations_count_f1_f28['Total-2023'].astype(int)
Concat_Registrations_count_f1_f28['Percent-2023'] = Concat_Registrations_count_f1_f28['Percent-2023'].astype(float)
Concat_Registrations_count_f1_f28['7DEvolution-2023'] = Concat_Registrations_count_f1_f28['7DEvolution-2023'].astype(int)

#dff1 - INDIVIDUALS
Concat_ACQRET_count_f1_f28['Total-2018'] = pd.to_numeric(Concat_ACQRET_count_f1_f28['Total-2018'],errors='coerce')
Concat_ACQRET_count_f1_f28 = Concat_ACQRET_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f28['Total-2018'] = Concat_ACQRET_count_f1_f28['Total-2018'].astype(int)
Concat_ACQRET_count_f1_f28['ACQ-2018'] = Concat_ACQRET_count_f1_f28['ACQ-2018'].astype(int)
Concat_ACQRET_count_f1_f28['Percent-2018'] = Concat_ACQRET_count_f1_f28['Percent-2018'].astype(float)
Concat_ACQRET_count_f1_f28['RET-2018'] = Concat_ACQRET_count_f1_f28['RET-2018'].astype(int)
Concat_ACQRET_count_f1_f28['Percnt-2018'] = Concat_ACQRET_count_f1_f28['Percnt-2018'].astype(float)

Concat_ACQRET_count_f1_f28['Total-2019'] = pd.to_numeric(Concat_ACQRET_count_f1_f28['Total-2019'],errors='coerce')
Concat_ACQRET_count_f1_f28 = Concat_ACQRET_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f28['Total-2019'] = Concat_ACQRET_count_f1_f28['Total-2019'].astype(int)
Concat_ACQRET_count_f1_f28['ACQ-2019'] = Concat_ACQRET_count_f1_f28['ACQ-2019'].astype(int)
Concat_ACQRET_count_f1_f28['Percent-2019'] = Concat_ACQRET_count_f1_f28['Percent-2019'].astype(float)
Concat_ACQRET_count_f1_f28['RET-2019'] = Concat_ACQRET_count_f1_f28['RET-2019'].astype(int)
Concat_ACQRET_count_f1_f28['Percnt-2019'] = Concat_ACQRET_count_f1_f28['Percnt-2019'].astype(float)

Concat_ACQRET_count_f1_f28['Total-2021'] = pd.to_numeric(Concat_ACQRET_count_f1_f28['Total-2021'],errors='coerce')
Concat_ACQRET_count_f1_f28 = Concat_ACQRET_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f28['Total-2021'] = Concat_ACQRET_count_f1_f28['Total-2021'].astype(int)
Concat_ACQRET_count_f1_f28['ACQ-2021'] = Concat_ACQRET_count_f1_f28['ACQ-2021'].astype(int)
Concat_ACQRET_count_f1_f28['Percent-2021'] = Concat_ACQRET_count_f1_f28['Percent-2021'].astype(float)
Concat_ACQRET_count_f1_f28['RET-2021'] = Concat_ACQRET_count_f1_f28['RET-2021'].astype(int)
Concat_ACQRET_count_f1_f28['Percnt-2021'] = Concat_ACQRET_count_f1_f28['Percnt-2021'].astype(float)

Concat_ACQRET_count_f1_f28['Total-2022'] = pd.to_numeric(Concat_ACQRET_count_f1_f28['Total-2022'],errors='coerce')
Concat_ACQRET_count_f1_f28 = Concat_ACQRET_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f28['Total-2022'] = Concat_ACQRET_count_f1_f28['Total-2022'].astype(int)
Concat_ACQRET_count_f1_f28['ACQ-2022'] = Concat_ACQRET_count_f1_f28['ACQ-2022'].astype(int)
Concat_ACQRET_count_f1_f28['Percent-2022'] = Concat_ACQRET_count_f1_f28['Percent-2022'].astype(float)
Concat_ACQRET_count_f1_f28['RET-2022'] = Concat_ACQRET_count_f1_f28['RET-2022'].astype(int)
Concat_ACQRET_count_f1_f28['Percnt-2022'] = Concat_ACQRET_count_f1_f28['Percnt-2022'].astype(float)

Concat_ACQRET_count_f1_f28['Total-2023'] = pd.to_numeric(Concat_ACQRET_count_f1_f28['Total-2023'],errors='coerce')
Concat_ACQRET_count_f1_f28 = Concat_ACQRET_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_ACQRET_count_f1_f28['Total-2023'] = Concat_ACQRET_count_f1_f28['Total-2023'].astype(int)
Concat_ACQRET_count_f1_f28['ACQ-2023'] = Concat_ACQRET_count_f1_f28['ACQ-2023'].astype(int)
Concat_ACQRET_count_f1_f28['Percent-2023'] = Concat_ACQRET_count_f1_f28['Percent-2023'].astype(float)
Concat_ACQRET_count_f1_f28['RET-2023'] = Concat_ACQRET_count_f1_f28['RET-2023'].astype(int)
Concat_ACQRET_count_f1_f28['Percnt-2023'] = Concat_ACQRET_count_f1_f28['Percnt-2023'].astype(float)

#dff1 - INDIVIDUALS
Concat_REV_count_f1_f28['Total-2017'] = pd.to_numeric(Concat_REV_count_f1_f28['Total-2017'],errors='coerce')
Concat_REV_count_f1_f28 = Concat_REV_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f28['Total-2017'] = Concat_REV_count_f1_f28['Total-2017'].astype(int)
Concat_REV_count_f1_f28['Percent-2017'] = Concat_REV_count_f1_f28['Percent-2017'].astype(float)
Concat_REV_count_f1_f28['7DEvolution-2017'] = Concat_REV_count_f1_f28['7DEvolution-2017'].astype(int)

Concat_REV_count_f1_f28['Total-2018'] = pd.to_numeric(Concat_REV_count_f1_f28['Total-2018'],errors='coerce')
Concat_REV_count_f1_f28 = Concat_REV_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f28['Total-2018'] = Concat_REV_count_f1_f28['Total-2018'].astype(int)
Concat_REV_count_f1_f28['Percent-2018'] = Concat_REV_count_f1_f28['Percent-2018'].astype(float)
Concat_REV_count_f1_f28['7DEvolution-2018'] = Concat_REV_count_f1_f28['7DEvolution-2018'].astype(int)

Concat_REV_count_f1_f28['Total-2019'] = pd.to_numeric(Concat_REV_count_f1_f28['Total-2019'],errors='coerce')
Concat_REV_count_f1_f28 = Concat_REV_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f28['Total-2019'] = Concat_REV_count_f1_f28['Total-2019'].astype(int)
Concat_REV_count_f1_f28['Percent-2019'] = Concat_REV_count_f1_f28['Percent-2019'].astype(float)
Concat_REV_count_f1_f28['7DEvolution-2019'] = Concat_REV_count_f1_f28['7DEvolution-2019'].astype(int)

Concat_REV_count_f1_f28['Total-2022'] = pd.to_numeric(Concat_REV_count_f1_f28['Total-2022'],errors='coerce')
Concat_REV_count_f1_f28 = Concat_REV_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f28['Total-2022'] = Concat_REV_count_f1_f28['Total-2022'].astype(int)
Concat_REV_count_f1_f28['Percent-2022'] = Concat_REV_count_f1_f28['Percent-2022'].astype(float)
Concat_REV_count_f1_f28['7DEvolution-2022'] = Concat_REV_count_f1_f28['7DEvolution-2022'].astype(int)

Concat_REV_count_f1_f28['Total-2023'] = pd.to_numeric(Concat_REV_count_f1_f28['Total-2023'],errors='coerce')
Concat_REV_count_f1_f28 = Concat_REV_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_REV_count_f1_f28['Total-2023'] = Concat_REV_count_f1_f28['Total-2023'].astype(int)
Concat_REV_count_f1_f28['Percent-2023'] = Concat_REV_count_f1_f28['Percent-2023'].astype(float)
Concat_REV_count_f1_f28['7DEvolution-2023'] = Concat_REV_count_f1_f28['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Concat_RegGRDel_count_f1_f28['Total-2017'] = pd.to_numeric(Concat_RegGRDel_count_f1_f28['Total-2017'],errors='coerce')
Concat_RegGRDel_count_f1_f28 = Concat_RegGRDel_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f28['Total-2017'] = Concat_RegGRDel_count_f1_f28['Total-2017'].astype(int)
Concat_RegGRDel_count_f1_f28['Percent-2017'] = Concat_RegGRDel_count_f1_f28['Percent-2017'].astype(float)
Concat_RegGRDel_count_f1_f28['7DEvolution-2017'] = Concat_RegGRDel_count_f1_f28['7DEvolution-2017'].astype(int)

Concat_RegGRDel_count_f1_f28['Total-2018'] = pd.to_numeric(Concat_RegGRDel_count_f1_f28['Total-2018'],errors='coerce')
Concat_RegGRDel_count_f1_f28 = Concat_RegGRDel_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f28['Total-2018'] = Concat_RegGRDel_count_f1_f28['Total-2018'].astype(int)
Concat_RegGRDel_count_f1_f28['Percent-2018'] = Concat_RegGRDel_count_f1_f28['Percent-2018'].astype(float)
Concat_RegGRDel_count_f1_f28['7DEvolution-2018'] = Concat_RegGRDel_count_f1_f28['7DEvolution-2018'].astype(int)

Concat_RegGRDel_count_f1_f28['Total-2019'] = pd.to_numeric(Concat_RegGRDel_count_f1_f28['Total-2019'],errors='coerce')
Concat_RegGRDel_count_f1_f28 = Concat_RegGRDel_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f28['Total-2019'] = Concat_RegGRDel_count_f1_f28['Total-2019'].astype(int)
Concat_RegGRDel_count_f1_f28['Percent-2019'] = Concat_RegGRDel_count_f1_f28['Percent-2019'].astype(float)
Concat_RegGRDel_count_f1_f28['7DEvolution-2019'] = Concat_RegGRDel_count_f1_f28['7DEvolution-2019'].astype(int)

Concat_RegGRDel_count_f1_f28['Total-2021'] = pd.to_numeric(Concat_RegGRDel_count_f1_f28['Total-2021'],errors='coerce')
Concat_RegGRDel_count_f1_f28 = Concat_RegGRDel_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f28['Total-2021'] = Concat_RegGRDel_count_f1_f28['Total-2021'].astype(int)
Concat_RegGRDel_count_f1_f28['Percent-2021'] = Concat_RegGRDel_count_f1_f28['Percent-2021'].astype(float)
Concat_RegGRDel_count_f1_f28['7DEvolution-2021'] = Concat_RegGRDel_count_f1_f28['7DEvolution-2021'].astype(int)

Concat_RegGRDel_count_f1_f28['Total-2022'] = pd.to_numeric(Concat_RegGRDel_count_f1_f28['Total-2022'],errors='coerce')
Concat_RegGRDel_count_f1_f28 = Concat_RegGRDel_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f28['Total-2022'] = Concat_RegGRDel_count_f1_f28['Total-2022'].astype(int)
Concat_RegGRDel_count_f1_f28['Percent-2022'] = Concat_RegGRDel_count_f1_f28['Percent-2022'].astype(float)
Concat_RegGRDel_count_f1_f28['7DEvolution-2022'] = Concat_RegGRDel_count_f1_f28['7DEvolution-2022'].astype(int)

Concat_RegGRDel_count_f1_f28['Total-2023'] = pd.to_numeric(Concat_RegGRDel_count_f1_f28['Total-2023'],errors='coerce')
Concat_RegGRDel_count_f1_f28 = Concat_RegGRDel_count_f1_f28.replace(np.nan, 0, regex=True)
Concat_RegGRDel_count_f1_f28['Total-2023'] = Concat_RegGRDel_count_f1_f28['Total-2023'].astype(int)
Concat_RegGRDel_count_f1_f28['Percent-2023'] = Concat_RegGRDel_count_f1_f28['Percent-2023'].astype(float)
Concat_RegGRDel_count_f1_f28['7DEvolution-2023'] = Concat_RegGRDel_count_f1_f28['7DEvolution-2023'].astype(int)

#dff1 - GROUPS
Conct_AC_RT_GRDel_f1_f28['Total-2018'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f28['Total-2018'],errors='coerce')
Conct_AC_RT_GRDel_f1_f28 = Conct_AC_RT_GRDel_f1_f28.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f28['Total-2018'] = Conct_AC_RT_GRDel_f1_f28['Total-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f28['ACQ-2018'] = Conct_AC_RT_GRDel_f1_f28['ACQ-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f28['Percent-2018'] = Conct_AC_RT_GRDel_f1_f28['Percent-2018'].astype(float)
Conct_AC_RT_GRDel_f1_f28['RET-2018'] = Conct_AC_RT_GRDel_f1_f28['RET-2018'].astype(int)
Conct_AC_RT_GRDel_f1_f28['Percnt-2018'] = Conct_AC_RT_GRDel_f1_f28['Percnt-2018'].astype(float)

Conct_AC_RT_GRDel_f1_f28['Total-2019'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f28['Total-2019'],errors='coerce')
Conct_AC_RT_GRDel_f1_f28 = Conct_AC_RT_GRDel_f1_f28.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f28['Total-2019'] = Conct_AC_RT_GRDel_f1_f28['Total-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f28['ACQ-2019'] = Conct_AC_RT_GRDel_f1_f28['ACQ-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f28['Percent-2019'] = Conct_AC_RT_GRDel_f1_f28['Percent-2019'].astype(float)
Conct_AC_RT_GRDel_f1_f28['RET-2019'] = Conct_AC_RT_GRDel_f1_f28['RET-2019'].astype(int)
Conct_AC_RT_GRDel_f1_f28['Percnt-2019'] = Conct_AC_RT_GRDel_f1_f28['Percnt-2019'].astype(float)

Conct_AC_RT_GRDel_f1_f28['Total-2021'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f28['Total-2021'],errors='coerce')
Conct_AC_RT_GRDel_f1_f28 = Conct_AC_RT_GRDel_f1_f28.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f28['Total-2021'] = Conct_AC_RT_GRDel_f1_f28['Total-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f28['ACQ-2021'] = Conct_AC_RT_GRDel_f1_f28['ACQ-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f28['Percent-2021'] = Conct_AC_RT_GRDel_f1_f28['Percent-2021'].astype(float)
Conct_AC_RT_GRDel_f1_f28['RET-2021'] = Conct_AC_RT_GRDel_f1_f28['RET-2021'].astype(int)
Conct_AC_RT_GRDel_f1_f28['Percnt-2021'] = Conct_AC_RT_GRDel_f1_f28['Percnt-2021'].astype(float)

Conct_AC_RT_GRDel_f1_f28['Total-2022'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f28['Total-2022'],errors='coerce')
Conct_AC_RT_GRDel_f1_f28 = Conct_AC_RT_GRDel_f1_f28.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f28['Total-2022'] = Conct_AC_RT_GRDel_f1_f28['Total-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f28['ACQ-2022'] = Conct_AC_RT_GRDel_f1_f28['ACQ-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f28['Percent-2022'] = Conct_AC_RT_GRDel_f1_f28['Percent-2022'].astype(float)
Conct_AC_RT_GRDel_f1_f28['RET-2022'] = Conct_AC_RT_GRDel_f1_f28['RET-2022'].astype(int)
Conct_AC_RT_GRDel_f1_f28['Percnt-2022'] = Conct_AC_RT_GRDel_f1_f28['Percnt-2022'].astype(float)

Conct_AC_RT_GRDel_f1_f28['Total-2023'] = pd.to_numeric(Conct_AC_RT_GRDel_f1_f28['Total-2023'],errors='coerce')
Conct_AC_RT_GRDel_f1_f28 = Conct_AC_RT_GRDel_f1_f28.replace(np.nan, 0, regex=True)
Conct_AC_RT_GRDel_f1_f28['Total-2023'] = Conct_AC_RT_GRDel_f1_f28['Total-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f28['ACQ-2023'] = Conct_AC_RT_GRDel_f1_f28['ACQ-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f28['Percent-2023'] = Conct_AC_RT_GRDel_f1_f28['Percent-2023'].astype(float)
Conct_AC_RT_GRDel_f1_f28['RET-2023'] = Conct_AC_RT_GRDel_f1_f28['RET-2023'].astype(int)
Conct_AC_RT_GRDel_f1_f28['Percnt-2023'] = Conct_AC_RT_GRDel_f1_f28['Percnt-2023'].astype(float)

#dff1 - GROUPS
Conct_RV_GRDel_f1_f28['Total-2017'] = pd.to_numeric(Conct_RV_GRDel_f1_f28['Total-2017'],errors='coerce')
Conct_RV_GRDel_f1_f28 = Conct_RV_GRDel_f1_f28.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f28['Total-2017'] = Conct_RV_GRDel_f1_f28['Total-2017'].astype(int)
Conct_RV_GRDel_f1_f28['Percent-2017'] = Conct_RV_GRDel_f1_f28['Percent-2017'].astype(float)
Conct_RV_GRDel_f1_f28['7DEvolution-2017'] = Conct_RV_GRDel_f1_f28['7DEvolution-2017'].astype(int)

Conct_RV_GRDel_f1_f28['Total-2018'] = pd.to_numeric(Conct_RV_GRDel_f1_f28['Total-2018'],errors='coerce')
Conct_RV_GRDel_f1_f28 = Conct_RV_GRDel_f1_f28.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f28['Total-2018'] = Conct_RV_GRDel_f1_f28['Total-2018'].astype(int)
Conct_RV_GRDel_f1_f28['Percent-2018'] = Conct_RV_GRDel_f1_f28['Percent-2018'].astype(float)
Conct_RV_GRDel_f1_f28['7DEvolution-2018'] = Conct_RV_GRDel_f1_f28['7DEvolution-2018'].astype(int)

Conct_RV_GRDel_f1_f28['Total-2019'] = pd.to_numeric(Conct_RV_GRDel_f1_f28['Total-2019'],errors='coerce')
Conct_RV_GRDel_f1_f28 = Conct_RV_GRDel_f1_f28.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f28['Total-2019'] = Conct_RV_GRDel_f1_f28['Total-2019'].astype(int)
Conct_RV_GRDel_f1_f28['Percent-2019'] = Conct_RV_GRDel_f1_f28['Percent-2019'].astype(float)
Conct_RV_GRDel_f1_f28['7DEvolution-2019'] = Conct_RV_GRDel_f1_f28['7DEvolution-2019'].astype(int)

Conct_RV_GRDel_f1_f28['Total-2022'] = pd.to_numeric(Conct_RV_GRDel_f1_f28['Total-2022'],errors='coerce')
Conct_RV_GRDel_f1_f28 = Conct_RV_GRDel_f1_f28.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f28['Total-2022'] = Conct_RV_GRDel_f1_f28['Total-2022'].astype(int)
Conct_RV_GRDel_f1_f28['Percent-2022'] = Conct_RV_GRDel_f1_f28['Percent-2022'].astype(float)
Conct_RV_GRDel_f1_f28['7DEvolution-2022'] = Conct_RV_GRDel_f1_f28['7DEvolution-2022'].astype(int)

Conct_RV_GRDel_f1_f28['Total-2023'] = pd.to_numeric(Conct_RV_GRDel_f1_f28['Total-2023'],errors='coerce')
Conct_RV_GRDel_f1_f28 = Conct_RV_GRDel_f1_f28.replace(np.nan, 0, regex=True)
Conct_RV_GRDel_f1_f28['Total-2023'] = Conct_RV_GRDel_f1_f28['Total-2023'].astype(int)
Conct_RV_GRDel_f1_f28['Percent-2023'] = Conct_RV_GRDel_f1_f28['Percent-2023'].astype(float)
Conct_RV_GRDel_f1_f28['7DEvolution-2023'] = Conct_RV_GRDel_f1_f28['7DEvolution-2023'].astype(int)

#dff2
df_Profile_Count_m2_f28['Total-2017'] = pd.to_numeric(df_Profile_Count_m2_f28['Total-2017'],errors='coerce')
df_Profile_Count_m2_f28 = df_Profile_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f28['Total-2017'] = df_Profile_Count_m2_f28['Total-2017'].astype(int)
df_Profile_Count_m2_f28['Percent-2017'] = df_Profile_Count_m2_f28['Percent-2017'].astype(float)

df_Profile_Count_m2_f28['Total-2018'] = pd.to_numeric(df_Profile_Count_m2_f28['Total-2018'],errors='coerce')
df_Profile_Count_m2_f28 = df_Profile_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f28['Total-2018'] = df_Profile_Count_m2_f28['Total-2018'].astype(int)
df_Profile_Count_m2_f28['Percent-2018'] = df_Profile_Count_m2_f28['Percent-2018'].astype(float)

df_Profile_Count_m2_f28['Total-2019'] = pd.to_numeric(df_Profile_Count_m2_f28['Total-2019'],errors='coerce')
df_Profile_Count_m2_f28 = df_Profile_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f28['Total-2019'] = df_Profile_Count_m2_f28['Total-2019'].astype(int)
df_Profile_Count_m2_f28['Percent-2019'] = df_Profile_Count_m2_f28['Percent-2019'].astype(float)

df_Profile_Count_m2_f28['Total-2021'] = pd.to_numeric(df_Profile_Count_m2_f28['Total-2021'],errors='coerce')
df_Profile_Count_m2_f28 = df_Profile_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f28['Total-2021'] = df_Profile_Count_m2_f28['Total-2021'].astype(int)
df_Profile_Count_m2_f28['Percent-2021'] = df_Profile_Count_m2_f28['Percent-2021'].astype(float)

df_Profile_Count_m2_f28['Total-2022'] = pd.to_numeric(df_Profile_Count_m2_f28['Total-2022'],errors='coerce')
df_Profile_Count_m2_f28 = df_Profile_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f28['Total-2022'] = df_Profile_Count_m2_f28['Total-2022'].astype(int)
df_Profile_Count_m2_f28['Percent-2022'] = df_Profile_Count_m2_f28['Percent-2022'].astype(float)

df_Profile_Count_m2_f28['Total-2023'] = pd.to_numeric(df_Profile_Count_m2_f28['Total-2023'],errors='coerce')
df_Profile_Count_m2_f28 = df_Profile_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Profile_Count_m2_f28['Total-2023'] = df_Profile_Count_m2_f28['Total-2023'].astype(int)
df_Profile_Count_m2_f28['Percent-2023'] = df_Profile_Count_m2_f28['Percent-2023'].astype(float)

#dff3
df_Pass_Count_m2_f28['Total-2017'] = pd.to_numeric(df_Pass_Count_m2_f28['Total-2017'],errors='coerce')
df_Pass_Count_m2_f28 = df_Pass_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f28['Total-2017'] = df_Pass_Count_m2_f28['Total-2017'].astype(int)
df_Pass_Count_m2_f28['Percent-2017'] = df_Pass_Count_m2_f28['Percent-2017'].astype(float)

df_Pass_Count_m2_f28['Total-2018'] = pd.to_numeric(df_Pass_Count_m2_f28['Total-2018'],errors='coerce')
df_Pass_Count_m2_f28 = df_Pass_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f28['Total-2018'] = df_Pass_Count_m2_f28['Total-2018'].astype(int)
df_Pass_Count_m2_f28['Percent-2018'] = df_Pass_Count_m2_f28['Percent-2018'].astype(float)

df_Pass_Count_m2_f28['Total-2019'] = pd.to_numeric(df_Pass_Count_m2_f28['Total-2019'],errors='coerce')
df_Pass_Count_m2_f28 = df_Pass_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f28['Total-2019'] = df_Pass_Count_m2_f28['Total-2019'].astype(int)
df_Pass_Count_m2_f28['Percent-2019'] = df_Pass_Count_m2_f28['Percent-2019'].astype(float)

df_Pass_Count_m2_f28['Total-2021'] = pd.to_numeric(df_Pass_Count_m2_f28['Total-2021'],errors='coerce')
df_Pass_Count_m2_f28 = df_Pass_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f28['Total-2021'] = df_Pass_Count_m2_f28['Total-2021'].astype(int)
df_Pass_Count_m2_f28['Percent-2021'] = df_Pass_Count_m2_f28['Percent-2021'].astype(float)

df_Pass_Count_m2_f28['Total-2022'] = pd.to_numeric(df_Pass_Count_m2_f28['Total-2022'],errors='coerce')
df_Pass_Count_m2_f28 = df_Pass_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f28['Total-2022'] = df_Pass_Count_m2_f28['Total-2022'].astype(int)
df_Pass_Count_m2_f28['Percent-2022'] = df_Pass_Count_m2_f28['Percent-2022'].astype(float)

df_Pass_Count_m2_f28['Total-2023'] = pd.to_numeric(df_Pass_Count_m2_f28['Total-2023'],errors='coerce')
df_Pass_Count_m2_f28 = df_Pass_Count_m2_f28.replace(np.nan, 0, regex=True)
df_Pass_Count_m2_f28['Total-2023'] = df_Pass_Count_m2_f28['Total-2023'].astype(int)
df_Pass_Count_m2_f28['Percent-2023'] = df_Pass_Count_m2_f28['Percent-2023'].astype(float)

#dff4
dfAttendees_Country_Count_m2_f28['Total-2017'] = pd.to_numeric(dfAttendees_Country_Count_m2_f28['Total-2017'],errors='coerce')
dfAttendees_Country_Count_m2_f28 = dfAttendees_Country_Count_m2_f28.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f28['Total-2017'] = dfAttendees_Country_Count_m2_f28['Total-2017'].astype(int)
dfAttendees_Country_Count_m2_f28['Percent-2017'] = dfAttendees_Country_Count_m2_f28['Percent-2017'].astype(float)

dfAttendees_Country_Count_m2_f28['Total-2018'] = pd.to_numeric(dfAttendees_Country_Count_m2_f28['Total-2018'],errors='coerce')
dfAttendees_Country_Count_m2_f28 = dfAttendees_Country_Count_m2_f28.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f28['Total-2018'] = dfAttendees_Country_Count_m2_f28['Total-2018'].astype(int)
dfAttendees_Country_Count_m2_f28['Percent-2018'] = dfAttendees_Country_Count_m2_f28['Percent-2018'].astype(float)

dfAttendees_Country_Count_m2_f28['Total-2019'] = pd.to_numeric(dfAttendees_Country_Count_m2_f28['Total-2019'],errors='coerce')
dfAttendees_Country_Count_m2_f28 = dfAttendees_Country_Count_m2_f28.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f28['Total-2019'] = dfAttendees_Country_Count_m2_f28['Total-2019'].astype(int)
dfAttendees_Country_Count_m2_f28['Percent-2019'] = dfAttendees_Country_Count_m2_f28['Percent-2019'].astype(float)

dfAttendees_Country_Count_m2_f28['Total-2021'] = pd.to_numeric(dfAttendees_Country_Count_m2_f28['Total-2021'],errors='coerce')
dfAttendees_Country_Count_m2_f28 = dfAttendees_Country_Count_m2_f28.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f28['Total-2021'] = dfAttendees_Country_Count_m2_f28['Total-2021'].astype(int)
dfAttendees_Country_Count_m2_f28['Percent-2021'] = dfAttendees_Country_Count_m2_f28['Percent-2021'].astype(float)

dfAttendees_Country_Count_m2_f28['Total-2022'] = pd.to_numeric(dfAttendees_Country_Count_m2_f28['Total-2022'],errors='coerce')
dfAttendees_Country_Count_m2_f28 = dfAttendees_Country_Count_m2_f28.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f28['Total-2022'] = dfAttendees_Country_Count_m2_f28['Total-2022'].astype(int)
dfAttendees_Country_Count_m2_f28['Percent-2022'] = dfAttendees_Country_Count_m2_f28['Percent-2022'].astype(float)

dfAttendees_Country_Count_m2_f28['Total-2023'] = pd.to_numeric(dfAttendees_Country_Count_m2_f28['Total-2023'],errors='coerce')
dfAttendees_Country_Count_m2_f28 = dfAttendees_Country_Count_m2_f28.replace(np.nan, 0, regex=True)
dfAttendees_Country_Count_m2_f28['Total-2023'] = dfAttendees_Country_Count_m2_f28['Total-2023'].astype(int)
dfAttendees_Country_Count_m2_f28['Percent-2023'] = dfAttendees_Country_Count_m2_f28['Percent-2023'].astype(float)

#dff5
df_ATTENDEES_AREAS_count_m2_f28['Total-2017'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f28['Total-2017'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f28 = df_ATTENDEES_AREAS_count_m2_f28.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f28['Total-2017'] = df_ATTENDEES_AREAS_count_m2_f28['Total-2017'].astype(int)
df_ATTENDEES_AREAS_count_m2_f28['Percent-2017'] = df_ATTENDEES_AREAS_count_m2_f28['Percent-2017'].astype(float)

df_ATTENDEES_AREAS_count_m2_f28['Total-2018'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f28['Total-2018'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f28 = df_ATTENDEES_AREAS_count_m2_f28.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f28['Total-2018'] = df_ATTENDEES_AREAS_count_m2_f28['Total-2018'].astype(int)
df_ATTENDEES_AREAS_count_m2_f28['Percent-2018'] = df_ATTENDEES_AREAS_count_m2_f28['Percent-2018'].astype(float)

df_ATTENDEES_AREAS_count_m2_f28['Total-2019'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f28['Total-2019'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f28 = df_ATTENDEES_AREAS_count_m2_f28.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f28['Total-2019'] = df_ATTENDEES_AREAS_count_m2_f28['Total-2019'].astype(int)
df_ATTENDEES_AREAS_count_m2_f28['Percent-2019'] = df_ATTENDEES_AREAS_count_m2_f28['Percent-2019'].astype(float)

df_ATTENDEES_AREAS_count_m2_f28['Total-2021'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f28['Total-2021'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f28 = df_ATTENDEES_AREAS_count_m2_f28.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f28['Total-2021'] = df_ATTENDEES_AREAS_count_m2_f28['Total-2021'].astype(int)
df_ATTENDEES_AREAS_count_m2_f28['Percent-2021'] = df_ATTENDEES_AREAS_count_m2_f28['Percent-2021'].astype(float)

df_ATTENDEES_AREAS_count_m2_f28['Total-2022'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f28['Total-2022'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f28 = df_ATTENDEES_AREAS_count_m2_f28.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f28['Total-2022'] = df_ATTENDEES_AREAS_count_m2_f28['Total-2022'].astype(int)
df_ATTENDEES_AREAS_count_m2_f28['Percent-2022'] = df_ATTENDEES_AREAS_count_m2_f28['Percent-2022'].astype(float)

df_ATTENDEES_AREAS_count_m2_f28['Total-2023'] = pd.to_numeric(df_ATTENDEES_AREAS_count_m2_f28['Total-2023'],errors='coerce')
df_ATTENDEES_AREAS_count_m2_f28 = df_ATTENDEES_AREAS_count_m2_f28.replace(np.nan, 0, regex=True)
df_ATTENDEES_AREAS_count_m2_f28['Total-2023'] = df_ATTENDEES_AREAS_count_m2_f28['Total-2023'].astype(int)
df_ATTENDEES_AREAS_count_m2_f28['Percent-2023'] = df_ATTENDEES_AREAS_count_m2_f28['Percent-2023'].astype(float)

#dff6
df_Specialty_count_m2_f28['Total-2017'] = pd.to_numeric(df_Specialty_count_m2_f28['Total-2017'],errors='coerce')
df_Specialty_count_m2_f28 = df_Specialty_count_m2_f28.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f28['Total-2017'] = df_Specialty_count_m2_f28['Total-2017'].astype(int)
df_Specialty_count_m2_f28['Percent-2017'] = df_Specialty_count_m2_f28['Percent-2017'].astype(float)

df_Specialty_count_m2_f28['Total-2018'] = pd.to_numeric(df_Specialty_count_m2_f28['Total-2018'],errors='coerce')
df_Specialty_count_m2_f28 = df_Specialty_count_m2_f28.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f28['Total-2018'] = df_Specialty_count_m2_f28['Total-2018'].astype(int)
df_Specialty_count_m2_f28['Percent-2018'] = df_Specialty_count_m2_f28['Percent-2018'].astype(float)

df_Specialty_count_m2_f28['Total-2019'] = pd.to_numeric(df_Specialty_count_m2_f28['Total-2019'],errors='coerce')
df_Specialty_count_m2_f28 = df_Specialty_count_m2_f28.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f28['Total-2019'] = df_Specialty_count_m2_f28['Total-2019'].astype(int)
df_Specialty_count_m2_f28['Percent-2019'] = df_Specialty_count_m2_f28['Percent-2019'].astype(float)

df_Specialty_count_m2_f28['Total-2021'] = pd.to_numeric(df_Specialty_count_m2_f28['Total-2021'],errors='coerce')
df_Specialty_count_m2_f28 = df_Specialty_count_m2_f28.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f28['Total-2021'] = df_Specialty_count_m2_f28['Total-2021'].astype(int)
df_Specialty_count_m2_f28['Percent-2021'] = df_Specialty_count_m2_f28['Percent-2021'].astype(float)

df_Specialty_count_m2_f28['Total-2022'] = pd.to_numeric(df_Specialty_count_m2_f28['Total-2022'],errors='coerce')
df_Specialty_count_m2_f28 = df_Specialty_count_m2_f28.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f28['Total-2022'] = df_Specialty_count_m2_f28['Total-2022'].astype(int)
df_Specialty_count_m2_f28['Percent-2022'] = df_Specialty_count_m2_f28['Percent-2022'].astype(float)

df_Specialty_count_m2_f28['Total-2023'] = pd.to_numeric(df_Specialty_count_m2_f28['Total-2023'],errors='coerce')
df_Specialty_count_m2_f28 = df_Specialty_count_m2_f28.replace(np.nan, 0, regex=True)
df_Specialty_count_m2_f28['Total-2023'] = df_Specialty_count_m2_f28['Total-2023'].astype(int)
df_Specialty_count_m2_f28['Percent-2023'] = df_Specialty_count_m2_f28['Percent-2023'].astype(float)

#print(dfAttendees_Country_Count_m2_f28.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f28.dtypes)
#print(df_Specialty_count_m2_f28.dtypes)

#print(dfAttendees_Country_Count_m2_f28.dtypes)
#print(df_ATTENDEES_AREAS_count_m2_f28.dtypes)
#print(df_Specialty_count_m2_f28.dtypes)

#DROPPING ROWS WITH ALL VALUES IS '0'
Concat_RegGRDel_count_f1_f28 = Concat_RegGRDel_count_f1_f28.loc[(Concat_RegGRDel_count_f1_f28 != 0).any(axis=1)]
Conct_RV_GRDel_f1_f28 = Conct_RV_GRDel_f1_f28.loc[(Conct_RV_GRDel_f1_f28 != 0).any(axis=1)]

#inserting total row at the last of the dataframe
#unit 1
Total_Frame = pd.Series({'Total-2017': 768, 'Percent-2017': 100, '7DEvolution-2017': '',
                         'Total-2018': 782, 'Percent-2018': 100, '7DEvolution-2018': '',
                         'Total-2019': 1006, 'Percent-2019': 100, '7DEvolution-2019': '',
                         'Total-2022': 1148, 'Percent-2022': 100, '7DEvolution-2022': '',
                         'Total-2023': '', 'Percent-2023': 100, '7DEvolution-2023': ''})
Concat_Registrations_count_f1_f28 = pd.concat([Concat_Registrations_count_f1_f28, Total_Frame.to_frame().T], ignore_index=True)

#unit 2
Total_Frame_GRdel = pd.Series({'Total-2017': 98, 'Percent-2017': 100, '7DEvolution-2017': '',
                         'Total-2018': 92, 'Percent-2018': 100, '7DEvolution-2018': '',
                         'Total-2019': 166, 'Percent-2019': 100, '7DEvolution-2019': '',
                         'Total-2022': 122, 'Percent-2022': 100, '7DEvolution-2022': '',
                         'Total-2023': '', 'Percent-2023': 100, '7DEvolution-2023': ''})
Concat_RegGRDel_count_f1_f28 = pd.concat([Concat_RegGRDel_count_f1_f28, Total_Frame_GRdel.to_frame().T], ignore_index=True)

#inserting Date column
#df17
Date17df = ['18/11/2016', '25/11/2016', '02/12/2016', '09/12/2016', '16/12/2016', '23/12/2016', '30/12/2016', '06/01/2017', '13/01/2017', '20/01/2017', '27/01/2017', '03/02/2017', '10/02/2017', '17/02/2017', '24/02/2017', '03/03/2017', '10/03/2017', '17/03/2017', '24/03/2017', '31/03/2017', '07/04/2017', '14/04/2017', '21/04/2017', '28/04/2017', '05/05/2017', '12/05/2017', '19/05/2017', '26/05/2017', '02/06/2017', '09/06/2017', '16/06/2017','']
#df18
Date18df = ['16/11/2017', '23/11/2017', '30/11/2017', '07/12/2017', '14/12/2017', '21/12/2017', '28/12/2017', '04/01/2018', '11/01/2018', '18/01/2018', '25/01/2018', '01/02/2018', '08/02/2018', '15/02/2018', '22/02/2018', '01/03/2018', '08/03/2018', '15/03/2018', '22/03/2018', '29/03/2018', '05/04/2018', '12/04/2018', '19/04/2018', '26/04/2018', '03/05/2018', '10/05/2018', '17/05/2018', '24/05/2018', '31/05/2018', '07/06/2018', '14/06/2018','']
#df19
Date19df = ['09/11/2018', '16/11/2018', '23/11/2018', '30/11/2018', '07/12/2018', '14/12/2018', '21/12/2018', '28/12/2018', '04/01/2019', '11/01/2019', '18/01/2019', '25/01/2019', '01/02/2019', '08/02/2019', '15/02/2019', '22/02/2019', '01/03/2019', '08/03/2019', '15/03/2019', '22/03/2019', '29/03/2019', '05/04/2019', '12/04/2019', '19/04/2019', '26/04/2019', '03/05/2019', '10/05/2019', '17/05/2019', '24/05/2019', '31/05/2019', '07/06/2019','']
#df22
Date22df = ['19/11/2021', '26/11/2021', '03/12/2021', '10/12/2021', '17/12/2021', '24/12/2021', '31/12/2021', '07/01/2022', '14/01/2022', '21/01/2022', '28/01/2022', '04/02/2022', '11/02/2022', '18/02/2022', '25/02/2022', '04/03/2022', '11/03/2022', '18/03/2022', '25/03/2022', '01/04/2022', '08/04/2022', '15/04/2022', '22/04/2022', '29/04/2022', '06/05/2022', '13/05/2022', '20/05/2022', '27/05/2022', '03/06/2022', '10/06/2022', '17/06/2022','']
#df23
Date23df = ['02/12/2022', '09/12/2022', '16/12/2022', '23/12/2022', '30/12/2022', '06/01/2023', '13/01/2023', '20/01/2023', '27/01/2023', '03/02/2023', '10/02/2023', '17/02/2023', '24/02/2023', '03/03/2023', '10/03/2023', '17/03/2023', '24/03/2023', '31/03/2023', '07/04/2023', '14/04/2023', '21/04/2023', '28/04/2023', '05/05/2023', '12/05/2023', '19/05/2023', '26/05/2023', '02/06/2023', '09/06/2023', '16/06/2023', '23/06/2023', '30/06/2023','']

#insertion for date column
Concat_Registrations_count_f1_f28.insert(1, "Date-2017", "")
Concat_Registrations_count_f1_f28.insert(5, "Date-2018", "")
Concat_Registrations_count_f1_f28.insert(9, "Date-2019", "")
Concat_Registrations_count_f1_f28.insert(16, "Date-2022", "")
Concat_Registrations_count_f1_f28.insert(20, "Date-2023", "")

#convert to datetime datatype
Concat_Registrations_count_f1_f28['Date-2017'] = pd.to_datetime(Concat_Registrations_count_f1_f28['Date-2017'], errors = 'coerce')
Concat_Registrations_count_f1_f28['Date-2017'] = Concat_Registrations_count_f1_f28['Date-2017'].dt.date
Concat_Registrations_count_f1_f28['Date-2018'] = pd.to_datetime(Concat_Registrations_count_f1_f28['Date-2018'], errors = 'coerce')
Concat_Registrations_count_f1_f28['Date-2018'] = Concat_Registrations_count_f1_f28['Date-2018'].dt.date
Concat_Registrations_count_f1_f28['Date-2019'] = pd.to_datetime(Concat_Registrations_count_f1_f28['Date-2019'], errors = 'coerce')
Concat_Registrations_count_f1_f28['Date-2019'] = Concat_Registrations_count_f1_f28['Date-2019'].dt.date
Concat_Registrations_count_f1_f28['Date-2022'] = pd.to_datetime(Concat_Registrations_count_f1_f28['Date-2022'], errors = 'coerce')
Concat_Registrations_count_f1_f28['Date-2022'] = Concat_Registrations_count_f1_f28['Date-2022'].dt.date
Concat_Registrations_count_f1_f28['Date-2023'] = pd.to_datetime(Concat_Registrations_count_f1_f28['Date-2023'], errors = 'coerce')
Concat_Registrations_count_f1_f28['Date-2023'] = Concat_Registrations_count_f1_f28['Date-2023'].dt.date

Concat_Registrations_count_f1_f28['Date-2017'] = Date17df
Concat_Registrations_count_f1_f28['Date-2018'] = Date18df
Concat_Registrations_count_f1_f28['Date-2019'] = Date19df
Concat_Registrations_count_f1_f28['Date-2022'] = Date22df
Concat_Registrations_count_f1_f28['Date-2023'] = Date23df

#GROUPS
#df17
Date17df_GRDEL = ['03/02/2017', '10/02/2017', '17/02/2017', '24/02/2017', '03/03/2017', '10/03/2017', '17/03/2017', '24/03/2017', '31/03/2017', '07/04/2017', '14/04/2017', '21/04/2017', '28/04/2017', '05/05/2017', '12/05/2017', '19/05/2017', '26/05/2017', '02/06/2017', '09/06/2017', '16/06/2017','']
#df18
Date18df_GRDEL = ['01/02/2018', '08/02/2018', '15/02/2018', '22/02/2018', '01/03/2018', '08/03/2018', '15/03/2018', '22/03/2018', '29/03/2018', '05/04/2018', '12/04/2018', '19/04/2018', '26/04/2018', '03/05/2018', '10/05/2018', '17/05/2018', '24/05/2018', '31/05/2018', '07/06/2018', '14/06/2018','']
#df19
Date19df_GRDEL = ['25/01/2019', '01/02/2019', '08/02/2019', '15/02/2019', '22/02/2019', '01/03/2019', '08/03/2019', '15/03/2019', '22/03/2019', '29/03/2019', '05/04/2019', '12/04/2019', '19/04/2019', '26/04/2019', '03/05/2019', '10/05/2019', '17/05/2019', '24/05/2019', '31/05/2019', '07/06/2019','']
#df22
Date22df_GRDEL = ['04/02/2022', '11/02/2022', '18/02/2022', '25/02/2022', '04/03/2022', '11/03/2022', '18/03/2022', '25/03/2022', '01/04/2022', '08/04/2022', '15/04/2022', '22/04/2022', '29/04/2022', '06/05/2022', '13/05/2022', '20/05/2022', '27/05/2022', '03/06/2022', '10/06/2022', '17/06/2022','']
#df23
Date23df_GRDEL = ['17/02/2023', '24/02/2023', '03/03/2023', '10/03/2023', '17/03/2023', '24/03/2023', '31/03/2023', '07/04/2023', '14/04/2023', '21/04/2023', '28/04/2023', '05/05/2023', '12/05/2023', '19/05/2023', '26/05/2023', '02/06/2023', '09/06/2023', '16/06/2023', '23/06/2023', '30/06/2023','']

Concat_RegGRDel_count_f1_f28.insert(1, "Date-2017", "")
Concat_RegGRDel_count_f1_f28.insert(5, "Date-2018", "")
Concat_RegGRDel_count_f1_f28.insert(9, "Date-2019", "")
Concat_RegGRDel_count_f1_f28.insert(16, "Date-2022", "")
Concat_RegGRDel_count_f1_f28.insert(20, "Date-2023", "")

#convert to datetime datatype
Concat_RegGRDel_count_f1_f28['Date-2017'] = pd.to_datetime(Concat_RegGRDel_count_f1_f28['Date-2017'], errors = 'coerce')
Concat_RegGRDel_count_f1_f28['Date-2017'] = Concat_RegGRDel_count_f1_f28['Date-2017'].dt.date
Concat_RegGRDel_count_f1_f28['Date-2018'] = pd.to_datetime(Concat_RegGRDel_count_f1_f28['Date-2018'], errors = 'coerce')
Concat_RegGRDel_count_f1_f28['Date-2018'] = Concat_RegGRDel_count_f1_f28['Date-2018'].dt.date
Concat_RegGRDel_count_f1_f28['Date-2019'] = pd.to_datetime(Concat_RegGRDel_count_f1_f28['Date-2019'], errors = 'coerce')
Concat_RegGRDel_count_f1_f28['Date-2019'] = Concat_RegGRDel_count_f1_f28['Date-2019'].dt.date
Concat_RegGRDel_count_f1_f28['Date-2022'] = pd.to_datetime(Concat_RegGRDel_count_f1_f28['Date-2022'], errors = 'coerce')
Concat_RegGRDel_count_f1_f28['Date-2022'] = Concat_RegGRDel_count_f1_f28['Date-2022'].dt.date
Concat_RegGRDel_count_f1_f28['Date-2023'] = pd.to_datetime(Concat_RegGRDel_count_f1_f28['Date-2023'], errors = 'coerce')
Concat_RegGRDel_count_f1_f28['Date-2023'] = Concat_RegGRDel_count_f1_f28['Date-2023'].dt.date

Concat_RegGRDel_count_f1_f28['Date-2017'] = Date17df_GRDEL
Concat_RegGRDel_count_f1_f28['Date-2018'] = Date18df_GRDEL
Concat_RegGRDel_count_f1_f28['Date-2019'] = Date19df_GRDEL
Concat_RegGRDel_count_f1_f28['Date-2022'] = Date22df_GRDEL
Concat_RegGRDel_count_f1_f28['Date-2023'] = Date23df_GRDEL

#drop the year 2021 related fields
#individuals
Concat_Registrations_count_f1_f28 = Concat_Registrations_count_f1_f28.drop(columns = ['Total-2021', 'Percent-2021', '7DEvolution-2021'])
Concat_ACQRET_count_f1_f28 = Concat_ACQRET_count_f1_f28.drop(columns = ['Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021'])
Concat_REV_count_f1_f28 = Concat_REV_count_f1_f28.drop(columns = ['Total-2021', 'Percent-2021', '7DEvolution-2021'])
#print(tab(Concat_Registrations_count_f1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

#GROUPS
Concat_RegGRDel_count_f1_f28 = Concat_RegGRDel_count_f1_f28.drop(columns = ['Total-2021', 'Percent-2021', '7DEvolution-2021'])
Conct_AC_RT_GRDel_f1_f28 = Conct_AC_RT_GRDel_f1_f28.drop(columns = ['Total-2021', 'ACQ-2021', 'Percent-2021', 'RET-2021', 'Percnt-2021'])
Conct_RV_GRDel_f1_f28 = Conct_RV_GRDel_f1_f28.drop(columns = ['Total-2021', 'Percent-2021', '7DEvolution-2021'])
#print(tab(Concat_RegGRDel_count_f1_f28.head(10), headers='keys', tablefmt='psql', showindex=False))

#UNIT 3
df_Profile_Count_m2_f28 = df_Profile_Count_m2_f28.drop(columns = ['Total-2021', 'Percent-2021'])
df_Pass_Count_m2_f28 = df_Pass_Count_m2_f28.drop(columns = ['Total-2021', 'Percent-2021'])
dfAttendees_Country_Count_m2_f28 = dfAttendees_Country_Count_m2_f28.drop(columns = ['Total-2021', 'Percent-2021'])
df_ATTENDEES_AREAS_count_m2_f28 = df_ATTENDEES_AREAS_count_m2_f28.drop(columns = ['Total-2021', 'Percent-2021'])
df_Specialty_count_m2_f28 = df_Specialty_count_m2_f28.drop(columns = ['Total-2021', 'Percent-2021'])

#few logical operation focusing on updating the output
#Individuals
Concat_ACQRET_count_f1_f28_Update_U1 = Concat_ACQRET_count_f1_f28
#rename a few columns
Concat_ACQRET_count_f1_f28_Update_U1.rename(columns={'Total-2023': 'Reg-2023'}, inplace=True)
Concat_ACQRET_count_f1_f28_Update_U1.rename(columns={'Percent-2023': '%-2023'}, inplace=True)
#Drop Acquisition columns
Concat_ACQRET_count_f1_f28_Update_U1 = Concat_ACQRET_count_f1_f28_Update_U1.drop(columns = ['TotalRegistrationsa1','Reg-2023', 'ACQ-2023', '%-2023',
                                                                                            'Total-2018', 'ACQ-2018', 'Percent-2018',
                                                                                            'RET-2018', 'Percnt-2018',
                                                                                            'Total-2019', 'ACQ-2019', 'Percent-2019',
                                                                                            'RET-2019', 'Percnt-2019',
                                                                                            'Total-2022', 'ACQ-2022', 'Percent-2022',
                                                                                            'RET-2022', 'Percnt-2022'])
#concat
Concat_Registrations_count_f1_f28.reset_index(drop=True, inplace=True)
Concat_ACQRET_count_f1_f28_Update_U1.reset_index(drop=True, inplace=True)
Concat_Registrations_count_f1_f28 = pd.concat([Concat_Registrations_count_f1_f28, Concat_ACQRET_count_f1_f28_Update_U1], axis=1)

#Groups
Conct_AC_RT_GRDel_f1_f28_Update_U1 = Conct_AC_RT_GRDel_f1_f28
#rename a few columns
Conct_AC_RT_GRDel_f1_f28_Update_U1.rename(columns={'Total-2023': 'Reg-2023'}, inplace=True)
Conct_AC_RT_GRDel_f1_f28_Update_U1.rename(columns={'Percent-2023': '%-2023'}, inplace=True)
#Drop Acquisition columns
Conct_AC_RT_GRDel_f1_f28_Update_U1 = Conct_AC_RT_GRDel_f1_f28_Update_U1.drop(columns = ['TotalRegistrationsb1', 'Reg-2023', 'ACQ-2023', '%-2023',
                                                                                        'Total-2018', 'ACQ-2018', 'Percent-2018',
                                                                                        'RET-2018', 'Percnt-2018',
                                                                                        'Total-2019', 'ACQ-2019', 'Percent-2019',
                                                                                        'RET-2019', 'Percnt-2019',
                                                                                        'Total-2022', 'ACQ-2022', 'Percent-2022',
                                                                                        'RET-2022', 'Percnt-2022'])
#concat
Concat_RegGRDel_count_f1_f28.reset_index(drop=True, inplace=True)
Conct_AC_RT_GRDel_f1_f28_Update_U1.reset_index(drop=True, inplace=True)
Concat_RegGRDel_count_f1_f28 = pd.concat([Concat_RegGRDel_count_f1_f28, Conct_AC_RT_GRDel_f1_f28_Update_U1], axis=1)


# EXCEL FILE
writerf28 = pd.ExcelWriter(outputExcelFile_f28, engine='xlsxwriter')
print('\nCounts export...')

#unit 1
Concat_Registrations_count_f1_f28.to_excel\
    (writerf28, index=False, sheet_name='Individuals Reg',
     header=['Days', 'Date-2017', 'Reg-2017', 'RegRate17', 'Reg/week17',
             'Date-2018', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Date-2019', 'Reg-2019', 'RegRate19', 'Reg/week19',
             'Date-2022', 'Reg-2022', 'RegRate22', 'Reg/week22',
             'Date-2023', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution',
             'Old-2023', '%Old23'])
Concat_ACQRET_count_f1_f28.to_excel\
    (writerf28, index=False, sheet_name='Individuals Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Concat_REV_count_f1_f28.to_excel\
    (writerf28, index=False, sheet_name='Individuals Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNTI GROUPS
Concat_RegGRDel_count_f1_f28.to_excel\
    (writerf28, index=False, sheet_name='Group Reg',
     header=['Days', 'Date-2017', 'Reg-2017', 'RegRate17', 'Reg/week17',
             'Date-2018', 'Reg-2018', 'RegRate18', 'Reg/week18',
             'Date-2019', 'Reg-2019', 'RegRate19', 'Reg/week19',
             'Date-2022', 'Reg-2022', 'RegRate22', 'Reg/week22',
             'Date-2023', 'Reg-2023', 'RegRate23', 'Reg/week23', 'Evolution',
             'Old-2023', '%Old23'])
Conct_AC_RT_GRDel_f1_f28.to_excel\
    (writerf28, index=False, sheet_name='Group Retention',
     header=['Days', 'Reg-2018', 'New-2018', '%New18', 'Old-2018', '%Old18',
             'Reg-2019', 'New-2019', '%New19', 'Old-2019', '%Old19',
             'Reg-2022', 'New-2022', '%New22', 'Old-2022', '%Old22',
             'Reg-2023', 'New-2023', '%New23', 'Old-2023', '%Old23'])
Conct_RV_GRDel_f1_f28.to_excel\
    (writerf28, index=False, sheet_name='Group Revenue',
     header=['Days', 'Revenue-2017','%Rev17', 'Rev/week17',
             'Revenue-2018', '%Rev18', 'Rev/week18',
             'Revenue-2019', '%Rev19', 'Rev/week19',
             'Revenue-2022', '%Rev22', 'Rev/week22',
             'Revenue-2023', '%Rev23', 'Rev/week23', 'Evolution'])

#UNIT 3
df_Profile_Count_m2_f28.to_excel\
    (writerf28, index=False, sheet_name='Profiles',
     header=['Profile', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2022', '%22', 'Count-2023', '%23'])
df_Pass_Count_m2_f28.to_excel\
    (writerf28, index=False, sheet_name='Pass',
     header=['Pass', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
              'Count-2022', '%22', 'Count-2023', '%23'])
dfAttendees_Country_Count_m2_f28.to_excel\
    (writerf28, index=False, sheet_name='AttendeesCountries',
     header=['Country', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2022', '%22', 'Count-2023', '%23'])
df_ATTENDEES_AREAS_count_m2_f28.to_excel\
    (writerf28, index=False, sheet_name='AttendeesAreas',
     header=['Area', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2022', '%22', 'Count-2023', '%23'])
df_Specialty_count_m2_f28.to_excel\
    (writerf28, index=False, sheet_name='AttendeesSpecialties',
     header=['Specialty', 'Count-2017', '%17', 'Count-2018', '%18', 'Count-2019', '%19',
             'Count-2022', '%22', 'Count-2023', '%23'])

print('Counts exported in %s seconds' % round(time.process_time() - timeNowf1, 1))

writerf28.save()

print('\nExcel file management...')
timeNow1 = time.process_time()

workbook = openpyxl.load_workbook(outputExcelFile_f28)

workbook.save(outputExcelFile_f28)

print('\nOK, export done!')
print('Full time execution: %s seconds' % round(time.process_time(), 1))

print('************************************End of 00 days**********************************************')
print('************************************End of 00 days**********************************************')
print('************************************End of 00 days**********************************************')
print('************************************End of 00 days**********************************************')
print('************************************End of 00 days**********************************************')
print('************************************End of 00 days**********************************************')
print('************************************End of 00 days**********************************************')
print('************************************End of 00 days**********************************************')
print('************************************End of 00 days**********************************************')

